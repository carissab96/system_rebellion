"""Add needs_onboarding field to users

Revision ID: a43350b6a0f0
Revises: 75410ffdd031
Create Date: 2025-04-06 13:01:45.441634
"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'a43350b6a0f0'
down_revision: Union[str, None] = '75410ffdd031'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('system_configurations')
    op.drop_table('user_profiles')
    op.drop_table('system_metrics')
    op.drop_table('users')
    op.drop_table('optimization_profiles')
    op.drop_table('system_alerts')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('system_alerts',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('metric_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('severity', sa.VARCHAR(length=8), nullable=False),
    sa.Column('message', sa.VARCHAR(length=255), nullable=False),
    sa.Column('metric_id', sa.VARCHAR(length=36), nullable=True),
    sa.Column('configuration_id', sa.VARCHAR(length=36), nullable=True),
    sa.Column('is_resolved', sa.BOOLEAN(), nullable=True),
    sa.Column('resolved_at', sa.DATETIME(), nullable=True),
    sa.Column('additional_data', sqlite.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['configuration_id'], ['system_configurations.id'], ),
    sa.ForeignKeyConstraint(['metric_id'], ['system_metrics.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('optimization_profiles',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('settings', sqlite.JSON(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(length=255), nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=50), nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=50), nullable=True),
    sa.Column('bio', sa.TEXT(), nullable=True),
    sa.Column('profile_picture', sa.VARCHAR(length=255), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=True),
    sa.Column('last_login', sa.DATETIME(), nullable=True),
    sa.Column('failed_login_attempts', sa.INTEGER(), server_default=sa.text("'0'"), nullable=True),
    sa.Column('lockout_until', sa.DATETIME(), nullable=True),
    sa.Column('operating_system', sa.VARCHAR(length=50), nullable=True),
    sa.Column('os_version', sa.VARCHAR(length=50), nullable=True),
    sa.Column('linux_distro', sa.VARCHAR(length=50), nullable=True),
    sa.Column('linux_distro_version', sa.VARCHAR(length=50), nullable=True),
    sa.Column('cpu_cores', sa.INTEGER(), nullable=True),
    sa.Column('total_memory', sa.INTEGER(), nullable=True),
    sa.Column('avatar', sa.VARCHAR(length=50), server_default=sa.text("'sir-hawkington'"), nullable=True),
    sa.Column('preferences', sqlite.JSON(), server_default=sa.text('\'{"optimization_level": "moderate", "theme_preferences": {"use_dark_mode": true}}\''), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('system_metrics',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('cpu_usage', sa.FLOAT(), nullable=True),
    sa.Column('memory_usage', sa.FLOAT(), nullable=True),
    sa.Column('disk_usage', sa.FLOAT(), nullable=True),
    sa.Column('network_usage', sa.FLOAT(), nullable=True),
    sa.Column('process_count', sa.INTEGER(), nullable=True),
    sa.Column('configuration_id', sa.VARCHAR(length=36), nullable=True),
    sa.Column('additional_metrics', sqlite.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['configuration_id'], ['system_configurations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_profiles',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('location', sa.VARCHAR(length=100), nullable=True),
    sa.Column('website', sa.VARCHAR(length=200), nullable=True),
    sa.Column('github_username', sa.VARCHAR(length=50), nullable=True),
    sa.Column('linkedin_profile', sa.VARCHAR(length=200), nullable=True),
    sa.Column('theme_preference', sa.VARCHAR(length=20), nullable=True),
    sa.Column('notification_settings', sa.VARCHAR(length=100), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('system_configurations',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('config_key', sa.VARCHAR(length=100), nullable=False),
    sa.Column('config_value', sqlite.JSON(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
