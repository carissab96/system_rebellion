"""
This type stub file was generated by pyright.
"""

from .extensions import AbstractConcreteBase, ConcreteBase, DeferredReflection, instrument_declarative
from ... import util
from ...orm.decl_api import DeclarativeMeta, as_declarative as _as_declarative, declarative_base as _declarative_base, declared_attr, has_inherited_table as _has_inherited_table, synonym_for as _synonym_for

@util.moved_20("The ``declarative_base()`` function is now available as " ":func:`sqlalchemy.orm.declarative_base`.")
def declarative_base(*arg, **kw): # -> type[__class_DeclarativeMeta]:
    ...

@util.moved_20("The ``as_declarative()`` function is now available as " ":func:`sqlalchemy.orm.as_declarative`")
def as_declarative(*arg, **kw): # -> Callable[..., type[__class_DeclarativeMeta]]:
    ...

@util.moved_20("The ``has_inherited_table()`` function is now available as " ":func:`sqlalchemy.orm.has_inherited_table`.")
def has_inherited_table(*arg, **kw): # -> bool:
    ...

@util.moved_20("The ``synonym_for()`` function is now available as " ":func:`sqlalchemy.orm.synonym_for`")
def synonym_for(*arg, **kw): # -> Callable[..., SynonymProperty]:
    ...

__all__ = ["declarative_base", "synonym_for", "has_inherited_table", "instrument_declarative", "declared_attr", "as_declarative", "ConcreteBase", "AbstractConcreteBase", "DeclarativeMeta", "DeferredReflection"]
