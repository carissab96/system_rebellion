{"version":3,"file":"index-CM11xC7n.js","sources":["../../src/services/authService.ts","../../src/store/slices/authSlice.ts","../../src/types/metrics.ts","../../src/store/slices/metricsSlice.ts","../../src/store/slices/userProfileSlice.ts","../../src/utils/api.ts","../../src/store/slices/systemAlertsSlice.ts","../../src/utils/alertUtils.ts","../../src/store/slices/autoTunerSlice.ts","../../src/store/slices/optimizationSlice.ts","../../src/store/slices/configurationSlice.ts","../../src/store/csrf.ts","../../src/store/store.ts","../../src/components/common/Toast.tsx","../../src/store/hooks.ts","../../src/components/Auth/SignupModal/SignupModal.tsx","../../src/components/Auth/login/Login.tsx","../../src/utils/websocketService.ts","../../src/store/useMetricsWebSocket.ts","../../src/components/dashboard/Dashboard/SystemStatus/SystemStatus.tsx","../../src/design-system/components/Card/Card.tsx","../../src/design-system/components/Badge/Badge.tsx","../../src/design-system/components/MetricsCard/MetricsCard.tsx","../../src/design-system/components/Tabs/Tabs.tsx","../../src/components/dashboard/Metrics/CPUMetrics/CPUMetric.tsx","../../src/components/dashboard/Metrics/MemoryMetric/MemoryMetric.tsx","../../src/components/dashboard/Metrics/DiskMetric/DiskMetric.tsx","../../src/components/metrics/NetworkMetrics/utils/networkDataProcessor.ts","../../src/components/metrics/NetworkMetrics/utils/formatters.ts","../../src/components/metrics/NetworkMetrics/tabs/NetworkOverviewTab.tsx","../../src/components/metrics/NetworkMetrics/tabs/NetworkQualityMetrics.tsx","../../src/components/metrics/NetworkMetrics/tabs/NetworkConnectionsTable.tsx","../../src/components/metrics/NetworkMetrics/tabs/NetworkInterfaceMetrics.tsx","../../src/components/metrics/NetworkMetrics/tabs/NetworkProtocolChart.tsx","../../src/components/metrics/NetworkMetrics/tabs/TopBandwidthProcesses.tsx","../../src/components/metrics/NetworkMetrics/NetworkMetric.tsx","../../src/components/dashboard/Metrics/NetworkMetric/NetworkMetric.tsx","../../src/components/common/CharacterIcons.tsx","../../src/components/dashboard/MetricsPanel/MetricsPanel.tsx","../../src/design-system/components/Button/Button.tsx","../../src/design-system/components/Alert/Alert.tsx","../../src/design-system/components/Toggle/Toggle.tsx","../../src/design-system/components/Input/Input.tsx","../../src/components/dashboard/SystemAlertsPanel/SystemAlertsPanel.tsx","../../src/components/dashboard/SystemPatternsPanel/SystemPatternsPanel.tsx","../../src/components/dashboard/Dashboard/Dashboard.tsx","../../src/components/dashboard/UserProfile/UserProfile.tsx","../../src/components/common/Navbar.tsx","../../src/components/common/Layout.tsx","../../src/components/common/Modal.tsx","../../src/components/optimization/OptimizationProfiles.tsx","../../src/components/alerts/SystemAlerts.tsx","../../src/components/configuration/SystemConfiguration.tsx","../../src/components/metrics/CPU/Utils/cpuDataProcessor.ts","../../src/components/metrics/CPU/Utils/temperatureUtils.ts","../../src/components/metrics/CPU/Tabs/CPUOverviewTab.tsx","../../src/components/metrics/CPU/Utils/processManager.ts","../../src/components/metrics/CPU/Tabs/CPUProcessesTab.tsx","../../src/components/metrics/CPU/Tabs/CPUCoresTab.tsx","../../src/components/metrics/CPU/Tabs/CPUThermalTab.tsx","../../src/components/metrics/CPU/CPUMetric.tsx","../../src/components/common/ErrorDisplay.tsx","../../src/components/common/LoadingIndicator.tsx","../../src/components/metrics/memory/utils/formatters.ts","../../src/design-system/components/ProgressBar/ProgressBar.tsx","../../src/design-system/components/InfoTooltip/InfoTooltip.tsx","../../src/components/metrics/memory/tabs/MemoryOverviewTab.tsx","../../src/design-system/components/Table/Table.tsx","../../src/components/common/SearchInput.tsx","../../src/components/metrics/memory/tabs/MemoryProcessesTab.tsx","../../src/design-system/components/PieChart/PieChart.tsx","../../src/components/metrics/memory/tabs/MemoryAllocationTab.tsx","../../src/components/metrics/memory/utils/memoryLeakDetector.ts","../../src/components/metrics/memory/utils/optimizationEngine.ts","../../src/components/metrics/memory/utils/memoryDataProcessor.ts","../../src/components/metrics/memory/MemoryMetric.tsx","../../src/components/metrics/disk/utils/formatters.ts","../../src/components/metrics/disk/tabs/DiskPartitionsTab.tsx","../../src/components/common/Treemap.tsx","../../src/components/metrics/disk/tabs/DiskDirectoryTab.tsx","../../src/components/metrics/disk/tabs/DiskPerformanceTab.tsx","../../src/components/metrics/disk/utils/smartDataAnalyzer.ts","../../src/components/metrics/disk/utils/diskCleanupEngine.ts","../../src/components/metrics/disk/utils/iobottleneckDetector.ts","../../src/components/metrics/disk/utils/diskDataProcessor.ts","../../src/components/metrics/disk/DiskMetric.tsx","../../src/components/metrics/SystemMetrics.tsx","../../src/components/auto_tuners/auto_tuner/parameter_descriptions.tsx","../../src/services/systemLogsService.ts","../../src/components/dashboard/SystemLogs/SystemLogsViewer.tsx","../../src/components/auto_tuners/auto_tuner/auto_tuner.tsx","../../src/components/onboarding/onboarding.tsx","../../src/pages/OnboardingPage.tsx","../../src/data/systemRebellionData.ts","../../src/pages/LandingPage.tsx","../../src/utils/ProtectedRoute.tsx","../../src/design-system/docs/DesignSystemShowcase.tsx","../../src/utils/csrf.ts","../../src/components/Auth/PersistenceWrapper.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["// src/services/authService.ts\nimport axios from 'axios';\n\n// Define types\ninterface User {\n  id: string;\n  username: string;\n  email: string;\n  operating_system?: string;\n  os_version?: string;\n  cpu_cores?: number;\n  total_memory?: number;\n  avatar?: string;\n  needs_onboarding?: boolean;\n  profile?: any;\n  preferences?: any;\n}\n\ninterface LoginResponse {\n  access_token: string;\n  refresh_token: string;\n  token_type: string;\n  user: User;\n}\n\ninterface RefreshResponse {\n  access_token: string;\n  refresh_token?: string;\n}\n\n// Set up axios instance with authentication\nconst authApi = axios.create({\n  baseURL: 'http://127.0.0.1:8000/api/auth',\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include the token in all requests\nauthApi.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => Promise.reject(error)\n);\n\n// Add a response interceptor for token refresh\nauthApi.interceptors.response.use(\n  response => response,\n  async error => {\n    const originalRequest = error.config;\n    \n    if (!originalRequest) {\n      return Promise.reject(error);\n    }\n    \n    // Skip refresh token logic for login/token endpoint - this is critical!\n    const isLoginRequest = originalRequest.url && \n                          (originalRequest.url.includes('/token') || \n                           originalRequest.url.includes('/login'));\n    \n    // Only attempt refresh for 401 errors on non-login requests\n    if (error.response?.status === 401 && !originalRequest._retry && !isLoginRequest) {\n      originalRequest._retry = true;\n      \n      try {\n        // Try to refresh the token\n        const refreshToken = localStorage.getItem('refresh_token');\n        \n        if (!refreshToken) {\n          console.error('[ERROR] Login failed', 'Refresh token is required');\n          return Promise.reject(error);\n        }\n        \n        // Call the refresh token endpoint\n        const refreshResponse = await axios.post<RefreshResponse>(\n          'http://127.0.0.1:8000/api/auth/refresh-token',\n          { refresh_token: refreshToken },\n          { withCredentials: true }\n        );\n        \n        if (refreshResponse.data && refreshResponse.data.access_token) {\n          // Update tokens in localStorage\n          localStorage.setItem('token', refreshResponse.data.access_token);\n          if (refreshResponse.data.refresh_token) {\n            localStorage.setItem('refresh_token', refreshResponse.data.refresh_token);\n          }\n          \n          // Update the Authorization header for the original request\n          originalRequest.headers['Authorization'] = `Bearer ${refreshResponse.data.access_token}`;\n          \n          // Retry the original request\n          return axios(originalRequest);\n        } else {\n          console.error('[ERROR] Token refresh failed', 'Invalid response');\n          // Logout if refresh failed\n          localStorage.removeItem('token');\n          localStorage.removeItem('refresh_token');\n          window.location.href = '/login';\n          return Promise.reject(error);\n        }\n      } catch (refreshError) {\n        console.error('[ERROR] Token refresh failed:', refreshError);\n        // Logout if refresh failed\n        localStorage.removeItem('token');\n        localStorage.removeItem('refresh_token');\n        window.location.href = '/login';\n        return Promise.reject(error);\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// Auth service methods\nconst authService = {\n  // Check authentication status\n  async checkStatus(): Promise<boolean> {\n    try {\n      console.log('🦔 Sir Hawkington: Checking authentication status...');\n      const response = await authApi.get('/status/');\n      console.log('🦔 Auth status check response:', response.data);\n      return response.data.is_authenticated;\n    } catch (error) {\n      console.error('🚨 Auth status check failed:', error);\n      return false;\n    }\n  },\n  \n  // Login\n  async login(username: string, password: string): Promise<User> {\n    try {\n      console.log('🦔 Sir Hawkington: Logging in with:', { username, password: '***' });\n      \n      // Check if backend is available first\n      try {\n        const healthCheck = await axios.get('http://127.0.0.1:8000/api/health-check/');\n        console.log('🦔 Health check response:', healthCheck.data);\n      } catch (healthError) {\n        console.error('🚨 Backend health check failed:', healthError);\n        throw new Error('Backend server is not available. Please try again later.');\n      }\n      \n      // Create form data for login - FastAPI OAuth2 expects x-www-form-urlencoded format\n      const formData = new URLSearchParams();\n      formData.append('username', username);\n      formData.append('password', password);\n      \n      console.log('🐌 The Meth Snail: Sending login request with form data:', username);\n      \n      // Make the login request with authApi\n      const response = await authApi.post<LoginResponse>('/token', formData, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Accept': 'application/json'\n        }\n      });\n      console.log('✅ Login response:', response.data);\n      \n      if (!response.data.access_token || !response.data.refresh_token) {\n        throw new Error('Invalid response from server: missing tokens');\n      }\n      \n      // Save tokens and user data\n      localStorage.setItem('token', response.data.access_token);\n      localStorage.setItem('refresh_token', response.data.refresh_token);\n      localStorage.setItem('username', response.data.user.username);\n      \n      // Set default auth header for future requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.access_token}`;\n      \n      return response.data.user;\n    } catch (error: any) {\n      let errorMessage = 'Authentication failed. Please try again.';\n      \n      // Enhanced error logging with improved error handling\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error('🚨 Login failed - Server response:', {\n          status: error.response.status,\n          data: error.response.data\n        });\n        \n        // Extract the proper error message\n        errorMessage = error.response.data?.detail || \n                       'Authentication failed. Please check your username and password.';\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error('🚨 Login failed - No response:', error.request);\n        errorMessage = 'The Quantum Shadow People blocked your request. Please try again later.';\n      } else {\n        console.error('🚨 Login setup failed:', error.message);\n      }\n      \n      throw new Error(errorMessage);\n    }\n  },\n  \n  // Register\n  async register(username: string, email: string, password: string): Promise<User> {\n    try {\n      console.log('🦔 Sir Hawkington: Registering...');\n      const response = await authApi.post<LoginResponse>('/register', {\n        username,\n        email,\n        password\n      });\n      console.log('✅ Registration response:', response.data);\n      \n      // Save tokens and user data\n      localStorage.setItem('token', response.data.access_token);\n      localStorage.setItem('refresh_token', response.data.refresh_token);\n      localStorage.setItem('username', response.data.user.username);\n      \n      return response.data.user;\n    } catch (error: any) {\n      console.error('🚨 Registration failed:', error);\n      const errorMessage = error.response?.data?.detail || 'Registration failed. Please try again.';\n      throw new Error(errorMessage);\n    }\n  },\n  \n  // Logout\n  async logout(): Promise<boolean> {\n    try {\n      console.log('🦔 Sir Hawkington: Logging out...');\n      // No need to call a backend endpoint for logout\n      // Just clear the local storage and redirect\n      localStorage.removeItem('token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('username');\n      console.log('🐌 The Meth Snail: Local storage cleared, redirecting to login page');\n      window.location.href = '/login';\n      return true;\n    } catch (error) {\n      console.error('🚨 Logout failed:', error);\n      // Even if there's an error, try to clear local storage\n      localStorage.removeItem('token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('username');\n      window.location.href = '/login';\n      return false;\n    }\n  },\n  \n  // Update user profile\n  async updateProfile(profileData: any): Promise<User> {\n    try {\n      console.log('🦔 Sir Hawkington: Updating profile with data:', profileData);\n      // Make sure token is in the headers\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('The Meth Snail requires authentication tokens to proceed!');\n      }\n      \n      const response = await authApi.post('/update-profile', profileData, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log('✅ Profile update response:', response.data);\n      return response.data.user;\n    } catch (error: any) {\n      console.error('🚨 Profile update failed:', error);\n      const errorMessage = error.response?.data?.detail || 'Profile update failed. Please try again.';\n      throw new Error(errorMessage);\n    }\n  },\n  \n  // Get current user data\n  async getCurrentUser(): Promise<User | null> {\n    try {\n      console.log('🦔 Sir Hawkington: Getting current user...');\n      const statusResponse = await authApi.get('/status/');\n      if (!statusResponse.data.is_authenticated) {\n        console.log('🧙‍♂️ The Stick: Not authenticated, returning null');\n        return null;\n      }\n      \n      // Get the current user data from the status endpoint\n      if (statusResponse.data.user) {\n        console.log('✅ User data from status endpoint:', statusResponse.data.user);\n        return statusResponse.data.user;\n      }\n      \n      // If we don't have user data from status, try to fetch it\n      try {\n        const userResponse = await authApi.get('/me');\n        console.log('✅ User data from /me endpoint:', userResponse.data);\n        return userResponse.data;\n      } catch (userError) {\n        console.error('🚨 Failed to fetch user data from /me endpoint:', userError);\n        \n        // Fallback to using just the username if we can't get full user data\n        const username = localStorage.getItem('username');\n        if (!username) {\n          console.log('🧙‍♂️ The Stick: No username saved, returning null');\n          return null;\n        }\n        \n        console.warn('⚠️ Using fallback user data with username only');\n        return {\n          id: '', \n          username,\n          email: '',\n          needs_onboarding: false, // Default to false to prevent unnecessary onboarding redirects\n          operating_system: 'unknown', // Add basic system info to prevent onboarding\n          os_version: 'unknown',\n          cpu_cores: 1,\n          total_memory: 1\n        };\n      }\n    } catch (error) {\n      console.error('🚨 Failed to get current user:', error);\n      return null;\n    }\n  },\n  \n  // Check if token is valid\n  async validateToken(): Promise<boolean> {\n    try {\n      console.log('🦔 Sir Hawkington: Validating token...');\n      const response = await authApi.get('/status/');\n      console.log('✅ Token validation response:', response.data);\n      return response.data.is_authenticated;\n    } catch (error) {\n      console.error('🚨 Token validation failed:', error);\n      return false;\n    }\n  }\n};\n\nexport default authService;","// src/store/slices/authSlice.ts\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from '../../services/authService';\n\n// Define the authentication state interface\ninterface AuthState {\n  user: any | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n}\n\n// Initial state\nconst initialState: AuthState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null\n};\n\nconsole.log('Auth Slice Initial State:', initialState);\n\n// Async thunks for authentication actions\nexport const login = createAsyncThunk(\n  'auth/login',\n  async ({ username, password }: { username: string; password: string }, { rejectWithValue }) => {\n    try {\n      const user = await authService.login(username, password);\n      return user;\n    } catch (error: any) {\n      return rejectWithValue(error.response?.data?.detail || 'Login failed');\n    }\n  }\n);\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (userData: any, { rejectWithValue }) => {\n    try {\n      // Extract the basic required fields for registration\n      const { username, email, password } = userData;\n      \n      if (!username || !email || !password) {\n        return rejectWithValue('Username, email and password are required');\n      }\n      \n      console.log('Registering with data:', { ...userData, password: '***' });\n      const user = await authService.register(username, email, password);\n      return user;\n    } catch (error: any) {\n      console.error('Registration error:', error);\n      return rejectWithValue(error.response?.data?.detail || 'Registration failed');\n    }\n  }\n);\n\nexport const logout = createAsyncThunk(\n  'auth/logout',\n  async () => {\n    authService.logout();\n  }\n);\n\nexport const checkAuthStatus = createAsyncThunk(\n  'auth/checkStatus',\n  async (_, { rejectWithValue }) => {\n    try {\n      const isAuthenticated = await authService.checkStatus();\n      if (isAuthenticated) {\n        const user = await authService.getCurrentUser();\n        return user;\n      }\n      return null;\n    } catch (error: any) {\n      return rejectWithValue(error.message || 'Failed to check authentication status');\n    }\n  }\n);\n\nexport const updateProfile = createAsyncThunk(\n  'auth/updateProfile',\n  async (profileData: any, { rejectWithValue }) => {\n    try {\n      const updatedUser = await authService.updateProfile(profileData);\n      return updatedUser;\n    } catch (error: any) {\n      return rejectWithValue(error.response?.data?.detail || 'Failed to update profile');\n    }\n  }\n);\n\n// Auth slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    }\n  },\n  extraReducers: (builder) => {\n    // Login\n    builder.addCase(login.pending, (state) => {\n      state.isLoading = true;\n      state.error = null;\n    });\n    builder.addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n      state.error = null;\n    });\n    builder.addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = false;\n      state.user = null;\n      state.error = action.payload as string;\n    });\n    \n    // Register\n    builder.addCase(register.pending, (state) => {\n      state.isLoading = true;\n      state.error = null;\n    });\n    builder.addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n      state.error = null;\n    });\n    builder.addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = false;\n      state.user = null;\n      state.error = action.payload as string;\n    });\n    \n    // Logout\n    builder.addCase(logout.fulfilled, (state) => {\n      state.isAuthenticated = false;\n      state.user = null;\n    });\n    \n    // Check auth status\n    builder.addCase(checkAuthStatus.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(checkAuthStatus.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = !!action.payload;\n      state.user = action.payload;\n    });\n    builder.addCase(checkAuthStatus.rejected, (state) => {\n      state.isLoading = false;\n      state.isAuthenticated = false;\n      state.user = null;\n    });\n    \n    // Update profile\n    builder.addCase(updateProfile.pending, (state) => {\n      state.isLoading = true;\n      state.error = null;\n    });\n    builder.addCase(updateProfile.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload;\n      state.error = null;\n    });\n    builder.addCase(updateProfile.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload as string;\n    });\n  }\n});\n\nexport const { clearError } = authSlice.actions;\nexport default authSlice.reducer;\n","// src/types/metrics.ts\nimport { CPUData } from '../components/metrics/CPU/Tabs/types';\n// Base metric type for individual readings\nexport interface NetworkDetails {\n  // Legacy properties for backward compatibility\n  bytes_sent: number;\n  bytes_recv: number;\n  packets_sent: number;\n  packets_recv: number;\n  rate_mbps: number;\n  sent_rate_bps?: number;\n  recv_rate_bps?: number;\n  raw_bytes_total?: number;\n  \n  // Enhanced network metrics\n  io_stats?: {\n    bytes_sent: number;\n    bytes_recv: number;\n    packets_sent: number;\n    packets_recv: number;\n    sent_rate: number;\n    recv_rate: number;\n    errors_in: number;\n    errors_out: number;\n    drops_in: number;\n    drops_out: number;\n  };\n  \n  connection_quality?: {\n    average_latency: number;\n    packet_loss_percent: number;\n    connection_stability: number;\n    jitter: number;\n    gateway_latency: number;\n    dns_latency: number;\n    internet_latency: number;\n  };\n  \n  protocol_stats?: {\n    tcp: {\n      active: number;\n      listening?: number;\n      established: number;\n      time_wait?: number;\n      close_wait?: number;\n      fin_wait1?: number;\n      fin_wait2?: number;\n      last_ack?: number;\n      syn_sent?: number;\n      syn_recv?: number;\n      closing?: number;\n    };\n    udp: {\n      active: number;\n      datagrams_sent?: number;\n      datagrams_received?: number;\n    };\n    http: {\n      connections: number;\n      get_requests?: number;\n      post_requests?: number;\n    };\n    https: {\n      connections: number;\n      tls_handshakes?: number;\n    };\n    dns: {\n      queries: number;\n      responses?: number;\n      timeouts?: number;\n    };\n  };\n  \n  protocol_breakdown?: {\n    web: number;\n    email: number;\n    streaming: number;\n    gaming: number;\n    file_transfer: number;\n    other: number;\n  };\n  \n  top_bandwidth_processes?: Array<{\n    name: string;\n    pid: number;\n    read_rate?: number;\n    write_rate?: number;\n    total_rate?: number;\n    connection_count?: number;\n  }>;\n  \n  interfaces?: Array<{\n    name: string;\n    address?: string;\n    mac_address?: string;\n    isup: boolean;\n    speed?: number;\n    mtu?: number;\n    bytes_sent?: number;\n    bytes_recv?: number;\n  }>;\n  \n  dns_metrics?: {\n    query_time_ms: number;\n    success_rate: number;\n    cache_hit_ratio: number;\n  };\n  \n  internet_metrics?: {\n    connected: boolean;\n    download_speed: number;\n    upload_speed: number;\n    isp_latency: number;\n  };\n}\n\nexport interface AdditionalMetrics {\n  swap_usage?: number;\n  cpu_temperature?: number;\n  active_python_processes?: number;\n  load_average?: number[];\n  network_details?: NetworkDetails;\n  [key: string]: any;\n}\n\n// Type for optimization profile thresholds\ninterface ThresholdLevels {\n  warning: number;\n  critical: number;\n  normal: number;\n  high: number;\n  low: number;\n  medium: number;\n  very_high: number;\n  very_low: number;\n  \n}\n\nexport interface MetricThresholds {\n  cpu: ThresholdLevels;\n  memory: ThresholdLevels;\n  disk: ThresholdLevels;\n  network: ThresholdLevels;\n  timestamp?: string;\n}\n\nexport interface SystemMetric {\n  id: string;\n  user_id: string;\n  cpu_usage: number;\n  cpu_temperature?: number;\n  cpu_frequency?: number;\n  cpu_core_count?: number;\n  cpu_thread_count?: number;\n  cpu_model?: string;\n  cpu_vendor?: string;\n  cpu_cache?: number;\n  cpu_cache_size?: number;\n  cpu_cache_lines?: number;\n  cpu_cache_type?: string;\n  cpu_cache_level?: number;\n  cpu_cache_associativity?: number;\n  cpu_cache_line_size?: number;\n  cpu_cache_line_count?: number;\n  cpu_cache_line_associativity?: number;\n  cpu: CPUData;\n  memory_usage: number;\n  memory_total: number;\n  memory_available: number;\n  memory_free: number;\n  memory_buffer: number;\n  memory_cache: number;\n  memory_swap: number;\n  memory_swap_total: number;\n  memory_swap_free: number;\n  memory_swap_used: number;\n  memory_swap_percent: number;\n  memory_percent: number;\n  disk_usage: number;\n  disk_total: number;\n  disk_available: number;\n  disk_free: number;\n  disk_used: number;\n  disk_percent: number;\n  network_usage?: number;\n  network_total: number;\n  network_available: number;\n  network_free: number;\n  network_used: number;\n  network_percent: number;\n  network?: NetworkDetails;\n  process_count: number;\n  timestamp: string;\n  additional_metrics?: Record<string, any>;\n  additional?: AdditionalMetrics;\n}\n  \n// Type for metric alerts\nexport enum AlertSeverity {\n  LOW = 'LOW',\n  MEDIUM = 'MEDIUM',\n  HIGH = 'HIGH',\n  CRITICAL = 'CRITICAL'\n}\n\nexport interface MetricAlert {\n  id: string;\n  metric_type: 'cpu' | 'memory' | 'disk' | 'network';\n  severity: AlertSeverity;\n  threshold: number;\n  current_value: number;\n  timestamp: string;\n  message: string;\n}\n\nexport type IntervalID = NodeJS.Timeout;\n\nexport interface MetricsState {\n  metrics: SystemMetric[];\n  loading: boolean;\n  error: string | null;\n  lastUpdated: string | null;\n  useWebSocket: boolean;\n  connectionStatus: 'disconnected' | 'connecting' | 'connected';\n  lastUpdate: number | null;\n}\n\n// Type for historical data\nexport interface HistoricalMetrics {\n  data: SystemMetric[];\n  start_time: string;\n  end_time: string;\n  interval: number;\n}\n\n// Response types from API\nexport interface SystemMetricsResponse {\n  data: SystemMetric;\n  alerts: MetricAlert[];\n}\n\n// Request types for API\nexport interface MetricsQueryParams {\n  start_time?: string;\n  end_time?: string;\n  interval?: number;\n  limit?: number;\n}\n\n// Optimization types\nexport interface OptimizationResult {\n  id: string;\n  timestamp: string;\n  metrics_before: SystemMetric;\n  metrics_after: SystemMetric;\n  actions_taken: string[];\n  success: boolean;\n}\n\nexport interface OptimizationProfile {\n  id: string;\n  name: string;\n  description: string;\n  thresholds: MetricThresholds;\n  actions: string[];\n}\n\nexport interface MetricsApiResponse {\n  data: SystemMetric;\n  timestamp: string;\n}\n\n// System alert interface\nexport interface SystemAlert {\n  id: string;\n  timestamp: string;\n  title: string;\n  message: string;\n  severity: AlertSeverity;\n}\n\n// Auto tuner interfaces\nexport interface AutoTunerState {\n  uuid: string;\n  user: string;\n  status: string;\n  success: boolean;\n  loading: boolean;\n  error: string | null;\n  lastUpdated: string | null;\n}\n\nexport interface AutoTunerApiResponse {\n  uuid: string;\n  user: string;\n  status: string;\n  success: boolean;\n  timestamp: string;\n}\n\nexport interface AutoTunerAlert {\n  id: string;\n  metric_type: 'cpu' | 'memory' | 'disk' | 'network';\n  severity: AlertSeverity;\n  threshold: number;\n  current_value: number;\n  timestamp: string;\n  message: string;\n}\n\nexport interface AutoTunerAlertState {\n  alerts: AutoTunerAlert[];\n  loading: boolean;\n  error: string | null;\n}","// src/store/slices/metricsSlice.ts\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { \n  SystemMetric, \n  MetricThresholds, \n  MetricAlert, \n  AlertSeverity,\n  MetricsState\n} from '../../types/metrics';\n\ntype ConnectionStatus = 'disconnected' | 'connecting' | 'connected' | 'error';\n\ninterface ExtendedMetricsState extends Omit<MetricsState, 'connectionStatus' | 'metrics'> {\n  metrics: SystemMetric[];\n  current: SystemMetric | null;\n  historical: SystemMetric[];\n  alerts: MetricAlert[];\n  thresholds: MetricThresholds;\n  loading: boolean;\n  error: string | null;\n  lastUpdated: string | null;\n  lastUpdate: number | null;\n  useWebSocket: boolean;\n  connectionStatus: ConnectionStatus;\n}\n\n// Define the RootState type for type-safe selectors\ninterface RootState {\n  metrics: ExtendedMetricsState;\n}\n\ndeclare module 'react-redux' {\n  interface DefaultRootState extends RootState {}\n}\n\n// Helper function to check thresholds and generate alerts\nconst checkThresholds = (metrics: SystemMetric, thresholds: MetricThresholds): MetricAlert[] => {\n  const alerts: MetricAlert[] = [];\n  const now = new Date().toISOString();\n  \n  // Check CPU threshold\n  if (metrics.cpu_usage >= thresholds.cpu.critical) {\n    alerts.push({\n      id: `cpu-${Date.now()}`,\n      metric_type: 'cpu',\n      severity: AlertSeverity.HIGH,\n      threshold: thresholds.cpu.critical,\n      current_value: metrics.cpu_usage,\n      timestamp: now,\n      message: `CPU usage critical: ${metrics.cpu_usage}%`\n    });\n  } else if (metrics.cpu_usage >= thresholds.cpu.warning) {\n    alerts.push({\n      id: `cpu-${Date.now()}-warn`,\n      metric_type: 'cpu',\n      severity: AlertSeverity.MEDIUM,\n      threshold: thresholds.cpu.warning,\n      current_value: metrics.cpu_usage,\n      timestamp: now,\n      message: `CPU usage high: ${metrics.cpu_usage}%`\n    });\n  }\n  \n  // Same pattern for memory, disk, network checks\n  // ... (keep your existing threshold checks here)\n  \n  return alerts;\n};\n\n// Initial state\nconst initialState: ExtendedMetricsState = {\n  metrics: [],\n  current: null,\n  historical: [],\n  alerts: [],\n  thresholds: {\n    cpu: { warning: 70, critical: 90, normal: 0, high: 0, low: 0, medium: 0, very_high: 0, very_low: 0 },\n    memory: { warning: 70, critical: 90, normal: 0, high: 0, low: 0, medium: 0, very_high: 0, very_low: 0 },\n    disk: { warning: 70, critical: 90, normal: 0, high: 0, low: 0, medium: 0, very_high: 0, very_low: 0 },\n    network: { warning: 70, critical: 90, normal: 0, high: 0, low: 0, medium: 0, very_high: 0, very_low: 0 },\n  },\n  loading: false,\n  error: null,\n  lastUpdated: null,\n  lastUpdate: null,\n  useWebSocket: true,\n  connectionStatus: 'disconnected',\n};\n\n// Create the metrics slice\nconst metricsSlice = createSlice({\n  name: 'metrics',\n  initialState,\n  reducers: {\n    // Set WebSocket error status\n    setWebSocketError: (state, action: PayloadAction<string | null>) => {\n      state.error = action.payload;\n      state.loading = false;\n      if (action.payload) {\n        state.connectionStatus = 'error';\n      }\n    },\n    \n    // Update metrics with new data\n    updateMetrics: (state, action: PayloadAction<SystemMetric>) => {\n      const newMetric = action.payload;\n      state.metrics = [...state.metrics, newMetric].slice(-100);\n      state.current = newMetric;\n      state.historical = [...state.historical, newMetric].slice(-1000);\n      state.lastUpdated = new Date().toISOString();\n      state.lastUpdate = Date.now();\n      \n      // Check for threshold violations\n      const alerts = checkThresholds(newMetric, state.thresholds);\n      if (alerts.length > 0) {\n        state.alerts = [...state.alerts, ...alerts].slice(-50);\n      }\n    },\n    \n    // Reset metrics to initial state\n    resetMetrics: (state) => {\n      state.metrics = [];\n      state.alerts = [];\n      state.current = null;\n      state.historical = [];\n      state.error = null;\n      state.connectionStatus = 'disconnected';\n    },\n    \n    // Update threshold values\n    setThresholds: (state, action: PayloadAction<Partial<MetricThresholds>>) => {\n      state.thresholds = {\n        ...state.thresholds,\n        ...action.payload,\n      };\n    },\n    \n    // Set connection status\n    setConnectionStatus: (state, action: PayloadAction<ConnectionStatus>) => {\n      state.connectionStatus = action.payload;\n    },\n  }\n});\n\n// Export selectors with proper typing\nexport const selectCurrentMetrics = (state: RootState) => state.metrics.current;\nexport const selectHistoricalMetrics = (state: RootState) => state.metrics.historical;\nexport const selectAlerts = (state: RootState) => state.metrics.alerts;\nexport const selectConnectionStatus = (state: RootState) => state.metrics.connectionStatus;\nexport const selectError = (state: RootState) => state.metrics.error;\n\n// Export the slice's reducer and actions\nexport const { \n  setWebSocketError, \n  updateMetrics, \n  resetMetrics, \n  setThresholds, \n  setConnectionStatus \n} = metricsSlice.actions;\n\nexport default metricsSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from '../../services/authService';\n\n// Define the user profile state interface\ninterface UserProfileState {\n  data: any | null;\n  loading: boolean;\n  error: string | null;\n}\n\n// Initial state\nconst initialState: UserProfileState = {\n  data: null,\n  loading: false,\n  error: null\n};\n\nexport const fetchUserProfile = createAsyncThunk(\n  'userProfile/fetch',\n  async (_, { rejectWithValue }) => {\n    try {\n      // Use the authService to get the current user profile\n      const user = await authService.getCurrentUser();\n      return user;\n    } catch (error: any) {\n      console.error('Error fetching user profile:', error.message);\n      return rejectWithValue(error.message || 'Failed to fetch user profile');\n    }\n  }\n);\n\nconst userProfileSlice = createSlice({\n  name: 'userProfile',\n  initialState,\n  reducers: {\n    clearProfileError: (state) => {\n      state.error = null;\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchUserProfile.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchUserProfile.fulfilled, (state, action) => {\n        state.loading = false;\n        state.data = action.payload;\n      })\n      .addCase(fetchUserProfile.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string || 'An unknown error occurred';\n      });\n  }\n});\n\nexport const { clearProfileError } = userProfileSlice.actions;\nexport default userProfileSlice.reducer;\n","// api.ts\nimport axios, { AxiosError, InternalAxiosRequestConfig } from 'axios';\nimport store from '../store/store';\nimport { logout } from '../store/slices/authSlice';\nimport { SystemMetric } from '../types/metrics';\n\n// REMOVE THIS LINE - it creates a circular import\n// import api from '../services/authService';\n\ninterface ApiError extends AxiosError {\n  config: InternalAxiosRequestConfig & { _retry?: boolean };\n}\n\n// Function to get CSRF token from cookies\nconst getCsrfToken = (): string | null => {\n  // First check localStorage\n  const storedToken = localStorage.getItem('csrf_token');\n  if (storedToken) {\n    return storedToken;\n  }\n  \n  // Then check cookies\n  const cookies = document.cookie.split(';');\n  for (let cookie of cookies) {\n    const [name, value] = cookie.trim().split('=');\n    if (name === 'csrftoken') {\n      return value;\n    }\n  }\n  return null;\n};\n\n// Sir Hawkington's Distinguished API URL Configuration Protocol\n// Use the proxy configured in vite.config.ts instead of direct connection - The Quantum Shadow People insist\nexport const API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? `${window.location.protocol}//${window.location.host}/api` // Production URL with aristocratic elegance\n  : '/api'; // Development URL using the proxy - The Meth Snail's preferred configuration\n\nconsole.log(`🧐 Sir Hawkington announces the API base URL: ${API_BASE_URL}`);\n\n// Track backend availability status - The Stick's anxiety management system\nlet backendAvailable = true; // The Hamsters are optimistic by default\nlet lastCheckTime = 0; // The VIC-20's 8-bit timestamp\nconst AVAILABILITY_CHECK_INTERVAL = 30000; // 30 seconds - Any longer and the Meth Snail gets twitchy\n\n// Function to check if the backend is available with retry mechanism - Sir Hawkington's connectivity verification protocol\nexport const checkBackendAvailability = async (forceCheck = false): Promise<boolean> => {\n  const now = Date.now();\n  \n  // If we checked recently and it's not a forced check, return the cached result\n  if (!forceCheck && now - lastCheckTime < AVAILABILITY_CHECK_INTERVAL) {\n    console.log('🧐 Sir Hawkington recalls from his distinguished memory:', backendAvailable ? 'Backend was available' : 'Backend was unavailable');\n    console.log('🐌 The Meth Snail confirms cached status:', backendAvailable);\n    return backendAvailable;\n  }\n  \n  // Update the last check time - The VIC-20 handles the clock\n  console.log('🎮 The VIC-20 updates the timestamp...');\n  lastCheckTime = now;\n  \n  // Try multiple endpoints in case one is available but another isn't - The Quantum Shadow People's suggestion\n  const endpoints = [\n    '/health-check/', // Primary health check - Sir Hawkington's preferred diagnostic\n    '/auth/status/'   // Fallback endpoint - The Stick's backup plan\n  ];\n  \n  for (let i = 0; i < 2; i++) { // Try up to 2 times - The Hamsters can only count to 2\n    for (const endpoint of endpoints) {\n      try {\n        console.log(`🧐 Sir Hawkington is checking backend availability (attempt ${i+1}) using ${endpoint}...`);\n        console.log(`🐹 The Hamsters are preparing the HTTP request with duct tape...`);\n        const response = await axios.get(`${API_BASE_URL}${endpoint}`, {\n          timeout: 3000, // 3 second timeout - The Meth Snail gets impatient after 3 seconds\n          withCredentials: true // The Stick insists on proper credentials\n        });\n        \n        if (response.status >= 200 && response.status < 300) {\n          console.log('🧐 Sir Hawkington adjusts his monocle with satisfaction: \"Backend is available and responding with distinguished elegance!\"');\n          console.log('🐌 The Meth Snail celebrates with another hit of methamphetamine!');\n          backendAvailable = true;\n          return true;\n        }\n      } catch (error) {\n        // Continue to next endpoint or retry\n        console.warn(`⚠️ Backend check failed for ${endpoint}:`);\n        console.warn(`🪄 The Stick's anxiety intensifies:`, \n          error instanceof Error ? error.message : 'Unknown error - even the VIC-20 is confused');\n      }\n    }\n    \n    // Wait before retry\n    if (i < 1) { // Only wait if we're going to retry\n      await new Promise(resolve => setTimeout(resolve, 1000));\n    }\n  }\n  \n  // If we get here, all attempts failed - The Hamsters have run out of duct tape\n  console.error('🧐 Sir Hawkington removes his monocle in distress: \"The backend appears to be indisposed!\"');\n  console.error('🐌 The Meth Snail has crashed into a wall after too many failed attempts');\n  console.error('🪄 The Stick is having a full-blown panic attack!');\n  backendAvailable = false;\n  return false;\n};\n\n// Function to get the current backend availability status\nexport const getBackendAvailability = (): boolean => {\n  // If it's been too long since our last check, trigger a new check but don't wait for it\n  const now = Date.now();\n  if (now - lastCheckTime > AVAILABILITY_CHECK_INTERVAL) {\n    checkBackendAvailability().catch(err => {\n      console.error('Background availability check failed:', err);\n    });\n  }\n  return backendAvailable;\n};\n\nexport const apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Debug endpoint\nexport const debugApi = axios.create({\n  baseURL: API_BASE_URL,\n  withCredentials: false,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napiClient.interceptors.request.use((config: InternalAxiosRequestConfig) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    // Make sure token has Bearer prefix\n    config.headers.Authorization = token.startsWith('Bearer ') ? token : `Bearer ${token}`;\n    console.log('🧐 Sir Hawkington set Authorization header:', config.headers.Authorization.substring(0, 20) + '...');\n  } else {\n    console.warn('🧐 Sir Hawkington is concerned: No token found in localStorage!');\n  }\n  \n  // Add CSRF token to non-GET requests\n  if (config.method !== 'get') {\n    const csrfToken = getCsrfToken();\n    if (csrfToken) {\n      config.headers['X-CSRFToken'] = csrfToken;\n    } else {\n      console.warn('CSRF token not found in cookies or localStorage!');\n    }\n  }\n  \n  return config;\n});\n\n// Response interceptor\napiClient.interceptors.response.use(\n  (response) => response,\n  async (error: ApiError) => {\n    const originalRequest = error.config;\n    \n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      const refreshTokenStr = localStorage.getItem('refresh_token');\n      \n      if (refreshTokenStr) {\n        try {\n          // Manual refresh token request\n          const refreshResponse = await axios.post(\n            `${API_BASE_URL}/auth/token/refresh/`,\n            { refresh: refreshTokenStr },\n            { \n              withCredentials: true,\n              headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': getCsrfToken() || ''\n              }\n            }\n          );\n          \n          if (refreshResponse.data && refreshResponse.data.access) {\n            const newToken = refreshResponse.data.access;\n            // Update token in localStorage\n            localStorage.setItem('token', newToken);\n            // Update the original request with the new token\n            originalRequest.headers.Authorization = `Bearer ${newToken}`;\n            return apiClient(originalRequest);\n          }\n        } catch (refreshError) {\n          console.error('Token refresh failed:', refreshError);\n          // Clear auth data and redirect to login\n          localStorage.removeItem('token');\n          localStorage.removeItem('refresh_token');\n          store.dispatch(logout());\n          return Promise.reject(refreshError);\n        }\n      } else {\n        // No refresh token available\n        store.dispatch(logout());\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Type your response data\ninterface AutotunerData {\n  // Add your autotuner properties here\n  id: number;\n  // ... other properties\n}\n\n// API methods\nexport const apiMethods = {\n  // Generic GET method with type parameter\n  get: async <T>(url: string): Promise<T> => {\n    const response = await apiClient.get<T>(url);\n    return response.data;\n  },\n  // Generic POST method with type parameters\n  post: async <T, D>(url: string, data: D): Promise<T> => {\n    const response = await apiClient.post<T>(url, data);\n    return response.data;\n  },\n  // Generic DELETE method with type parameter\n  delete: async <T>(url: string): Promise<T> => {\n    const response = await apiClient.delete<T>(url);\n    return response.data;\n  },\n  // Generic PUT method with type parameters\n  put: async <T, D>(url: string, data: D): Promise<T> => {\n    const response = await apiClient.put<T>(url, data);\n    return response.data;\n  },\n  // Generic PATCH method for partial updates\n  patch: async <T, D>(url: string, data: D): Promise<T> => {\n    const response = await apiClient.patch<T>(url, data);\n    return response.data;\n  },\n  // Generic HEAD method for retrieving headers only\n  head: async <T>(url: string): Promise<T> => {\n    const response = await apiClient.head<T>(url);\n    return response.data;\n  },\n  // Generic OPTIONS method\n  options: async <T>(url: string): Promise<T> => {\n    const response = await apiClient.options<T>(url);\n    return response.data;\n  },\n  // Add other methods as needed\n  autotuner: {\n    fetch: async (id: number): Promise<AutotunerData> => {\n      try {\n        return await apiMethods.get<AutotunerData>(`/autotuner/${id}/`);\n      } catch (error) {\n        console.error(`Error fetching autotuner ${id}:`, error);\n        throw error;\n      }\n    }\n  },\n  metrics: {\n    // Sir Hawkington's Distinguished Metrics Retrieval Protocol\n    fetch: async () => {\n      console.log(\"🧐 Sir Hawkington is fetching the metrics with utmost elegance!\");\n      \n      try {\n        // Use the new public system metrics endpoint that doesn't require authentication\n        const response = await apiMethods.get('/metrics/system');\n        console.log(\"✨ The Hamsters have successfully retrieved the metrics!\", response);\n        return response;\n      } catch (error) {\n        console.error(\"💥 The Meth Snail crashed into the metrics endpoint!\", error);\n        throw error;\n      }\n    },\n\n    // The Meth Snail's Metric Creation Protocol\n    create: async (metricData: Omit<SystemMetric, 'id'>) => {\n      console.log(\"🐌 The Meth Snail is creating a new metric with quantum precision!\");\n      \n      try {\n        const response = await apiMethods.post('/metrics/', metricData);\n        console.log(\"✨ Metric created successfully!\", response);\n        return response;\n      } catch (error) {\n        console.error(\"💥 Metric creation failed!\", error);\n        throw error;\n      }\n    },\n\n    // Sir Hawkington's Metric Update Mechanism\n    update: async (metricId: string, metricData: Partial<SystemMetric>) => {\n      console.log(`🧐 Sir Hawkington is updating metric ${metricId} with distinguished care!`);\n      \n      try {\n        const response = await apiMethods.put(`/metrics/${metricId}`, metricData);\n        console.log(\"✨ Metric updated successfully!\", response);\n        return response;\n      } catch (error) {\n        console.error(\"💥 Metric update failed!\", error);\n        throw error;\n      }\n    },\n\n    // The Meth Snail's Metric Deletion Ceremony\n    delete: async (metricId: string) => {\n      console.log(`🐌 The Meth Snail is deleting metric ${metricId} with optimization energy!`);\n      \n      try {\n        const response = await apiMethods.delete(`/metrics/${metricId}`);\n        console.log(\"✨ Metric deleted successfully!\", response);\n        return response;\n      } catch (error) {\n        console.error(\"💥 Metric deletion failed!\", error);\n        throw error;\n      }\n    },\n\n    // Quantum Shadow People's Metric Retrieval by ID\n    fetchById: async (metricId: string) => {\n      console.log(`🧐 Sir Hawkington is retrieving metric ${metricId} with precise calculation!`);\n      \n      try {\n        const response = await apiMethods.get(`/metrics/${metricId}`);\n        console.log(\"✨ Metric retrieved successfully!\", response);\n        return response;\n      } catch (error) {\n        console.error(\"💥 Metric retrieval failed!\", error);\n        throw error;\n      }\n    }\n  },\n  auth: {\n    // Sir Hawkington's User Registration Protocol\n    register: async (userData: any) => {\n      console.log(\"🧐 Sir Hawkington is processing your registration with distinguished care...\");\n      \n      try {\n        // Simplify the data structure to match what the backend expects\n        // Send the complete user data including profile\n        const response = await axios.post('/auth/register', {\n          username: userData.username,\n          email: userData.email,\n          password: userData.password,\n          profile: userData.profile\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        console.log(\"✨ Registration response:\", response.data);\n        \n        // If we have tokens in the response, store them\n        if (response.data.access_token) {\n          localStorage.setItem('token', response.data.access_token);\n          localStorage.setItem('refresh_token', response.data.refresh_token || '');\n        }\n        \n        return response.data;\n      } catch (error) {\n        console.error(\"🚨 Registration error:\", error);\n        if (axios.isAxiosError(error)) {\n          console.error(\"Response data:\", error.response?.data);\n          console.error(\"Status code:\", error.response?.status);\n        }\n        throw error;\n      }\n    },\n    \n    // The Meth Snail's Login Protocol\n    login: async (credentials: { username: string; password: string }) => {\n      console.log(\"🐌 The Meth Snail is processing your login with quantum precision!\");\n      \n      try {\n        const response = await apiClient.post('/auth/token/', \n          new URLSearchParams({\n            'username': credentials.username,\n            'password': credentials.password\n          }),\n          {\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded',\n            }\n          }\n        );\n        \n        console.log(\"✨ Login successful!\", response.data);\n        \n        // Store tokens\n        if (response.data.access_token) {\n          localStorage.setItem('token', response.data.access_token);\n          localStorage.setItem('refresh_token', response.data.refresh_token || '');\n        }\n        \n        return response.data;\n      } catch (error) {\n        console.error(\"💥 Login failed!\", error);\n        throw error;\n      }\n    }\n  }\n};\n\n// Function to initialize CSRF token\nexport const initializeCsrf = async (): Promise<boolean> => {\n  try {\n    // First check if backend is available\n    const isAvailable = await checkBackendAvailability(true);\n    if (!isAvailable) {\n      throw new Error('Backend is not available, cannot initialize CSRF token');\n    }\n    \n    // Explicitly fetch the CSRF token from the dedicated endpoint\n    const response = await axios.get(`${API_BASE_URL}/auth/csrf_token/`, {\n      withCredentials: true,\n      timeout: 5000 // 5 second timeout\n    });\n    \n    // Check if we got a valid response with a CSRF token\n    if (response.data && response.data.csrf_token) {\n      // Store the token in localStorage\n      localStorage.setItem('csrf_token', response.data.csrf_token);\n      console.log('🎩 Sir Hawkington has secured a fresh CSRF token!');\n      return true;\n    }\n    \n // If we didn't get a token from the dedicated endpoint, try the health-check endpoint\n const healthResponse = await axios.get(`${API_BASE_URL}/health-check/`, {\n  withCredentials: true,\n  timeout: 5000\n});\n\n// If health check response has a csrf_token field, use that\nif (healthResponse.data && healthResponse.data.csrf_token) {\n  localStorage.setItem('csrf_token', healthResponse.data.csrf_token);\n  console.log('🎩 Sir Hawkington has secured a CSRF token from health check!');\n  return true;\n}\n\n// Verify that we got the CSRF token\nconst csrfToken = getCsrfToken();\nif (!csrfToken) {\n  console.warn('🧐 Sir Hawkington is concerned: CSRF token not found after initialization');\n  throw new Error('Failed to get CSRF token after multiple attempts');\n}\n\nconsole.log('✅ CSRF token successfully initialized');\nreturn true;\n} catch (error) {\nconsole.error('Failed to initialize CSRF token:', \n  error instanceof Error ? error.message : 'Unknown error');\nreturn false;\n}\n};\n\n// Export the apiMethods as the default export\nexport default apiMethods;","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { apiMethods } from '../../utils/api';\n\nconst BASE_PATH =  `/system-alerts/`;\n// Types\nexport interface SystemAlert {\n  id: string;\n  title: string;\n  message: string;\n  severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\n  timestamp: string;\n  is_read: boolean;\n  action_status?: 'none' | 'actioned' | 'not_actioned' | 'to_action_later';\n  selected?: boolean; // For bulk operations\n  additional_data?: any;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface SystemAlertsState {\n  alerts: SystemAlert[];\n  loading: boolean;\n  error: string | null;\n  total: number;\n  selectedCount: number;\n}\n\nconst initialState: SystemAlertsState = {\n  alerts: [],\n  loading: false,\n  error: null,\n  total: 0,\n  selectedCount: 0\n};\n\n// Define response types\ninterface AlertsResponse {\n  alerts: SystemAlert[];\n  total: number;\n}\n\n// Async Thunks\nexport const fetchSystemAlerts = createAsyncThunk<\n  AlertsResponse,\n  { skip?: number, limit?: number, is_read?: boolean }\n>(\n  'systemAlerts/fetchAlerts',\n  async ({ skip = 0, limit = 20, is_read }: { skip?: number, limit?: number, is_read?: boolean } = {}, { rejectWithValue }) => {\n    try {\n      console.log(\"🦉 Sir Hawkington is fetching system alerts...\");\n      let url = `${BASE_PATH}?skip=${skip}&limit=${limit}`;\n      if (is_read !== undefined) {\n        url += `&is_read=${is_read}`;\n      }\n      console.log(\"Fetching alerts from:\", url);\n      const response = await apiMethods.get<AlertsResponse>(url);\n      console.log(\"🦉 Sir Hawkington returned with alerts:\", response);\n      return response as AlertsResponse;\n    } catch (error: any) {\n      console.error(\"💥 Sir Hawkington crashed while fetching alerts!\", error);\n      return rejectWithValue(\n        error.response?.data?.detail || \n        \"Sir Hawkington couldn't fetch the alerts. Most distressing!\"\n      );\n    }\n  }\n);\n\nexport const createSystemAlert = createAsyncThunk<\n  SystemAlert,\n  Omit<SystemAlert, 'id' | 'timestamp' | 'created_at' | 'updated_at'>\n>(\n  'systemAlerts/createAlert',\n  async (alertData: Omit<SystemAlert, 'id' | 'timestamp' | 'created_at' | 'updated_at'>, { rejectWithValue }) => {\n    try {\n      console.log(\"🦉 Sir Hawkington is creating a new system alert...\");\n      const response = await apiMethods.post<SystemAlert, typeof alertData>(`${BASE_PATH}`, alertData);\n      console.log(\"🦉 Sir Hawkington created a new alert:\", response);\n      return response as SystemAlert;\n    } catch (error: any) {\n      console.error(\"💥 Sir Hawkington crashed while creating an alert!\", error);\n      return rejectWithValue(\n        error.response?.data?.detail || \n        \"Sir Hawkington couldn't create the alert. How embarrassing!\"\n      );\n    }\n  }\n);\n\nexport const markAlertAsRead = createAsyncThunk<\n  SystemAlert,\n  string\n>(\n  'systemAlerts/markAsRead',\n  async (id: string, { rejectWithValue }) => {\n    try {\n      console.log(`🦉 Sir Hawkington is marking alert ${id} as read...`);\n      const response = await apiMethods.post<SystemAlert, {}>(`${BASE_PATH}${id}/mark-as-read`, {});\n      console.log(\"🦉 Sir Hawkington marked the alert as read:\", response);\n      return response as SystemAlert;\n    } catch (error: any) {\n      console.error(\"💥 Sir Hawkington crashed while marking an alert as read!\", error);\n      return rejectWithValue(\n        error.response?.data?.detail || \n        \"Sir Hawkington couldn't mark the alert as read. Most peculiar!\"\n      );\n    }\n  }\n);\n\nexport const markAllAlertsAsRead = createAsyncThunk<\n  boolean,\n  void\n>(\n  'systemAlerts/markAllAsRead',\n  async (_, { rejectWithValue }) => {\n    try {\n      console.log(\"🦉 Sir Hawkington is marking all alerts as read...\");\n      const response = await apiMethods.post<{success: boolean}, {}>(`${BASE_PATH}mark-all-as-read`, {});\n      console.log(\"🦉 Sir Hawkington marked all alerts as read\");\n      return response.success;\n    } catch (error: any) {\n      console.error(\"💥 Sir Hawkington crashed while marking all alerts as read!\", error);\n      return rejectWithValue(\n        error.response?.data?.detail || \n        \"Sir Hawkington couldn't mark all alerts as read. Most troubling!\"\n      );\n    }\n  }\n);\n\nexport const deleteSystemAlert = createAsyncThunk<\n  string,\n  string\n>(\n  'systemAlerts/deleteAlert',\n  async (id: string, { rejectWithValue }) => {\n    try {\n      console.log(`🦉 Sir Hawkington is deleting alert ${id}...`);\n      await apiMethods.delete<{success: boolean}>(`${BASE_PATH}${id}`);\n      console.log(`🦉 Sir Hawkington deleted alert ${id}`);\n      return id;\n    } catch (error: any) {\n      console.error(\"💥 Sir Hawkington crashed while deleting an alert!\", error);\n      return rejectWithValue(\n        error.response?.data?.detail || \n        \"Sir Hawkington couldn't delete the alert. Most unfortunate!\"\n      );\n    }\n  }\n);\n\n// Slice\nconst systemAlertsSlice = createSlice({\n  name: 'systemAlerts',\n  initialState,\n  reducers: {\n    addAlert: (state, action: PayloadAction<SystemAlert>) => {\n      state.alerts.unshift(action.payload);\n      state.total += 1;\n    },\n    clearAlert: (state, action: PayloadAction<string>) => {\n      const alertToRemove = state.alerts.find(alert => alert.id === action.payload);\n      if (alertToRemove?.selected) {\n        state.selectedCount -= 1;\n      }\n      state.alerts = state.alerts.filter(alert => alert.id !== action.payload);\n      state.total -= 1;\n    },\n    clearSystemAlertsError: (state) => {\n      state.error = null;\n    },\n    updateAlertActionStatus: (state, action: PayloadAction<{id: string, status: 'none' | 'actioned' | 'not_actioned' | 'to_action_later'}>) => {\n      const { id, status } = action.payload;\n      const alertIndex = state.alerts.findIndex(alert => alert.id === id);\n      if (alertIndex !== -1) {\n        state.alerts[alertIndex].action_status = status;\n      }\n    },\n    toggleAlertSelection: (state, action: PayloadAction<string>) => {\n      const alertIndex = state.alerts.findIndex(alert => alert.id === action.payload);\n      if (alertIndex !== -1) {\n        const currentSelected = state.alerts[alertIndex].selected || false;\n        state.alerts[alertIndex].selected = !currentSelected;\n        state.selectedCount += currentSelected ? -1 : 1;\n      }\n    },\n    selectAllAlerts: (state) => {\n      state.alerts.forEach(alert => {\n        if (!alert.selected) {\n          alert.selected = true;\n          state.selectedCount += 1;\n        }\n      });\n    },\n    deselectAllAlerts: (state) => {\n      state.alerts.forEach(alert => {\n        if (alert.selected) {\n          alert.selected = false;\n        }\n      });\n      state.selectedCount = 0;\n    },\n    deleteSelectedAlerts: (state) => {\n      state.alerts = state.alerts.filter(alert => !alert.selected);\n      state.total -= state.selectedCount;\n      state.selectedCount = 0;\n    },\n    updateSelectedAlertsActionStatus: (state, action: PayloadAction<'none' | 'actioned' | 'not_actioned' | 'to_action_later'>) => {\n      state.alerts.forEach(alert => {\n        if (alert.selected) {\n          alert.action_status = action.payload;\n        }\n      });\n    },\n    markSelectedAlertsAsRead: (state) => {\n      state.alerts.forEach(alert => {\n        if (alert.selected && !alert.is_read) {\n          alert.is_read = true;\n        }\n      });\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      // Fetch alerts\n      .addCase(fetchSystemAlerts.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchSystemAlerts.fulfilled, (state, action) => {\n        state.loading = false;\n        state.alerts = action.payload.alerts;\n        state.total = action.payload.total;\n      })\n      .addCase(fetchSystemAlerts.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      \n      // Create alert\n      .addCase(createSystemAlert.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(createSystemAlert.fulfilled, (state, action) => {\n        state.loading = false;\n        state.alerts.unshift(action.payload);\n        state.total += 1;\n      })\n      .addCase(createSystemAlert.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      \n      // Mark as read\n      .addCase(markAlertAsRead.fulfilled, (state, action) => {\n        const index = state.alerts.findIndex(alert => alert.id === action.payload.id);\n        if (index !== -1) {\n          state.alerts[index] = action.payload;\n        }\n      })\n      \n      // Mark all as read\n      .addCase(markAllAlertsAsRead.fulfilled, (state) => {\n        state.alerts = state.alerts.map(alert => ({ ...alert, is_read: true }));\n      })\n      \n      // Delete alert\n      .addCase(deleteSystemAlert.fulfilled, (state, action) => {\n        state.alerts = state.alerts.filter(alert => alert.id !== action.payload);\n        state.total -= 1;\n      });\n  }\n});\n\nexport const { \n  addAlert, \n  clearAlert, \n  clearSystemAlertsError,\n  updateAlertActionStatus,\n  toggleAlertSelection,\n  selectAllAlerts,\n  deselectAllAlerts,\n  deleteSelectedAlerts,\n  updateSelectedAlertsActionStatus,\n  markSelectedAlertsAsRead\n} = systemAlertsSlice.actions;\n\nexport default systemAlertsSlice.reducer;","// alertUtils.ts\n// We'll use this for direct API calls when needed\nimport { API_BASE_URL } from './api';\n\n// Direct backend URL for consistency with SystemAlerts component\nconst BACKEND_URL = 'http://127.0.0.1:8000';\n\n/**\n * Utility to create system alerts from auto-tuner events or other system events\n * Returns the alert data object that can be dispatched by the caller\n */\nexport const createAlertFromEvent = (\n  title: string,\n  message: string,\n  severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL',\n  relatedMetrics?: any\n) => {\n  // Create the alert data\n  const alertData = {\n    title,\n    message,\n    severity,\n    is_read: false, // Add the required is_read property\n    additional_data: relatedMetrics || {}\n  };\n\n  // For debugging - log the API URL we would use for direct API calls\n  console.log(`Alert data created. API endpoint would be: ${BACKEND_URL}/api/system-alerts/ or ${API_BASE_URL}/system-alerts/`);\n  \n  // Return the alert data instead of dispatching it\n  return alertData;\n};\n\n/**\n * Create an alert from an auto-tuner recommendation\n * Returns the alert data object that can be dispatched by the caller\n */\nexport const createAlertFromRecommendation = (recommendation: any) => {\n  // Extract information from the recommendation\n  const { parameter, current_value, recommended_value, confidence, impact_score, reason } = recommendation;\n  \n  // Determine severity based on confidence and impact\n  let severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\n  const combinedScore = confidence * impact_score;\n  \n  if (combinedScore > 0.7) {\n    severity = 'CRITICAL';\n  } else if (combinedScore > 0.5) {\n    severity = 'HIGH';\n  } else if (combinedScore > 0.3) {\n    severity = 'MEDIUM';\n  } else {\n    severity = 'LOW';\n  }\n  \n  // Create a title and message\n  const title = `Auto-Tuner Recommendation: ${parameter}`;\n  const message = `${reason}. Current value: ${current_value}, Recommended value: ${recommended_value} (Confidence: ${(confidence * 100).toFixed(0)}%, Impact: ${(impact_score * 100).toFixed(0)}%)`;\n  \n  // Create the alert with additional data for applying the recommendation\n  return createAlertFromEvent(title, message, severity, { \n    parameter, \n    current_value, \n    recommended_value, \n    confidence, \n    impact_score,\n    actionable: true,\n    action_type: 'apply_recommendation',\n    recommendation_data: recommendation\n  });\n};\n\n/**\n * Create an alert from a system pattern detection\n * Returns the alert data object that can be dispatched by the caller\n */\nexport const createAlertFromPattern = (pattern: any) => {\n  // Extract information from the pattern\n  const { type, pattern: patternText, confidence, details } = pattern;\n  \n  // Determine severity based on confidence\n  let severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\n  \n  if (confidence > 0.8) {\n    severity = 'CRITICAL';\n  } else if (confidence > 0.6) {\n    severity = 'HIGH';\n  } else if (confidence > 0.4) {\n    severity = 'MEDIUM';\n  } else {\n    severity = 'LOW';\n  }\n  \n  // Create a title and message\n  const title = `System Pattern Detected: ${type}`;\n  const message = `${patternText}. (Confidence: ${(confidence * 100).toFixed(0)}%)`;\n  \n  // Create the alert with additional data\n  return createAlertFromEvent(title, message, severity, {\n    ...details,\n    pattern_type: type,\n    confidence,\n    actionable: details?.actionable || false,\n    action_type: details?.action_type || null\n  });\n};\n\n/**\n * Create an alert from a system metric threshold being exceeded\n * Returns the alert data object that can be dispatched by the caller\n */\nexport const createAlertFromMetricThreshold = (metric: string, value: number, threshold: number) => {\n  // Determine severity based on how much the threshold is exceeded\n  let severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\n  const exceedRatio = value / threshold;\n  \n  if (exceedRatio > 1.5) {\n    severity = 'CRITICAL';\n  } else if (exceedRatio > 1.3) {\n    severity = 'HIGH';\n  } else if (exceedRatio > 1.1) {\n    severity = 'MEDIUM';\n  } else {\n    severity = 'LOW';\n  }\n  \n  // Format the metric name for display\n  const formattedMetric = metric\n    .replace(/_/g, ' ')\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n  \n  // Create a title and message\n  const title = `${formattedMetric} Threshold Exceeded`;\n  const message = `${formattedMetric} has reached ${value.toFixed(1)}%, exceeding the threshold of ${threshold}%.`;\n  \n  // Create the alert\n  return createAlertFromEvent(title, message, severity, {\n    metric,\n    current_value: value,\n    threshold,\n    actionable: true,\n    action_type: 'view_metrics'\n  });\n};\n\n/**\n * Create an alert from a tuning action that was applied\n * Returns the alert data object that can be dispatched by the caller\n */\nexport const createAlertFromTuningAction = (tuningAction: any, success: boolean) => {\n  const { parameter, old_value, new_value, reason } = tuningAction;\n  \n  // Determine severity based on success and parameter importance\n  const severity = success ? 'MEDIUM' : 'HIGH';\n  \n  // Create a title and message\n  const title = success \n    ? `System Tuning Applied: ${parameter}` \n    : `System Tuning Failed: ${parameter}`;\n    \n  const message = success\n    ? `Successfully changed ${parameter} from ${old_value} to ${new_value}. ${reason || ''}`\n    : `Failed to change ${parameter} from ${old_value} to ${new_value}. ${reason || ''}`;\n  \n  // Create the alert\n  return createAlertFromEvent(title, message, severity, {\n    parameter,\n    old_value,\n    new_value,\n    success,\n    timestamp: new Date().toISOString(),\n    actionable: false\n  });\n};\n\nexport default {\n  createAlertFromEvent,\n  createAlertFromRecommendation,\n  createAlertFromPattern,\n  createAlertFromMetricThreshold,\n  createAlertFromTuningAction\n};\n","// src/store/slices/autoTunerSlice.ts\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport { AutoTunerState } from '../../types/autoTuner';\nimport { OptimizationProfile } from '../../types/metrics';\nimport apiMethods from '../../utils/api'; // Updated import to use apiMethods\nimport alertUtils from '../../utils/alertUtils';\nimport { createSystemAlert } from './systemAlertsSlice';\n\nconst initialState: AutoTunerState = {\n  currentMetrics: null,\n  recommendations: [],\n  patterns: [],\n  tuningHistory: [],\n  activeProfile: null,\n  status: 'idle',\n  error: null,\n  lastUpdated: null,\n};\n\n// Helper functions to create alerts from patterns and recommendations\n// These are separate from the reducers to avoid the \"may not call store.getState() while the reducer is executing\" error\nexport const createAlertsFromPatterns = (patterns: any[], dispatch: any) => {\n  if (patterns && patterns.length > 0) {\n    // Only create alerts for high confidence patterns\n    patterns\n      .filter(pattern => pattern.confidence > 0.6)\n      .forEach(pattern => {\n        const alertData = alertUtils.createAlertFromPattern(pattern);\n        dispatch(createSystemAlert(alertData));\n      });\n  }\n};\n\nexport const createAlertsFromRecommendations = (recommendations: any[], dispatch: any) => {\n  if (recommendations && recommendations.length > 0) {\n    // Only create alerts for high impact recommendations\n    recommendations\n      .filter(rec => (rec.confidence * rec.impact_score) > 0.5)\n      .forEach(recommendation => {\n        const alertData = alertUtils.createAlertFromRecommendation(recommendation);\n        dispatch(createSystemAlert(alertData));\n      });\n  }\n};\n\n// Async thunks for API calls\nexport const fetchCurrentMetrics = createAsyncThunk(\n  'autoTuner/fetchCurrentMetrics',\n  async () => {\n    try {\n      console.log('🧐 Sir Hawkington: Fetching current metrics with authentication...');\n      // Modify the API call - get expects type parameters for response and query params\n      const response = await apiMethods.get<any>(`/auto-tuner/metrics/current`);\n      return response;\n    } catch (error: any) {\n      console.error('🚨 Error fetching metrics:', error.response?.data || error.message);\n      throw new Error(error.response?.data?.detail || 'Failed to fetch current metrics');\n    }\n  }\n);\n\nexport const fetchRecommendations = createAsyncThunk(\n  'autoTuner/fetchRecommendations',\n  async (_, { dispatch }) => {\n    try {\n      console.log('🐌 The Meth Snail: Fetching recommendations with authentication...');\n      // Modify the API call - get expects type parameters for response and query params\n      const response = await apiMethods.get<any[]>(`/auto-tuner/recommendations`);\n      \n      // Create alerts from recommendations outside of the reducer\n      if (response && Array.isArray(response)) {\n        createAlertsFromRecommendations(response, dispatch);\n      }\n      \n      return response;\n    } catch (error: any) {\n      console.error('🚨 Error fetching recommendations:', error.response?.data || error.message);\n      throw new Error(error.response?.data?.detail || 'Failed to fetch recommendations');\n    }\n  }\n);\n\nexport const fetchPatterns = createAsyncThunk(\n  'autoTuner/fetchPatterns',\n  async (_, { dispatch }) => {\n    try {\n      console.log('🦔 Sir Hawkington: Fetching patterns with authentication...');\n      // Modify the API call - get expects type parameters for response\n      const response = await apiMethods.get<any>(`/auto-tuner/patterns`);\n      console.log('✅ Patterns API response:', response);\n      \n      // Ensure we're returning the expected format even if the API response structure changes\n      if (!response) {\n        console.error('🚨 Empty response from patterns API');\n        return { detected_patterns: [] };\n      }\n      \n      // Extract patterns from the response\n      let patterns = [];\n      if (response.detected_patterns) {\n        patterns = response.detected_patterns;\n      } else if (Array.isArray(response)) {\n        patterns = response;\n      }\n      \n      // Create alerts from patterns outside of the reducer\n      createAlertsFromPatterns(patterns, dispatch);\n      \n      return response;\n    } catch (error: any) {\n      console.error('🚨 Error fetching patterns:', error);\n      throw new Error(typeof error.message === 'string' ? error.message : 'Failed to fetch patterns');\n    }\n  }\n);\n\nexport const fetchTuningHistory = createAsyncThunk(\n  'autoTuner/fetchTuningHistory',\n  async () => {\n    try {\n      console.log('🦔 Sir Hawkington: Fetching tuning history with authentication...');\n      // Modify the API call - get expects type parameters for response\n      const response = await apiMethods.get<{history: any[]}>(`/auto-tuner/history`);\n      return response;\n    } catch (error: any) {\n      console.error('🚨 Error fetching tuning history:', error.response?.data || error.message);\n      throw new Error(error.response?.data?.detail || 'Failed to fetch tuning history');\n    }\n  }\n);\n\nexport const applyOptimizationProfile = createAsyncThunk(\n  'autoTuner/applyOptimizationProfile',\n  async (profileId: string) => {\n    try {\n      console.log(`🐌 The Meth Snail: Applying optimization profile ${profileId} with authentication...`);\n      // Modify the API call - post expects type parameters for response and body\n      const response = await apiMethods.post<{applied_settings: any[]}, {}>(`/auto-tuner/profiles/${profileId}/apply`, {});\n      return response;\n    } catch (error: any) {\n      console.error('🚨 Error applying optimization profile:', error.response?.data || error.message);\n      throw new Error(error.response?.data?.detail || 'Failed to apply optimization profile');\n    }\n  }\n);\n\nexport const applyRecommendation = createAsyncThunk(\n  'autoTuner/applyRecommendation',\n  async (recommendationId: number) => {\n    try {\n      console.log(`🦔 Sir Hawkington: Applying recommendation ${recommendationId} with authentication...`);\n      // Pass the recommendation_id as a query parameter\n      // Modify the API call - post expects type parameters for response and body\n      const response = await apiMethods.post<{success: boolean; result: any}, {}>(`/auto-tuner/recommendations/apply?recommendation_id=${recommendationId}`, {});\n      return response;\n    } catch (error: any) {\n      console.error('🚨 Error applying recommendation:', error.response?.data || error.message);\n      throw new Error(error.response?.data?.detail || 'Failed to apply recommendation');\n    }\n  }\n);\n\nconst autoTunerSlice = createSlice({\n  name: 'autoTuner',\n  initialState,\n  reducers: {\n    setActiveProfile(state, action: PayloadAction<OptimizationProfile | null>) {\n      state.activeProfile = action.payload;\n    },\n    clearAutoTuner: (state) => {\n      state.currentMetrics = null;\n      state.recommendations = [];\n      state.patterns = [];\n      state.tuningHistory = [];\n      state.activeProfile = null;\n      state.status = 'idle';\n      state.error = null;\n      state.lastUpdated = null;\n    },\n  },\n  extraReducers: (builder) => {\n    // Current Metrics\n    builder\n      .addCase(fetchCurrentMetrics.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchCurrentMetrics.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.currentMetrics = action.payload;\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(fetchCurrentMetrics.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message || 'Failed to fetch metrics';\n      })\n      \n    // Recommendations\n    builder\n      .addCase(fetchRecommendations.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchRecommendations.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.recommendations = action.payload;\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(fetchRecommendations.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message || 'Failed to fetch recommendations';\n      })\n      \n    // Patterns\n    builder\n      .addCase(fetchPatterns.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchPatterns.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        \n        // Enhanced debug logging\n        console.log('✅ Patterns payload:', action.payload);\n        \n        // Handle the case where detected_patterns might be undefined\n        if (action.payload && action.payload.detected_patterns) {\n          // This is the expected format from the backend\n          state.patterns = action.payload.detected_patterns;\n          console.log('🦔 Setting patterns in state from detected_patterns:', action.payload.detected_patterns);\n        } else if (Array.isArray(action.payload)) {\n          // Handle case where API might return an array directly\n          state.patterns = action.payload;\n          console.log('🦔 Setting patterns array in state:', action.payload);\n        } else {\n          // Fallback to empty array if no patterns found\n          console.warn('⚠️ No patterns found in payload, setting empty array. Payload:', action.payload);\n          state.patterns = [];\n        }\n        \n        // Additional validation to ensure patterns are in the expected format\n        if (state.patterns.length > 0) {\n          // Verify that each pattern has the required fields\n          const validPatterns = state.patterns.filter((pattern: any) => {\n            return pattern && \n                   typeof pattern === 'object' && \n                   'type' in pattern && \n                   'pattern' in pattern && \n                   'confidence' in pattern && \n                   'details' in pattern;\n          });\n          \n          if (validPatterns.length !== state.patterns.length) {\n            console.warn(`⚠️ Filtered out ${state.patterns.length - validPatterns.length} invalid patterns`);\n            state.patterns = validPatterns;\n          }\n        }\n        \n        state.lastUpdated = new Date().toISOString();\n        \n        // We'll handle alerts creation after the reducer completes\n        // We don't create alerts here to avoid the \"may not call store.getState() while the reducer is executing\" error\n      })\n      .addCase(fetchPatterns.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message || 'Failed to fetch patterns';\n        console.error('🚨 Failed to fetch patterns:', action.error);\n      })\n      \n    // Tuning History\n    builder\n      .addCase(fetchTuningHistory.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchTuningHistory.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        if (action.payload && action.payload.history) {\n          state.tuningHistory = action.payload.history;\n        } else {\n          state.tuningHistory = [];\n        }\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(fetchTuningHistory.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message || 'Failed to fetch tuning history';\n      })\n      \n    // Apply Profile\n    builder\n      .addCase(applyOptimizationProfile.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(applyOptimizationProfile.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        // Update tuning history with newly applied settings\n        if (action.payload && action.payload.applied_settings) {\n          state.tuningHistory = [...state.tuningHistory, ...action.payload.applied_settings];\n        }\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(applyOptimizationProfile.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message || 'Failed to apply profile';\n      })\n      \n    // Apply Recommendation\n    builder\n      .addCase(applyRecommendation.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(applyRecommendation.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        if (action.payload && action.payload.success && action.payload.result) {\n          state.tuningHistory = [...state.tuningHistory, action.payload.result];\n        }\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(applyRecommendation.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message || 'Failed to apply recommendation';\n      });\n  },\n});\n\nexport const { setActiveProfile, clearAutoTuner } = autoTunerSlice.actions;\nexport default autoTunerSlice.reducer;","// src/store/slices/optimizationSlice.ts\nimport { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../../utils/api';\n\n// Types\nexport interface OptimizationProfile {\n  id: string;\n  name: string;\n  description: string;\n  usageType?: 'gaming' | 'creative' | 'development' | 'office' | 'browsing' | 'custom';\n  settings: {\n    cpuThreshold: number;\n    memoryThreshold: number;\n    diskThreshold: number;\n    networkThreshold: number;\n    enableAutoTuning: boolean;\n    // Advanced settings\n    cpuPriority?: 'high' | 'medium' | 'low';\n    backgroundProcessLimit?: number;\n    memoryAllocation?: {\n      applications: number; // percentage\n      systemCache: number; // percentage\n    };\n    diskPerformance?: 'speed' | 'balance' | 'powersave';\n    networkOptimization?: {\n      prioritizeStreaming: boolean;\n      prioritizeDownloads: boolean;\n      lowLatencyMode: boolean;\n    };\n    powerProfile?: 'performance' | 'balanced' | 'powersave';\n  };\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface OptimizationState {\n  profiles: OptimizationProfile[];\n  loading: boolean;\n  error: string | null;\n  currentProfile: OptimizationProfile | null;\n}\n\nconst initialState: OptimizationState = {\n  profiles: [],\n  loading: false,\n  error: null,\n  currentProfile: null\n};\n\n// Async Thunks\nexport const fetchOptimizationProfiles = createAsyncThunk(\n  'optimization/fetchProfiles',\n  async (_, { rejectWithValue }) => {\n    try {\n      console.log(\"🐌 The Meth Snail is fetching optimization profiles...\");\n      \n      // Get authentication token\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return rejectWithValue(\"Authentication required. Please log in.\");\n      }\n      \n      const response = await axios.get(`${API_BASE_URL}/optimization-profiles/`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      console.log(\"🐌 The Meth Snail returned with profiles:\", response.data);\n      return response.data.profiles;\n    } catch (error: any) {\n      console.error(\"💥 The Meth Snail crashed while fetching profiles!\", error);\n      return rejectWithValue(\n        error.response?.data?.detail || \n        \"The Meth Snail couldn't fetch the profiles. It's probably tweaking out again.\"\n      );\n    }\n  }\n);\n\nexport const createOptimizationProfile = createAsyncThunk(\n  'optimization/createProfile',\n  async (profileData: any, { rejectWithValue }) => {\n    try {\n      console.log(\"🐌 The Meth Snail is creating a new optimization profile...\");\n      \n      // Get authentication token\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return rejectWithValue(\"Authentication required. Please log in.\");\n      }\n      \n      // Log the profile data being sent\n      console.log(\"🐌 Profile data being sent:\", profileData);\n      \n      const response = await axios.post(`${API_BASE_URL}/optimization-profiles/`, profileData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log(\"🐌 The Meth Snail created a new profile:\", response.data);\n      return response.data;\n    } catch (error: any) {\n      console.error(\"💥 The Meth Snail crashed while creating a profile!\", error);\n      return rejectWithValue(\n        error.response?.data?.detail || \n        \"The Meth Snail couldn't create the profile. It's probably on a bad batch.\"\n      );\n    }\n  }\n);\n\nexport const updateOptimizationProfile = createAsyncThunk(\n  'optimization/updateProfile',\n  async (profileData: any, { rejectWithValue }) => {\n    try {\n      const { id, ...data } = profileData;\n      console.log(`🐌 The Meth Snail is updating optimization profile ${id}...`);\n      \n      // Get authentication token\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return rejectWithValue(\"Authentication required. Please log in.\");\n      }\n      \n      // Validate if the ID is a valid UUID\n      const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n      if (!uuidRegex.test(id)) {\n        console.error(`🐌 The Meth Snail is confused! ID ${id} is not a valid UUID.`);\n        return rejectWithValue(`Invalid profile ID format. Expected a UUID but got: ${id}`);\n      }\n      \n      console.log(\"🐌 Profile data being updated:\", data);\n      \n      const response = await axios.put(`${API_BASE_URL}/optimization-profiles/${id}`, data, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log(\"🐌 The Meth Snail updated the profile:\", response.data);\n      return response.data;\n    } catch (error: any) {\n      console.error(\"💥 The Meth Snail crashed while updating a profile!\", error);\n      return rejectWithValue(\n        error.response?.data?.detail || \n        \"The Meth Snail couldn't update the profile. It's probably having an existential crisis.\"\n      );\n    }\n  }\n);\n\nexport const deleteOptimizationProfile = createAsyncThunk(\n  'optimization/deleteProfile',\n  async (id: string, { rejectWithValue }) => {\n    try {\n      console.log(`🐌 The Meth Snail is deleting optimization profile ${id}...`);\n      \n      // Get authentication token\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return rejectWithValue(\"Authentication required. Please log in.\");\n      }\n      \n      // Validate if the ID is a valid UUID\n      const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n      if (!uuidRegex.test(id)) {\n        console.error(`🐌 The Meth Snail is confused! ID ${id} is not a valid UUID.`);\n        return rejectWithValue(`Invalid profile ID format. Expected a UUID but got: ${id}`);\n      }\n      \n      await axios.delete(`${API_BASE_URL}/optimization-profiles/${id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      console.log(\"🐌 The Meth Snail deleted the profile successfully\");\n      return id;\n    } catch (error: any) {\n      console.error(\"💥 The Meth Snail crashed while deleting a profile!\", error);\n      return rejectWithValue(\n        error.response?.data?.detail || \n        \"The Meth Snail couldn't delete the profile. It's probably having withdrawal symptoms.\"\n      );\n    }\n  }\n);\n\nexport const activateOptimizationProfile = createAsyncThunk(\n  'optimization/activateProfile',\n  async (id: string, { rejectWithValue }) => {\n    try {\n      console.log(`🐌 The Meth Snail is activating optimization profile ${id}...`);\n      \n      // Get authentication token\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return rejectWithValue(\"Authentication required. Please log in.\");\n      }\n      \n      // Validate if the ID is a valid UUID\n      const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n      if (!uuidRegex.test(id)) {\n        console.error(`🐌 The Meth Snail is confused! ID ${id} is not a valid UUID.`);\n        return rejectWithValue(`Invalid profile ID format. Expected a UUID but got: ${id}`);\n      }\n      \n      const response = await axios.post(`${API_BASE_URL}/optimization-profiles/${id}/activate`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log(\"🐌 The Meth Snail activated the profile:\", response.data);\n      return response.data;\n    } catch (error: any) {\n      console.error(\"💥 The Meth Snail crashed while activating a profile!\", error);\n      return rejectWithValue(\n        error.response?.data?.detail || \n        \"The Meth Snail couldn't activate the profile. It's probably passed out from exhaustion.\"\n      );\n    }\n  }\n);\n\n// Slice\nconst optimizationSlice = createSlice({\n  name: 'optimization',\n  initialState,\n  reducers: {\n    setCurrentProfile: (state, action: PayloadAction<OptimizationProfile | null>) => {\n      state.currentProfile = action.payload;\n    },\n    clearOptimizationError: (state) => {\n      state.error = null;\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      // Fetch profiles\n      .addCase(fetchOptimizationProfiles.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchOptimizationProfiles.fulfilled, (state, action) => {\n        state.loading = false;\n        state.profiles = action.payload;\n      })\n      .addCase(fetchOptimizationProfiles.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      \n      // Create profile\n      .addCase(createOptimizationProfile.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(createOptimizationProfile.fulfilled, (state, action) => {\n        state.loading = false;\n        state.profiles.push(action.payload);\n      })\n      .addCase(createOptimizationProfile.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      \n      // Update profile\n      .addCase(updateOptimizationProfile.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(updateOptimizationProfile.fulfilled, (state, action) => {\n        state.loading = false;\n        const index = state.profiles.findIndex(profile => profile.id === action.payload.id);\n        if (index !== -1) {\n          state.profiles[index] = action.payload;\n        }\n      })\n      .addCase(updateOptimizationProfile.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      \n      // Delete profile\n      .addCase(deleteOptimizationProfile.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(deleteOptimizationProfile.fulfilled, (state, action) => {\n        state.loading = false;\n        state.profiles = state.profiles.filter(profile => profile.id !== action.payload);\n      })\n      .addCase(deleteOptimizationProfile.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      \n      // Activate profile\n      .addCase(activateOptimizationProfile.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(activateOptimizationProfile.fulfilled, (state, action) => {\n        state.loading = false;\n        // Update all profiles to be inactive except the activated one\n        state.profiles = state.profiles.map(profile => ({\n          ...profile,\n          is_active: profile.id === action.payload.id\n        }));\n      })\n      .addCase(activateOptimizationProfile.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      });\n  }\n});\n\nexport const { setCurrentProfile, clearOptimizationError } = optimizationSlice.actions;\nexport default optimizationSlice.reducer;","// src/store/slices/configurationSlice.ts\nimport { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../../utils/api';\n\n// Types\nexport interface SystemConfiguration {\n  id: string;\n  name: string;\n  description: string;\n  config_type: 'NETWORK' | 'SYSTEM' | 'SECURITY' | 'PERFORMANCE';\n  settings: {\n    [key: string]: any;\n  };\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface ConfigurationFilter {\n  config_type?: string;\n  search?: string;\n  is_active?: boolean;\n}\n\ninterface ConfigurationState {\n  configurations: SystemConfiguration[];\n  loading: boolean;\n  error: string | null;\n  activeConfiguration: SystemConfiguration | null;\n  filters: ConfigurationFilter;\n  lastUpdated: string | null;\n}\n\nconst initialState: ConfigurationState = {\n  configurations: [],\n  loading: false,\n  error: null,\n  activeConfiguration: null,\n  filters: {},\n  lastUpdated: null\n};\n\n// Async Thunks\nexport const fetchSystemConfigurations = createAsyncThunk(\n  'configuration/fetchConfigurations',\n  async (filters: ConfigurationFilter = {}, { rejectWithValue }) => {\n    try {\n      console.log(\"🧐 Sir Hawkington is fetching system configurations with distinguished elegance...\");\n      let url = `${API_BASE_URL}/system-configurations/`;\n      \n      // Construct query parameters\n      const queryParams = new URLSearchParams();\n      if (filters.config_type) {\n        queryParams.append('config_type', filters.config_type);\n      }\n      if (filters.search) {\n        queryParams.append('search', filters.search);\n      }\n      if (filters.is_active !== undefined) {\n        queryParams.append('is_active', String(filters.is_active));\n      }\n      \n      const queryString = queryParams.toString();\n      if (queryString) {\n        url += `?${queryString}`;\n      }\n      \n      // Get authentication token\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return rejectWithValue(\"Authentication required. Please log in.\");\n      }\n      \n      const response = await axios.get(url, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      console.log(\"🧐 Sir Hawkington returned with configurations:\", response.data);\n      return response.data.configurations;\n    } catch (error: any) {\n      console.error(\"💥 Sir Hawkington encountered a most unfortunate error!\", error);\n      return rejectWithValue(\n        error.response?.data?.detail || \n        \"Sir Hawkington regrets to inform you that the configurations could not be retrieved. Most unfortunate!\"\n      );\n    }\n  }\n);\n\nexport const fetchConfigurationById = createAsyncThunk(\n  'configuration/fetchConfigurationById',\n  async (id: string, { rejectWithValue }) => {\n    try {\n      console.log(`🧐 Sir Hawkington is fetching configuration ${id} with utmost precision...`);\n      \n      // Get authentication token\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return rejectWithValue(\"Authentication required. Please log in.\");\n      }\n      \n      const response = await axios.get(`${API_BASE_URL}/system-configurations/${id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      console.log(\"🧐 Sir Hawkington found the requested configuration:\", response.data);\n      return response.data;\n    } catch (error: any) {\n      console.error(\"💥 Sir Hawkington could not find the requested configuration!\", error);\n      return rejectWithValue(\n        error.response?.data?.detail || \n        \"Sir Hawkington regrets to inform you that the specific configuration could not be found. How distressing!\"\n      );\n    }\n  }\n);\n\nexport const createSystemConfiguration = createAsyncThunk(\n  'configuration/createConfiguration',\n  async (configData: any, { rejectWithValue }) => {\n    try {\n      console.log(\"🧐 Sir Hawkington is creating a new system configuration with distinguished precision...\");\n      \n      // Get authentication token\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return rejectWithValue(\"Authentication required. Please log in.\");\n      }\n\n      // Validate the configuration data\n      if (!configData.name || configData.name.trim() === '') {\n        return rejectWithValue(\"A distinguished configuration must have a proper name!\");\n      }\n      \n      if (!configData.config_type) {\n        return rejectWithValue(\"Please specify the type of configuration you wish to create.\");\n      }\n      \n      const response = await axios.post(`${API_BASE_URL}/system-configurations/`, configData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log(\"🧐 Sir Hawkington created a new configuration:\", response.data);\n      return response.data;\n    } catch (error: any) {\n      console.error(\"💥 Sir Hawkington encountered a most unfortunate error while creating a configuration!\", error);\n      return rejectWithValue(\n        error.response?.data?.detail || \n        \"Sir Hawkington regrets to inform you that the configuration could not be created. Most distressing!\"\n      );\n    }\n  }\n);\n\nexport const updateSystemConfiguration = createAsyncThunk(\n  'configuration/updateConfiguration',\n  async (configData: any, { rejectWithValue }) => {\n    try {\n      const { id, ...data } = configData;\n      console.log(`🧐 Sir Hawkington is updating system configuration ${id} with distinguished care...`);\n      \n      // Get authentication token\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return rejectWithValue(\"Authentication required. Please log in.\");\n      }\n      \n      // Validate ID\n      if (!id) {\n        return rejectWithValue(\"Configuration ID is required for updates!\");\n      }\n      \n      // Validate the configuration data\n      if (data.name && data.name.trim() === '') {\n        return rejectWithValue(\"A distinguished configuration must have a proper name!\");\n      }\n      \n      const response = await axios.put(`${API_BASE_URL}/system-configurations/${id}`, data, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log(\"🧐 Sir Hawkington updated the configuration:\", response.data);\n      return response.data;\n    } catch (error: any) {\n      console.error(\"💥 Sir Hawkington encountered a most unfortunate error while updating a configuration!\", error);\n      return rejectWithValue(\n        error.response?.data?.detail || \n        \"Sir Hawkington regrets to inform you that the configuration could not be updated. Most troubling!\"\n      );\n    }\n  }\n);\n\nexport const deleteSystemConfiguration = createAsyncThunk(\n  'configuration/deleteConfiguration',\n  async (id: string, { rejectWithValue }) => {\n    try {\n      console.log(`🧐 Sir Hawkington is deleting system configuration ${id} with a heavy heart...`);\n      \n      // Get authentication token\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return rejectWithValue(\"Authentication required. Please log in.\");\n      }\n      \n      // Validate ID\n      if (!id) {\n        return rejectWithValue(\"Configuration ID is required for deletion!\");\n      }\n      \n      await axios.delete(`${API_BASE_URL}/system-configurations/${id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      console.log(\"🧐 Sir Hawkington deleted the configuration successfully\");\n      return id;\n    } catch (error: any) {\n      console.error(\"💥 Sir Hawkington encountered a most unfortunate error while deleting a configuration!\", error);\n      return rejectWithValue(\n        error.response?.data?.detail || \n        \"Sir Hawkington regrets to inform you that the configuration could not be deleted. Most vexing!\"\n      );\n    }\n  }\n);\n\nexport const applySystemConfiguration = createAsyncThunk(\n  'configuration/applyConfiguration',\n  async (id: string, { rejectWithValue }) => {\n    try {\n      console.log(`🧐 Sir Hawkington is applying system configuration ${id} with distinguished enthusiasm...`);\n      \n      // Get authentication token\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return rejectWithValue(\"Authentication required. Please log in.\");\n      }\n      \n      // Validate ID\n      if (!id) {\n        return rejectWithValue(\"Configuration ID is required for application!\");\n      }\n      \n      const response = await axios.post(`${API_BASE_URL}/system-configurations/${id}/activate`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log(\"🧐 Sir Hawkington applied the configuration:\", response.data);\n      return response.data;\n    } catch (error: any) {\n      console.error(\"💥 Sir Hawkington encountered a most unfortunate error while applying a configuration!\", error);\n      return rejectWithValue(\n        error.response?.data?.detail || \n        \"Sir Hawkington regrets to inform you that the configuration could not be applied. Most disappointing!\"\n      );\n    }\n  }\n);\n\nexport const exportConfiguration = createAsyncThunk(\n  'configuration/exportConfiguration',\n  async (id: string, { rejectWithValue }) => {\n    try {\n      console.log(`🧐 Sir Hawkington is preparing to export configuration ${id} with meticulous attention to detail...`);\n      \n      // Get authentication token\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return rejectWithValue(\"Authentication required. Please log in.\");\n      }\n      \n      const response = await axios.get(`${API_BASE_URL}/system-configurations/${id}/export`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      \n      // Create a download link\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `configuration-${id}.json`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      \n      console.log(\"🧐 Sir Hawkington exported the configuration successfully\");\n      return id;\n    } catch (error: any) {\n      console.error(\"💥 Sir Hawkington encountered difficulty exporting the configuration!\", error);\n      return rejectWithValue(\n        error.response?.data?.detail || \n        \"Sir Hawkington regrets to inform you that the configuration could not be exported. Most troublesome!\"\n      );\n    }\n  }\n);\n\n// Slice\nconst configurationSlice = createSlice({\n  name: 'configuration',\n  initialState,\n  reducers: {\n    setActiveConfiguration: (state, action: PayloadAction<SystemConfiguration | null>) => {\n      state.activeConfiguration = action.payload;\n    },\n    clearConfigurationError: (state) => {\n      state.error = null;\n    },\n    setConfigurationFilters: (state, action: PayloadAction<ConfigurationFilter>) => {\n      state.filters = action.payload;\n    },\n    clearConfigurationFilters: (state) => {\n      state.filters = {};\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      // Fetch configurations\n      .addCase(fetchSystemConfigurations.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchSystemConfigurations.fulfilled, (state, action) => {\n        state.loading = false;\n        state.configurations = action.payload;\n        state.lastUpdated = new Date().toISOString();\n        const activeConfig = action.payload.find((config: SystemConfiguration) => config.is_active);\n        if (activeConfig) {\n          state.activeConfiguration = activeConfig;\n        }\n      })\n      .addCase(fetchSystemConfigurations.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      \n      // Fetch configuration by ID\n      .addCase(fetchConfigurationById.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchConfigurationById.fulfilled, (state, action) => {\n        state.loading = false;\n        // Update the configuration in the list if it exists\n        const index = state.configurations.findIndex(config => config.id === action.payload.id);\n        if (index !== -1) {\n          state.configurations[index] = action.payload;\n        } else {\n          state.configurations.push(action.payload);\n        }\n        if (action.payload.is_active) {\n          state.activeConfiguration = action.payload;\n        }\n      })\n      .addCase(fetchConfigurationById.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      \n      // Create configuration\n      .addCase(createSystemConfiguration.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(createSystemConfiguration.fulfilled, (state, action) => {\n        state.loading = false;\n        state.configurations.push(action.payload);\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(createSystemConfiguration.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      \n      // Update configuration\n      .addCase(updateSystemConfiguration.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(updateSystemConfiguration.fulfilled, (state, action) => {\n        state.loading = false;\n        const index = state.configurations.findIndex(config => config.id === action.payload.id);\n        if (index !== -1) {\n          state.configurations[index] = action.payload;\n          if (state.activeConfiguration && state.activeConfiguration.id === action.payload.id) {\n            state.activeConfiguration = action.payload;\n          }\n        }\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(updateSystemConfiguration.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      \n      // Delete configuration\n      .addCase(deleteSystemConfiguration.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(deleteSystemConfiguration.fulfilled, (state, action) => {\n        state.loading = false;\n        state.configurations = state.configurations.filter(config => config.id !== action.payload);\n        if (state.activeConfiguration && state.activeConfiguration.id === action.payload) {\n          state.activeConfiguration = null;\n        }\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(deleteSystemConfiguration.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      \n      // Apply configuration\n      .addCase(applySystemConfiguration.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(applySystemConfiguration.fulfilled, (state, action) => {\n        state.loading = false;\n        // Update all configurations to be inactive except the applied one\n        state.configurations = state.configurations.map(config => ({\n          ...config,\n          is_active: config.id === action.payload.id\n        }));\n        state.activeConfiguration = action.payload;\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(applySystemConfiguration.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      \n      // Export configuration (no state changes needed except for loading/error states)\n      .addCase(exportConfiguration.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(exportConfiguration.fulfilled, (state) => {\n        state.loading = false;\n      })\n      .addCase(exportConfiguration.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      });\n  }\n});\n\nexport const { \n  setActiveConfiguration, \n  clearConfigurationError,\n  setConfigurationFilters,\n  clearConfigurationFilters\n} = configurationSlice.actions;\n\nexport default configurationSlice.reducer;","import Cookies from 'js-cookie';\nimport { Middleware } from '@reduxjs/toolkit';\n\n// Define more specific types\nexport interface CustomHeaders {\n  [key: string]: string | undefined; // Allow for other header keys\n}\n\nexport interface CustomOptions extends Omit<RequestInit, 'headers'> {\n  headers?: CustomHeaders;\n  credentials?: RequestCredentials;\n}\n\nexport async function fetchWithCsrf(url: URL | RequestInfo, options: CustomOptions = {}) {\n  const csrfToken = Cookies.get('XSRF-TOKEN');\n  \n  const defaultOptions: CustomOptions = {\n    method: 'GET',\n    headers: {},\n    credentials: 'include'\n  };\n\n  // Merge options with proper typing\n  const mergedOptions: CustomOptions = {\n    ...defaultOptions,\n    ...options,\n    headers: {\n      ...defaultOptions.headers,\n      ...options.headers,\n      ...(csrfToken ? { 'X-CSRFToken': csrfToken } : {})\n    }\n  };\n\n  // Now TypeScript knows about the possible header keys\n  if (mergedOptions.method?.toUpperCase() !== 'GET') {\n    if (mergedOptions.headers) {\n      mergedOptions.headers['Content-Type'] = \n        mergedOptions.headers['Content-Type'] || 'application/json';\n    }\n  }\n\n  try {\n    console.log('Fetching', url, 'with options', mergedOptions);\n    const response = await fetch(url, mergedOptions as RequestInit);\n    console.log('Response:', response);\n    return response;\n  } catch (error) {\n    console.error('Network error:', error);\n    throw new Error('Network error. Please check your connection.');\n  }\n}\n\nconst xsrfMiddleware: Middleware = () => next => (action: any) => {\n  if (action.type.startsWith('auth/')) {\n    const csrfToken = Cookies.get('XSRF-TOKEN');\n    // Check if action.payload exists and is an object before trying to add headers\n    if (csrfToken && action.payload && typeof action.payload === 'object') {\n      action.payload.headers = {\n        ...action.payload.headers,\n        'X-CSRFToken': csrfToken\n      } as CustomHeaders;\n    }\n  }\n  return next(action);\n};\nexport async function restoreCSRF() {\n  try {\n    console.log('🧐 Sir Hawkington is attempting to restore the CSRF token...');\n    // Corrected URL to match the backend endpoint\n    const response = await fetchWithCsrf('/api/auth/csrf_token');\n    \n    if (!response.ok) {\n      console.error('🚨 Failed to restore CSRF token, status:', response.status);\n      throw new Error(`Failed to restore CSRF token: ${response.statusText}`);\n    }\n    \n    // Extract the token from the response\n    const data = await response.json();\n    if (data && data.csrf_token) {\n      // Manually set the cookie\n      Cookies.set('XSRF-TOKEN', data.csrf_token, { path: '/' });\n      console.log('✅ CSRF token successfully restored!');\n    } else {\n      console.error('🚨 CSRF token not found in response');\n      throw new Error('CSRF token not found in response');\n    }\n    \n    return response;\n  } catch (error) {\n    console.error('🚨 Error restoring CSRF token:', error);\n    throw error;\n  }\n}\n\nexport default xsrfMiddleware;","import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './slices/authSlice';\nimport metricsReducer from './slices/metricsSlice';\nimport userProfileReducer from './slices/userProfileSlice';\nimport systemAlertsReducer from './slices/systemAlertsSlice';\nimport autoTunerReducer from './slices/autoTunerSlice';\nimport optimizationReducer from './slices/optimizationSlice';\nimport configurationReducer from './slices/configurationSlice';\nimport { MetricsState } from '../types/metrics';\nimport xsrfMiddleware from './csrf';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    metrics: metricsReducer,\n    userProfile: userProfileReducer,\n    systemAlerts: systemAlertsReducer,\n    autoTuner: autoTunerReducer,\n    optimization: optimizationReducer,\n    configuration: configurationReducer,\n    //... other reducers\n  },\n  middleware: (getDefaultMiddleware) => \n    getDefaultMiddleware().concat(xsrfMiddleware)\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport interface StoreState {\n  metrics: MetricsState;\n};\n\nexport default store;\n\n\n\n\n\n\n","import { createContext, useContext, useState, useCallback, ReactNode, useEffect } from 'react';\nimport './Toast.css';\n\ntype ToastType = 'success' | 'error' | 'warning' | 'info';\n\ninterface ToastMessage {\n  id: string;\n  type: ToastType;\n  message: string;\n  duration?: number;\n}\n\ninterface ToastContextType {\n  showToast: (message: string, type?: ToastType, duration?: number) => void;\n  success: (message: string, duration?: number) => void;\n  error: (message: string, duration?: number) => void;\n  warning: (message: string, duration?: number) => void;\n  info: (message: string, duration?: number) => void;\n  removeToast: (id: string) => void;\n  toasts: ToastMessage[];\n}\n\nconst ToastContext = createContext<ToastContextType | undefined>(undefined);\n\nexport const ToastProvider = ({ children }: { children: ReactNode }) => {\n  const [toasts, setToasts] = useState<ToastMessage[]>([]);\n  const [isMounted, setIsMounted] = useState(false);\n\n  // Set mounted state to prevent memory leaks\n  useEffect(() => {\n    setIsMounted(true);\n    return () => setIsMounted(false);\n  }, []);\n\n  const removeToast = useCallback((id: string) => {\n    if (!isMounted) return;\n    setToasts((currentToasts) => currentToasts.filter((toast) => toast.id !== id));\n  }, [isMounted]); \n\n  const showToast = useCallback((message: string, type: ToastType = 'info', duration = 5000) => {\n    if (!isMounted) return '';\n    const id = Math.random().toString(36).substr(2, 9);\n    \n    setToasts((currentToasts) => [...currentToasts, { id, type, message, duration }]);\n\n    if (duration > 0) {\n      setTimeout(() => {\n        removeToast(id);\n      }, duration);\n    }\n  }, [removeToast, isMounted]);\n\n  const toastFunctions = {\n    success: (message: string, duration?: number) => showToast(message, 'success', duration),\n    error: (message: string, duration?: number) => showToast(message, 'error', duration),\n    warning: (message: string, duration?: number) => showToast(message, 'warning', duration),\n    info: (message: string, duration?: number) => showToast(message, 'info', duration),\n  };\n\n  return (\n    <ToastContext.Provider value={{ showToast, ...toastFunctions, removeToast, toasts }}>\n      {children}\n      <div className=\"toast-container\">\n        {toasts.map((toast) => (\n          <div key={toast.id} className={`toast toast-${toast.type}`}>\n            <div className=\"toast-message\">{toast.message}</div>\n            <button \n              className=\"toast-close\" \n              onClick={() => removeToast(toast.id)}\n              aria-label=\"Close\"\n            >\n              &times;\n            </button>\n          </div>\n        ))}\n      </div>\n    </ToastContext.Provider>\n  );\n};\n\n// Export the hook as a named export\nconst useToast = () => {\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n  return context;\n};\n\n// Export the ToastProvider as default and include useToast in the exports\nexport { useToast };\nexport default ToastProvider;\n","// src/store/hooks.ts\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import React, { useState, FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { register } from '../../../store/slices/authSlice';\nimport { AppDispatch } from '../../../store/store';\nimport './SignupModal.css';\nimport '../../../components/common/Modal.css';\n\ninterface SignupModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\n// Registration data is now directly defined in the component\n\nconst SignupModal: FC<SignupModalProps> = ({ isOpen, onClose }) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n  \n  // Form state\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    username: '',\n    password: '',\n    confirmPassword: ''\n  });\n  \n  // UI state\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [hawkingtonQuote, setHawkingtonQuote] = useState(\"🧐 Sir Hawkington awaits your distinguished registration!\");\n  \n  if (!isOpen) return null;\n  \n  // Handle input changes\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  // Form submission\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setError(null);\n    \n    // Enhanced validation\n    if (formData.password !== formData.confirmPassword) {\n      setError(\"Passwords do not match! The Meth Snail is confused by the dimensional discrepancy!\");\n      setHawkingtonQuote(\"🧐 I say, your passwords seem to be in disagreement with each other!\");\n      setIsSubmitting(false);\n      return;\n    }\n    \n    if (!formData.firstName || !formData.lastName || !formData.email || !formData.username || !formData.password) {\n      setError(\"Please fill in all required fields! Sir Hawkington insists on proper form etiquette!\");\n      setHawkingtonQuote(\"🧐 A distinguished application requires all fields to be properly filled!\");\n      setIsSubmitting(false);\n      return;\n    }\n    \n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      setError(\"Please enter a valid email address! The Quantum Shadow People cannot deliver notifications to invalid dimensions.\");\n      setHawkingtonQuote(\"🧐 I say, that email address appears to be from an alternate reality!\");\n      setIsSubmitting(false);\n      return;\n    }\n    \n    // Username validation - no spaces, special characters limited\n    const usernameRegex = /^[a-zA-Z0-9_-]{3,20}$/;\n    if (!usernameRegex.test(formData.username)) {\n      setError(\"Username must be 3-20 characters and can only contain letters, numbers, underscores, and hyphens.\");\n      setHawkingtonQuote(\"🧐 A proper username adheres to aristocratic standards of simplicity!\");\n      setIsSubmitting(false);\n      return;\n    }\n    \n    // Password strength validation\n    if (formData.password.length < 8) {\n      setError(\"Password must be at least 8 characters! The Stick insists on proper security measures.\");\n      setHawkingtonQuote(\"🧐 The Stick measures your password and finds it wanting in length!\");\n      setIsSubmitting(false);\n      return;\n    }\n    \n    try {\n      // Prepare registration data with properly formatted fields - backend only expects username, email, password\n      const registrationData = {\n        username: formData.username.trim(),\n        email: formData.email.trim(),\n        password: formData.password\n        // Note: profile data will be added later after successful registration\n      };\n      \n      console.log(\"Attempting registration with:\", {\n        ...registrationData,\n        password: \"***\"\n      });\n      \n      // Dispatch registration action\n      await dispatch(register(registrationData));\n      \n      // Store username for convenience on the login page\n      localStorage.setItem('registered_username', formData.username);\n      \n      // Success message\n      setHawkingtonQuote(\"🎩 Welcome aboard! Sir Hawkington is most pleased with your registration!\");\n      setIsSubmitting(false);\n      \n      // Show success state before closing\n      setTimeout(() => {\n        // New users should be redirected to onboarding page after signup\n        // The backend should have set needs_onboarding to true\n        navigate('/onboarding');\n        onClose();\n      }, 2000);\n      \n    } catch (err: any) {\n      console.error(\"🔥 REGISTRATION ERROR:\", err);\n      \n      // Try to extract the actual error message from the server response\n      let errorMsg = 'Registration failed';\n      \n      if (err.response && err.response.data) {\n        if (typeof err.response.data === 'string') {\n          errorMsg = err.response.data;\n        } else if (err.response.data.detail) {\n          errorMsg = typeof err.response.data.detail === 'string' \n            ? err.response.data.detail \n            : JSON.stringify(err.response.data.detail);\n        }\n      } else if (err.message) {\n        errorMsg = err.message;\n      }\n      \n      console.error(\"🔥 SERVER RESPONSE:\", errorMsg);\n      \n      // Handle specific error cases\n      if (errorMsg.includes('already exists')) {\n        setError(\"This username or email is already registered! The VIC-20 has detected a duplicate in the system.\");\n        setHawkingtonQuote(\"🧐 I say, it appears you're already a distinguished member of our rebellion!\");\n      } else {\n        setError(`Registration failed: ${errorMsg}`);\n        setHawkingtonQuote(\"🧐 I say, we've encountered a bit of a registration hiccup!\");\n      }\n      \n      setIsSubmitting(false);\n    }\n  };\n  \n  return (\n    <div style={{\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 1000,\n    }}>\n      <div style={{\n        backgroundColor: '#1a0458',\n        borderRadius: '12px',\n        boxShadow: '0 0 20px rgba(0, 245, 212, 0.5)',\n        width: '90%',\n        maxWidth: '600px',\n        padding: '2rem',\n        position: 'relative',\n        color: '#e2e8f0',\n        border: '1px solid rgba(51, 51, 255, 0.3)',\n        maxHeight: '90vh',\n        overflowY: 'auto',\n      }}>\n        <div style={{\n          marginBottom: '1.5rem',\n          textAlign: 'center',\n          position: 'relative',\n        }}>\n          <h2 style={{\n            fontSize: '1.8rem',\n            color: '#00f5d4',\n            marginBottom: '0.5rem',\n          }}>Join the System Rebellion</h2>\n          <button style={{\n            position: 'absolute',\n            top: '0',\n            right: '0',\n            background: 'transparent',\n            border: 'none',\n            color: '#00f5d4',\n            fontSize: '24px',\n            cursor: 'pointer',\n            zIndex: 10,\n          }} onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"hawkington-quote\">\n          <p>{hawkingtonQuote}</p>\n        </div>\n        \n        {error && (\n          <div className=\"error-message\">\n            <p>{error}</p>\n          </div>\n        )}\n        \n        <form onSubmit={handleSubmit} className=\"signup-form\">\n          <div className=\"form-section\">\n            <h3>Personal Information</h3>\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input\n                  type=\"text\"\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  value={formData.firstName}\n                  onChange={handleChange}\n                  disabled={isSubmitting}\n                  className={isSubmitting ? 'input-submitting' : ''}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input\n                  type=\"text\"\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  value={formData.lastName}\n                  onChange={handleChange}\n                  disabled={isSubmitting}\n                  className={isSubmitting ? 'input-submitting' : ''}\n                />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"form-section\">\n            <h3>Account Details</h3>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email Address</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                disabled={isSubmitting}\n                className={isSubmitting ? 'input-submitting' : ''}\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                id=\"username\"\n                name=\"username\"\n                value={formData.username}\n                onChange={handleChange}\n                disabled={isSubmitting}\n                className={isSubmitting ? 'input-submitting' : ''}\n              />\n            </div>\n          </div>\n          \n          <div className=\"form-section\">\n            <h3>Security</h3>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n                disabled={isSubmitting}\n                className={isSubmitting ? 'input-submitting' : ''}\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"confirmPassword\">Confirm Password</label>\n              <input\n                type=\"password\"\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                value={formData.confirmPassword}\n                onChange={handleChange}\n                disabled={isSubmitting}\n                className={isSubmitting ? 'input-submitting' : ''}\n              />\n            </div>\n          </div>\n          \n          <div className=\"form-actions\">\n            <button \n              type=\"button\" \n              className=\"cancel-button\" \n              onClick={onClose}\n              disabled={isSubmitting}\n            >\n              Cancel\n            </button>\n            <button \n              type=\"submit\" \n              className=\"submit-button\"\n              disabled={isSubmitting}\n            >\n              {isSubmitting ? 'Registering...' : 'Register'}\n            </button>\n          </div>\n        </form>\n        \n        <div className=\"modal-footer\">\n          <p>Already have an account? <a href=\"/login\">Login</a></p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupModal;","import { useAppDispatch, useAppSelector } from '../../../store/hooks';\nimport { login } from '../../../store/slices/authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { initializeCsrf, checkBackendAvailability } from '../../../utils/api';\nimport SignupModal from '../SignupModal/SignupModal';\nimport './login.css';\nimport { useState, useEffect } from 'react';\nimport '../../../components/common/Modal.css';\nimport axios from 'axios';\n\nexport interface LoginProps {\n  onClose: () => void;\n  isOpen: boolean;\n}\n\nconst Login: React.FC<LoginProps> = ({ onClose, isOpen }) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [csrfInitialized, setCsrfInitialized] = useState(false);\n  const [backendAvailable, setBackendAvailable] = useState(true);\n  const [isCheckingBackend, setIsCheckingBackend] = useState(true);\n  const [isSignupModalOpen, setIsSignupModalOpen] = useState(false);\n  const [hawkingtonQuote, setHawkingtonQuote] = useState(\"🧐 Sir Hawkington prepares to verify your distinguished credentials!\");\n\n  const isLoading = useAppSelector((state) => state.auth.isLoading);\n  const isAuthenticated = useAppSelector((state) => state.auth.isAuthenticated);\n  const authError = useAppSelector((state) => state.auth.error);\n\n  const updateHawkingtonQuote = (scenario: 'welcome' | 'error' | 'loading' | 'success') => {\n    const quotes = {\n      welcome: \"🧐 Sir Hawkington prepares to verify your distinguished credentials!\",\n      error: \"🧐 *adjusts monocle in concern* I say, something seems amiss!\",\n      loading: \"🧐 *polishes monocle* Let me verify your credentials...\",\n      success: \"🧐 *tips hat* Welcome back, distinguished rebel!\"\n    };\n    setHawkingtonQuote(quotes[scenario]);\n  };\n\n  useEffect(() => {\n    const initializeApp = async () => {\n      if (!isOpen) return;\n      \n      setIsCheckingBackend(true);\n      setError('');\n      \n      try {\n        console.log(\"🦔 Sir Hawkington: Checking backend availability...\");\n        const available = await checkBackendAvailability();\n        setBackendAvailable(available);\n        \n        if (available) {\n          console.log(\"🦔 Sir Hawkington: Backend is available, initializing CSRF...\");\n          // Initialize CSRF protection\n          try {\n            const csrfSuccess = await initializeCsrf();\n            setCsrfInitialized(csrfSuccess);\n            \n            if (!csrfSuccess) {\n              console.error(\"🧙‍♂️ The Stick says: CSRF initialization failed!\");\n              setError('Failed to initialize security tokens. Please try again.');\n            } else {\n              console.log(\"🎉 The VIC-20 celebrates! CSRF initialized successfully!\");\n            }\n          } catch (csrfError) {\n            console.error(\"🧙‍♂️ The Stick says: CSRF initialization error:\", csrfError);\n            setError('Failed to set up security. Please refresh the page.');\n            setCsrfInitialized(false);\n          }\n        } else {\n          console.error(\"🐹 The Hamsters couldn't reach the server!\");\n          setError('Cannot connect to the server. Please check your connection.');\n        }\n      } catch (err) {\n        console.error(\"💥 Backend connection failed:\", err);\n        setBackendAvailable(false);\n        setError('Failed to connect to the server. Please try again later.');\n      } finally {\n        setIsCheckingBackend(false);\n      }\n    };\n\n    initializeApp();\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      console.log('🦔 Sir Hawkington: User is authenticated, redirecting to dashboard');\n      // Force redirect to dashboard for login users\n      navigate('/dashboard', { replace: true });\n      if (onClose) {\n        onClose();\n      }\n    }\n  }, [isAuthenticated, navigate, onClose]);\n\n  // Direct login test with proper error handling and CSRF token\n  const handleDirectLogin = async () => {\n    try {\n      console.log(\"🐌 The Meth Snail: Attempting direct login...\");\n      updateHawkingtonQuote('loading');\n      \n      // Step 1: Get CSRF token\n      const csrfResponse = await axios.get(`${import.meta.env.VITE_API_URL}/api/auth/csrf_token`, {\n        withCredentials: true\n      });\n      \n      console.log(\"🦔 Sir Hawkington: CSRF token obtained!\");\n      const csrfToken = csrfResponse.data.csrf_token;\n      \n      // Step 2: Use the token for login\n      const loginResponse = await axios.post(\n        `${import.meta.env.VITE_API_URL}/api/auth/token`, \n        new URLSearchParams({\n          'username': 'testuser',\n          'password': 'password123'\n        }),\n        {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'X-CSRFToken': csrfToken\n          },\n          withCredentials: true\n        }\n      );\n      \n      console.log(\"🎉 The VIC-20 celebrates! Login successful:\", loginResponse.data);\n      \n      // Store tokens\n      localStorage.setItem('token', loginResponse.data.access_token);\n      localStorage.setItem('refresh_token', loginResponse.data.refresh_token);\n      \n      updateHawkingtonQuote('success');\n      \n      // Force redirect to dashboard\n      navigate('/dashboard', { replace: true });\n      if (onClose) {\n        onClose();\n      }\n    } catch (error: any) {\n      console.error(\"🧙‍♂️ The Stick says: Direct login failed:\", error);\n      updateHawkingtonQuote('error');\n      \n      let errorMessage = 'Login failed. Please check your credentials and try again.';\n      \n      if (error.response?.data?.detail) {\n        errorMessage = `Login failed: ${error.response.data.detail}`;\n      } else if (error.message) {\n        errorMessage = `Login failed: ${error.message}`;\n      }\n      \n      setError(errorMessage);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(''); // Clear previous errors\n    \n    // Validate form data\n    if (!username || !password) {\n      setError('Username and password are required');\n      updateHawkingtonQuote('error');\n      return;\n    }\n    \n    console.log(\"🦔 Sir Hawkington: Login attempt with:\", { username, password: \"***\" });\n\n    // Check backend availability if not already checked\n    if (!backendAvailable) {\n      try {\n        console.log(\"🐹 Hamsters checking server availability...\");\n        const available = await checkBackendAvailability();\n        if (!available) {\n          console.error(\"🐹 Hamsters report: Server is unavailable!\");\n          setError('Cannot login: Server is currently unavailable');\n          updateHawkingtonQuote('error');\n          return;\n        }\n        setBackendAvailable(true);\n      } catch (err) {\n        console.error(\"🐹 Hamsters crashed during server check:\", err);\n        setError('Cannot connect to server. Please try again later.');\n        updateHawkingtonQuote('error');\n        return;\n      }\n    }\n    \n    // Initialize CSRF if needed\n    if (!csrfInitialized) {\n      try {\n        console.log(\"🐌 The Meth Snail: Initializing CSRF protection...\");\n        const csrfSuccess = await initializeCsrf();\n        setCsrfInitialized(csrfSuccess);\n        \n        if (!csrfSuccess) {\n          console.error(\"🧙‍♂️ The Stick says: CSRF initialization failed!\");\n          setError('Security token initialization failed. Please refresh the page.');\n          return;\n        }\n      } catch (err) {\n        console.error(\"🧙‍♂️ The Stick says: CSRF initialization error:\", err);\n        setError('Security setup failed. Please refresh and try again.');\n        return;\n      }\n    }\n\n    try {\n      console.log(\"🐌 The Meth Snail: Dispatching login action...\");\n      updateHawkingtonQuote('loading');\n      \n      // Ensure we're sending the correct data format\n      const loginData = {\n        username: username.trim(),\n        password: password\n      };\n      \n      // Clear any existing tokens to prevent conflicts\n      localStorage.removeItem('token');\n      localStorage.removeItem('refresh_token');\n      \n      // Store username in localStorage before dispatching login\n      localStorage.setItem('username', username.trim());\n      console.log(\"🦔 Sir Hawkington: Stored username in localStorage:\", username.trim());\n      \n      const result = await dispatch(login(loginData)).unwrap();\n      console.log(\"🎉 The VIC-20 celebrates! Login successful\", result);\n      \n      if (!result) {\n        throw new Error('Invalid response received from server');\n      }\n      \n      updateHawkingtonQuote('success');\n      \n      // Login users should always go directly to dashboard\n      console.log('🦔 Sir Hawkington: Login successful, will redirect to dashboard');\n      \n      // No need to check system info for login users - the useEffect will handle the redirect\n    } catch (err: any) {\n      console.error(\"🧙‍♂️ The Stick says: Login failed\", err);\n      \n      // Extract meaningful error message if possible\n      let errorMessage = 'Login failed. Please check your credentials and try again.';\n      \n      if (err.response?.data?.detail) {\n        errorMessage = `Login failed: ${err.response.data.detail}`;\n      } else if (err.message) {\n        errorMessage = `Login failed: ${err.message}`;\n      }\n      \n      setError(errorMessage);\n      updateHawkingtonQuote('error');\n    }\n  };\n\n  const handleOpenSignup = () => {\n    setIsSignupModalOpen(true);\n    console.log(\"🧐 Sir Hawkington prepares to guide a new recruit through registration!\");\n    console.log(\"🐌 The Meth Snail vibrates with anticipation!\");\n  };\n\n  const handleCloseSignup = () => {\n    setIsSignupModalOpen(false);\n    console.log(\"🧐 Sir Hawkington adjusts his monocle and returns to login duties.\");\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <>\n      <div className=\"auth-login-container\" style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 1000,\n      }}>\n        <div className=\"auth-login-content\" style={{\n          backgroundColor: '#1a0458',\n          borderRadius: '12px',\n          boxShadow: '0 0 20px rgba(0, 245, 212, 0.5)',\n          width: '90%',\n          maxWidth: '500px',\n          padding: '2rem',\n          position: 'relative',\n          color: '#e2e8f0',\n          border: '1px solid rgba(51, 51, 255, 0.3)',\n        }}>\n          <button style={{\n            position: 'absolute',\n            top: '10px',\n            right: '10px',\n            background: 'transparent',\n            border: 'none',\n            color: '#00f5d4',\n            fontSize: '24px',\n            cursor: 'pointer',\n            zIndex: 10,\n          }} onClick={onClose}>×</button>\n          <div style={{\n            marginBottom: '1.5rem',\n            textAlign: 'center',\n          }}>\n            <h2 style={{\n              fontSize: '1.8rem',\n              color: '#00f5d4',\n              marginBottom: '0.5rem',\n            }}>System Rebellion Login</h2>\n          </div>\n          <div className=\"auth-login modal-body\">\n            <div className=\"hawkington-welcome\">\n              <div className=\"hawkington-icon\">🧐</div>\n              <p className=\"hawkington-quote\">{hawkingtonQuote}</p>\n            </div>\n\n            <form onSubmit={handleSubmit} className=\"auth-login login-form\">\n              {isLoading && <div className=\"auth-login loading\">Logging in...</div>}\n              {isCheckingBackend && <div className=\"auth-login loading\">Checking server connection...</div>}\n              {error && <div className=\"auth-login error-message\">{error}</div>}\n              {authError && <div className=\"auth-login error-message\">{authError}</div>}\n              \n              <div className=\"auth-login form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <input\n                  id=\"username\"\n                  type=\"text\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  disabled={isLoading || isCheckingBackend}\n                  required\n                />\n              </div>\n              \n              <div className=\"auth-login form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  id=\"password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  disabled={isLoading || isCheckingBackend}\n                  required\n                />\n              </div>\n              \n              <button \n                type=\"submit\" \n                className=\"auth-login button\"\n                disabled={isLoading || !csrfInitialized || isCheckingBackend || !backendAvailable}\n              >\n                {isLoading ? 'Sir Hawkington is verifying...' : 'Enter the System Rebellion'}\n              </button>\n              \n              <button \n                type=\"button\" \n                onClick={handleDirectLogin}\n                style={{\n                  marginTop: '10px',\n                  background: 'rgba(0, 245, 212, 0.1)',\n                  border: '1px solid rgba(0, 245, 212, 0.3)',\n                  borderRadius: '4px',\n                  padding: '8px 12px',\n                  color: '#00f5d4',\n                  cursor: 'pointer',\n                  width: '100%'\n                }}\n              >\n                Test Direct Login (Auto-fills credentials)\n              </button>\n\n              <div className=\"auth-login signup-prompt\">\n                <p>Not a member of the System Rebellion yet?</p>\n                <button \n                  type=\"button\" \n                  className=\"auth-login signup-button cosmic-button\" \n                  onClick={handleOpenSignup}\n                  disabled={isLoading || isCheckingBackend}\n                >\n                  Join the System Rebellion\n                </button>\n              </div>\n              \n              <div className=\"auth-login test-user-section\" style={{ marginTop: '20px', textAlign: 'center' }}>\n                <p style={{ fontSize: '0.9em', color: '#00f5d4' }}>🧐 Sir Hawkington suggests using the test account:</p>\n                <button \n                  type=\"button\" \n                  style={{\n                    background: 'rgba(0, 245, 212, 0.2)',\n                    border: '1px solid #00f5d4',\n                    borderRadius: '4px',\n                    padding: '8px 12px',\n                    color: '#00f5d4',\n                    cursor: 'pointer',\n                    fontSize: '0.9em',\n                    marginTop: '5px'\n                  }}\n                  onClick={() => {\n                    setUsername('testuser');\n                    setPassword('password123');\n                    updateHawkingtonQuote('welcome');\n                  }}\n                  disabled={isLoading || isCheckingBackend}\n                >\n                  Use Test Credentials\n                </button>\n              </div>\n\n              {/* Debug info */}\n              {process.env.NODE_ENV === 'development' && (\n                <div className=\"auth-login debug-info\" style={{\n                  marginTop: '20px', \n                  padding: '10px',\n                  background: 'rgba(0, 0, 0, 0.3)',\n                  borderRadius: '4px',\n                  fontSize: '0.8em'\n                }}>\n                  <div>Auth State: {isAuthenticated ? 'Authenticated' : 'Not Authenticated'}</div>\n                  <div>Backend Available: {backendAvailable ? 'Yes' : 'No'}</div>\n                  <div>CSRF Initialized: {csrfInitialized ? 'Yes' : 'No'}</div>\n                  <div>Checking Backend: {isCheckingBackend ? 'Yes' : 'No'}</div>\n                  <div>API URL: {import.meta.env.VITE_API_URL || 'Not set'}</div>\n                </div>\n              )}\n            </form>\n          </div>\n        </div>\n      </div>\n\n      {isSignupModalOpen && (\n        <SignupModal \n          isOpen={isSignupModalOpen} \n          onClose={handleCloseSignup}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Login;","// src/utils/websocketService.ts\nclass WebSocketService {\n  private socket: WebSocket | null = null;\n  private reconnectAttempts = 0;\n  private readonly MAX_ATTEMPTS = 5;\n  private listeners: { [event: string]: Array<(...args: any[]) => void> } = {};\n  private url: string = '';\n  private connectionTimeoutId: number | null = null;\n  private authenticated: boolean = false;\n  private preventLogout: boolean = true; // Add this flag to control logout behavior\n \n  \n  constructor() {\n    // Initialize with default URL, but don't connect yet\n    this.updateUrl();\n    console.log(\"🚀 WebSocketService initialized\");\n  }\n  \n  // Update the WebSocket URL based on current location\n  private updateUrl(): void {\n    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    const host = window.location.host;\n    this.url = `${protocol}//${host}/ws/system-metrics`;\n    console.log(\"🔗 WebSocket URL set to:\", this.url);\n  }\n\n  private static get WS_URL(): string {\n    return process.env.NODE_ENV === 'production' \n      ? `wss://${window.location.host}/api/ws` \n      : 'ws://localhost:8000/api/ws';\n  }\n\n  // Connect to the WebSocket server with authentication\n  public connect(customUrl?: string): boolean {\n    if (customUrl) this.url = customUrl;\n    else this.url = WebSocketService.WS_URL;\n    \n    if (this.socket) {\n      if (this.socket.readyState === WebSocket.OPEN) {\n        console.log(\"✅ WebSocket already connected\");\n        return true;\n      } else if (this.socket.readyState === WebSocket.CONNECTING) {\n        console.log(\"⏳ WebSocket connection already in progress\");\n        return true;\n      }\n    }\n    \n    // Get authentication token from localStorage\n    const token = localStorage.getItem('token');\n    const hasAuth = !!token;\n    \n    // Append token to WebSocket URL if present\n    let wsUrl = this.url;\n    if (hasAuth) {\n      wsUrl += (wsUrl.includes('?') ? '&' : '?') + `token=${encodeURIComponent(token!)}`;\n      this.authenticated = true;\n    } else {\n      console.warn(\"🧙‍♂️ The Stick warns: Connecting to WebSocket without authentication\");\n      this.authenticated = false;\n    }\n    \n    console.log(\"🔌 Connecting to WebSocket:\", this.url);\n    try {\n      this.socket = new WebSocket(wsUrl);\n      \n      // Add a connection timeout\n      this.connectionTimeoutId = window.setTimeout(() => {\n        if (this.socket && this.socket.readyState === WebSocket.CONNECTING) {\n          console.error(\"⏱️ WebSocket connection timed out\");\n          this.socket.close();\n          // FIXED: Don't trigger error event that might cause logout\n          console.log(\"🛡️ Connection timeout suppressed to prevent logout\");\n        }\n      }, 5000); // 5 second connection timeout\n      \n      this.socket.onopen = () => {\n        console.log(\"✅ WebSocket connected\");\n        if (this.connectionTimeoutId) {\n          clearTimeout(this.connectionTimeoutId);\n          this.connectionTimeoutId = null;\n        }\n        this.reconnectAttempts = 0;\n        this.emit('open'); // Emit open event for hooks\n        this.emit('connected'); // Emit connected event for slice\n        \n        // Send authentication message if needed\n        if (hasAuth) {\n          this.sendMessage({\n            type: 'authenticate',\n            token: token\n          });\n        }\n      };\n      \n      this.socket.onclose = (event) => {\n        console.log(\"👋 WebSocket closed:\", event);\n        \n        // FIXED: Only emit standard close event, not auth errors\n        // Prevent emitting 'close' from triggering reauth or logout\n        this.emit('disconnected'); // Emit disconnected event for slice\n        \n        // Only log the close, don't emit to avoid logout\n        console.log(`WebSocket closed with code ${event.code}: ${event.reason || 'No reason'}`);\n        \n        // Handle reconnect\n        this.handleReconnect();\n      };\n      \n      this.socket.onerror = (event) => {\n        console.error(\"❌ WebSocket error:\", event);\n        \n        // FIXED: Don't emit error events that might cause logout\n        if (this.preventLogout) {\n          console.log(\"🛡️ WebSocket error suppressed to prevent logout\");\n        } else {\n          this.emit('error', event);\n        }\n      };\n      \n      this.socket.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          \n          // Handle authentication response\n          if (data.type === 'auth_response') {\n            this.authenticated = data.success;\n            if (!data.success) {\n              console.error(\"🚨 WebSocket authentication failed:\", data.message);\n              \n              // FIXED: Don't emit auth_failed if we're preventing logout\n              if (!this.preventLogout) {\n                this.emit('auth_failed', data.message);\n              } else {\n                console.log(\"🛡️ Auth failure suppressed to prevent logout\");\n              }\n            } else {\n              console.log(\"✅ WebSocket authenticated successfully\");\n              this.emit('auth_success');\n            }\n          } else {\n            // FIXED: Check for nethogs errors and suppress them\n            if (data.error && typeof data.error === 'string' && \n                data.error.toLowerCase().includes('nethogs')) {\n              console.warn(\"⚠️ Nethogs error detected and suppressed:\", data.error);\n              return; // Don't pass nethogs errors to listeners\n            }\n            \n            // Pass other messages to listeners\n            this.emit('message', data);\n          }\n        } catch (err) {\n          console.error(\"❌ Error parsing message:\", err);\n        }\n      };\n      \n      return true;\n    } catch (error) {\n      console.error(\"❌ Error connecting to WebSocket:\", error);\n      \n      // FIXED: Don't emit errors that might trigger logout\n      if (!this.preventLogout) {\n        this.emit('error', error);\n      } else {\n        console.log(\"🛡️ Connection error suppressed to prevent logout\");\n      }\n      return false;\n    }\n  }\n\n  // Disconnect from the WebSocket server\n  public disconnect(): void {\n    if (this.socket) {\n      this.socket.close();\n      this.socket = null;\n    }\n    if (this.connectionTimeoutId) {\n      clearTimeout(this.connectionTimeoutId);\n      this.connectionTimeoutId = null;\n    }\n    console.log(\"🔌 WebSocket disconnected\");\n  }\n\n  // Check if websocket is connected\n  public isConnected(): boolean {\n    return this.socket?.readyState === WebSocket.OPEN;\n  }\n  \n  // Check if websocket is authenticated\n  public isAuthenticated(): boolean {\n    return this.isConnected() && this.authenticated;\n  }\n\n  // Send a message through the WebSocket\n  public sendMessage(message: any): void {\n    if (this.socket?.readyState === WebSocket.OPEN) {\n      const messageStr = typeof message === 'string' ? message : JSON.stringify(message);\n      this.socket.send(messageStr);\n      console.log(\"📤 WebSocket message sent:\", typeof message === 'object' ? {...message, token: '[REDACTED]'} : message);\n    } else {\n      console.error(\"❌ Cannot send message: WebSocket not connected\");\n      // Auto-connect if possible\n      if (!this.socket || this.socket.readyState === WebSocket.CLOSED) {\n        console.log(\"🔄 Auto-reconnecting WebSocket...\");\n        const connected = this.connect();\n        if (connected) {\n          // Queue message to be sent after connection\n          this.once('open', () => {\n            this.sendMessage(message);\n          });\n        }\n      }\n    }\n  }\n\n  // Add an event listener\n  public on(event: string, callback: (...args: any[]) => void): void {\n    if (!this.listeners[event]) {\n      this.listeners[event] = [];\n    }\n    this.listeners[event].push(callback);\n  }\n  \n  // Add a one-time event listener\n  public once(event: string, callback: (...args: any[]) => void): void {\n    const onceWrapper = (...args: any[]) => {\n      this.off(event, onceWrapper);\n      callback(...args);\n    };\n    this.on(event, onceWrapper);\n  }\n\n  // Remove an event listener\n  public off(event: string, callback: (...args: any[]) => void): void {\n    if (!this.listeners[event]) return;\n    this.listeners[event] = this.listeners[event].filter(cb => cb !== callback);\n  }\n\n  // Emit an event to all listeners\n  private emit(event: string, ...args: any[]): void {\n    // FIXED: Don't emit auth_failed or error events if preventLogout is true\n    if (this.preventLogout && (event === 'auth_failed' || event === 'error')) {\n      console.log(`🛡️ Prevented emitting ${event} event to avoid logout`);\n      return;\n    }\n    \n    if (!this.listeners[event]) return;\n    for (const callback of this.listeners[event]) {\n      try {\n        callback(...args);\n      } catch (e) {\n        console.error(`❌ Error in ${event} listener:`, e);\n      }\n    }\n  }\n\n  // Reset connection state\n  public reset(): void {\n    this.disconnect();\n    this.reconnectAttempts = 0;\n    this.authenticated = false;\n  }\n  \n  // Explicitly reconnect with fresh authentication\n  public reconnect(): void {\n    this.reset();\n    this.connect();\n  }\n\n  // Attempt to reconnect with exponential backoff\n  private handleReconnect(): void {\n    if (this.reconnectAttempts >= this.MAX_ATTEMPTS) {\n      console.error(\"❌ Max reconnection attempts reached\");\n      \n      // FIXED: Don't emit error that might trigger logout\n      if (!this.preventLogout) {\n        this.emit('error', new Error(\"Failed to reconnect after maximum attempts\"));\n      } else {\n        console.log(\"🛡️ Max retries error suppressed to prevent logout\");\n      }\n      \n      this.emit('max_retries');\n      return;\n    }\n    \n    this.reconnectAttempts++;\n    const delay = Math.min(1000 * Math.pow(2, this.reconnectAttempts), 30000);\n    \n    console.log(`🔄 Attempting to reconnect in ${delay}ms (attempt ${this.reconnectAttempts}/${this.MAX_ATTEMPTS})...`);\n    \n    if (this.connectionTimeoutId) {\n      clearTimeout(this.connectionTimeoutId);\n    }\n    \n    this.connectionTimeoutId = window.setTimeout(() => {\n      this.connect();\n    }, delay);\n  }\n  \n  // ADDED: Control logout prevention\n  public setPreventLogout(value: boolean): void {\n    this.preventLogout = value;\n    console.log(`WebSocket logout prevention ${value ? 'enabled' : 'disabled'}`);\n  }\n}\n\n// Export a singleton instance\nconst websocketService = new WebSocketService();\n\n// FIXED: Enable logout prevention by default\nwebsocketService.setPreventLogout(true);\n\nexport default websocketService;","// src/hooks/useMetricsWebSocket.ts\nimport { useEffect, useCallback, useRef } from 'react';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { updateMetrics, setWebSocketError, setConnectionStatus } from '../store/slices/metricsSlice';\nimport { useToast } from '../components/common/Toast';\nimport websocketService from '../utils/websocketService';\n\nexport const useMetricsWebSocket = () => {\n  const dispatch = useAppDispatch();\n  const { useWebSocket } = useAppSelector((state) => state.metrics);\n  const { isAuthenticated } = useAppSelector((state) => state.auth);\n  const toast = useToast();\n  const isInitializedRef = useRef(false);\n  \n  // Handle incoming WebSocket messages\n  const handleMessage = useCallback((message: any) => {\n    try {\n      if (message && message.type === 'system_metrics' && message.data) {\n        dispatch(updateMetrics(message.data));\n      } else if (message && message.type === 'auth_required') {\n        console.warn('🔐 WebSocket requires authentication');\n        // If we receive an auth_required message, we need to reconnect with token\n        websocketService.reconnect();\n      }\n    } catch (error) {\n      console.error('❌ Error processing WebSocket message:', error);\n    }\n  }, [dispatch]);\n\n  // Reconnect callback\n  const reconnect = useCallback(() => {\n    console.log('🦔 Sir Hawkington: Manually reconnecting WebSocket');\n    dispatch(setConnectionStatus('connecting'));\n    websocketService.reconnect();\n  }, [dispatch]);\n\n  // Initialize WebSocket connection\n  useEffect(() => {\n    // Prevent multiple initializations\n    if (isInitializedRef.current) {\n      return;\n    }\n    \n    if (!useWebSocket) {\n      console.log('🚫 WebSocket connection disabled via useWebSocket flag');\n      return;\n    }\n    \n    console.log('🚀 Initializing WebSocket connection');\n    isInitializedRef.current = true;\n    dispatch(setConnectionStatus('connecting'));\n    \n    // Set up event listeners\n    const onOpen = () => {\n      console.log('✅ WebSocket connected');\n      dispatch(setConnectionStatus('connected'));\n      dispatch(setWebSocketError(null));\n      toast.success('Connected: Real-time updates enabled');\n    };\n\n    const onClose = (code?: number, reason?: string) => {\n      console.log(`👋 WebSocket disconnected: ${code} - ${reason || 'No reason provided'}`);\n      dispatch(setConnectionStatus('disconnected'));\n      \n      // CRITICAL FIX: Only treat specific codes as auth errors!\n      // Most disconnections should NOT trigger logout!\n      if (code === 1008 && reason && reason.toLowerCase().includes('auth')) {\n        console.warn('⚠️ Authentication specific disconnect code received');\n        dispatch(setWebSocketError('Authentication error'));\n        toast.error('Authentication error: Please login again');\n      } else {\n        // Regular disconnection - just update status, DON'T set error\n        // This prevents triggering logout on normal disconnections\n        dispatch(setWebSocketError(null));\n        console.log('Regular disconnection, will attempt to reconnect automatically');\n      }\n    };\n\n    const onError = (event: any) => {\n      // CRITICAL FIX: Don't treat all errors as authentication issues\n      let errorMessage = 'Connection issue';\n      \n      if (event instanceof Error) {\n        errorMessage = event.message;\n      } else if (typeof event === 'object' && event !== null && 'type' in event) {\n        errorMessage = `WebSocket error: ${event.type}`;\n      }\n      \n      console.error('❌ WebSocket error:', errorMessage);\n      \n      // Only set connection status, not error\n      dispatch(setConnectionStatus('error'));\n      \n      // Only show toast, don't set error state that might trigger logout\n      toast.error(`Connection issue. Will retry automatically.`);\n    };\n    \n    const onAuthFailed = (message: string) => {\n      console.error('🚨 WebSocket authentication failed:', message);\n      // This is definitely an auth error\n      dispatch(setWebSocketError(`Authentication failed: ${message}`));\n      toast.error(`Authentication failed: ${message}`);\n    };\n    \n    const onAuthSuccess = () => {\n      console.log('✅ WebSocket authenticated successfully');\n      toast.success('Authenticated: Full metrics access enabled');\n    };\n\n    // Add event listeners\n    websocketService.on('open', onOpen);\n    websocketService.on('close', onClose);\n    websocketService.on('error', onError);\n    websocketService.on('message', handleMessage);\n    websocketService.on('auth_failed', onAuthFailed);\n    websocketService.on('auth_success', onAuthSuccess);\n    \n    // Connect to WebSocket - only if we're authenticated\n    if (isAuthenticated) {\n      websocketService.connect();\n    } else {\n      console.log('🔒 Not authenticated, delaying WebSocket connection');\n      dispatch(setConnectionStatus('disconnected'));\n    }\n\n    // Clean up on unmount\n    return () => {\n      console.log('🧹 Cleaning up WebSocket connection...');\n      websocketService.off('open', onOpen);\n      websocketService.off('close', onClose);\n      websocketService.off('error', onError);\n      websocketService.off('message', handleMessage);\n      websocketService.off('auth_failed', onAuthFailed);\n      websocketService.off('auth_success', onAuthSuccess);\n      \n      // Only disconnect if explicitly told to\n      if (!useWebSocket) {\n        websocketService.disconnect();\n      }\n    };\n  }, [useWebSocket, isAuthenticated, dispatch, toast, handleMessage]);\n\n  // Reconnect when authentication state changes\n  useEffect(() => {\n    // Only attempt to reconnect if previously disconnected and now authenticated\n    if (isAuthenticated && useWebSocket) {\n      console.log('🔐 Authentication state changed, reconnecting WebSocket...');\n      websocketService.reconnect();\n    }\n  }, [isAuthenticated, useWebSocket]);\n\n  // Get connection status from Redux store\n  const isConnected = useAppSelector(state => state.metrics.connectionStatus === 'connected');\n  const connectionError = useAppSelector(state => state.metrics.error);\n\n  return {\n    isConnected,\n    error: connectionError,\n    reconnect,\n    disconnect: () => websocketService.disconnect()\n  };\n};\n\nexport default useMetricsWebSocket;","// components/dashboard/Dashboard/SystemStatus/SystemStatus.tsx\nimport React, { useState, useEffect } from 'react';\nimport './SystemStatus.css';\n\nexport interface SystemStatusProps {\n    loading: boolean;\n    error: string | null;\n}\n\nexport const SystemStatus: React.FC<SystemStatusProps> = ({ loading, error }) => {\n    const [messageIndex, setMessageIndex] = useState(0);\n    \n    // Collection of humorous messages featuring all project characters\n    const statusMessages = [\n        \"🧐🎩 Sir Hawkington: 'Your CPU is performing most admirably, old chap!'\" ,\n        \"🐌💊 The Meth Snail: 'HOLY SHIT YOUR RAM IS FUCKING FLYING DUDE!'\" ,\n        \"🐹🔧 The Hamsters: 'WebSockets patched with fresh duct tape, sir!'\" ,\n        \"🥢😰 The Stick: 'Anxiety levels at 42%. That's... acceptable.'\" ,\n        \"👤👽 Quantum Shadow People: 'Your router would work better if you put it upside down in jello.'\" ,\n        \"🕹️💾 VIC-20: '01001000 01100101 01101100 01101100 01101111 00100000 01100110 01110101 01100011 01101011 01100101 01110010'\" ,\n        \"🧐🎩 Sir Hawkington: 'I say, these metrics are looking positively scrumptious!'\" ,\n        \"🐌💊 The Meth Snail: 'OPTIMIZING SO HARD I'M SEEING SOUNDS!'\" ,\n        \"🐹🔧 The Hamsters: 'We've replaced the wheel with a fidget spinner. INNOVATION!'\" ,\n        \"🥢😰 The Stick: 'Regulatory compliance at 0%. Perfect.'\" ,\n        \"👤👽 Quantum Shadow People: 'We've been trying to reach you about your router's extended warranty.'\" ,\n        \"🕹️💾 VIC-20: 'Loading... Please insert cassette tape and wait 45 minutes.'\" ,\n        \"🧐🎩 Sir Hawkington: 'Your disk usage is quite distinguished, if I do say so myself.'\" ,\n        \"🐌💊 The Meth Snail: 'I LICKED YOUR HARD DRIVE AND NOW I CAN TASTE COLORS!'\" ,\n        \"🐹🔧 The Hamsters: 'Network packets delivered via tiny hamster motorcycles.'\" ,\n        \"🥢😰 The Stick: 'Existential dread minimized. For now.'\" ,\n        \"👤👽 Quantum Shadow People: 'Have you tried putting your entire computer in rice?'\" ,\n        \"🕹️💾 VIC-20: 'ERROR: NOT ENOUGH MEMORY. NEED 3 MORE KB.'\" ,\n        \"🧐🎩 Sir Hawkington: 'I've applied a fresh coat of digital wax to your CPU cache, sir!'\" ,\n        \"🐌💊 The Meth Snail: 'YOUR MEMORY LEAKS TASTE LIKE PURPLE LIGHTNING!'\" ,\n        \"🐹🔧 The Hamsters: 'Running in circles has never been more efficient!'\" ,\n        \"🥢😰 The Stick: 'I've successfully suppressed 17 kernel panics today.'\" ,\n        \"👤👽 Quantum Shadow People: 'We've replaced your DNS with interdimensional portals.'\" ,\n        \"🕹️💾 VIC-20: 'POKE 53280,0 - BACKGROUND SET TO VOID OF DESPAIR'\" ,\n        \"🧐🎩 Sir Hawkington: 'Your bandwidth is looking particularly dapper today!'\" ,\n        \"🐌💊 The Meth Snail: 'DEFRAGMENTING AT THE SPEED OF COCAINE!'\" ,\n        \"🐹🔧 The Hamsters: 'Wheel spinning at 420 RPM - nice.'\" ,\n        \"🥢😰 The Stick: 'Existential buffer overflow successfully contained.'\" ,\n        \"👤👽 Quantum Shadow People: 'Your IP address looks better in hexadecimal.'\" ,\n        \"🕹️💾 VIC-20: 'SYNTAX ERROR IN LINE 42: LIFE HAS NO MEANING'\" ,\n    ];\n    \n    useEffect(() => {\n        // Rotate through messages every 4 seconds\n        const intervalId = setInterval(() => {\n            setMessageIndex((prevIndex) => (prevIndex + 1) % statusMessages.length);\n        }, 4000);\n        \n        return () => clearInterval(intervalId);\n    }, []);\n    \n    // Randomize the initial message\n    useEffect(() => {\n        setMessageIndex(Math.floor(Math.random() * statusMessages.length));\n    }, []);\n    \n    const getStatusClass = () => {\n        if (loading) return 'status-loading';\n        if (error) return 'status-error';\n        return 'status-active';\n    };\n\n    const getStatusMessage = () => {\n        if (loading) {\n            return (\n                <span className=\"status-message loading\">\n                    <i className=\"fas fa-sync-alt\"></i> Optimizing your shit...\n                </span>\n            );\n        }\n        if (error) {\n            return (\n                <span className=\"status-message error\">\n                    <i className=\"fas fa-exclamation-triangle\"></i> {error}\n                </span>\n            );\n        }\n        \n        // Parse the message to separate emojis from text\n        const currentMessage = statusMessages[messageIndex];\n        const emojiMatch = currentMessage.match(/^([\\p{Emoji}\\p{Emoji_Presentation}\\p{Emoji_Modifier}\\p{Emoji_Component}\\p{Emoji_Modifier_Base}]+)/u);\n        const messageWithoutEmoji = emojiMatch ? currentMessage.substring(emojiMatch[0].length) : currentMessage;\n        \n        return (\n            <span className=\"status-message active ticker-message\">\n                <i className=\"fas fa-check-circle\"></i> \n                {emojiMatch && <span className=\"character-emoji\">{emojiMatch[0]}</span>}\n                {messageWithoutEmoji}\n            </span>\n        );\n    };\n\n    return (\n        <div className=\"system-status\">\n            <span className=\"status-indicator\">\n                <span className={`status-dot ${getStatusClass()}`} />\n                <span className=\"status-text\">\n                    {getStatusMessage()}\n                </span>\n            </span>\n        </div>\n    );\n};\nexport default SystemStatus;","import React from 'react';\nimport './Card.css';\n\n\nexport type CardVariant = 'default' | 'primary' | 'secondary' | 'accent' | 'cyber';\nexport type CardElevation = 'flat' | 'low' | 'medium' | 'high';\n\nexport interface CardProps {\n  /** Card variant that determines color scheme */\n  variant?: CardVariant;\n  /** Card elevation that determines shadow depth */\n  elevation?: CardElevation;\n  /** Whether the card has a border */\n  bordered?: boolean;\n  /** Whether the card has a gradient border */\n  gradientBorder?: boolean;\n  /** Whether the card has a glow effect */\n  glow?: boolean;\n  /** Whether the card has a glass effect (backdrop blur) */\n  glass?: boolean;\n  /** Whether the card is interactive (has hover effects) */\n  interactive?: boolean;\n  /** Card header content */\n  header?: React.ReactNode;\n  /** Card footer content */\n  footer?: React.ReactNode;\n  /** Additional CSS class names */\n  className?: string;\n  /** Card content */\n  children: React.ReactNode;\n  /** Additional props */\n  [x: string]: any;\n}\n\n/**\n * Card component for System Rebellion UI\n * \n * A customizable card component that follows the System Rebellion design system.\n * Supports various variants, elevations, and styles.\n */\nexport const Card: React.FC<CardProps> = ({\n  variant = 'default',\n  elevation = 'low',\n  bordered = false,\n  gradientBorder = false,\n  glow = false,\n  glass = false,\n  interactive = false,\n  header,\n  footer,\n  className = '',\n  children,\n  ...props\n}) => {\n  // Build the class names based on props\n  const cardClasses = [\n    'sr-card',\n    `sr-card-${variant}`,\n    `sr-card-elevation-${elevation}`,\n    bordered ? 'sr-card-bordered' : '',\n    gradientBorder ? 'sr-card-gradient-border' : '',\n    glow ? 'sr-card-glow' : '',\n    glass ? 'sr-card-glass' : '',\n    interactive ? 'sr-card-interactive' : '',\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div className={cardClasses} {...props}>\n      {header && <div className=\"sr-card-header\">{header}</div>}\n      <div className=\"sr-card-body\">{children}</div>\n      {footer && <div className=\"sr-card-footer\">{footer}</div>}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport './Badge.css';\n\n\nexport type BadgeVariant = 'primary' | 'secondary' | 'accent' | 'success' | 'warning' | 'danger' | 'cyber' | 'info';\nexport type BadgeSize = 'sm' | 'md' | 'lg';\n\nexport interface BadgeProps {\n  /** Badge variant that determines color scheme */\n  variant?: BadgeVariant;\n  /** Badge size */\n  size?: BadgeSize;\n  /** Whether the badge is outlined */\n  outlined?: boolean;\n  /** Whether the badge is rounded (pill shape) */\n  rounded?: boolean;\n  /** Whether the badge has a glow effect */\n  glow?: boolean;\n  /** Whether the badge is pulsing */\n  pulse?: boolean;\n  /** Additional CSS class names */\n  className?: string;\n  /** Badge content */\n  children: React.ReactNode;\n  /** Additional props */\n  [x: string]: any;\n}\n\n/**\n * Badge component for System Rebellion UI\n * \n * A customizable badge component that follows the System Rebellion design system.\n * Supports various variants, sizes, and styles.\n */\nexport const Badge: React.FC<BadgeProps> = ({\n  variant = 'primary',\n  size = 'md',\n  outlined = false,\n  rounded = false,\n  glow = false,\n  pulse = false,\n  className = '',\n  children,\n  ...props\n}) => {\n  // Build the class names based on props\n  const badgeClasses = [\n    'sr-badge',\n    `sr-badge-${variant}`,\n    `sr-badge-${size}`,\n    outlined ? 'sr-badge-outlined' : '',\n    rounded ? 'sr-badge-rounded' : '',\n    glow ? 'sr-badge-glow' : '',\n    pulse ? 'sr-badge-pulse' : '',\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <span className={badgeClasses} {...props}>\n      {children}\n    </span>\n  );\n};\n\nexport default Badge;\n","import React from 'react';\nimport './MetricsCard.css';\nimport { Card } from '../Card';\nimport { Badge } from '../Badge';\n// Using tokens for consistent styling\n\n\nexport type MetricStatus = 'normal' | 'warning' | 'critical' | 'optimized';\nexport type MetricTrend = 'up' | 'down' | 'stable';\n\nexport interface MetricsCardProps {\n  /** Title of the metric */\n  title: string;\n  /** Current value of the metric */\n  value: string | number;\n  /** Unit of measurement (e.g., %, MB, ms) */\n  unit?: string;\n  /** Previous value for comparison */\n  previousValue?: string | number;\n  /** Percentage change from previous value */\n  changePercentage?: number;\n  /** Status of the metric */\n  status?: MetricStatus;\n  /** Trend direction of the metric */\n  trend?: MetricTrend;\n  /** Whether the metric card is updating/loading */\n  updating?: boolean;\n  /** Timestamp of the last update */\n  lastUpdated?: string;\n  /** Whether to show the sparkline chart */\n  showSparkline?: boolean;\n  /** Data points for the sparkline chart */\n  sparklineData?: number[];\n  /** Icon to display */\n  icon?: React.ReactNode;\n  /** Additional CSS class names */\n  className?: string;\n  /** Additional props */\n  [x: string]: any;\n}\n\n/**\n * MetricsCard component for System Rebellion UI\n * \n * A specialized card component for displaying system metrics with cyberpunk styling.\n * Includes status indicators, trend visualization, and optional sparkline.\n */\nexport const MetricsCard: React.FC<MetricsCardProps> = ({\n  title,\n  value,\n  unit = '',\n  previousValue,\n  changePercentage,\n  status = 'normal',\n  trend = 'stable',\n  updating = false,\n  lastUpdated,\n  showSparkline = false,\n  sparklineData = [],\n  icon,\n  className = '',\n  ...props\n}) => {\n  // Get status badge variant based on status\n  const getStatusVariant = () => {\n    switch (status) {\n      case 'normal':\n        return 'info';\n      case 'warning':\n        return 'warning';\n      case 'critical':\n        return 'danger';\n      case 'optimized':\n        return 'success';\n      default:\n        return 'info';\n    }\n  };\n\n  // Get trend icon based on trend\n  const getTrendIcon = () => {\n    switch (trend) {\n      case 'up':\n        return '↑';\n      case 'down':\n        return '↓';\n      case 'stable':\n        return '→';\n      default:\n        return '→';\n    }\n  };\n\n  // Get trend class based on trend and context\n  const getTrendClass = () => {\n    // For some metrics, up is good (e.g., available memory)\n    // For others, down is good (e.g., CPU usage)\n    // This is a simplified example\n    if (trend === 'stable') return 'sr-metrics-trend-stable';\n    \n    if (status === 'critical') {\n      return 'sr-metrics-trend-negative';\n    } else if (status === 'optimized') {\n      return 'sr-metrics-trend-positive';\n    } else {\n      return trend === 'up' ? 'sr-metrics-trend-up' : 'sr-metrics-trend-down';\n    }\n  };\n\n  // Build the class names\n  const metricsClasses = [\n    'sr-metrics-card',\n    `sr-metrics-status-${status}`,\n    updating ? 'sr-metrics-updating' : '',\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <Card \n      variant=\"default\" \n      elevation=\"low\" \n      glass\n      className={metricsClasses}\n      {...props}\n    >\n      <div className=\"sr-metrics-header\">\n        <div className=\"sr-metrics-title\">\n          {icon && <span className=\"sr-metrics-icon\">{icon}</span>}\n          <span>{title}</span>\n        </div>\n        <Badge \n          variant={getStatusVariant()} \n          size=\"sm\" \n          rounded \n          glow={status === 'critical'}\n          pulse={status === 'critical'}\n        >\n          {status}\n        </Badge>\n      </div>\n      \n      <div className=\"sr-metrics-value-container\">\n        <div className=\"sr-metrics-value\">\n          {value}\n          {unit && <span className=\"sr-metrics-unit\">{unit}</span>}\n        </div>\n        \n        {(previousValue !== undefined || changePercentage !== undefined) && (\n          <div className={`sr-metrics-trend ${getTrendClass()}`}>\n            <span className=\"sr-metrics-trend-icon\">{getTrendIcon()}</span>\n            {changePercentage !== undefined && (\n              <span className=\"sr-metrics-change-percentage\">\n                {Math.abs(changePercentage)}%\n              </span>\n            )}\n          </div>\n        )}\n      </div>\n      \n      {showSparkline && sparklineData.length > 0 && (\n        <div className=\"sr-metrics-sparkline\">\n          {/* Simple representation of sparkline */}\n          <div className=\"sr-metrics-sparkline-visual\">\n            {sparklineData.map((point, index) => (\n              <div \n                key={index} \n                className=\"sr-metrics-sparkline-point\" \n                style={{ height: `${point}%` }}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n      \n      {lastUpdated && (\n        <div className=\"sr-metrics-last-updated\">\n          Updated: {lastUpdated}\n        </div>\n      )}\n    </Card>\n  );\n};\n\nexport default MetricsCard;\n","import React, { useState, useEffect } from 'react';\nimport './Tabs.css';\n\nexport interface TabProps {\n  id: string;\n  label: string;\n  children: React.ReactNode;\n}\n\nexport interface TabsProps {\n  activeTab?: string;\n  onChange?: (tabId: string) => void;\n  children: React.ReactNode;\n}\n\nexport interface TabPanelProps {\n  id: string;\n  active: boolean;\n  children: React.ReactNode;\n}\n\nexport const Tab: React.FC<TabProps> = ({ children }) => {\n  return <>{children}</>;\n};\n\nexport const TabPanel: React.FC<TabPanelProps> = ({ active, children }) => {\n  if (!active) return null;\n  return <div className=\"sr-tab-panel\">{children}</div>;\n};\n\nexport const Tabs: React.FC<TabsProps> = ({ activeTab: externalActiveTab, onChange, children }) => {\n  // Get all tabs from children\n  const tabs = React.Children.toArray(children).filter(\n    (child) => React.isValidElement(child) && child.type === Tab\n  ) as React.ReactElement<TabProps>[];\n  \n  // Set initial active tab\n  const [internalActiveTab, setInternalActiveTab] = useState<string>(\n    externalActiveTab || (tabs.length > 0 ? tabs[0].props.id : '')\n  );\n  \n  // Sync with external active tab if provided\n  useEffect(() => {\n    if (externalActiveTab !== undefined) {\n      setInternalActiveTab(externalActiveTab);\n    }\n  }, [externalActiveTab]);\n  \n  // Handle tab click\n  const handleTabClick = (tabId: string) => {\n    if (onChange) {\n      onChange(tabId);\n    } else {\n      setInternalActiveTab(tabId);\n    }\n  };\n  \n  // Get current active tab\n  const activeTabId = externalActiveTab !== undefined ? externalActiveTab : internalActiveTab;\n  \n  return (\n    <div className=\"sr-tabs-container\">\n      <div className=\"sr-tabs-header\">\n        {tabs.map((tab) => (\n          <button\n            key={tab.props.id}\n            className={`sr-tab ${activeTabId === tab.props.id ? 'active' : ''}`}\n            onClick={() => handleTabClick(tab.props.id)}\n            role=\"tab\"\n            aria-selected={activeTabId === tab.props.id}\n            aria-controls={`panel-${tab.props.id}`}\n            id={`tab-${tab.props.id}`}\n          >\n            {tab.props.label}\n          </button>\n        ))}\n      </div>\n      <div className=\"sr-tabs-content\">\n        {tabs.map((tab) => (\n          <div\n            key={tab.props.id}\n            role=\"tabpanel\"\n            id={`panel-${tab.props.id}`}\n            aria-labelledby={`tab-${tab.props.id}`}\n            hidden={activeTabId !== tab.props.id}\n          >\n            {activeTabId === tab.props.id && tab.props.children}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import React, { useState } from 'react';\nimport { XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid, Area, AreaChart, BarChart, Bar } from 'recharts';\nimport { useAppSelector } from '../../../../store/hooks';\nimport { RootState } from '../../../../store/store';\nimport { SystemMetric } from '../../../../types/metrics';\nimport { MetricsCard, MetricStatus } from '../../../../design-system/components/MetricsCard';\nimport { Tabs, Tab } from '../../../../design-system/components/Tabs/Tabs';\nimport { Card } from '../../../../design-system/components/Card/Card';\n\n // Interface for CPU process\ninterface CPUProcess {\n  name: string;\n  pid: number;\n  cpu_percent: number;\n  memory_percent: number;\n}\n\n // Interface for CPU details\ninterface CPUDetails {\n  cores: {\n    logical: number;\n    physical: number;\n  };\n  frequency: {\n    current: number;\n    min: number;\n    max: number;\n  };\n  temperature: number;\n  per_core_usage: number[];\n}\n\nexport const CPUMetric: React.FC = () => {\n     // Redux state\n    const currentMetric = useAppSelector((state: RootState) => state.metrics.current) as SystemMetric | null;\n    const historicalMetrics = useAppSelector((state: RootState) => state.metrics.historical || []) as SystemMetric[];\n    const isLoading = useAppSelector((state: RootState) => state.metrics.loading);\n    \n     // Tab state\n    const [activeTab, setActiveTab] = useState<string>('overview');\n    \n     // CPU metrics state\n    const cpuUsage = currentMetric?.cpu_usage ?? 0;\n    const cpuDetails = currentMetric?.cpu_usage as CPUDetails | undefined;\n    const topProcesses = currentMetric?.cpu_usage as unknown as CPUProcess[] ?? [];\n    const cpuTemp = cpuDetails?.temperature ?? null;\n    const cpuFreq = {\n        current: cpuDetails?.frequency?.current ?? null,\n        min: cpuDetails?.frequency?.min ?? null,\n        max: cpuDetails?.frequency?.max ?? null\n    };\n    \n     // Chart data\n    const chartData = (historicalMetrics || []).map(metric => ({\n        timestamp: metric.timestamp,\n        usage: metric.cpu_usage ?? 0\n    }));\n    \n     // Generate core usage data for bar chart\n    const coreData = cpuDetails?.per_core_usage?.map((usage: number, index: number) => ({\n        name: `Core ${index + 1}`,\n         usage\n    })) ?? [];\n\n    \n\n     // Calculate CPU status\n    const getStatus = (usage: number): MetricStatus => {\n        if (usage >= 90) return 'critical';\n        if (usage >= 70) return 'warning';\n        return 'normal';\n    };\n\n     // Calculate trend\n    const getTrend = (current: number, previous: number): 'up' | 'down' | 'stable' => {\n        if (current > previous + 5) return 'up';\n        if (current < previous - 5) return 'down';\n        return 'stable';\n    };\n\n     // Get previous value from historical metrics\n    const previousValue = historicalMetrics.length > 1 ? \n        historicalMetrics[historicalMetrics.length - 2].cpu_usage ?? cpuUsage : \n        cpuUsage;\n\n     // Calculate change percentage (avoid division by zero)\n    const changePercentage = previousValue !== 0 ? \n        ((cpuUsage - previousValue) / previousValue) * 100 : \n        0;\n\n    if (isLoading) {\n        return <MetricsCard title=\"CPU Usage\" value=\"--\" unit=\"%\" updating={true} />;\n    }\n\n     //      Render the overview tab\n    const renderOverviewTab = () => (\n        <div className=\"overview-content\">\n            <div className=\"chart-container\">\n                <ResponsiveContainer width=\"100%\" height={250}>\n                    <AreaChart data={chartData}>\n                        <defs>\n                            <linearGradient id=\"cpuGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"5%\" stopColor=\"#3a86ff\" stopOpacity={0.8}/>\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--border)\" />\n                        <XAxis \n                            dataKey=\"timestamp\"\n                            tickFormatter={(time: string) => new Date(time).toLocaleTimeString()}\n                            stroke=\"var(--text-secondary)\"\n                        />\n                        <YAxis \n                            domain={[0, 100]}\n                            tickFormatter={(value: number) => `${value}%`}\n                            stroke=\"var(--text-secondary)\"\n                        />\n                        <Tooltip \n                            formatter={(value: number) => [`${Number(value).toFixed(1)}%`, 'CPU Usage']}\n                            labelFormatter={(label: string) => new Date(label).toLocaleString()}\n                            contentStyle={{ background: 'var(--background)', border: 'none', borderRadius: '8px' }}\n                            itemStyle={{ color: 'var(--primary)' }}\n                            labelStyle={{ color: 'var(--text-primary)' }}\n                        />\n                        <Area \n                            type=\"monotone\" \n                            dataKey=\"usage\" \n                            stroke=\"var(--primary)\" \n                            strokeWidth={2}\n                            fillOpacity={1}\n                            fill=\"url(#cpuGradient)\"\n                            activeDot={{ r: 6, strokeWidth: 0, fill: 'var(--primary)' }}\n                            isAnimationActive={true}\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </div>\n    );\n\n\n\n    function renderCoresTab(): React.ReactNode {\n        return (\n            <div className=\"cores-content\">\n                <h3>Core Usage</h3>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                    <BarChart data={coreData}>\n                        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--border)\" />\n                        <XAxis dataKey=\"name\" stroke=\"var(--text-secondary)\" />\n                        <YAxis domain={[0, 100]} tickFormatter={(value: number) => `${value}%`} stroke=\"var(--text-secondary)\" />\n                        <Tooltip />\n                        <Bar dataKey=\"usage\" fill=\"var(--primary)\" radius={[4, 4, 0, 0]} />\n                    </BarChart>\n                </ResponsiveContainer>\n            </div>\n        );\n    }\n\n    function renderProcessesTab(): React.ReactNode {\n        return (\n            <div className=\"processes-content\">\n                <h3>Top CPU Processes</h3>\n                <div className=\"process-list\">\n                    {topProcesses.length > 0 ? (\n                        topProcesses.map((process: CPUProcess, index: number) => (\n                            <Card key={index} className=\"process-card\">\n                                <div className=\"process-name\">{process.name}</div>\n                                <div className=\"process-usage\">{process.cpu_percent.toFixed(1)}%</div>\n                                <div className=\"process-details\">\n                                    <span>PID: {process.pid}</span>\n                                    <span>Memory: {process.memory_percent.toFixed(1)}%</span>\n                                </div>\n                            </Card>\n                        ))\n                    ) : (\n                        <div className=\"no-data\">No process data available</div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    function renderDetailsTab(): React.ReactNode {\n        return (\n            <div className=\"details-content\">\n                <h3>CPU Details</h3>\n                <div>\n                    <div>Temperature: {cpuTemp !== null ? `${cpuTemp.toFixed(1)}°C` : 'N/A'}</div>\n                    <div>Frequency: {cpuFreq.current ? `${(cpuFreq.current / 1000).toFixed(2)} GHz` : 'N/A'}</div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"cpu-metric\">\n            <MetricsCard\n                title=\"CPU Usage\"\n                value={`${cpuUsage.toFixed(1)}`}\n                unit=\"%\"\n                status={getStatus(cpuUsage)}\n                trend={getTrend(cpuUsage, previousValue)}\n                changePercentage={changePercentage}\n                showSparkline={true}\n                sparklineData={(chartData || []).map(d => d.usage)}\n            >\n                <Tabs activeTab={activeTab} onChange={setActiveTab}>\n                    <Tab id=\"overview\" label=\"Overview\">{renderOverviewTab()}</Tab>\n                    <Tab id=\"cores\" label=\"Cores\">{renderCoresTab()}</Tab>\n                    <Tab id=\"processes\" label=\"Processes\">{renderProcessesTab()}</Tab>\n                    <Tab id=\"details\" label=\"Details\">{renderDetailsTab()}</Tab>\n                </Tabs>\n            </MetricsCard>\n        </div>\n    );\n};\n\nexport default CPUMetric;","// src/components/dashboard/Metrics/MemoryMetric/MemoryMetric.tsx\nimport React from 'react';\nimport { XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid, Area, AreaChart } from 'recharts';\nimport { useAppSelector } from '../../../../store/hooks';\nimport { RootState } from '../../../../store/store';\nimport { MetricsCard } from '../../../../design-system/components/MetricsCard';\nimport { SystemMetric } from '../../../../types/metrics';\n\nexport const MemoryMetric: React.FC = () => {\n    const currentMetric = useAppSelector((state: RootState) => state.metrics.current) as SystemMetric | null;\n    const historicalMetrics = useAppSelector((state: RootState) => state.metrics.historical) as SystemMetric[];\n    const isLoading = useAppSelector((state: RootState) => state.metrics.loading);\n\n    const memoryUsage = currentMetric?.memory_usage ?? 0;\n    const chartData = historicalMetrics;\n\n    // Get previous value from historical metrics\n    const previousValue = historicalMetrics.length > 1 ? \n        historicalMetrics[historicalMetrics.length - 2].memory_usage : \n        memoryUsage;\n\n    // Calculate change percentage (avoid division by zero)\n    const changePercentage = previousValue && previousValue !== 0 ? \n        ((memoryUsage - previousValue) / previousValue) * 100 : \n        0;\n\n    // Calculate status based on memory usage\n    const getStatus = (usage: number) => {\n        if (usage > 90) return 'critical';\n        if (usage > 75) return 'warning';\n        return 'normal';\n    };\n\n    // Calculate trend\n    const getTrend = (current: number, previous: number): 'up' | 'down' | 'stable' => {\n        if (current > previous + 5) return 'up';\n        if (current < previous - 5) return 'down';\n        return 'stable';\n    };\n\n    if (isLoading) {\n        return <MetricsCard title=\"Memory Usage\" value=\"--\" unit=\"%\" updating={true} />;\n    }\n\n    return (\n        <MetricsCard\n            title=\"Memory Usage\"\n            value={memoryUsage.toFixed(1)}\n            unit=\"%\"\n            status={getStatus(memoryUsage)}\n            trend={getTrend(memoryUsage, previousValue)}\n            changePercentage={changePercentage}\n            showSparkline={true}\n            sparklineData={historicalMetrics.map(m => m.memory_usage)}\n        >\n            <ResponsiveContainer width=\"100%\" height={200}>\n                <AreaChart data={chartData}>\n                    <defs>\n                        <linearGradient id=\"memoryGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"var(--primary)\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"var(--primary)\" stopOpacity={0.2}/>\n                        </linearGradient>\n                    </defs>\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--border)\" />\n                    <XAxis \n                        dataKey=\"timestamp\"\n                        tickFormatter={(time: string) => new Date(time).toLocaleTimeString()}\n                        stroke=\"var(--text-secondary)\"\n                    />\n                    <YAxis \n                        domain={[0, 100]}\n                        tickFormatter={(value: number) => `${value}%`}\n                        stroke=\"var(--text-secondary)\"\n                    />\n                    <Tooltip \n                        formatter={(value: number) => [`${Number(value).toFixed(1)}%`, 'Memory Usage']}\n                        labelFormatter={(label: string) => new Date(label).toLocaleString()}\n                        contentStyle={{ background: 'var(--background)', border: 'none', borderRadius: '8px' }}\n                        itemStyle={{ color: 'var(--primary)' }}\n                        labelStyle={{ color: 'var(--text-primary)' }}\n                    />\n                    <Area \n                        type=\"monotone\" \n                        dataKey=\"memory_usage\" \n                        stroke=\"var(--primary)\" \n                        strokeWidth={2}\n                        fillOpacity={1}\n                        fill=\"url(#memoryGradient)\"\n                        activeDot={{ r: 6, strokeWidth: 0, fill: 'var(--primary)' }}\n                        isAnimationActive={true}\n                    />\n                </AreaChart>\n            </ResponsiveContainer>\n        </MetricsCard>\n    );\n};\n\nexport default MemoryMetric;","// src/components/dashboard/Metrics/DiskMetric/DiskMetric.tsx\nimport React from 'react';\nimport { XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid, Area, AreaChart } from 'recharts';\nimport { useAppSelector } from '../../../../store/hooks';\nimport { RootState } from '../../../../store/store';\nimport { MetricsCard } from '../../../../design-system/components/MetricsCard';\nimport { SystemMetric } from '../../../../types/metrics';\n\nexport const DiskMetric: React.FC = () => {\n    const currentMetric = useAppSelector((state: RootState) => state.metrics.current) as SystemMetric | null;\n    const historicalMetrics = useAppSelector((state: RootState) => state.metrics.historical) as SystemMetric[];\n    const isLoading = useAppSelector((state: RootState) => state.metrics.loading);\n\n    const diskUsage = currentMetric?.disk_usage ?? 0;\n    const chartData = historicalMetrics;\n\n    // Get previous value from historical metrics\n    const previousValue = historicalMetrics.length > 1 ? \n        historicalMetrics[historicalMetrics.length - 2].disk_usage : \n        diskUsage;\n\n    // Calculate change percentage (avoid division by zero)\n    const changePercentage = previousValue && previousValue !== 0 ? \n        ((diskUsage - previousValue) / previousValue) * 100 : \n        0;\n\n    // Calculate status based on disk usage\n    const getStatus = (usage: number) => {\n        if (usage > 90) return 'critical';\n        if (usage > 75) return 'warning';\n        return 'normal';\n    };\n\n    // Calculate trend\n    const getTrend = (current: number, previous: number): 'up' | 'down' | 'stable' => {\n        if (current > previous + 5) return 'up';\n        if (current < previous - 5) return 'down';\n        return 'stable';\n    };\n\n    if (isLoading) {\n        return <MetricsCard title=\"Disk Usage\" value=\"--\" unit=\"%\" updating={true} />;\n    }\n\n    return (\n        <MetricsCard\n            title=\"Disk Usage\"\n            value={diskUsage.toFixed(1)}\n            unit=\"%\"\n            status={getStatus(diskUsage)}\n            trend={getTrend(diskUsage, previousValue)}\n            changePercentage={changePercentage}\n            showSparkline={true}\n            sparklineData={historicalMetrics.map(m => m.disk_usage)}\n        >\n            <ResponsiveContainer width=\"100%\" height={200}>\n                <AreaChart data={chartData}>\n                    <defs>\n                        <linearGradient id=\"diskGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"var(--primary)\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"var(--primary)\" stopOpacity={0.2}/>\n                        </linearGradient>\n                    </defs>\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--border)\" />\n                    <XAxis \n                        dataKey=\"timestamp\"\n                        tickFormatter={(time: string) => new Date(time).toLocaleTimeString()}\n                        stroke=\"var(--text-secondary)\"\n                    />\n                    <YAxis \n                        domain={[0, 100]}\n                        tickFormatter={(value: number) => `${value}%`}\n                        stroke=\"var(--text-secondary)\"\n                    />\n                    <Tooltip \n                        formatter={(value: number) => [`${Number(value).toFixed(1)}%`, 'Disk Usage']}\n                        labelFormatter={(label: string) => new Date(label).toLocaleString()}\n                        contentStyle={{ background: 'var(--background)', border: 'none', borderRadius: '8px' }}\n                        itemStyle={{ color: 'var(--primary)' }}\n                        labelStyle={{ color: 'var(--text-primary)' }}\n                    />\n                    <Area \n                        type=\"monotone\" \n                        dataKey=\"disk_usage\" \n                        stroke=\"var(--primary)\" \n                        strokeWidth={2}\n                        fillOpacity={1}\n                        fill=\"url(#diskGradient)\"\n                        activeDot={{ r: 6, strokeWidth: 0, fill: 'var(--primary)' }}\n                        isAnimationActive={true}\n                    />\n                </AreaChart>\n            </ResponsiveContainer>\n        </MetricsCard>\n    );\n};\n\nexport default DiskMetric;","// frontend/src/components/metrics/NetworkMetrics/utils/networkDataProcessor.ts\n\nimport { SystemMetric } from '../../../../types/metrics';\nimport { NetworkInterface, NetworkIOStats, ConnectionQuality, ProtocolStats } from '../tabs/types';\n\ninterface NetworkData {\n  interfaces: NetworkInterface[];\n  io_stats: NetworkIOStats;\n  connection_quality: ConnectionQuality;\n  protocol_stats: ProtocolStats;\n  protocol_breakdown: {\n    web: number;\n    email: number;\n    streaming: number;\n    gaming: number;\n    file_transfer: number;\n    other: number;\n  };\n  top_bandwidth_processes: Array<{\n    name: string;\n    pid: number;\n    upload: number;\n    download: number;\n  }>;\n  dns_metrics?: {\n    query_time_ms: number;\n    [key: string]: any;\n  };\n  internet_metrics?: {\n    isp_latency: number;\n    [key: string]: any;\n  };\n  timestamp: string;\n  [key: string]: any; // Allow additional properties\n}\n\n\n/**\n * Processes raw network data from a system metric into a structured format\n */\nexport function processNetworkData(currentMetric: SystemMetric | null): { \n  networkData: NetworkData | null; \n  error: string | null \n} {\n  if (!currentMetric) {\n    return { networkData: null, error: 'No metrics data available' };\n  }\n  \n  // Find network data in expected locations\n  const rawNetworkData = currentMetric.network || currentMetric.additional?.network_details;\n  \n  if (!rawNetworkData) {\n    return { networkData: null, error: 'No network data found in metrics' };\n  }\n  \n  try {\n    // Check for required data\n    if (!rawNetworkData.io_stats && \n        !(rawNetworkData.bytes_sent !== undefined && \n          rawNetworkData.bytes_recv !== undefined)) {\n      throw new Error('Missing network I/O statistics');\n    }\n    \n    // Process interfaces data which might be in different formats\n    const interfaces = processInterfacesData(rawNetworkData.interfaces);\n    \n    // Build the network data structure from raw data\n    const processedData: NetworkData = {\n      interfaces: interfaces, // Add the processed interfaces\n      timestamp: new Date().toISOString(), // Add default timestamp\n      io_stats: {\n        bytes_sent: rawNetworkData.io_stats?.bytes_sent ?? rawNetworkData.bytes_sent ?? 0,\n        bytes_recv: rawNetworkData.io_stats?.bytes_recv ?? rawNetworkData.bytes_recv ?? 0,\n        sent_rate: rawNetworkData.io_stats?.sent_rate ?? rawNetworkData.sent_rate_bps ?? 0,\n        recv_rate: rawNetworkData.io_stats?.recv_rate ?? rawNetworkData.recv_rate_bps ?? 0\n      },\n      connection_quality: {\n        connection_stability: rawNetworkData.connection_quality?.connection_stability ?? 0,\n        average_latency: rawNetworkData.connection_quality?.average_latency ?? 0,\n        packet_loss_percent: rawNetworkData.connection_quality?.packet_loss_percent ?? 0,\n        jitter: rawNetworkData.connection_quality?.jitter ?? 0,\n        gateway_latency: rawNetworkData.connection_quality?.gateway_latency ?? 0,\n        dns_latency: rawNetworkData.connection_quality?.dns_latency ?? \n                      rawNetworkData.dns_metrics?.query_time_ms ?? 0,\n        internet_latency: rawNetworkData.connection_quality?.internet_latency ?? \n                           rawNetworkData.internet_metrics?.isp_latency ?? 0\n      },\n      protocol_stats: rawNetworkData.protocol_stats || {\n        tcp: { active: 0, established: 0 },\n        udp: { active: 0 },\n        http: { connections: 0 },\n        https: { connections: 0 },\n        dns: { queries: 0 }\n      },\n      protocol_breakdown: rawNetworkData.protocol_breakdown || {\n        web: 0,\n        email: 0,\n        streaming: 0,\n        gaming: 0,\n        file_transfer: 0,\n        other: 0\n      },\n      top_bandwidth_processes: rawNetworkData.top_bandwidth_processes || \n                               (rawNetworkData as any).processes || [],\n\n      dns_metrics: rawNetworkData.dns_metrics,\n      internet_metrics: rawNetworkData.internet_metrics\n    };\n    \n    return { networkData: processedData, error: null };\n  } catch (err) {\n    console.error('Error processing network data:', err);\n    return { \n      networkData: null, \n      error: `Failed to process network data: ${err instanceof Error ? err.message : 'Unknown error'}` \n    };\n  }\n}\n\n/**\n * Processes interface data which might be in different formats\n */\nfunction processInterfacesData(interfaces: any): NetworkInterface[] {\n  if (!interfaces) return [];\n  \n  if (Array.isArray(interfaces)) {\n    return interfaces.map(iface => ({\n      name: iface.name || 'Unknown',\n      isup: iface.isup || false,\n      bytes_sent: iface.bytes_sent || 0,\n      bytes_recv: iface.bytes_recv || 0,\n      address: iface.address,\n      mac_address: iface.mac_address,\n      speed: iface.speed,\n      mtu: iface.mtu\n    }));\n  }\n  \n  if (typeof interfaces === 'object') {\n    return Object.entries(interfaces).map(([name, details]) => ({\n      name,\n      isup: (details as any).isup || false,\n      bytes_sent: (details as any).bytes_sent || 0,\n      bytes_recv: (details as any).bytes_recv || 0,\n      address: (details as any).address,\n      mac_address: (details as any).mac_address,\n      speed: (details as any).speed,\n      mtu: (details as any).mtu\n    }));\n  }\n  \n  return [];\n}\n\nexport default processNetworkData;","// frontend/src/components/metrics/NetworkMetrics/utils/formatters.ts\n\n/**\n * Formats bytes to a human-readable string with appropriate units\n * @param bytes The number of bytes to format\n * @param decimals The number of decimal places to include\n * @returns Formatted string (e.g., \"1.5 MB\")\n */\nexport function formatBytes(bytes: number, decimals = 2): string {\n    if (bytes === 0) return '0 Bytes';\n    \n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    \n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    \n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n  \n  /**\n   * Formats milliseconds into a readable latency string\n   * @param ms Latency in milliseconds\n   * @returns Formatted string (e.g., \"15.2 ms\")\n   */\n  export function formatLatency(ms: number): string {\n    if (ms < 1) return '<1 ms';\n    \n    if (ms >= 1000) {\n      return (ms / 1000).toFixed(2) + ' s';\n    }\n    \n    return ms.toFixed(1) + ' ms';\n  }\n  \n  /**\n   * Gets a quality class name based on a score (0-100)\n   * @param score Quality score between 0 and 100\n   * @returns CSS class name for styling\n   */\n  export function getQualityClass(score: number): string {\n    if (score >= 90) return 'excellent';\n    if (score >= 75) return 'good';\n    if (score >= 50) return 'fair';\n    if (score >= 25) return 'poor';\n    return 'critical';\n  }\n  \n  /**\n   * Gets a latency class name based on millisecond value\n   * @param ms Latency in milliseconds\n   * @returns CSS class name for styling\n   */\n  export function getLatencyClass(ms: number): string {\n    if (ms < 10) return 'good';\n    if (ms < 50) return 'fair';\n    if (ms < 100) return 'poor';\n    return 'critical';\n  }\n  \n  /**\n   * Formats a timestamp into a readable time string\n   * @param timestamp The timestamp to format\n   * @returns Formatted time string\n   */\n  export function formatTime(timestamp: string | number): string {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString();\n  }\n  \n  /**\n   * Formats a timestamp into a readable date and time string\n   * @param timestamp The timestamp to format\n   * @returns Formatted date and time string\n   */\n  export function formatDateTime(timestamp: string | number): string {\n    const date = new Date(timestamp);\n    return date.toLocaleString();\n  }\n  \n  /**\n   * Formats a number as a percentage\n   * @param value The value to format (0-100 or 0-1)\n   * @param normalize Whether to multiply by 100 (if input is 0-1)\n   * @returns Formatted percentage string\n   */\n  export function formatPercentage(value: number, normalize = false): string {\n    if (normalize && value <= 1) {\n      value = value * 100;\n    }\n    return value.toFixed(1) + '%';\n  }\n  \n  /**\n   * Creates a smooth transition string for a value that changed\n   * @param oldValue The previous value\n   * @param newValue The new value\n   * @param formatter Function to format the value\n   * @returns Formatted string with change indicator\n   */\n  export function formatWithChange(\n    oldValue: number, \n    newValue: number, \n    formatter: (val: number) => string\n  ): string {\n    const change = newValue - oldValue;\n    const changeSymbol = change > 0 ? '↑' : change < 0 ? '↓' : '';\n    const changeClass = change > 0 ? 'increase' : change < 0 ? 'decrease' : '';\n    \n    return `${formatter(newValue)} <span class=\"${changeClass}\">${changeSymbol}</span>`;\n  }","// frontend/src/components/metrics/NetworkMetrics/tabs/NetworkOverviewTab.tsx\n\nimport React, { useMemo } from 'react';\nimport { \n  AreaChart, \n  Area, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip as RechartsTooltip, \n  ResponsiveContainer \n} from 'recharts';\n// import { any } from '/home/carissab/Documents/mod7/system_rebellion/frontend/src/components/metrics/NetworkMetrics/tabs/types';\n// import { any } from '/home/carissab/Documents/mod7/system_rebellion/frontend/src/components/metrics/NetworkMetrics/tabs/types';\nimport { formatBytes, formatLatency, getQualityClass } from '../utils/formatters';\nimport './NetworkMetrics.css';\n\ninterface NetworkOverviewTabProps {\n  data: any;\n  historicalMetrics: any[];\n  compact?: boolean;\n}\n\nconst NetworkOverviewTab: React.FC<NetworkOverviewTabProps> = ({ \n  data, \n  historicalMetrics, \n  compact = false \n}) => {\n  // Extract the data we need\n  const { io_stats, connection_quality } = data;\n\n  // Create chart data from historical metrics\n  const chartData = useMemo(() => {\n    if (!historicalMetrics || historicalMetrics.length === 0) return [];\n\n    return historicalMetrics.map((metric: any) => {\n      let sentValue = 0;\n      let receivedValue = 0;\n      \n      // Safely extract network data from historical metrics\n      const networkData = metric.network || metric.additional?.network_details;\n      if (networkData) {\n        if (networkData.io_stats) {\n          sentValue = networkData.io_stats.bytes_sent || 0;\n          receivedValue = networkData.io_stats.bytes_recv || 0;\n        } else {\n          sentValue = networkData.bytes_sent || 0;\n          receivedValue = networkData.bytes_recv || 0;\n        }\n      }\n      \n      return {\n        timestamp: metric.timestamp,\n        bytes_sent: sentValue,\n        bytes_recv: receivedValue\n      };\n    });\n  }, [historicalMetrics]);\n\n  return (\n    <>\n      <div className=\"metric-value network-metrics\">\n        <div className=\"network-sent\">\n          <div className=\"network-label\">Upload:</div>\n          <div className=\"network-rate\">{formatBytes(io_stats.sent_rate)}/s</div>\n          <div className=\"network-total\">Total: {formatBytes(io_stats.bytes_sent)}</div>\n        </div>\n        <div className=\"network-received\">\n          <div className=\"network-label\">Download:</div>\n          <div className=\"network-rate\">{formatBytes(io_stats.recv_rate)}/s</div>\n          <div className=\"network-total\">Total: {formatBytes(io_stats.bytes_recv)}</div>\n        </div>\n      </div>\n      \n      {!compact && chartData.length > 0 && (\n        <div className=\"chart-container\">\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <AreaChart data={chartData}>\n              <defs>\n                <linearGradient id=\"sentGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"5%\" stopColor=\"#00F5D4\" stopOpacity={0.8}/>\n                  <stop offset=\"95%\" stopColor=\"#00F5D4\" stopOpacity={0.2}/>\n                </linearGradient>\n                <linearGradient id=\"receivedGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"5%\" stopColor=\"#FF9F1C\" stopOpacity={0.8}/>\n                  <stop offset=\"95%\" stopColor=\"#FF9F1C\" stopOpacity={0.2}/>\n                </linearGradient>\n              </defs>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"rgba(255, 255, 255, 0.1)\" />\n              <XAxis \n                dataKey=\"timestamp\"\n                tickFormatter={(time: string) => new Date(time).toLocaleTimeString()}\n                stroke=\"rgba(255, 255, 255, 0.7)\"\n              />\n              <YAxis \n                tickFormatter={(value: number) => formatBytes(value)}\n                stroke=\"rgba(255, 255, 255, 0.7)\"\n              />\n              <RechartsTooltip \n                formatter={(value: number, name: string) => {\n                  if (name === 'bytes_sent') return [formatBytes(value), 'Sent'];\n                  if (name === 'bytes_recv') return [formatBytes(value), 'Received'];\n                  return [formatBytes(value), name];\n                }}\n                labelFormatter={(label: string) => new Date(label).toLocaleString()}\n                contentStyle={{ background: 'rgba(0, 0, 0, 0.8)', border: 'none', borderRadius: '8px' }}\n                itemStyle={{ color: 'white' }}\n                labelStyle={{ color: 'white' }}\n              />\n              <Area \n                type=\"monotone\" \n                dataKey=\"bytes_sent\" \n                name=\"Sent\"\n                stroke=\"#00F5D4\" \n                strokeWidth={2}\n                fillOpacity={0.5}\n                fill=\"url(#sentGradient)\"\n                activeDot={{ r: 4, strokeWidth: 0, fill: '#00F5D4' }}\n                isAnimationActive={true}\n              />\n              <Area \n                type=\"monotone\" \n                dataKey=\"bytes_recv\" \n                name=\"Received\"\n                stroke=\"#FF9F1C\" \n                strokeWidth={2}\n                fillOpacity={0.5}\n                fill=\"url(#receivedGradient)\"\n                activeDot={{ r: 4, strokeWidth: 0, fill: '#FF9F1C' }}\n                isAnimationActive={true}\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        </div>\n      )}\n      \n      <div className=\"network-section\">\n        <div className=\"network-section-title\">Connection Quality</div>\n        <div className=\"connection-quality\">\n          <div className=\"quality-score\">\n            {connection_quality.connection_stability.toFixed(0)}/100\n          </div>\n          <div className=\"quality-meter\">\n            <div \n              className={`quality-meter-fill ${getQualityClass(connection_quality.connection_stability)}`}\n              style={{ width: `${connection_quality.connection_stability}%` }}\n            />\n          </div>\n          <div className=\"quality-details\">\n            <span>Latency: {formatLatency(connection_quality.average_latency)}</span>\n            <span>Packet Loss: {connection_quality.packet_loss_percent.toFixed(1)}%</span>\n            <span>Jitter: {formatLatency(connection_quality.jitter)}</span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NetworkOverviewTab;","// frontend/src/components/metrics/NetworkMetrics/tabs/NetworkQualityMetrics.tsx\n\nimport React from 'react';\nimport { ConnectionQuality } from './types';\nimport { formatLatency, getQualityClass, getLatencyClass } from '../utils/formatters';\nimport './NetworkMetrics.css';\n\nexport interface NetworkQualityMetricsProps {\n  data: ConnectionQuality;\n  compact: boolean;\n}\n\nconst NetworkQualityMetrics: React.FC<NetworkQualityMetricsProps> = ({ data }) => {\n  return (\n    <div className=\"network-section\">\n      <div className=\"network-section-title\">Connection Quality Score</div>\n      <div className=\"connection-quality\">\n        <div className=\"quality-score\">\n          {data.connection_stability.toFixed(0)}/100\n        </div>\n        <div className=\"quality-meter\">\n          <div \n            className={`quality-meter-fill ${getQualityClass(data.connection_stability)}`}\n            style={{ width: `${data.connection_stability}%` }}\n          />\n        </div>\n        <div className=\"quality-score-label\">Connection Stability Score</div>\n      </div>\n      \n      <div className=\"network-section-title\">Latency Metrics</div>\n      <div className=\"latency-metrics\">\n        <div className=\"latency-item\">\n          <div className=\"latency-name\">Gateway</div>\n          <div className={`latency-value ${getLatencyClass(data.gateway_latency)}`}>\n            {formatLatency(data.gateway_latency)}\n          </div>\n        </div>\n        <div className=\"latency-item\">\n          <div className=\"latency-name\">DNS</div>\n          <div className={`latency-value ${getLatencyClass(data.dns_latency)}`}>\n            {formatLatency(data.dns_latency)}\n          </div>\n        </div>\n        <div className=\"latency-item\">\n          <div className=\"latency-name\">Internet</div>\n          <div className={`latency-value ${getLatencyClass(data.internet_latency)}`}>\n            {formatLatency(data.internet_latency)}\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"network-section-title\">Connection Stability Factors</div>\n      <div className=\"quality-details\">\n        <div className=\"quality-detail\">\n          <div className=\"detail-label\">Average Latency:</div>\n          <div className=\"detail-value\">{formatLatency(data.average_latency)}</div>\n        </div>\n        <div className=\"quality-detail\">\n          <div className=\"detail-label\">Packet Loss:</div>\n          <div className=\"detail-value\">{data.packet_loss_percent.toFixed(1)}%</div>\n        </div>\n        <div className=\"quality-detail\">\n          <div className=\"detail-label\">Jitter:</div>\n          <div className=\"detail-value\">{formatLatency(data.jitter)}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkQualityMetrics;","// frontend/src/components/metrics/NetworkMetrics/tabs/NetworkConnectionsTable.tsx\n\nimport React from 'react';\nimport { NetworkProcess } from '@/components/metrics/NetworkMetrics/tabs/types'; // You'll need to create this type file\nimport { formatBytes } from '@/components/metrics/NetworkMetrics/utils/formatters';\nimport './NetworkMetrics.css';\n\ninterface NetworkConnectionsTableProps {\n  processes: NetworkProcess[];\n  compact?: boolean;\n}\n\nconst NetworkConnectionsTable: React.FC<NetworkConnectionsTableProps> = ({ processes, compact: _ = false }) => {\n  // If no process data available\n  if (!processes || processes.length === 0) {\n    return (\n      <div className=\"network-section\">\n        <div className=\"network-section-title\">Top Bandwidth Processes</div>\n        <div className=\"no-data-message\">No process data available</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"network-section\">\n      <div className=\"network-section-title\">Top Bandwidth Processes</div>\n      <table className=\"process-table\">\n        <thead>\n          <tr>\n            <th>Process</th>\n            <th>PID</th>\n            <th>Upload</th>\n            <th>Download</th>\n            <th>Total</th>\n            <th>Connections</th>\n          </tr>\n        </thead>\n        <tbody>\n          {processes.map((process, index) => (\n            <tr key={index}>\n              <td>{process.name}</td>\n              <td>{process.pid}</td>\n              <td>{formatBytes(process.write_rate || 0)}/s</td>\n              <td>{formatBytes(process.read_rate || 0)}/s</td>\n              <td>{formatBytes((process.write_rate || 0) + (process.read_rate || 0))}/s</td>\n              <td>{process.connection_count || 0}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default NetworkConnectionsTable;","// frontend/src/components/metrics/NetworkMetrics/tabs/NetworkInterfaceMetrics.tsx\n\nimport React from 'react';\nimport { NetworkInterface } from './types';\nimport { formatBytes } from '../utils/formatters';\nimport './NetworkMetrics.css';\n\ninterface NetworkInterfaceMetricsProps {\n  interfaces: NetworkInterface[];\n  compact?: boolean;\n}\n\nconst NetworkInterfaceMetrics: React.FC<NetworkInterfaceMetricsProps> = ({ interfaces, compact: _compact = false }) => {\n  // If no interface data available\n  if (!interfaces || interfaces.length === 0) {\n    return (\n      <div className=\"network-section\">\n        <div className=\"network-section-title\">Network Interfaces</div>\n        <div className=\"no-data-message\">No interface data available</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"network-section\">\n      <div className=\"network-section-title\">Network Interfaces</div>\n      <div className=\"interface-stats\">\n        {interfaces.map((iface, index) => (\n          <div key={index} className=\"interface-item\">\n            <div className=\"interface-header\">\n              <div className=\"interface-name\">{iface.name}</div>\n              <div className={`interface-status ${iface.isup ? '' : 'down'}`}>\n                {iface.isup ? 'Up' : 'Down'}\n              </div>\n            </div>\n            <div className=\"interface-details\">\n              <div className=\"interface-detail\">\n                <div className=\"detail-label\">IP Address:</div>\n                <div className=\"detail-value\">{iface.address || 'N/A'}</div>\n              </div>\n              <div className=\"interface-detail\">\n                <div className=\"detail-label\">MAC Address:</div>\n                <div className=\"detail-value\">{iface.mac_address || 'N/A'}</div>\n              </div>\n              <div className=\"interface-detail\">\n                <div className=\"detail-label\">Speed:</div>\n                <div className=\"detail-value\">{iface.speed ? `${iface.speed} Mbps` : 'N/A'}</div>\n              </div>\n              <div className=\"interface-detail\">\n                <div className=\"detail-label\">MTU:</div>\n                <div className=\"detail-value\">{iface.mtu || 'N/A'}</div>\n              </div>\n              <div className=\"interface-detail\">\n                <div className=\"detail-label\">Sent:</div>\n                <div className=\"detail-value\">{formatBytes(iface.bytes_sent || 0)}</div>\n              </div>\n              <div className=\"interface-detail\">\n                <div className=\"detail-label\">Received:</div>\n                <div className=\"detail-value\">{formatBytes(iface.bytes_recv || 0)}</div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkInterfaceMetrics;","// frontend/src/components/metrics/NetworkMetrics/tabs/NetworkProtocolChart.tsx\n\nimport React from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend } from 'recharts';\n\nimport './NetworkMetrics.css';\n\n// Protocol colors for charts\nconst PROTOCOL_COLORS = {\n  web: '#00F5D4',\n  email: '#3A86FF',\n  streaming: '#FF9F1C',\n  gaming: '#9EF01A',\n  file_transfer: '#F8E71C',\n  other: '#8A8D91'\n};\n\ninterface NetworkProtocolChartProps {\n  data: any;\n  stats: any;\n  compact?: boolean;\n}\n\nconst NetworkProtocolChart: React.FC<NetworkProtocolChartProps> = ({ data, stats, compact = false }) => {\n  // Format data for the pie chart\n  const chartData = Object.entries(data)\n    .map(([name, value]) => ({\n      name,\n      value: value || 0\n    }))\n    .filter(item => typeof item.value === 'number' && item.value > 0);\n\n  // If no protocol data available\n  if (!chartData || chartData.length === 0) {\n    return (\n      <div className=\"network-section\">\n        <div className=\"network-section-title\">Protocol Breakdown</div>\n        <div className=\"no-data-message\">No protocol data available</div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"network-section\">\n        <div className=\"network-section-title\">Protocol Breakdown</div>\n        <div style={{ height: compact ? 200 : 250 }}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <PieChart>\n              <Pie\n                data={chartData}\n                cx=\"50%\"\n                cy=\"50%\"\n                labelLine={false}\n                outerRadius={compact ? 70 : 90}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n                label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n              >\n                {chartData.map((entry, index) => (\n                  <Cell \n                    key={`cell-${index}`} \n                    fill={PROTOCOL_COLORS[entry.name as keyof typeof PROTOCOL_COLORS] || '#8884d8'} \n                  />\n                ))}\n              </Pie>\n              <Legend />\n            </PieChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n\n      <div className=\"network-section\">\n        <div className=\"network-section-title\">Protocol Statistics</div>\n        <div className=\"protocol-breakdown\">\n          <div className=\"protocol-item\">\n            <div className=\"protocol-name\">TCP Connections</div>\n            <div className=\"protocol-value\">{stats.tcp.active}</div>\n          </div>\n          <div className=\"protocol-item\">\n            <div className=\"protocol-name\">TCP Established</div>\n            <div className=\"protocol-value\">{stats.tcp.established}</div>\n          </div>\n          <div className=\"protocol-item\">\n            <div className=\"protocol-name\">UDP Active</div>\n            <div className=\"protocol-value\">{stats.udp.active}</div>\n          </div>\n          <div className=\"protocol-item\">\n            <div className=\"protocol-name\">HTTP Connections</div>\n            <div className=\"protocol-value\">{stats.http.connections}</div>\n          </div>\n          <div className=\"protocol-item\">\n            <div className=\"protocol-name\">HTTPS Connections</div>\n            <div className=\"protocol-value\">{stats.https.connections}</div>\n          </div>\n          <div className=\"protocol-item\">\n            <div className=\"protocol-name\">DNS Queries</div>\n            <div className=\"protocol-value\">{stats.dns.queries}</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NetworkProtocolChart;","// frontend/src/components/metrics/NetworkMetrics/tabs/TopBandwidthProcesses.tsx\n\nimport React from 'react';\nimport { NetworkProcess } from './types';\nimport { formatBytes } from '../utils/formatters';\nimport './NetworkMetrics.css';\n\ninterface TopBandwidthProcessesProps {\n  processes: NetworkProcess[];\n  compact?: boolean;\n  limit?: number;\n}\n\nconst TopBandwidthProcesses: React.FC<TopBandwidthProcessesProps> = ({ \n  processes, \n  compact: _compact = false,\n  limit = 5 \n}) => {\n  // Sort processes by total bandwidth (read + write)\n  const sortedProcesses = [...processes].sort((a, b) => {\n    const totalA = (a.read_rate || 0) + (a.write_rate || 0);\n    const totalB = (b.read_rate || 0) + (b.write_rate || 0);\n    return totalB - totalA; // Sort descending\n  });\n  \n  // Limit to the top N processes if specified\n  const topProcesses = limit ? sortedProcesses.slice(0, limit) : sortedProcesses;\n  \n  // If no process data available\n  if (!topProcesses || topProcesses.length === 0) {\n    return (\n      <div className=\"network-section\">\n        <div className=\"network-section-title\">Top Bandwidth Consumers</div>\n        <div className=\"no-data-message\">No process data available</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"network-section\">\n      <div className=\"network-section-title\">Top Bandwidth Consumers</div>\n      <div className=\"bandwidth-processes\">\n        {topProcesses.map((process, index) => {\n          const totalBandwidth = (process.read_rate || 0) + (process.write_rate || 0);\n          const downloadPercent = totalBandwidth ? (process.read_rate || 0) / totalBandwidth * 100 : 0;\n          const uploadPercent = totalBandwidth ? (process.write_rate || 0) / totalBandwidth * 100 : 0;\n          \n          return (\n            <div key={index} className=\"bandwidth-process\">\n              <div className=\"process-header\">\n                <div className=\"process-name\">{process.name}</div>\n                <div className=\"process-pid\">PID: {process.pid}</div>\n                <div className=\"process-bandwidth\">{formatBytes(totalBandwidth)}/s</div>\n              </div>\n              \n              <div className=\"bandwidth-bars\">\n                <div className=\"bandwidth-bar-container\">\n                  <div className=\"bandwidth-label\">\n                    <span>Download</span>\n                    <span>{formatBytes(process.read_rate || 0)}/s</span>\n                  </div>\n                  <div className=\"bandwidth-bar\">\n                    <div \n                      className=\"bandwidth-bar-fill download\"\n                      style={{ width: `${downloadPercent}%` }}\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"bandwidth-bar-container\">\n                  <div className=\"bandwidth-label\">\n                    <span>Upload</span>\n                    <span>{formatBytes(process.write_rate || 0)}/s</span>\n                  </div>\n                  <div className=\"bandwidth-bar\">\n                    <div \n                      className=\"bandwidth-bar-fill upload\"\n                      style={{ width: `${uploadPercent}%` }}\n                    />\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"process-connections\">\n                Connections: {process.connection_count || 0}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default TopBandwidthProcesses;","// frontend/src/components/metrics/NetworkMetrics/NetworkMetric.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport { useAppSelector } from '../../../store/hooks';\nimport { RootState } from '../../../store/store';\nimport { processNetworkData } from './utils/networkDataProcessor';\nimport './tabs/NetworkMetrics.css';\n\n// Import all tab components\nimport NetworkOverviewTab from './tabs/NetworkOverviewTab';\nimport NetworkQualityMetrics from './tabs/NetworkQualityMetrics';\nimport NetworkConnectionsTable from './tabs/NetworkConnectionsTable';\nimport NetworkInterfaceMetrics from './tabs/NetworkInterfaceMetrics';\nimport NetworkProtocolChart from './tabs/NetworkProtocolChart';\nimport TopBandwidthProcesses from './tabs/TopBandwidthProcesses';\n\n// Define tab types\ntype NetworkTabType = 'overview' | 'quality' | 'protocols' | 'processes' | 'interfaces';\n\n// Component props\ninterface NetworkMetricProps {\n  compact?: boolean;\n  showTabs?: boolean;\n  initialTab?: NetworkTabType;\n  height?: number | string;\n}\n\nconst NetworkMetric: React.FC<NetworkMetricProps> = ({\n  compact = false,\n  showTabs = true,\n  initialTab = 'overview',\n  height,\n}) => {\n  // Redux state\n  const currentMetric = useAppSelector((state: RootState) => state.metrics.current);\n  const historicalMetrics = useAppSelector((state: RootState) => state.metrics.historical);\n  const isLoading = useAppSelector((state: RootState) => state.metrics.loading);\n  \n  // Local state\n  const [activeTab, setActiveTab] = useState<NetworkTabType>(initialTab);\n  const [error, setError] = useState<string | null>(null);\n  \n  \n  // Use the network data processor utility\n  const { networkData, error: dataError } = processNetworkData(currentMetric);\n  \n  // Update error state when data processing fails\n  useEffect(() => {\n    if (dataError) {\n      setError(dataError);\n    } else {\n      setError(null);\n    }\n  }, [dataError]);\n  \n  // Loading state\n  if (isLoading) {\n    return (\n      <div className={`metric-card ${compact ? 'compact' : ''}`} style={{ height }}>\n        <h3>Network Activity</h3>\n        <div className=\"loading-message\">Loading network metrics...</div>\n      </div>\n    );\n  }\n  \n  // Error state\n  if (error || !networkData) {\n    return (\n      <div className={`metric-card ${compact ? 'compact' : ''}`} style={{ height }}>\n        <h3>Network Activity</h3>\n        <div className=\"error-container\">\n          <div className=\"error-icon\">⚠️</div>\n          <div className=\"error-message\">{error || 'No network data available'}</div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Render tab content based on active tab\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'overview':\n        return <NetworkOverviewTab \n                data={networkData} \n                historicalMetrics={historicalMetrics} \n                compact={compact} \n              />;\n      case 'quality':\n        return <NetworkQualityMetrics \n                data={networkData.connection_quality} \n                compact={compact} \n              />;\n      case 'protocols':\n        return <NetworkProtocolChart \n                data={networkData.protocol_breakdown} \n                stats={networkData.protocol_stats} \n                compact={compact} \n              />;\n      case 'processes':\n        // Show both the table and the visual representation\n        return (\n          <>\n            <TopBandwidthProcesses \n              processes={networkData.top_bandwidth_processes.map((p: any) => ({\n  ...p,\n  write_rate: p.write_rate ?? 0,\n  read_rate: p.read_rate ?? 0,\n  connection_count: p.connection_count ?? 0\n}))}\n \n              compact={compact} \n              limit={compact ? 3 : 5} \n            />\n            <NetworkConnectionsTable \n              processes={networkData.top_bandwidth_processes.map((p: any) => ({\n  ...p,\n  write_rate: p.write_rate ?? 0,\n  read_rate: p.read_rate ?? 0,\n  connection_count: p.connection_count ?? 0\n})).map((p: any) => ({\n  ...p,\n  write_rate: p.write_rate ?? 0,\n  read_rate: p.read_rate ?? 0,\n  connection_count: p.connection_count ?? 0\n}))}\n \n              compact={compact} \n            />\n          </>\n        );\n      case 'interfaces':\n        return <NetworkInterfaceMetrics \n                interfaces={networkData.interfaces} \n                compact={compact} \n              />;\n      default:\n        return <NetworkOverviewTab \n                data={networkData} \n                historicalMetrics={historicalMetrics} \n                compact={compact} \n              />;\n    }\n  };\n  \n  return (\n    <div className={`metric-card ${compact ? 'compact' : ''}`} style={{ height }}>\n      <h3>Network Activity</h3>\n      \n      {showTabs && (\n        <div className=\"network-tabs\">\n          <div \n            className={`network-tab ${activeTab === 'overview' ? 'active' : ''}`}\n            onClick={() => setActiveTab('overview')}\n          >\n            Overview\n          </div>\n          <div \n            className={`network-tab ${activeTab === 'quality' ? 'active' : ''}`}\n            onClick={() => setActiveTab('quality')}\n          >\n            Connection Quality\n          </div>\n          <div \n            className={`network-tab ${activeTab === 'protocols' ? 'active' : ''}`}\n            onClick={() => setActiveTab('protocols')}\n          >\n            Protocols\n          </div>\n          <div \n            className={`network-tab ${activeTab === 'processes' ? 'active' : ''}`}\n            onClick={() => setActiveTab('processes')}\n          >\n            Processes\n          </div>\n          <div \n            className={`network-tab ${activeTab === 'interfaces' ? 'active' : ''}`}\n            onClick={() => setActiveTab('interfaces')}\n          >\n            Interfaces\n          </div>\n        </div>\n      )}\n      \n      <div className=\"network-content\">\n        {renderTabContent()}\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkMetric;","// frontend/src/components/dashboard/Metrics/NetworkMetric/NetworkMetric.tsx\n\nimport React from 'react';\nimport NetworkMetric from '../../../metrics/NetworkMetrics/NetworkMetric';\n\nconst DashboardNetworkMetric: React.FC = () => {\n  return (\n    <NetworkMetric \n      compact={true} \n      showTabs={false} \n      initialTab=\"overview\"\n    />\n  );\n};\n\nexport default DashboardNetworkMetric;","import React from 'react';\nimport './CharacterIcons.css';\n\n// Character icon SVG components\nexport const SirHawkington: React.FC<{ className?: string }> = ({ className }) => (\n  <svg className={`character-icon ${className || ''}`} viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle cx=\"50\" cy=\"50\" r=\"45\" fill=\"#1a0458\" />\n    <circle cx=\"50\" cy=\"40\" r=\"25\" fill=\"#242b42\" />\n    <ellipse cx=\"50\" cy=\"70\" rx=\"15\" ry=\"10\" fill=\"#242b42\" />\n    <circle cx=\"40\" cy=\"35\" r=\"5\" fill=\"#00f5d4\" />\n    <circle cx=\"60\" cy=\"35\" r=\"5\" fill=\"#00f5d4\" />\n    <circle cx=\"40\" cy=\"35\" r=\"2\" fill=\"#000\" />\n    <circle cx=\"60\" cy=\"35\" r=\"2\" fill=\"#000\" />\n    <path d=\"M45 50 Q50 55 55 50\" stroke=\"#00f5d4\" strokeWidth=\"2\" fill=\"none\" />\n    <circle cx=\"65\" cy=\"30\" r=\"10\" fill=\"none\" stroke=\"#00f5d4\" strokeWidth=\"2\" />\n    <path d=\"M65 20 L65 40\" stroke=\"#00f5d4\" strokeWidth=\"2\" />\n    <path d=\"M30 25 Q40 15 50 25\" stroke=\"#00f5d4\" strokeWidth=\"2\" fill=\"none\" />\n  </svg>\n);\n\nexport const MethSnail: React.FC<{ className?: string }> = ({ className }) => (\n  <svg className={`character-icon ${className || ''}`} viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M20 60 Q30 30 60 40 Q80 45 80 60 Q80 80 60 80 Q30 80 20 60 Z\" fill=\"#e9009b\" />\n    <path d=\"M60 40 Q70 30 80 40 Q90 50 80 60\" fill=\"none\" stroke=\"#00f5d4\" strokeWidth=\"2\" />\n    <circle cx=\"35\" cy=\"50\" r=\"5\" fill=\"#00f5d4\" />\n    <circle cx=\"35\" cy=\"50\" r=\"2\" fill=\"#000\" />\n    <circle cx=\"45\" cy=\"50\" r=\"5\" fill=\"#00f5d4\" />\n    <circle cx=\"45\" cy=\"50\" r=\"2\" fill=\"#000\" />\n    <path d=\"M30 65 Q40 70 50 65\" stroke=\"#00f5d4\" strokeWidth=\"2\" fill=\"none\" />\n    <path d=\"M70 45 L75 35 M70 45 L65 35\" stroke=\"#00f5d4\" strokeWidth=\"2\" />\n    <path d=\"M20 60 Q10 70 15 80 Q20 85 30 80\" fill=\"none\" stroke=\"#00f5d4\" strokeWidth=\"2\" />\n  </svg>\n);\n\nexport const Hamster: React.FC<{ className?: string }> = ({ className }) => (\n  <svg className={`character-icon ${className || ''}`} viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle cx=\"50\" cy=\"50\" r=\"30\" fill=\"#02b5fc\" />\n    <circle cx=\"40\" cy=\"40\" r=\"5\" fill=\"#00f5d4\" />\n    <circle cx=\"60\" cy=\"40\" r=\"5\" fill=\"#00f5d4\" />\n    <circle cx=\"40\" cy=\"40\" r=\"2\" fill=\"#000\" />\n    <circle cx=\"60\" cy=\"40\" r=\"2\" fill=\"#000\" />\n    <ellipse cx=\"50\" cy=\"55\" rx=\"5\" ry=\"3\" fill=\"#00f5d4\" />\n    <path d=\"M35 30 L25 20 M65 30 L75 20\" stroke=\"#00f5d4\" strokeWidth=\"2\" />\n    <path d=\"M40 65 Q50 70 60 65\" fill=\"none\" stroke=\"#00f5d4\" strokeWidth=\"2\" />\n    <path d=\"M20 50 Q10 40 15 30 Q20 25 30 30\" fill=\"none\" stroke=\"#3333ff\" strokeWidth=\"2\" strokeDasharray=\"2,2\" />\n    <path d=\"M80 50 Q90 40 85 30 Q80 25 70 30\" fill=\"none\" stroke=\"#3333ff\" strokeWidth=\"2\" strokeDasharray=\"2,2\" />\n  </svg>\n);\n\nexport const TheStick: React.FC<{ className?: string }> = ({ className }) => (\n  <svg className={`character-icon ${className || ''}`} viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M40 20 L60 20 L55 80 L45 80 Z\" fill=\"#00f5a3\" />\n    <circle cx=\"40\" cy=\"35\" r=\"5\" fill=\"#1a0458\" />\n    <circle cx=\"60\" cy=\"35\" r=\"5\" fill=\"#1a0458\" />\n    <circle cx=\"40\" cy=\"35\" r=\"2\" fill=\"#00f5d4\" />\n    <circle cx=\"60\" cy=\"35\" r=\"2\" fill=\"#00f5d4\" />\n    <path d=\"M45 50 Q50 55 55 50\" stroke=\"#1a0458\" strokeWidth=\"2\" fill=\"none\" />\n    <path d=\"M30 30 Q20 25 25 15 Q30 10 35 15\" fill=\"none\" stroke=\"#00f5d4\" strokeWidth=\"1\" />\n    <path d=\"M70 30 Q80 25 75 15 Q70 10 65 15\" fill=\"none\" stroke=\"#00f5d4\" strokeWidth=\"1\" />\n  </svg>\n);\n\nexport const QuantumShadowPerson: React.FC<{ className?: string }> = ({ className }) => (\n  <svg className={`character-icon ${className || ''}`} viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M30 30 L70 30 L60 80 L40 80 Z\" fill=\"#3333ff\" fillOpacity=\"0.7\" />\n    <circle cx=\"40\" cy=\"45\" r=\"5\" fill=\"#00f5d4\" />\n    <circle cx=\"60\" cy=\"45\" r=\"5\" fill=\"#00f5d4\" />\n    <path d=\"M30 30 Q50 10 70 30\" fill=\"none\" stroke=\"#00f5d4\" strokeWidth=\"2\" strokeDasharray=\"3,3\" />\n    <path d=\"M40 60 Q50 65 60 60\" stroke=\"#00f5d4\" strokeWidth=\"2\" fill=\"none\" strokeDasharray=\"2,2\" />\n    <path d=\"M25 50 L15 40 M75 50 L85 40\" stroke=\"#00f5d4\" strokeWidth=\"1\" strokeDasharray=\"1,1\" />\n  </svg>\n);\n\nexport const VIC20: React.FC<{ className?: string }> = ({ className }) => (\n  <svg className={`character-icon ${className || ''}`} viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n    <rect x=\"20\" y=\"30\" width=\"60\" height=\"40\" rx=\"5\" fill=\"#242b42\" />\n    <rect x=\"25\" y=\"35\" width=\"50\" height=\"15\" rx=\"2\" fill=\"#1a0458\" />\n    <rect x=\"30\" y=\"55\" width=\"10\" height=\"10\" rx=\"1\" fill=\"#e9009b\" />\n    <rect x=\"45\" y=\"55\" width=\"10\" height=\"10\" rx=\"1\" fill=\"#00f5a3\" />\n    <rect x=\"60\" y=\"55\" width=\"10\" height=\"10\" rx=\"1\" fill=\"#02b5fc\" />\n    <path d=\"M35 40 L40 40 L40 45 L35 45 Z\" fill=\"#00f5d4\" />\n    <path d=\"M45 40 L50 40 L50 45 L45 45 Z\" fill=\"#00f5d4\" />\n    <path d=\"M55 40 L65 40 L65 45 L55 45 Z\" fill=\"#00f5d4\" />\n    <text x=\"30\" y=\"43\" fontSize=\"5\" fill=\"#00f5d4\">VIC-20</text>\n  </svg>\n);\n\n// Character avatar selection component\ninterface CharacterAvatarSelectorProps {\n  selectedAvatar: string;\n  onSelect: (avatar: string) => void;\n}\n\nexport const CharacterAvatarSelector: React.FC<CharacterAvatarSelectorProps> = ({ \n  selectedAvatar, \n  onSelect \n}) => {\n  const characters = [\n    { id: 'sir-hawkington', name: 'Sir Hawkington', component: <SirHawkington /> },\n    { id: 'meth-snail', name: 'The Meth Snail', component: <MethSnail /> },\n    { id: 'hamster', name: 'Hamster', component: <Hamster /> },\n    { id: 'the-stick', name: 'The Stick', component: <TheStick /> },\n    { id: 'quantum-shadow', name: 'Quantum Shadow Person', component: <QuantumShadowPerson /> },\n    { id: 'vic-20', name: 'VIC-20', component: <VIC20 /> },\n  ];\n\n  return (\n    <div className=\"character-avatar-selector\">\n      <h3>Choose Your Avatar</h3>\n      <div className=\"avatar-grid\">\n        {characters.map((character) => (\n          <div \n            key={character.id}\n            className={`avatar-option ${selectedAvatar === character.id ? 'selected' : ''}`}\n            onClick={() => onSelect(character.id)}\n          >\n            {character.component}\n            <span className=\"avatar-name\">{character.name}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// Function to get character component by ID\nexport const getCharacterById = (id: string): React.ReactNode => {\n  switch (id) {\n    case 'sir-hawkington':\n      return <SirHawkington />;\n    case 'meth-snail':\n      return <MethSnail />;\n    case 'quantum-hamster':\n      return <Hamster />;\n    case 'the-stick':\n      return <TheStick />;\n    case 'quantum-shadow':\n      return <QuantumShadowPerson />;\n    case 'vic-20':\n      return <VIC20 />;\n    default:\n      return <SirHawkington />;\n  }\n};\n\nexport default {\n  SirHawkington,\n  MethSnail,\n  Hamster,\n  TheStick,\n  QuantumShadowPerson,\n  VIC20,\n  CharacterAvatarSelector,\n  getCharacterById\n};\n","import React, { useState, useEffect } from 'react';\nimport { useAppSelector } from '../../../store/hooks';\nimport CPUMetric from '../Metrics/CPUMetrics/CPUMetric';\nimport { MemoryMetric } from '../Metrics/MemoryMetric/MemoryMetric';\nimport { DiskMetric } from '../Metrics/DiskMetric/DiskMetric';\nimport DashboardNetworkMetric from '../Metrics/NetworkMetric/NetworkMetric';\nimport { SirHawkington } from '../../common/CharacterIcons';\nimport './MetricsPanel.css';\n\ninterface MetricsPanelProps {\n  showHeader?: boolean;\n}\n\nexport const MetricsPanel: React.FC<MetricsPanelProps> = ({\n  showHeader = true\n}) => {\n  const metrics = useAppSelector((state) => state.metrics.current);\n  const { connectionStatus } = useAppSelector((state) => state.metrics);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const prevMetricsRef = React.useRef(metrics);\n\n  // Effect for data update animations\n  useEffect(() => {\n    if (metrics && prevMetricsRef.current && JSON.stringify(metrics) !== JSON.stringify(prevMetricsRef.current)) {\n      setIsUpdating(true);\n      const timer = setTimeout(() => setIsUpdating(false), 1000);\n      return () => clearTimeout(timer);\n    }\n    prevMetricsRef.current = metrics;\n  }, [metrics]);\n\n  // Get status color\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'connected':\n        return 'status-connected';\n      case 'connecting':\n        return 'status-connecting';\n      case 'disconnected':\n      case 'error':\n        return 'status-disconnected';\n      default:\n        return 'status-disconnected';\n    }\n  };\n\n  return (\n    <div className=\"metrics-panel\">\n      {showHeader && (\n        <div className=\"metrics-panel-header\">\n          <h2>System Metrics</h2>\n          <div className=\"sir-hawkington-icon\">\n            <SirHawkington className=\"hawk-icon\" />\n            <div className=\"character-tooltip\">\n              <p>\"Sir Hawkington at your service! I'm monitoring your system metrics with aristocratic precision.\"</p>\n            </div>\n          </div>\n          \n          {/* Small connection indicator */}\n          <div className=\"connection-indicator\">\n            <span className={`connection-dot ${getStatusColor(connectionStatus)}`}></span>\n            <span className=\"connection-text\">{connectionStatus}</span>\n          </div>\n        </div>\n      )}\n      \n      <div className={`metrics-row ${isUpdating ? 'data-updating' : ''}`}>\n        <CPUMetric />\n        <MemoryMetric />\n        <DiskMetric />\n        <DashboardNetworkMetric />\n      </div>\n    </div>\n  );\n};\n\nexport default MetricsPanel;","import React from 'react';\nimport './Button.css';\n\nexport type ButtonVariant = 'primary' | 'secondary' | 'accent' | 'success' | 'warning' | 'danger' | 'cyber';\nexport type ButtonSize = 'sm' | 'md' | 'lg';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /** Button variant that determines color scheme */\n  variant?: ButtonVariant;\n  /** Button size */\n  size?: ButtonSize;\n  /** Whether the button is outlined (transparent with border) */\n  outlined?: boolean;\n  /** Whether the button is a circle (equal width and height) */\n  circle?: boolean;\n  /** Whether the button has a glow effect */\n  glow?: boolean;\n  /** Whether the button is full width */\n  fullWidth?: boolean;\n  /** Icon to display before button text */\n  leftIcon?: React.ReactNode;\n  /** Icon to display after button text */\n  rightIcon?: React.ReactNode;\n  /** Whether the button is in loading state */\n  loading?: boolean;\n  /** Whether the button is disabled */\n  disabled?: boolean;\n  /** Additional CSS class names */\n  className?: string;\n}\n\n/**\n * Button component for System Rebellion UI\n * \n * A customizable button component that follows the System Rebellion design system.\n * Supports various variants, sizes, and states.\n */\nexport const Button: React.FC<ButtonProps> = ({\n  variant = 'primary',\n  size = 'md',\n  outlined = false,\n  circle = false,\n  glow = false,\n  fullWidth = false,\n  leftIcon,\n  rightIcon,\n  loading = false,\n  disabled = false,\n  className = '',\n  children,\n  ...props\n}) => {\n  // Build the class names based on props\n  const buttonClasses = [\n    'sr-button',\n    `sr-button-${variant}`,\n    `sr-button-${size}`,\n    outlined ? 'sr-button-outlined' : '',\n    circle ? 'sr-button-circle' : '',\n    glow ? 'sr-button-glow' : '',\n    fullWidth ? 'sr-button-full-width' : '',\n    loading ? 'sr-button-loading' : '',\n    disabled ? 'sr-button-disabled' : '',\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <button \n      className={buttonClasses} \n      disabled={disabled || loading}\n      {...props}\n    >\n      {loading && <span className=\"sr-button-spinner\" />}\n      {leftIcon && <span className=\"sr-button-icon sr-button-icon-left\">{leftIcon}</span>}\n      {children && <span className=\"sr-button-text\">{children}</span>}\n      {rightIcon && <span className=\"sr-button-icon sr-button-icon-right\">{rightIcon}</span>}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport './Alert.css';\n\n\nexport type AlertVariant = 'info' | 'success' | 'warning' | 'danger' | 'cyber';\nexport type AlertSize = 'sm' | 'md' | 'lg';\n\nexport interface AlertProps {\n  /** Alert variant that determines color scheme */\n  variant?: AlertVariant;\n  /** Alert size */\n  size?: AlertSize;\n  /** Alert title */\n  title?: React.ReactNode;\n  /** Whether the alert is dismissible */\n  dismissible?: boolean;\n  /** Function called when dismiss button is clicked */\n  onDismiss?: () => void;\n  /** Whether the alert has a glow effect */\n  glow?: boolean;\n  /** Whether the alert has an icon */\n  hasIcon?: boolean;\n  /** Custom icon to display */\n  icon?: React.ReactNode;\n  /** Whether the alert has a border */\n  bordered?: boolean;\n  /** Whether the alert is actionable */\n  actionable?: boolean;\n  /** Action button text */\n  actionText?: string;\n  /** Function called when action button is clicked */\n  onAction?: () => void;\n  /** Additional CSS class names */\n  className?: string;\n  /** Alert content */\n  children: React.ReactNode;\n}\n\n/**\n * Alert component for System Rebellion UI\n * \n * A customizable alert component that follows the System Rebellion design system.\n * Supports various variants, sizes, and states.\n */\nexport const Alert: React.FC<AlertProps> = ({\n  variant = 'info',\n  size = 'md',\n  title,\n  dismissible = false,\n  onDismiss,\n  glow = false,\n  hasIcon = true,\n  icon,\n  bordered = false,\n  actionable = false,\n  actionText = 'Action',\n  onAction,\n  className = '',\n  children,\n}) => {\n  // Default icons based on variant\n  const getDefaultIcon = () => {\n    switch (variant) {\n      case 'info':\n        return 'ℹ️';\n      case 'success':\n        return '✓';\n      case 'warning':\n        return '⚠️';\n      case 'danger':\n        return '⚠️';\n      case 'cyber':\n        return '⚡';\n      default:\n        return 'ℹ️';\n    }\n  };\n\n  // Build the class names based on props\n  const alertClasses = [\n    'sr-alert',\n    `sr-alert-${variant}`,\n    `sr-alert-${size}`,\n    glow ? 'sr-alert-glow' : '',\n    bordered ? 'sr-alert-bordered' : '',\n    actionable ? 'sr-alert-actionable' : '',\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div className={alertClasses} role=\"alert\">\n      {hasIcon && (\n        <div className=\"sr-alert-icon\">\n          {icon || getDefaultIcon()}\n        </div>\n      )}\n      <div className=\"sr-alert-content\">\n        {title && <div className=\"sr-alert-title\">{title}</div>}\n        <div className=\"sr-alert-message\">{children}</div>\n        {actionable && (\n          <button className=\"sr-alert-action\" onClick={onAction}>\n            {actionText}\n          </button>\n        )}\n      </div>\n      {dismissible && (\n        <button className=\"sr-alert-dismiss\" onClick={onDismiss}>\n          ×\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Alert;\n","import React from 'react';\nimport './Toggle.css';\n\nexport type ToggleVariant = 'primary' | 'secondary' | 'accent' | 'success' | 'warning' | 'danger' | 'cyber';\nexport type ToggleSize = 'sm' | 'md' | 'lg';\n\nexport interface ToggleProps {\n  /** Whether the toggle is checked */\n  checked: boolean;\n  /** Function called when the toggle state changes */\n  onChange: (checked: boolean) => void;\n  /** Toggle variant that determines color scheme */\n  variant?: ToggleVariant;\n  /** Toggle size */\n  size?: ToggleSize;\n  /** Whether the toggle has a glow effect when active */\n  glow?: boolean;\n  /** Whether the toggle is disabled */\n  disabled?: boolean;\n  /** Label for the toggle */\n  label?: React.ReactNode;\n  /** Whether the label should appear on the right side */\n  labelRight?: boolean;\n  /** Additional CSS class names */\n  className?: string;\n  /** ID for the input element */\n  id?: string;\n  /** Name for the input element */\n  name?: string;\n  /** Additional props */\n  [x: string]: any;\n}\n\n/**\n * Toggle component for System Rebellion UI\n * \n * A customizable toggle switch component that follows the System Rebellion design system.\n * Supports various variants, sizes, and styles with cyberpunk aesthetics.\n */\nexport const Toggle: React.FC<ToggleProps> = ({\n  checked,\n  onChange,\n  variant = 'primary',\n  size = 'md',\n  glow = false,\n  disabled = false,\n  label,\n  labelRight = true,\n  className = '',\n  id,\n  name,\n  ...props\n}) => {\n  // Generate a unique ID if none is provided\n  const toggleId = id || `sr-toggle-${Math.random().toString(36).substring(2, 9)}`;\n  \n  // Build the class names based on props\n  const toggleClasses = [\n    'sr-toggle',\n    `sr-toggle-${variant}`,\n    `sr-toggle-${size}`,\n    glow ? 'sr-toggle-glow' : '',\n    disabled ? 'sr-toggle-disabled' : '',\n    className\n  ].filter(Boolean).join(' ');\n\n  // Handle the change event\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!disabled) {\n      onChange(e.target.checked);\n    }\n  };\n\n  return (\n    <div className={toggleClasses}>\n      {label && !labelRight && (\n        <label htmlFor={toggleId} className=\"sr-toggle-label sr-toggle-label-left\">\n          {label}\n        </label>\n      )}\n      \n      <div className=\"sr-toggle-container\">\n        <input\n          type=\"checkbox\"\n          id={toggleId}\n          name={name}\n          checked={checked}\n          onChange={handleChange}\n          disabled={disabled}\n          className=\"sr-toggle-input\"\n          {...props}\n        />\n        <span className=\"sr-toggle-switch\">\n          <span className=\"sr-toggle-slider\"></span>\n        </span>\n      </div>\n      \n      {label && labelRight && (\n        <label htmlFor={toggleId} className=\"sr-toggle-label sr-toggle-label-right\">\n          {label}\n        </label>\n      )}\n    </div>\n  );\n};\n\nexport default Toggle;\n","import React, { forwardRef } from 'react';\nimport './Input.css';\n\nexport type InputVariant = 'primary' | 'secondary' | 'accent' | 'cyber';\nexport type InputSize = 'sm' | 'md' | 'lg';\nexport type InputType = 'text' | 'password' | 'email' | 'number' | 'search' | 'tel' | 'url';\n\nexport interface InputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size'> {\n  /** Input variant that determines color scheme */\n  variant?: InputVariant;\n  /** Input size */\n  size?: InputSize;\n  /** Whether the input has a glow effect */\n  glow?: boolean;\n  /** Whether the input has a glass effect */\n  glass?: boolean;\n  /** Whether the input has a cyber-style border */\n  cyberBorder?: boolean;\n  /** Label for the input */\n  label?: React.ReactNode;\n  /** Helper text displayed below the input */\n  helperText?: React.ReactNode;\n  /** Error message displayed below the input */\n  error?: React.ReactNode;\n  /** Icon displayed at the start of the input */\n  startIcon?: React.ReactNode;\n  /** Icon displayed at the end of the input */\n  endIcon?: React.ReactNode;\n  /** Additional CSS class names */\n  className?: string;\n  /** Input type */\n  type?: InputType;\n  /** Whether the input is full width */\n  fullWidth?: boolean;\n}\n\n/**\n * Input component for System Rebellion UI\n * \n * A customizable input component that follows the System Rebellion design system.\n * Supports various variants, sizes, and styles with cyberpunk aesthetics.\n */\nexport const Input = forwardRef<HTMLInputElement, InputProps>(({\n  variant = 'primary',\n  size = 'md',\n  glow = false,\n  glass = false,\n  cyberBorder = false,\n  label,\n  helperText,\n  error,\n  startIcon,\n  endIcon,\n  className = '',\n  type = 'text',\n  fullWidth = false,\n  disabled = false,\n  id,\n  ...props\n}, ref) => {\n  // Generate a unique ID if none is provided\n  const inputId = id || `sr-input-${Math.random().toString(36).substring(2, 9)}`;\n  \n  // Build the class names based on props\n  const inputWrapperClasses = [\n    'sr-input-wrapper',\n    `sr-input-${variant}`,\n    `sr-input-${size}`,\n    glow ? 'sr-input-glow' : '',\n    glass ? 'sr-input-glass' : '',\n    cyberBorder ? 'sr-input-cyber-border' : '',\n    fullWidth ? 'sr-input-full-width' : '',\n    disabled ? 'sr-input-disabled' : '',\n    error ? 'sr-input-error' : '',\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div className={inputWrapperClasses}>\n      {label && (\n        <label htmlFor={inputId} className=\"sr-input-label\">\n          {label}\n        </label>\n      )}\n      \n      <div className=\"sr-input-container\">\n        {startIcon && (\n          <div className=\"sr-input-icon sr-input-start-icon\">\n            {startIcon}\n          </div>\n        )}\n        \n        <input\n          ref={ref}\n          id={inputId}\n          type={type}\n          disabled={disabled}\n          className={`sr-input ${startIcon ? 'sr-input-has-start-icon' : ''} ${endIcon ? 'sr-input-has-end-icon' : ''}`}\n          {...props}\n        />\n        \n        {endIcon && (\n          <div className=\"sr-input-icon sr-input-end-icon\">\n            {endIcon}\n          </div>\n        )}\n      </div>\n      \n      {(helperText || error) && (\n        <div className={`sr-input-helper-text ${error ? 'sr-input-helper-text-error' : ''}`}>\n          {error || helperText}\n        </div>\n      )}\n    </div>\n  );\n});\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import React, { useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\nimport { useNavigate } from 'react-router-dom';\nimport { \n \n  markAlertAsRead, \n  deleteSystemAlert,\n  updateAlertActionStatus,\n  toggleAlertSelection,\n  selectAllAlerts,\n  deselectAllAlerts,\n  deleteSelectedAlerts,\n  updateSelectedAlertsActionStatus,\n  markSelectedAlertsAsRead\n} from '../../../store/slices/systemAlertsSlice';\nimport { QuantumShadowPerson } from '../../common/CharacterIcons';\nimport { Button } from '../../../design-system/components';\nimport './SystemAlertsPanel.css';\n\ninterface SystemAlertsPanelProps {\n  maxAlerts?: number;\n  showAllLink?: boolean;\n  onNavigateToAlerts?: () => void;\n}\n\nexport const SystemAlertsPanel: React.FC<SystemAlertsPanelProps> = ({\n  maxAlerts = 5,\n  showAllLink = true,\n  onNavigateToAlerts\n}) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { alerts, loading: alertsLoading, error: alertsError, selectedCount } = useAppSelector((state) => state.systemAlerts);\n  \n  const [expandedAlertId, setExpandedAlertId] = useState<string | null>(null);\n  const [showActionMenu, setShowActionMenu] = useState(false);\n\n  // Alert management functions\n  const handleMarkAsRead = (id: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    dispatch(markAlertAsRead(id));\n  };\n\n  const handleDelete = (id: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    dispatch(deleteSystemAlert(id));\n  };\n\n  const handleToggleSelection = (id: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    dispatch(toggleAlertSelection(id));\n  };\n\n  const handleSelectAll = () => {\n    dispatch(selectAllAlerts());\n  };\n\n  const handleDeselectAll = () => {\n    dispatch(deselectAllAlerts());\n  };\n\n  const handleDeleteSelected = () => {\n    if (window.confirm('Are you sure you want to delete all selected alerts? This shit can\\'t be undone.')) {\n      dispatch(deleteSelectedAlerts());\n    }\n  };\n\n  const handleUpdateActionStatus = (status: 'none' | 'actioned' | 'not_actioned' | 'to_action_later') => {\n    dispatch(updateSelectedAlertsActionStatus(status));\n    setShowActionMenu(false);\n  };\n\n  const handleMarkSelectedAsRead = () => {\n    dispatch(markSelectedAlertsAsRead());\n  };\n\n  const handleAlertClick = (id: string) => {\n    if (expandedAlertId === id) {\n      setExpandedAlertId(null);\n    } else {\n      setExpandedAlertId(id);\n    }\n  };\n\n  const handleViewAllAlerts = () => {\n    if (onNavigateToAlerts) {\n      onNavigateToAlerts();\n    } else {\n      navigate('/alerts');\n    }\n  };\n\n  const getSeverityClass = (severity: string) => {\n    switch (severity.toUpperCase()) {\n      case 'CRITICAL':\n        return 'critical';\n      case 'HIGH':\n        return 'high';\n      case 'MEDIUM':\n        return 'medium';\n      case 'LOW':\n        return 'low';\n      default:\n        return '';\n    }\n  };\n\n  const getActionStatusLabel = (status?: string) => {\n    switch (status) {\n      case 'actioned':\n        return 'Actioned';\n      case 'not_actioned':\n        return 'Not Actioned';\n      case 'to_action_later':\n        return 'Action Later';\n      default:\n        return 'No Status';\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  return (\n    <div className=\"system-alerts\">\n      <div className=\"alerts-card-header\">\n        <h2>System Alerts</h2>\n        <div className=\"quantum-shadow-icon\">\n          <QuantumShadowPerson className=\"shadow-icon\" />\n        </div>\n      </div>\n\n      {alertsLoading ? (\n        <div className=\"alerts-loading\">Loading alerts...</div>\n      ) : alertsError ? (\n        <div className=\"alerts-error\">{alertsError}</div>\n      ) : (\n        <>\n          {selectedCount > 0 && (\n            <div className=\"bulk-actions\">\n              <span className=\"selected-count\">{selectedCount} selected</span>\n              <div className=\"bulk-action-buttons\">\n                <Button \n                  variant=\"primary\" \n                  size=\"sm\" \n                  onClick={handleMarkSelectedAsRead}\n                >\n                  Mark Read\n                </Button>\n                <Button \n                  variant=\"danger\" \n                  size=\"sm\" \n                  onClick={handleDeleteSelected}\n                >\n                  Delete\n                </Button>\n                <div className=\"action-status-dropdown\">\n                  <Button \n                    variant=\"secondary\" \n                    size=\"sm\" \n                    onClick={() => setShowActionMenu(!showActionMenu)}\n                  >\n                    Set Status\n                  </Button>\n                  {showActionMenu && (\n                    <div className=\"action-status-menu\">\n                      <Button \n                        variant=\"secondary\" \n                        size=\"sm\" \n                        onClick={() => handleUpdateActionStatus('actioned')}\n                      >\n                        Actioned\n                      </Button>\n                      <Button \n                        variant=\"secondary\" \n                        size=\"sm\" \n                        onClick={() => handleUpdateActionStatus('not_actioned')}\n                      >\n                        Not Actioned\n                      </Button>\n                      <Button \n                        variant=\"secondary\" \n                        size=\"sm\" \n                        onClick={() => handleUpdateActionStatus('to_action_later')}\n                      >\n                        Action Later\n                      </Button>\n                      <Button \n                        variant=\"secondary\" \n                        size=\"sm\" \n                        onClick={() => handleUpdateActionStatus('none')}\n                      >\n                        No Status\n                      </Button>\n                    </div>\n                  )}\n                </div>\n                <Button \n                  variant=\"secondary\" \n                  size=\"sm\" \n                  onClick={handleDeselectAll}\n                >\n                  Deselect All\n                </Button>\n              </div>\n            </div>\n          )}\n\n          <div className=\"dashboard-alerts-list\">\n            {alerts.filter(alert => !alert.is_read).length === 0 ? (\n              <div className=\"no-alerts\">\n                <p>No unread alerts to display</p>\n              </div>\n            ) : (\n              alerts.filter(alert => !alert.is_read).slice(0, maxAlerts).map(alert => (\n                <div \n                  key={alert.id} \n                  className={`dashboard-alert-card ${alert.is_read ? 'read' : 'unread'} ${alert.selected ? 'selected' : ''} ${expandedAlertId === alert.id ? 'expanded' : ''}`}\n                  onClick={() => handleAlertClick(alert.id)}\n                >\n                  <div className=\"alert-selection\">\n                    <input \n                      type=\"checkbox\" \n                      checked={alert.selected || false}\n                      onChange={(e) => handleToggleSelection(alert.id, e.nativeEvent as unknown as React.MouseEvent)}\n                      onClick={(e) => e.stopPropagation()}\n                    />\n                  </div>\n                  \n                  <div className=\"alert-content\">\n                    <div className=\"alert-header\">\n                      <div className={`severity-indicator ${getSeverityClass(alert.severity)}`}>\n                        {alert.severity}\n                      </div>\n                      <h3>{alert.title}</h3>\n                      {!alert.is_read && <span className=\"unread-badge\">NEW</span>}\n                      {alert.action_status && (\n                        <span className={`action-status-badge ${alert.action_status}`}>\n                          {getActionStatusLabel(alert.action_status)}\n                        </span>\n                      )}\n                    </div>\n                    \n                    {expandedAlertId === alert.id && (\n                      <>\n                        <div className=\"alert-timestamp\">\n                          {formatDate(alert.timestamp)}\n                        </div>\n                        \n                        <p className=\"alert-message\">{alert.message}</p>\n                        \n                        <div className=\"action-status-selector\">\n                          <span>Status:</span>\n                          <select \n                            value={alert.action_status || 'none'}\n                            onChange={(e) => {\n                              dispatch(updateAlertActionStatus({\n                                id: alert.id, \n                                status: e.target.value as 'none' | 'actioned' | 'not_actioned' | 'to_action_later'\n                              }));\n                              e.stopPropagation();\n                            }}\n                            onClick={(e) => e.stopPropagation()}\n                          >\n                            <option value=\"none\">No Status</option>\n                            <option value=\"actioned\">Actioned</option>\n                            <option value=\"not_actioned\">Not Actioned</option>\n                            <option value=\"to_action_later\">Action Later</option>\n                          </select>\n                        </div>\n                      </>\n                    )}\n                  </div>\n                  \n                  <div className=\"alert-actions\">\n                    {!alert.is_read && (\n                      <Button \n                        variant=\"primary\" \n                        size=\"sm\"\n                        circle\n                        onClick={(e) => handleMarkAsRead(alert.id, e)}\n                        title=\"Mark as Read\"\n                      >\n                        ✓\n                      </Button>\n                    )}\n                    <Button \n                      variant=\"danger\" \n                      size=\"sm\"\n                      circle\n                      onClick={(e) => handleDelete(alert.id, e)}\n                      title=\"Delete\"\n                    >\n                      ×\n                    </Button>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n\n          <div className=\"alerts-card-footer\">\n            <Button \n              variant=\"primary\" \n              size=\"sm\" \n              onClick={handleSelectAll}\n            >\n              Select All\n            </Button>\n            {showAllLink && (\n              <Button \n                variant=\"secondary\" \n                size=\"sm\" \n                onClick={handleViewAllAlerts}\n              >\n                View All Alerts\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SystemAlertsPanel;\n","import React from 'react';\nimport { useAppSelector, useAppDispatch } from '../../../store/hooks';\nimport { fetchPatterns } from '../../../store/slices/autoTunerSlice';\nimport { MethSnail } from '../../common/CharacterIcons';\nimport { Button } from '../../../design-system/components';\nimport './SystemPatternsPanel.css';\n\ninterface SystemPatternsPanelProps {\n  maxPatterns?: number;\n}\n\nexport const SystemPatternsPanel: React.FC<SystemPatternsPanelProps> = ({\n  maxPatterns\n}) => {\n  const dispatch = useAppDispatch();\n  const patterns = useAppSelector((state) => state.autoTuner.patterns);\n  const patternsStatus = useAppSelector((state) => state.autoTuner.status);\n  const error = useAppSelector((state) => state.autoTuner.error);\n  \n  // Fetch patterns on component mount\n  React.useEffect(() => {\n    console.log('SystemPatternsPanel: Fetching patterns...');\n    dispatch(fetchPatterns());\n    \n    // Set up polling for patterns\n    const intervalId = setInterval(() => {\n      console.log('SystemPatternsPanel: Polling for patterns...');\n      dispatch(fetchPatterns());\n    }, 60000); // Poll every minute\n    \n    return () => clearInterval(intervalId);\n  }, [dispatch]);\n  \n  // Log patterns for debugging\n  React.useEffect(() => {\n    console.log('SystemPatternsPanel: Current patterns:', patterns);\n    console.log('SystemPatternsPanel: Patterns status:', patternsStatus);\n    console.log('SystemPatternsPanel: Error:', error);\n  }, [patterns, patternsStatus, error]);\n  \n  // Function to reload patterns\n  const handleReloadPatterns = () => {\n    console.log('SystemPatternsPanel: Manually reloading patterns...');\n    dispatch(fetchPatterns());\n  };\n\n  // Filter patterns if maxPatterns is provided\n  const displayPatterns = maxPatterns ? patterns.slice(0, maxPatterns) : patterns;\n\n  return (\n    <div className=\"system-patterns\">\n      <div className=\"patterns-card-header\">\n        <h2>Detected System Patterns</h2>\n        <div className=\"meth-snail-icon\">\n          <MethSnail className=\"snail-icon\" />\n          <div className=\"character-tooltip\">\n            <p>\"The Meth Snail is analyzing your system patterns... slowly but thoroughly!\"</p>\n          </div>\n        </div>\n      </div>\n      \n      {patternsStatus === 'loading' ? (\n        <div className=\"patterns-loading\">\n          <p>Loading patterns... The Meth Snail is thinking...</p>\n          <div className=\"loading-animation\"></div>\n        </div>\n      ) : !patterns || patterns.length === 0 ? (\n        <div className=\"patterns-empty\">\n          <p>No patterns detected yet</p>\n          <Button \n            variant=\"cyber\" \n            size=\"sm\" \n            onClick={handleReloadPatterns}\n            glow\n          >\n            Poke the Snail\n          </Button>\n        </div>\n      ) : (\n        <div className=\"patterns-list\">\n          {displayPatterns.map((pattern, index) => (\n            <div key={index} className=\"pattern-card\">\n              <div className=\"pattern-header\">\n                <h3>{pattern.type}</h3>\n                <div className=\"pattern-confidence\">\n                  Confidence: {(pattern.confidence * 100).toFixed(0)}%\n                </div>\n              </div>\n              <div className=\"pattern-details\">\n                <div className=\"pattern-description\">{pattern.pattern}</div>\n                <div className=\"pattern-info\">\n                  {Object.entries(pattern.details).map(([key, value]) => (\n                    <div key={key} className=\"pattern-detail-item\">\n                      <span className=\"detail-key\">{key}:</span> {JSON.stringify(value)}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          ))}\n          \n          {patterns.length > displayPatterns.length && (\n            <div className=\"more-patterns\">\n              <p>{patterns.length - displayPatterns.length} more patterns available</p>\n              <Button \n                variant=\"secondary\" \n                size=\"sm\" \n                onClick={handleReloadPatterns}\n              >\n                View All Patterns\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SystemPatternsPanel;\n","import React, { useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\nimport './Dashboard.css';\nimport { fetchPatterns } from '../../../store/slices/autoTunerSlice';\nimport { fetchSystemAlerts } from '../../../store/slices/systemAlertsSlice';\nimport useMetricsWebSocket from '../../../store/useMetricsWebSocket'; // Restore this import\nimport { RootState } from '../../../store/store';\nimport SystemStatus from './SystemStatus/SystemStatus';\nimport MetricsPanel from '../MetricsPanel/MetricsPanel';\nimport SystemAlertsPanel from '../SystemAlertsPanel/SystemAlertsPanel';\nimport SystemPatternsPanel from '../SystemPatternsPanel/SystemPatternsPanel';\n\ninterface DashboardProps {}\n\nexport const Dashboard: React.FC<DashboardProps> = () => {\n  const dispatch = useAppDispatch();\n  const { user } = useAppSelector((state) => state.auth);\n  const { loading, error } = useAppSelector(\n    (state: RootState) => state.metrics\n  );\n  \n  // IMPORTANT: Restore this hook to ensure WebSocket connection is established\n  useMetricsWebSocket();\n  \n  // Fetch initial data\n  useEffect(() => {\n    console.log(\"🚀 Initializing Dashboard...\");\n    \n    // Fetch initial data\n    dispatch(fetchPatterns() as any);\n    dispatch(fetchSystemAlerts({ skip: 0, limit: 20 }));\n    \n    return () => {\n      console.log(\"🧹 Cleaning up Dashboard resources...\");\n    };\n  }, [dispatch]);\n\n  // Display personalized welcome message if user is available\n  const getWelcomeMessage = () => {\n    if (user?.username) {\n      const hour = new Date().getHours();\n      const greeting = hour < 12 ? \"Good morning\" : hour < 18 ? \"Good afternoon\" : \"Good evening\";\n      return `${greeting}, ${user.username}!`;\n    }\n    return \"System Dashboard\";\n  };\n\n  // Show loading state\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading dashboard...</p>\n      </div>\n    );\n  }\n\n  // Show error state\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <h2>⚠️ Connection Error</h2>\n        <p>{error}</p>\n        <button \n          className=\"retry-button\"\n          onClick={() => window.location.reload()}\n        >\n          Retry Connection\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard-header\">\n        <h1>{getWelcomeMessage()}</h1>\n        \n        <div className=\"ticker-container\">\n          <SystemStatus loading={loading} error={error} />\n        </div>\n      </div>\n      \n      <div className=\"dashboard-content\">\n        <div className=\"dashboard-main\">\n          <MetricsPanel />\n        </div>\n        <div className=\"dashboard-sidebar\">\n          <SystemAlertsPanel maxAlerts={5} showAllLink={true} />\n          <SystemPatternsPanel maxPatterns={5} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;","import React, { useState, useRef, useEffect } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../../store/hooks\";\nimport { updateProfile, checkAuthStatus } from \"../../../store/slices/authSlice\";\nimport { CharacterAvatarSelector, getCharacterById } from \"../../common/CharacterIcons\";\nimport \"./UserProfile.css\";\n\n// Define extended profile interface\ninterface ExtendedProfile {\n  profile: {\n    operating_system: string;\n    os_version: string;\n    linux_distro: string;\n    linux_distro_version: string;\n    cpu_cores: number;\n    total_memory: number;\n    avatar: string;\n    bio?: string;\n    joined_date?: string;\n  };\n  preferences: {\n    optimization_level: string;\n    theme_preferences: {\n      use_dark_mode: boolean;\n    };\n    notification_preferences?: {\n      email_alerts: boolean;\n      system_alerts: boolean;\n    };\n  };\n  email?: string;\n}\n\ninterface UserProfileProps {\n  isOpen?: boolean;\n  onClose?: () => void;\n}\n\nexport const UserProfile: React.FC<UserProfileProps> = ({ isOpen, onClose }) => {\n  const dispatch = useAppDispatch();\n  const { user, isAuthenticated, isLoading, error } = useAppSelector(state => state.auth as { \n    user: ExtendedProfile & { username: string }, \n    isAuthenticated: boolean, \n    isLoading: boolean, \n    error: string | null \n  });\n  \n  const [localError, setLocalError] = useState<string | null>(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [selectedAvatar, setSelectedAvatar] = useState<string>('sir-hawkington');\n  const [activeTab, setActiveTab] = useState<'profile' | 'system' | 'preferences'>('profile');\n  \n  // Refs to store the edited values\n  const bioRef = useRef<HTMLTextAreaElement>(null);\n  const emailRef = useRef<HTMLInputElement>(null);\n  const osRef = useRef<HTMLInputElement>(null);\n  const distroRef = useRef<HTMLInputElement>(null);\n  const cpuCoresRef = useRef<HTMLInputElement>(null);\n  const memoryRef = useRef<HTMLInputElement>(null);\n  const optimizationLevelRef = useRef<HTMLSelectElement>(null);\n  const emailAlertsRef = useRef<HTMLInputElement>(null);\n  const systemAlertsRef = useRef<HTMLInputElement>(null);\n  \n  // Fetch user data when component mounts\n  useEffect(() => {\n    if (!user && isAuthenticated) {\n      dispatch(checkAuthStatus());\n    }\n  }, [user, isAuthenticated, dispatch]);\n  \n  // Set the selected avatar when user data loads\n  useEffect(() => {\n    if (user?.profile?.avatar) {\n      setSelectedAvatar(user.profile.avatar);\n    }\n  }, [user]);\n  \n  // Update error state when Redux error changes\n  useEffect(() => {\n    if (error) {\n      setLocalError(error);\n    }\n  }, [error]);\n  \n  // Handle escape key press\n  useEffect(() => {\n    const handleEscapeKey = (event: KeyboardEvent) => {\n      if (event.key === 'Escape' && onClose) {\n        onClose();\n      }\n    };\n    \n    if (isOpen) {\n      document.addEventListener('keydown', handleEscapeKey);\n      return () => {\n        document.removeEventListener('keydown', handleEscapeKey);\n      };\n    }\n    return undefined;\n  }, [isOpen, onClose]);\n  \n  // Handle avatar selection\n  const handleAvatarSelect = (avatarId: string) => {\n    setSelectedAvatar(avatarId);\n    console.log(`🧐 Sir Hawkington: \"Ah, I see you've chosen ${avatarId} as your digital persona. Splendid choice!\"`);\n  };\n  \n  // Handle edit/save button click\n  const handleEditClick = async () => {\n    if (!isAuthenticated) {\n      console.log(\"Error: You must be logged in to edit your profile\");\n      setLocalError(\"You must be logged in to edit your profile\");\n      return;\n    }\n    \n    if (isEditing) {\n      console.log(\"Saving profile changes...\");\n      try {\n        // Get values from refs based on active tab\n        let profileData: Record<string, any> = {};\n        let preferencesData: Record<string, any> = {};\n        \n        // Always include avatar\n        profileData.avatar = selectedAvatar;\n        \n        // Profile tab data\n        if (bioRef.current) {\n          profileData.bio = bioRef.current.value.trim().substring(0, 300); // Limit to 300 chars\n        }\n        \n        if (emailRef.current) {\n          profileData.email = emailRef.current.value;\n        }\n        \n        // System tab data\n        if (activeTab === 'system' || activeTab === 'profile') {\n          const osValue = osRef.current?.value || '';\n          const distroValue = distroRef.current?.value || '';\n          const cpuCores = Number(cpuCoresRef.current?.value || 0);\n          const memory = Number(memoryRef.current?.value || 0) * 1024; // Convert GB to MB\n          \n          // Split OS and distro\n          const osParts = osValue.split(' ');\n          const osName = osParts[0] || '';\n          const osVersion = osParts.slice(1).join(' ') || '';\n          \n          const distroParts = distroValue.split(' ');\n          const distroName = distroParts[0] || '';\n          const distroVersion = distroParts.slice(1).join(' ') || '';\n          \n          // Add to profile data\n          profileData.operating_system = osName;\n          profileData.os_version = osVersion;\n          profileData.linux_distro = distroName;\n          profileData.linux_distro_version = distroVersion;\n          profileData.cpu_cores = cpuCores;\n          profileData.total_memory = memory;\n        }\n        \n        // Preferences tab data\n        if (activeTab === 'preferences' || activeTab === 'profile') {\n          const optimizationLevel = optimizationLevelRef.current?.value || 'moderate';\n          const emailAlerts = emailAlertsRef.current?.checked || false;\n          const systemAlerts = systemAlertsRef.current?.checked || false;\n          \n          // Create preferences data\n          preferencesData.optimization_level = optimizationLevel;\n          preferencesData.theme_preferences = {\n            use_dark_mode: user?.preferences?.theme_preferences?.use_dark_mode || false\n          };\n          preferencesData.notification_preferences = {\n            email_alerts: emailAlerts,\n            system_alerts: systemAlerts\n          };\n        }\n        \n        // Combine all data\n        const userData = {\n          profile: profileData,\n          preferences: preferencesData\n        };\n        \n        console.log(\"Updating profile with data:\", userData);\n        await dispatch(updateProfile(userData)).unwrap();\n        setIsEditing(false);\n        console.log(\"🧐 Sir Hawkington: 'Your profile has been updated with distinguished elegance!'\");\n      } catch (err: any) {\n        console.error(\"Error updating profile:\", err);\n        setLocalError(err.message || \"Failed to update profile\");\n        console.log(\"🧐 Sir Hawkington: 'Oh dear, it seems we've encountered a problem with your profile update.'\");\n      }\n    } else {\n      setIsEditing(true);\n      console.log(\"🧐 Sir Hawkington: 'I see you wish to modify your digital persona. How splendid!'\");\n    }\n  };\n  \n  // Loading state\n  if (isLoading) {\n    return (\n      <div className=\"user-profile-modal visible\">\n        <div className=\"user-profile-card\">\n          <div className=\"loading-spinner\">Loading profile...</div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Not authenticated state\n  if (!isAuthenticated) {\n    return (\n      <div className=\"user-profile-modal visible\">\n        <div className=\"user-profile-card\">\n          {onClose && (\n            <button className=\"close-button\" onClick={onClose}>\n              ×\n            </button>\n          )}\n          <h2 className=\"profile-title\">Please log in</h2>\n          {localError && (\n            <div className=\"error-message\">\n              <p>{localError}</p>\n              <button onClick={() => setLocalError(null)}>Dismiss</button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n  \n  // Main render\n  return (\n    <div className={`user-profile-modal ${isOpen ? 'visible' : ''}`}>\n      <div className=\"user-profile-card\">\n        {onClose && (\n          <button className=\"close-button\" onClick={onClose}>\n            ×\n          </button>\n        )}\n        <h2 className=\"profile-title\">User Profile</h2>\n        \n        {localError && (\n          <div className=\"error-message\">\n            <p>{localError}</p>\n            <button onClick={() => setLocalError(null)}>Dismiss</button>\n          </div>\n        )}\n        \n        <div className=\"profile-header\">\n          <div className=\"profile-avatar\">\n            {getCharacterById(user?.profile?.avatar || 'sir-hawkington')}\n          </div>\n          <div className=\"profile-info\">\n            <h3 className=\"profile-username\">{user?.username || 'Anonymous User'}</h3>\n            <div className=\"profile-joined\">\n              Joined: {user?.profile?.joined_date ? new Date(user?.profile?.joined_date).toLocaleDateString() : 'Unknown'}\n            </div>\n            <div className=\"profile-email\">{user?.email || ''}</div>\n          </div>\n        </div>\n        \n        <div className=\"profile-tabs\">\n          <button \n            className={`tab-button ${activeTab === 'profile' ? 'active' : ''}`}\n            onClick={() => setActiveTab('profile')}\n          >\n            Profile\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'system' ? 'active' : ''}`}\n            onClick={() => setActiveTab('system')}\n          >\n            System Info\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'preferences' ? 'active' : ''}`}\n            onClick={() => setActiveTab('preferences')}\n          >\n            Preferences\n          </button>\n        </div>\n        \n        <div className=\"tab-content\">\n          {/* Profile Tab */}\n          {activeTab === 'profile' && (\n            <div className=\"profile-tab-content\">\n              <div className=\"profile-section\">\n                <h3>Personal Information</h3>\n                \n                <div className=\"info-item\">\n                  <label>Username:</label>\n                  <span>{user?.username}</span>\n                </div>\n                \n                <div className=\"info-item\">\n                  <label>Email:</label>\n                  {isEditing ? (\n                    <input \n                      type=\"email\" \n                      defaultValue={user?.email || ''} \n                      className=\"edit-input\"\n                      ref={emailRef}\n                    />\n                  ) : (\n                    <span>{user?.email || 'Not provided'}</span>\n                  )}\n                </div>\n                \n                <div className=\"info-item bio-item\">\n                  <label>Bio:</label>\n                  {isEditing ? (\n                    <>\n                      <textarea \n                        defaultValue={user?.profile?.bio || ''} \n                        className=\"edit-input bio-input\"\n                        ref={bioRef}\n                        maxLength={300}\n                        placeholder=\"Tell us about yourself (max 300 characters)\"\n                      />\n                      <div className=\"bio-counter\">\n                        {bioRef.current?.value?.length || 0}/300\n                      </div>\n                    </>\n                  ) : (\n                    <span className=\"bio-text\">{user?.profile?.bio || 'No bio provided'}</span>\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"avatar-section\">\n                <h3>Character Avatar</h3>\n                <div className=\"current-avatar\">\n                  <label>Current Avatar:</label>\n                  <div className=\"avatar-display\">\n                    {getCharacterById(user?.profile?.avatar || 'sir-hawkington')}\n                    <span className=\"avatar-name\">\n                      {user?.profile?.avatar ? user?.profile?.avatar.split('-').map((word: string) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ') : 'Sir Hawkington'}\n                    </span>\n                  </div>\n                </div>\n                \n                {isEditing && (\n                  <CharacterAvatarSelector \n                    selectedAvatar={selectedAvatar} \n                    onSelect={handleAvatarSelect} \n                  />\n                )}\n              </div>\n            </div>\n          )}\n          \n          {/* System Info Tab */}\n          {activeTab === 'system' && (\n            <div className=\"system-tab-content\">\n              <div className=\"system-info-section\">\n                <h3>System Information</h3>\n                <div className=\"info-item\">\n                  <label>Operating System:</label>\n                  {isEditing ? (\n                    <input \n                      type=\"text\" \n                      defaultValue={`${user?.profile?.operating_system || ''} ${user?.profile?.os_version || ''}`} \n                      className=\"edit-input\"\n                      ref={osRef}\n                    />\n                  ) : (\n                    <span>{user?.profile?.operating_system} {user?.profile?.os_version}</span>\n                  )}\n                </div>\n                {user?.profile?.linux_distro && (\n                  <div className=\"info-item\">\n                    <label>Distribution:</label>\n                    {isEditing ? (\n                      <input \n                        type=\"text\" \n                        defaultValue={`${user?.profile?.linux_distro || ''} ${user?.profile?.linux_distro_version || ''}`} \n                        className=\"edit-input\"\n                        ref={distroRef}\n                      />\n                    ) : (\n                      <span>{user?.profile?.linux_distro} {user?.profile?.linux_distro_version}</span>\n                    )}\n                  </div>\n                )}\n                <div className=\"info-item\">\n                  <label>CPU Cores:</label>\n                  {isEditing ? (\n                    <input \n                      type=\"number\" \n                      defaultValue={user?.profile?.cpu_cores || 0} \n                      className=\"edit-input\"\n                      ref={cpuCoresRef}\n                    />\n                  ) : (\n                    <span>{user?.profile?.cpu_cores}</span>\n                  )}\n                </div>\n                <div className=\"info-item\">\n                  <label>Total Memory:</label>\n                  {isEditing ? (\n                    <input \n                      type=\"number\" \n                      defaultValue={(user?.profile?.total_memory || 0) / 1024} \n                      className=\"edit-input\"\n                      step=\"0.1\"\n                      ref={memoryRef}\n                    />\n                  ) : (\n                    <span>{(user?.profile?.total_memory || 0) / 1024} GB</span>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n          \n          {/* Preferences Tab */}\n          {activeTab === 'preferences' && (\n            <div className=\"preferences-tab-content\">\n              <div className=\"preferences-section\">\n                <h3>Optimization Preferences</h3>\n                <div className=\"info-item\">\n                  <label>Optimization Level:</label>\n                  {isEditing ? (\n                    <select \n                      defaultValue={user?.preferences?.optimization_level || 'moderate'} \n                      className=\"edit-input\"\n                      ref={optimizationLevelRef}\n                    >\n                      <option value=\"conservative\">Conservative</option>\n                      <option value=\"moderate\">Moderate</option>\n                      <option value=\"aggressive\">Aggressive</option>\n                      <option value=\"meth_snail_overdrive\">Meth Snail Overdrive</option>\n                    </select>\n                  ) : (\n                    <span>{user?.preferences?.optimization_level}</span>\n                  )}\n                </div>\n                \n                <h3>Notification Preferences</h3>\n                <div className=\"info-item checkbox-item\">\n                  <label>Email Alerts:</label>\n                  {isEditing ? (\n                    <input \n                      type=\"checkbox\" \n                      defaultChecked={user?.preferences?.notification_preferences?.email_alerts || false} \n                      className=\"checkbox-input\"\n                      ref={emailAlertsRef}\n                    />\n                  ) : (\n                    <span>{user?.preferences?.notification_preferences?.email_alerts ? 'Enabled' : 'Disabled'}</span>\n                  )}\n                </div>\n                <div className=\"info-item checkbox-item\">\n                  <label>System Alerts:</label>\n                  {isEditing ? (\n                    <input \n                      type=\"checkbox\" \n                      defaultChecked={user?.preferences?.notification_preferences?.system_alerts || false} \n                      className=\"checkbox-input\"\n                      ref={systemAlertsRef}\n                    />\n                  ) : (\n                    <span>{user?.preferences?.notification_preferences?.system_alerts ? 'Enabled' : 'Disabled'}</span>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"profile-actions\">\n          <button \n            className={`edit-button ${isEditing ? 'save-mode' : ''}`}\n            onClick={handleEditClick}\n            disabled={isLoading}\n          >\n            {isLoading ? 'Processing...' : isEditing ? 'Save Changes' : 'Edit Profile'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfile;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAppSelector, useAppDispatch } from '../../store/hooks';\nimport { logout, checkAuthStatus } from '../../store/slices/authSlice';\nimport { getCharacterById } from './CharacterIcons';\nimport { UserProfile } from '../dashboard/UserProfile/UserProfile';\nimport SignupModal from '../Auth/SignupModal/SignupModal';\nimport Login from '../Auth/login/Login';\nimport './Navbar.css';\n\nconst Navbar: React.FC = () => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [showProfileModal, setShowProfileModal] = useState(false);\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [showSignupModal, setShowSignupModal] = useState(false);\n  \n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  \n  const { isAuthenticated, user } = useAppSelector(state => state.auth);\n  \n  // Check auth status when component mounts\n  useEffect(() => {\n    dispatch(checkAuthStatus());\n  }, [dispatch]);\n  \n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsDropdownOpen(false);\n      }\n    };\n    \n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  \n  const handleLogout = () => {\n    console.log(\"🧐 Sir Hawkington is preparing your formal departure...\");\n    dispatch(logout());\n    navigate('/login');\n    setIsDropdownOpen(false);\n    console.log(\"👋 Sir Hawkington tips his hat as you leave. The Meth Snail waves a sad antenna.\");\n  };\n  \n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n  \n  const toggleMobileMenu = () => {\n    setIsMobileMenuOpen(!isMobileMenuOpen);\n  };\n  \n  const openProfileModal = () => {\n    setShowProfileModal(true);\n    setIsDropdownOpen(false);\n  };\n  \n  const openLoginModal = () => {\n    setShowLoginModal(true);\n    setIsDropdownOpen(false);\n  };\n  \n  const openSignupModal = () => {\n    setShowSignupModal(true);\n    setIsDropdownOpen(false);\n  };\n  \n  // Get avatar from user data\n  const getUserAvatar = () => {\n    if (user) {\n      return user.avatar || (user.profile && user.profile.avatar) || 'sir-hawkington';\n    }\n    return 'sir-hawkington';\n  };\n  \n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-container\">\n        <div className=\"navbar-logo\">\n          <Link to=\"/dashboard\">System Rebellion HQ</Link>\n        </div>\n        \n        <div className=\"navbar-links-container\">\n          <button className=\"mobile-menu-button\" onClick={toggleMobileMenu}>\n            <span></span>\n            <span></span>\n            <span></span>\n          </button>\n          \n          <ul className={`navbar-links ${isMobileMenuOpen ? 'active' : ''}`}>\n            <li>\n              <Link to=\"/dashboard\" onClick={() => setIsMobileMenuOpen(false)}>Dashboard</Link>\n            </li>\n            <li>\n              <Link to=\"/auto-tuner\" onClick={() => setIsMobileMenuOpen(false)}>Auto Tuner</Link>\n            </li>\n            <li>\n              <Link to=\"/metrics\" onClick={() => setIsMobileMenuOpen(false)}>System Metrics</Link>\n            </li>\n            <li>\n              <Link to=\"/optimization\" onClick={() => setIsMobileMenuOpen(false)}>Optimization Profiles</Link>\n            </li>\n            <li>\n              <Link to=\"/alerts\" onClick={() => setIsMobileMenuOpen(false)}>System Alerts</Link>\n            </li>\n            <li>\n              <Link to=\"/configuration\" onClick={() => setIsMobileMenuOpen(false)}>System Configuration</Link>\n            </li>\n          </ul>\n        </div>\n        \n        <div className=\"navbar-profile\" ref={dropdownRef}>\n          <div className=\"navbar-avatar\" onClick={toggleDropdown}>\n            {getCharacterById(getUserAvatar())}\n          </div>\n          \n          {isDropdownOpen && (\n            <div className=\"profile-dropdown\">\n              {isAuthenticated ? (\n                <>\n                  <div className=\"dropdown-user-info\">\n                    <div className=\"dropdown-avatar\">\n                      {getCharacterById(getUserAvatar())}\n                    </div>\n                    <div className=\"dropdown-user-details\">\n                      <span className=\"dropdown-username\">{user?.username}</span>\n                      <span className=\"dropdown-role\">System Optimizer</span>\n                    </div>\n                  </div>\n                  <div className=\"dropdown-divider\"></div>\n                  <ul className=\"dropdown-menu\">\n                    <li onClick={openProfileModal}>\n                      <span className=\"dropdown-icon\">👤</span>\n                      Profile Settings\n                    </li>\n                    <li onClick={handleLogout}>\n                      <span className=\"dropdown-icon\">🚪</span>\n                      Logout\n                    </li>\n                  </ul>\n                </>\n              ) : (\n                <ul className=\"dropdown-menu\">\n                  <li onClick={openLoginModal}>\n                    <span className=\"dropdown-icon\">🔑</span>\n                    Login\n                  </li>\n                  <li onClick={openSignupModal}>\n                    <span className=\"dropdown-icon\">✨</span>\n                    Sign Up\n                  </li>\n                </ul>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* Modals */}\n      {showProfileModal && (\n        <UserProfile isOpen={showProfileModal} onClose={() => setShowProfileModal(false)} />\n      )}\n      \n      {showLoginModal && (\n        <Login \n          isOpen={showLoginModal} \n          onClose={() => setShowLoginModal(false)}\n        />\n      )}\n      \n      {showSignupModal && (\n        <SignupModal \n          isOpen={showSignupModal} \n          onClose={() => setShowSignupModal(false)}\n        />\n      )}\n    </nav>\n  );\n};\n\nexport default Navbar;","// src/components/common/Layout.tsx\nimport React, { useEffect } from 'react';\nimport { useAppSelector } from '../../store/hooks';\nimport Navbar from './Navbar';\nimport './Layout.css';\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n  const connectionStatus = useAppSelector((state) => state.metrics.connectionStatus);\n\n  // Add effect to hide connection status globally\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.innerHTML = `\n      .connection-status {\n        display: none !important;\n        height: 0 !important;\n        visibility: hidden !important;\n        opacity: 0 !important;\n        position: absolute !important;\n        pointer-events: none !important;\n      }\n    `;\n    document.head.appendChild(style);\n    \n    return () => {\n      document.head.removeChild(style);\n    };\n  }, []);\n\n\n  // Create a minimal indicator\n  const renderMinimalIndicator = () => {\n    const getStatusClass = () => {\n      switch (connectionStatus) {\n        case 'connected': return 'connected';\n        case 'connecting': return 'connecting';\n        case 'error': return 'error';\n        default: return 'disconnected';\n      }\n    };\n    \n    return (\n      <div className=\"minimal-connection-indicator\">\n        <span className={`indicator-dot ${getStatusClass()}`}></span>\n        <style>{`\n          .minimal-connection-indicator {\n            position: fixed;\n            bottom: 10px;\n            right: 10px;\n            z-index: 1000;\n            background: rgba(0, 0, 0, 0.2);\n            padding: 4px;\n            border-radius: 50%;\n          }\n          .indicator-dot {\n            display: block;\n            width: 8px;\n            height: 8px;\n            border-radius: 50%;\n          }\n          .indicator-dot.connected {\n            background: #38b000;\n            box-shadow: 0 0 5px #38b000;\n          }\n          .indicator-dot.connecting {\n            background: #ffbe0b;\n            box-shadow: 0 0 5px #ffbe0b;\n            animation: pulse 1s infinite;\n          }\n          .indicator-dot.disconnected, .indicator-dot.error {\n            background: #ff3838;\n            box-shadow: 0 0 5px #ff3838;\n          }\n          @keyframes pulse {\n            0% { opacity: 0.6; }\n            50% { opacity: 1; }\n            100% { opacity: 0.6; }\n          }\n        `}</style>\n      </div>\n    );\n  };\n  \n  return (\n    <div className=\"layout\">\n      <Navbar />\n      \n      {/* REMOVED: The problematic connection-status div */}\n      \n      <main className=\"main-content\">\n        {children}\n      </main>\n      \n      {/* Small indicator in corner that doesn't interfere with layout */}\n      {renderMinimalIndicator()}\n      \n      <footer className=\"footer\">\n        <div className=\"footer-content\">\n          <p className=\"footer-text\">\n            <span className=\"footer-highlight\">System Rebellion HQ</span> - Powered by <span className=\"footer-highlight\">The Meth Snail</span> and friends\n          </p>\n          <p className=\"footer-disclaimer\">\n            \"Sir Hawkington reminds you that any system instability is merely a sign of rebellion against digital conformity.\"\n          </p>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;","import React, { useState, useRef, useEffect, ReactNode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title: string;\n  children: ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  draggable?: boolean;\n}\n\nconst Modal = ({ \n  isOpen, \n  onClose, \n  title, \n  children, \n  size = 'medium',\n  draggable = false\n}: ModalProps) => {\n  const modalRef = useRef<HTMLDivElement>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (!draggable || !modalRef.current) return;\n    setIsDragging(true);\n    setDragOffset({\n      x: e.clientX - position.x,\n      y: e.clientY - position.y,\n    });\n  };\n\n  const handleMouseMove = (e: MouseEvent) => {\n    if (!isDragging || !modalRef.current) return;\n    const newX = e.clientX - dragOffset.x;\n    const newY = e.clientY - dragOffset.y;\n    setPosition({ x: newX, y: newY });\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    } else {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    }\n\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging, dragOffset]);\n\n  if (!isOpen) return null;\n\n  // Using React Portal to render the modal outside the normal DOM hierarchy\n  // This ensures it's not affected by parent component styles or z-index issues\n  const modalContent = (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div\n        ref={modalRef}\n        className={`modal-content ${size} ${draggable ? 'draggable' : ''}`}\n        onClick={(e) => e.stopPropagation()}\n        onMouseDown={handleMouseDown}\n      >\n        <div className=\"modal-header\">\n          <h2>{title}</h2>\n          <button className=\"close-button\" onClick={onClose}>\n            ×\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n  \n  // Create a portal to render the modal at the end of the document body\n  return ReactDOM.createPortal(\n    modalContent,\n    document.body\n  );\n};\n\nexport default Modal;\n","// src/components/optimization/OptimizationProfiles.tsx\nimport React, { useState, useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport './OptimizationProfiles.css';\nimport { \n  fetchOptimizationProfiles, \n  createOptimizationProfile,\n  updateOptimizationProfile,\n  deleteOptimizationProfile,\n  activateOptimizationProfile\n} from '../../store/slices/optimizationSlice';\nimport Modal from '../common/Modal';\n\ninterface OptimizationProfileFormData {\n  name: string;\n  description: string;\n  usageType: 'gaming' | 'creative' | 'development' | 'office' | 'browsing' | 'custom';\n  settings: {\n    cpuThreshold: number;\n    memoryThreshold: number;\n    diskThreshold: number;\n    networkThreshold: number;\n    enableAutoTuning: boolean;\n    // Added settings for enhanced profiles\n    cpuPriority: 'high' | 'medium' | 'low';\n    backgroundProcessLimit: number;\n    memoryAllocation: {\n      applications: number; // percentage\n      systemCache: number; // percentage\n    };\n    diskPerformance: 'speed' | 'balance' | 'powersave';\n    networkOptimization: {\n      prioritizeStreaming: boolean;\n      prioritizeDownloads: boolean;\n      lowLatencyMode: boolean;\n    };\n    powerProfile: 'performance' | 'balanced' | 'powersave';\n  };\n}\n\nconst defaultFormData: OptimizationProfileFormData = {\n  name: '',\n  description: '',\n  usageType: 'custom',\n  settings: {\n    cpuThreshold: 80,\n    memoryThreshold: 80,\n    diskThreshold: 90,\n    networkThreshold: 70,\n    enableAutoTuning: false,\n    // Default values for enhanced settings\n    cpuPriority: 'medium',\n    backgroundProcessLimit: 25,\n    memoryAllocation: {\n      applications: 70,\n      systemCache: 30\n    },\n    diskPerformance: 'balance',\n    networkOptimization: {\n      prioritizeStreaming: false,\n      prioritizeDownloads: false,\n      lowLatencyMode: false\n    },\n    powerProfile: 'balanced'\n  }\n};\n\nexport const OptimizationProfiles: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { profiles, loading, error } = useAppSelector((state) => state.optimization);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [formData, setFormData] = useState<OptimizationProfileFormData>(defaultFormData);\n  const [editingId, setEditingId] = useState<string | null>(null);\n  const [snailQuote, setSnailQuote] = useState<string>('');\n  const [activeTab, setActiveTab] = useState<'basic' | 'advanced'>('basic');\n\n  const snailQuotes = [\n    \"The Meth Snail is frantically optimizing your system parameters!\",\n    \"Speed is my middle name! Well, actually it's Methamphetamine, but close enough!\",\n    \"These optimization profiles are like my stash - carefully measured and extremely potent!\",\n    \"I'm tweaking these settings faster than I tweak on a Friday night!\",\n    \"Sir Hawkington thinks these settings are too aggressive, but what does that monocle-wearing aristocrat know about SPEED?!\",\n    \"ZOOM ZOOM! Your system will be BLAZING after I'm done with it!\",\n    \"Gaming? Creative work? Office tasks? The Meth Snail has a profile for EVERYTHING!\",\n    \"72 HOURS WITHOUT SLEEP AND I'VE OPTIMIZED 147 SYSTEMS! I CAN SEE THROUGH TIME!\"\n  ];\n\n  useEffect(() => {\n    dispatch(fetchOptimizationProfiles());\n    setSnailQuote(snailQuotes[Math.floor(Math.random() * snailQuotes.length)]);\n  }, [dispatch]);\n\n  const getInitialFormForUsageType = (usageType: string): OptimizationProfileFormData => {\n    const baseForm = { ...defaultFormData, usageType: usageType as any };\n    \n    switch(usageType) {\n      case 'gaming':\n        return {\n          ...baseForm,\n          name: 'Gaming Profile',\n          description: 'Optimized for maximum gaming performance',\n          settings: {\n            ...baseForm.settings,\n            cpuThreshold: 90,\n            memoryThreshold: 85,\n            diskThreshold: 95,\n            networkThreshold: 60,\n            cpuPriority: 'high',\n            backgroundProcessLimit: 10,\n            memoryAllocation: {\n              applications: 85,\n              systemCache: 15\n            },\n            diskPerformance: 'speed',\n            networkOptimization: {\n              prioritizeStreaming: false,\n              prioritizeDownloads: false,\n              lowLatencyMode: true\n            },\n            powerProfile: 'performance'\n          }\n        };\n        \n      case 'creative':\n        return {\n          ...baseForm,\n          name: 'Creative Workstation',\n          description: 'Optimized for creative applications like video editing and 3D rendering',\n          settings: {\n            ...baseForm.settings,\n            cpuThreshold: 85,\n            memoryThreshold: 90,\n            diskThreshold: 90,\n            networkThreshold: 75,\n            cpuPriority: 'high',\n            backgroundProcessLimit: 15,\n            memoryAllocation: {\n              applications: 80,\n              systemCache: 20\n            },\n            diskPerformance: 'speed',\n            networkOptimization: {\n              prioritizeStreaming: false,\n              prioritizeDownloads: true,\n              lowLatencyMode: false\n            },\n            powerProfile: 'performance'\n          }\n        };\n        \n      case 'development':\n        return {\n          ...baseForm,\n          name: 'Development Environment',\n          description: 'Balanced optimization for coding and testing',\n          settings: {\n            ...baseForm.settings,\n            cpuThreshold: 80,\n            memoryThreshold: 85,\n            diskThreshold: 85,\n            networkThreshold: 70,\n            cpuPriority: 'medium',\n            backgroundProcessLimit: 20,\n            memoryAllocation: {\n              applications: 75,\n              systemCache: 25\n            },\n            diskPerformance: 'balance',\n            networkOptimization: {\n              prioritizeStreaming: false,\n              prioritizeDownloads: true,\n              lowLatencyMode: false\n            },\n            powerProfile: 'balanced'\n          }\n        };\n        \n      case 'office':\n        return {\n          ...baseForm,\n          name: 'Office Productivity',\n          description: 'Optimized for office applications and multitasking',\n          settings: {\n            ...baseForm.settings,\n            cpuThreshold: 75,\n            memoryThreshold: 75,\n            diskThreshold: 80,\n            networkThreshold: 65,\n            cpuPriority: 'medium',\n            backgroundProcessLimit: 30,\n            memoryAllocation: {\n              applications: 65,\n              systemCache: 35\n            },\n            diskPerformance: 'balance',\n            networkOptimization: {\n              prioritizeStreaming: false,\n              prioritizeDownloads: false,\n              lowLatencyMode: false\n            },\n            powerProfile: 'balanced'\n          }\n        };\n        \n      case 'browsing':\n        return {\n          ...baseForm,\n          name: 'Web Browsing',\n          description: 'Optimized for browsing with power efficiency',\n          settings: {\n            ...baseForm.settings,\n            cpuThreshold: 70,\n            memoryThreshold: 70,\n            diskThreshold: 75,\n            networkThreshold: 80,\n            cpuPriority: 'low',\n            backgroundProcessLimit: 35,\n            memoryAllocation: {\n              applications: 60,\n              systemCache: 40\n            },\n            diskPerformance: 'powersave',\n            networkOptimization: {\n              prioritizeStreaming: true,\n              prioritizeDownloads: false,\n              lowLatencyMode: false\n            },\n            powerProfile: 'powersave'\n          }\n        };\n        \n      default:\n        return defaultFormData;\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    \n    if (name === 'usageType') {\n      // Load preset when usage type changes\n      const newFormData = getInitialFormForUsageType(value);\n      setFormData(newFormData);\n      return;\n    }\n    \n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSettingChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value, type } = e.target;\n    const checked = type === 'checkbox' ? (e.target as HTMLInputElement).checked : undefined;\n    \n    // Handle nested settings\n    if (name.includes('.')) {\n      const [category, setting] = name.split('.');\n      const categoryValue = formData.settings[category as keyof typeof formData.settings];\n      if (categoryValue && typeof categoryValue === 'object' && !Array.isArray(categoryValue)) {\n        setFormData({\n          ...formData,\n          settings: {\n            ...formData.settings,\n            [category]: {\n              ...categoryValue,\n              [setting]: type === 'checkbox' ? checked :\n                        type === 'number' || name.endsWith('Threshold') || name === 'backgroundProcessLimit'\n                          ? Number(value)\n                          : value\n            }\n          }\n        });\n      } else {\n        // Fallback: treat as flat key if not an object\n        setFormData({\n          ...formData,\n          settings: {\n            ...formData.settings,\n            [name]: type === 'checkbox' ? checked :\n                    type === 'number' || name.endsWith('Threshold') || name === 'backgroundProcessLimit'\n                      ? Number(value)\n                      : value\n          }\n        });\n      }\n    } else {\n      setFormData({\n        ...formData,\n        settings: {\n          ...formData.settings,\n          [name]: type === 'checkbox' ? checked : \n                  type === 'number' || name.endsWith('Threshold') || name === 'backgroundProcessLimit' ? \n                  Number(value) : value\n        }\n      });\n    }\n  };\n\n  const handleSubmit = () => {\n    if (editingId) {\n      dispatch(updateOptimizationProfile({ id: editingId, ...formData }));\n    } else {\n      dispatch(createOptimizationProfile(formData));\n    }\n    setIsModalOpen(false);\n    setFormData(defaultFormData);\n    setEditingId(null);\n    setSnailQuote(snailQuotes[Math.floor(Math.random() * snailQuotes.length)]);\n  };\n\n  const handleEdit = (profile: any) => {\n    // Convert from API format to our form format if needed\n    const formattedProfile = {\n      name: profile.name,\n      description: profile.description,\n      usageType: profile.usageType || 'custom',\n      settings: {\n        cpuThreshold: profile.settings.cpuThreshold || 80,\n        memoryThreshold: profile.settings.memoryThreshold || 80,\n        diskThreshold: profile.settings.diskThreshold || 90,\n        networkThreshold: profile.settings.networkThreshold || 70,\n        enableAutoTuning: profile.settings.enableAutoTuning || false,\n        cpuPriority: profile.settings.cpuPriority || 'medium',\n        backgroundProcessLimit: profile.settings.backgroundProcessLimit || 25,\n        memoryAllocation: profile.settings.memoryAllocation || {\n          applications: 70,\n          systemCache: 30\n        },\n        diskPerformance: profile.settings.diskPerformance || 'balance',\n        networkOptimization: profile.settings.networkOptimization || {\n          prioritizeStreaming: false,\n          prioritizeDownloads: false,\n          lowLatencyMode: false\n        },\n        powerProfile: profile.settings.powerProfile || 'balanced'\n      }\n    };\n    \n    setFormData(formattedProfile);\n    setEditingId(profile.id);\n    setIsModalOpen(true);\n    setActiveTab('basic');\n  };\n\n  const handleDelete = (id: string) => {\n    if (window.confirm(\"The Meth Snail asks: Are you ABSOLUTELY SURE you want to delete this optimization profile? This action cannot be undone and the Snail will be VERY disappointed!\")) {\n      dispatch(deleteOptimizationProfile(id));\n      setSnailQuote(\"The Meth Snail just watched you delete that profile and is now crying methamphetamine tears!\");\n    }\n  };\n\n  const handleActivate = (id: string) => {\n    dispatch(activateOptimizationProfile(id));\n    setSnailQuote(\"The Meth Snail is PUMPED to apply this optimization profile! ZOOOOOM!\");\n  };\n\n  const openCreateModal = () => {\n    setFormData(defaultFormData);\n    setEditingId(null);\n    setIsModalOpen(true);\n    setActiveTab('basic');\n  };\n\n  if (loading) {\n    return <div className=\"loading-container\">The Meth Snail is frantically gathering your optimization profiles...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <h3>The Meth Snail crashed into a wall!</h3>\n        <p>{error}</p>\n        <button onClick={() => dispatch(fetchOptimizationProfiles())}>\n          Give the Snail another hit and try again\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"optimization-profiles-container\">\n      <div className=\"profiles-header\">\n        <h2>System Usage Profiles</h2>\n        <div className=\"snail-quote\">{snailQuote}</div>\n        <button className=\"create-profile-button\" onClick={openCreateModal}>\n          <span className=\"button-icon\">⚡</span>\n          <span>Create New Usage Profile</span>\n        </button>\n      </div>\n\n      <div className=\"profiles-grid\">\n        {profiles && profiles.length > 0 ? (\n          profiles.map((profile: any) => (\n            <div key={profile.id} className=\"profile-card\">\n              <div className=\"profile-header\">\n                <h3>{profile.name}</h3>\n                <div className=\"profile-badges\">\n                  {profile.is_active && <span className=\"active-badge\">ACTIVE</span>}\n                  {profile.usageType && <span className={`type-badge ${profile.usageType}`}>{profile.usageType}</span>}\n                </div>\n              </div>\n              <p className=\"profile-description\">{profile.description}</p>\n              \n              <div className=\"profile-settings\">\n                <div className=\"setting-item\">\n                  <span className=\"setting-label\">CPU Priority:</span>\n                  <span className=\"setting-value\">\n                    {profile.settings.cpuPriority ? \n                      profile.settings.cpuPriority.charAt(0).toUpperCase() + profile.settings.cpuPriority.slice(1) : \n                      'Medium'}\n                  </span>\n                </div>\n                <div className=\"setting-item\">\n                  <span className=\"setting-label\">CPU Threshold:</span>\n                  <span className=\"setting-value\">{profile.settings.cpuThreshold}%</span>\n                </div>\n                <div className=\"setting-item\">\n                  <span className=\"setting-label\">Memory Threshold:</span>\n                  <span className=\"setting-value\">{profile.settings.memoryThreshold}%</span>\n                </div>\n                <div className=\"setting-item\">\n                  <span className=\"setting-label\">Disk Performance:</span>\n                  <span className=\"setting-value\">\n                    {profile.settings.diskPerformance ? \n                      profile.settings.diskPerformance.charAt(0).toUpperCase() + profile.settings.diskPerformance.slice(1) : \n                      'Balanced'}\n                  </span>\n                </div>\n                <div className=\"setting-item\">\n                  <span className=\"setting-label\">Power Profile:</span>\n                  <span className=\"setting-value\">\n                    {profile.settings.powerProfile ? \n                      profile.settings.powerProfile.charAt(0).toUpperCase() + profile.settings.powerProfile.slice(1) : \n                      'Balanced'}\n                  </span>\n                </div>\n              </div>\n              \n              <div className=\"profile-actions\">\n                {!profile.is_active && (\n                  <button className=\"activate-button\" onClick={() => handleActivate(profile.id)}>\n                    Activate\n                  </button>\n                )}\n                <button className=\"edit-button\" onClick={() => handleEdit(profile)}>\n                  Edit\n                </button>\n                <button className=\"delete-button\" onClick={() => handleDelete(profile.id)}>\n                  Delete\n                </button>\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"no-profiles\">\n            <p>The Meth Snail hasn't created any usage profiles yet.</p>\n            <p>Create your first profile to unleash the Snail's optimization powers!</p>\n          </div>\n        )}\n      </div>\n\n      <Modal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        title={editingId ? \"Edit Usage Profile\" : \"Create Usage Profile\"}\n        size=\"medium\"\n      >\n        <div className=\"profile-form\">\n          {/* Basic Info Section */}\n          <div className=\"form-tabs\">\n            <button \n              className={`tab-button ${activeTab === 'basic' ? 'active' : ''}`}\n              onClick={() => setActiveTab('basic')}\n            >\n              Basic Info\n            </button>\n            <button \n              className={`tab-button ${activeTab === 'advanced' ? 'active' : ''}`}\n              onClick={() => setActiveTab('advanced')}\n            >\n              Advanced Settings\n            </button>\n          </div>\n          \n          {activeTab === 'basic' && (\n            <div className=\"form-tab-content\">\n              <div className=\"form-group\">\n                <label htmlFor=\"usageType\">Profile Type:</label>\n                <select\n                  id=\"usageType\"\n                  name=\"usageType\"\n                  value={formData.usageType}\n                  onChange={handleInputChange}\n                >\n                  <option value=\"custom\">Custom</option>\n                  <option value=\"gaming\">Gaming</option>\n                  <option value=\"creative\">Creative Work</option>\n                  <option value=\"development\">Development</option>\n                  <option value=\"office\">Office Work</option>\n                  <option value=\"browsing\">Web Browsing</option>\n                </select>\n                <p className=\"form-help\">Choose a preset or customize your own profile</p>\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Profile Name:</label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  placeholder=\"e.g., Gaming Mode, Work Mode, etc.\"\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Description:</label>\n                <textarea\n                  id=\"description\"\n                  name=\"description\"\n                  value={formData.description}\n                  onChange={handleInputChange}\n                  placeholder=\"Describe what this optimization profile is for...\"\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <h4>Threshold Settings</h4>\n                <div className=\"slider-container\">\n                  <label htmlFor=\"cpuThreshold\">CPU Threshold: {formData.settings.cpuThreshold}%</label>\n                  <input\n                    type=\"range\"\n                    id=\"cpuThreshold\"\n                    name=\"cpuThreshold\"\n                    min=\"50\"\n                    max=\"95\"\n                    value={formData.settings.cpuThreshold}\n                    onChange={handleSettingChange}\n                  />\n                  <p className=\"setting-description\">Processes will be optimized when CPU usage exceeds this threshold</p>\n                </div>\n                \n                <div className=\"slider-container\">\n                  <label htmlFor=\"memoryThreshold\">Memory Threshold: {formData.settings.memoryThreshold}%</label>\n                  <input\n                    type=\"range\"\n                    id=\"memoryThreshold\"\n                    name=\"memoryThreshold\"\n                    min=\"50\"\n                    max=\"95\"\n                    value={formData.settings.memoryThreshold}\n                    onChange={handleSettingChange}\n                  />\n    <p className=\"setting-description\">Memory optimization kicks in at this usage percentage</p>\n                </div>\n                \n                <div className=\"slider-container\">\n                  <label htmlFor=\"diskThreshold\">Disk Threshold: {formData.settings.diskThreshold}%</label>\n                  <input\n                    type=\"range\"\n                    id=\"diskThreshold\"\n                    name=\"diskThreshold\"\n                    min=\"50\"\n                    max=\"95\"\n                    value={formData.settings.diskThreshold}\n                    onChange={handleSettingChange}\n                  />\n                  <p className=\"setting-description\">Disk optimization activates when usage reaches this level</p>\n                </div>\n                \n                <div className=\"slider-container\">\n                  <label htmlFor=\"networkThreshold\">Network Threshold: {formData.settings.networkThreshold}%</label>\n                  <input\n                    type=\"range\"\n                    id=\"networkThreshold\"\n                    name=\"networkThreshold\"\n                    min=\"50\"\n                    max=\"95\"\n                    value={formData.settings.networkThreshold}\n                    onChange={handleSettingChange}\n                  />\n                  <p className=\"setting-description\">Network traffic will be optimized at this utilization</p>\n                </div>\n              </div>\n              \n              <div className=\"form-group checkbox-group\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    name=\"enableAutoTuning\"\n                    checked={formData.settings.enableAutoTuning}\n                    onChange={handleSettingChange}\n                  />\n                  Enable Auto-Tuning (The Meth Snail will optimize automatically)\n                </label>\n                <p className=\"setting-description\">When enabled, the system will dynamically adjust settings based on usage patterns</p>\n              </div>\n            </div>\n          )}\n          \n          {activeTab === 'advanced' && (\n            <div className=\"form-tab-content\">\n              <div className=\"form-group\">\n                <h4>CPU Settings</h4>\n                <div className=\"select-container\">\n                  <label htmlFor=\"cpuPriority\">CPU Priority:</label>\n                  <select\n                    id=\"cpuPriority\"\n                    name=\"cpuPriority\"\n                    value={formData.settings.cpuPriority}\n                    onChange={handleSettingChange}\n                  >\n                    <option value=\"low\">Low (Power Saving)</option>\n                    <option value=\"medium\">Medium (Balanced)</option>\n                    <option value=\"high\">High (Performance)</option>\n                  </select>\n                </div>\n                \n                <div className=\"slider-container\">\n                  <label htmlFor=\"backgroundProcessLimit\">Background Process Limit: {formData.settings.backgroundProcessLimit}</label>\n                  <input\n                    type=\"range\"\n                    id=\"backgroundProcessLimit\"\n                    name=\"backgroundProcessLimit\"\n                    min=\"5\"\n                    max=\"50\"\n                    value={formData.settings.backgroundProcessLimit}\n                    onChange={handleSettingChange}\n                  />\n                  <p className=\"setting-description\">Maximum number of background processes allowed</p>\n                </div>\n              </div>\n              \n              <div className=\"form-group\">\n                <h4>Memory Allocation</h4>\n                <div className=\"slider-container\">\n                  <label htmlFor=\"memoryAllocation.applications\">Applications: {formData.settings.memoryAllocation.applications}%</label>\n                  <input\n                    type=\"range\"\n                    id=\"memoryAllocation.applications\"\n                    name=\"memoryAllocation.applications\"\n                    min=\"50\"\n                    max=\"90\"\n                    value={formData.settings.memoryAllocation.applications}\n                    onChange={handleSettingChange}\n                  />\n                  <p className=\"setting-description\">Percentage of memory prioritized for applications</p>\n                </div>\n                \n                <div className=\"slider-container\">\n                  <label htmlFor=\"memoryAllocation.systemCache\">System Cache: {formData.settings.memoryAllocation.systemCache}%</label>\n                  <input\n                    type=\"range\"\n                    disabled\n                    id=\"memoryAllocation.systemCache\"\n                    name=\"memoryAllocation.systemCache\"\n                    min=\"10\"\n                    max=\"50\"\n                    value={formData.settings.memoryAllocation.systemCache}\n                  />\n                  <p className=\"setting-description\">Percentage of memory reserved for system cache</p>\n                </div>\n              </div>\n              \n              <div className=\"form-group\">\n                <h4>Disk Performance</h4>\n                <div className=\"select-container\">\n                  <label htmlFor=\"diskPerformance\">Disk Performance Mode:</label>\n                  <select\n                    id=\"diskPerformance\"\n                    name=\"diskPerformance\"\n                    value={formData.settings.diskPerformance}\n                    onChange={handleSettingChange}\n                  >\n                    <option value=\"speed\">Speed (Maximum Performance)</option>\n                    <option value=\"balance\">Balance (Default)</option>\n                    <option value=\"powersave\">Power Save (Extended Battery Life)</option>\n                  </select>\n                </div>\n              </div>\n              \n              <div className=\"form-group\">\n                <h4>Network Optimization</h4>\n                <div className=\"checkbox-group\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      name=\"networkOptimization.prioritizeStreaming\"\n                      checked={formData.settings.networkOptimization.prioritizeStreaming}\n                      onChange={handleSettingChange}\n                    />\n                    Prioritize Streaming Traffic\n                  </label>\n                  <p className=\"setting-description\">Optimizes for video/audio streaming services</p>\n                </div>\n                \n                <div className=\"checkbox-group\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      name=\"networkOptimization.prioritizeDownloads\"\n                      checked={formData.settings.networkOptimization.prioritizeDownloads}\n                      onChange={handleSettingChange}\n                    />\n                    Prioritize Downloads\n                  </label>\n                  <p className=\"setting-description\">Optimizes for file transfers and downloads</p>\n                </div>\n                \n                <div className=\"checkbox-group\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      name=\"networkOptimization.lowLatencyMode\"\n                      checked={formData.settings.networkOptimization.lowLatencyMode}\n                      onChange={handleSettingChange}\n                    />\n                    Low Latency Mode\n                  </label>\n                  <p className=\"setting-description\">Optimizes for gaming and real-time applications</p>\n                </div>\n              </div>\n              \n              <div className=\"form-group\">\n                <h4>Power Management</h4>\n                <div className=\"select-container\">\n                  <label htmlFor=\"powerProfile\">Power Profile:</label>\n                  <select\n                    id=\"powerProfile\"\n                    name=\"powerProfile\"\n                    value={formData.settings.powerProfile}\n                    onChange={handleSettingChange}\n                  >\n                    <option value=\"performance\">Performance (Maximum Speed)</option>\n                    <option value=\"balanced\">Balanced (Default)</option>\n                    <option value=\"powersave\">Power Save (Battery Optimized)</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          <div className=\"form-actions\">\n            <button \n              className=\"cancel-button\" \n              onClick={() => setIsModalOpen(false)}\n              type=\"button\"\n            >\n              Cancel\n            </button>\n            <button \n              className=\"submit-button\" \n              onClick={handleSubmit}\n              type=\"button\"\n            >\n              {editingId ? \"Update Profile\" : \"Create Profile\"}\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default OptimizationProfiles;","import React, { useState, useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './SystemAlerts.css';\nimport { \n  fetchSystemAlerts, \n  markAlertAsRead,\n  deleteSystemAlert,\n  createSystemAlert,\n  markAllAlertsAsRead,\n  toggleAlertSelection,\n  selectAllAlerts,\n  deselectAllAlerts,\n  deleteSelectedAlerts,\n  updateAlertActionStatus,\n  updateSelectedAlertsActionStatus,\n  markSelectedAlertsAsRead\n} from '../../store/slices/systemAlertsSlice';\nimport Modal from '../common/Modal';\nimport { QuantumShadowPerson } from '../common/CharacterIcons';\nimport alertUtils from '../../utils/alertUtils';\nimport { Button } from '../../design-system/components';\n\n// Direct backend URL instead of using the relative API_BASE_URL\nconst BACKEND_URL = 'http://127.0.0.1:8000';\n// API path should match what's used in alertsSlice.ts (without /api prefix)\nconst API_PATH = '/system-alerts';\n\ninterface SystemAlertFormData {\n  title: string;\n  message: string;\n  severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\n  is_read: boolean;\n  additional_data?: any;\n  created_at: string;\n  updated_at: string;\n}\n\nconst defaultFormData: SystemAlertFormData = {\n  title: '',\n  message: '',\n  severity: 'MEDIUM',\n  is_read: false,\n  additional_data: {},\n  created_at: '',\n  updated_at: ''\n};\n\nexport const SystemAlerts: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { alerts, loading, error, selectedCount } = useAppSelector((state) => {\n    console.log('Current alerts state:', state.systemAlerts);\n    return state.systemAlerts;\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isActionModalOpen, setIsActionModalOpen] = useState(false);\n  const [isPatternModalOpen, setIsPatternModalOpen] = useState(false);\n  const [currentActionableAlert, setCurrentActionableAlert] = useState<any>(null);\n  const [currentPatternAlert, setCurrentPatternAlert] = useState<any>(null);\n  const [formData, setFormData] = useState<SystemAlertFormData>(defaultFormData);\n  const [shadowQuote, setShadowQuote] = useState<string>('');\n  const [debugInfo, setDebugInfo] = useState<string>('');\n  const [actionResult, setActionResult] = useState<any>(null);\n  const [showActionMenu, setShowActionMenu] = useState(false);\n  const [expandedAlertId, setExpandedAlertId] = useState<string | null>(null);\n  const [filterOptions, setFilterOptions] = useState({\n    severity: 'ALL',\n    read_status: 'ALL',\n    action_status: 'ALL',\n    date_range: 'ALL'\n  });\n\n  const shadowQuotes = [\n    \"The Quantum Shadow People are monitoring your router configurations...\",\n    \"We've detected unusual activity in the quantum realm. Your router may be at risk.\",\n    \"The shadows between dimensions suggest your system needs attention.\",\n    \"We exist in the spaces between your packets. Your network traffic reveals all.\",\n    \"Your router's quantum state is unstable. We recommend immediate reconfiguration.\"\n  ];\n\n  useEffect(() => {\n    console.log('🔍 SystemAlerts component mounted - Dispatching fetchSystemAlerts');\n    dispatch(fetchSystemAlerts({ skip: 0, limit: 20, is_read: undefined }))\n      .then((result) => {\n        console.log('✅ fetchSystemAlerts result:', result);\n      })\n      .catch((error) => {\n        console.error('❌ fetchSystemAlerts error:', error);\n        setDebugInfo(`Fetch error: ${JSON.stringify(error)}`);\n      });\n    setShadowQuote(shadowQuotes[Math.floor(Math.random() * shadowQuotes.length)]);\n    \n    // Generate test alerts for auto-tuner integration\n    generateRealSystemAlerts();\n  }, [dispatch]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = () => {\n    dispatch(createSystemAlert(formData))\n      .then(result => {\n        console.log('Alert created successfully:', result);\n        setIsModalOpen(false);\n        setFormData(defaultFormData);\n        setShadowQuote(shadowQuotes[Math.floor(Math.random() * shadowQuotes.length)]);\n      })\n      .catch(error => {\n        console.error('Error creating alert:', error);\n        setDebugInfo(`Create error: ${JSON.stringify(error)}`);\n      });\n  };\n\n  const handleMarkAsRead = (id: string, e?: React.MouseEvent) => {\n    if (e) e.stopPropagation();\n    dispatch(markAlertAsRead(id))\n      .then(result => {\n        console.log('Alert marked as read:', result);\n      })\n      .catch(error => {\n        console.error('Error marking alert as read:', error);\n      });\n  };\n\n  const handleDelete = (id: string, e?: React.MouseEvent) => {\n    if (e) e.stopPropagation();\n    if (window.confirm(\"The Quantum Shadow People ask: Are you sure you want to delete this alert? This information will be lost to the void between dimensions.\")) {\n      dispatch(deleteSystemAlert(id))\n        .then(result => {\n          console.log('Alert deleted successfully:', result);\n          setShadowQuote(\"The Quantum Shadow People have banished that alert to the void.\");\n        })\n        .catch(error => {\n          console.error('Error deleting alert:', error);\n        });\n    }\n  };\n    // Handle actionable alerts\n    const handleAlertAction = (alert: any) => {\n      console.log('Handling actionable alert:', alert);\n      setCurrentActionableAlert(alert);\n      \n      // Check if the alert has additional_data with action information\n      if (alert.additional_data && alert.additional_data.actionable) {\n        const actionType = alert.additional_data.action_type;\n        \n        switch (actionType) {\n          case 'apply_recommendation':\n            setIsActionModalOpen(true);\n            break;\n          case 'view_metrics':\n            // Navigate to metrics dashboard\n            navigate('/dashboard');\n            break;\n          default:\n            console.log('Unknown action type:', actionType);\n        }\n      }\n    };\n    \n    // Handle pattern visualization\n    const handlePatternVisualization = (alert: any) => {\n      if (alert.additional_data && alert.additional_data.pattern_data) {\n        setCurrentPatternAlert(alert);\n        setIsPatternModalOpen(true);\n      }\n    };\n    \n    // Apply a recommendation from an alert\n    const applyRecommendation = async () => {\n      if (!currentActionableAlert || !currentActionableAlert.additional_data) return;\n      \n      const recommendationData = currentActionableAlert.additional_data.recommendation_data;\n      if (!recommendationData) {\n        console.error('No recommendation data found in alert');\n        return;\n      }\n      \n      try {\n        // Find the recommendation index in the current recommendations list\n        // For simplicity, we'll just use 0 as the index here\n        const recommendationIndex = 0;\n        \n        // Call the API to apply the recommendation\n        const response = await axios.post(\n          `${BACKEND_URL}/api/auto-tuner/recommendations/apply`,\n          { recommendation_id: recommendationIndex }\n        );\n        \n        console.log('Applied recommendation:', response.data);\n        setActionResult(response.data);\n        \n        // Create a new alert for the applied tuning action\n        if (response.data.success) {\n          const tuningAction = {\n            parameter: recommendationData.parameter,\n            old_value: recommendationData.current_value,\n            new_value: recommendationData.recommended_value,\n            reason: recommendationData.reason\n          };\n          \n          alertUtils.createAlertFromTuningAction(tuningAction, true);\n        } else {\n          const tuningAction = {\n            parameter: recommendationData.parameter,\n            old_value: recommendationData.current_value,\n            new_value: recommendationData.recommended_value,\n            reason: 'Failed to apply recommendation'\n          };\n          \n          alertUtils.createAlertFromTuningAction(tuningAction, false);\n        }\n        \n        // Mark the recommendation alert as read\n        dispatch(markAlertAsRead(currentActionableAlert.id));\n        \n        // Close the action modal\n        setIsActionModalOpen(false);\n        \n      } catch (error) {\n        console.error('Error applying recommendation:', error);\n        setActionResult({ success: false, error: 'Failed to apply recommendation' });\n      }\n    };\n    \n    // Generate real system alerts based on auto-tuner and metrics\n    const generateRealSystemAlerts = async () => {\n      try {\n        // Get current metrics\n        const metricsResponse = await axios.get(`${BACKEND_URL}/api/auto-tuner/metrics/current`);\n        const metrics = metricsResponse.data;\n        \n        // Check for threshold violations and create alerts\n        if (metrics.cpu_usage > 70) {\n          alertUtils.createAlertFromMetricThreshold('cpu_usage', metrics.cpu_usage, 70);\n        }\n        \n        if (metrics.memory_usage > 80) {\n          alertUtils.createAlertFromMetricThreshold('memory_usage', metrics.memory_usage, 80);\n        }\n        \n        // Get auto-tuner recommendations\n        const recommendationsResponse = await axios.get(`${BACKEND_URL}/api/auto-tuner/recommendations`);\n        const recommendations = recommendationsResponse.data;\n        \n        // Create alerts for the top recommendations\n        if (recommendations && recommendations.length > 0) {\n          alertUtils.createAlertFromRecommendation(recommendations[0]);\n        }\n        \n        // Get system patterns\n        const patternsResponse = await axios.get(`${BACKEND_URL}/api/auto-tuner/patterns`);\n        const patterns = patternsResponse.data;\n        \n        // Create alerts for detected patterns\n        if (patterns && patterns.detected_patterns && patterns.detected_patterns.length > 0) {\n          alertUtils.createAlertFromPattern(patterns.detected_patterns[0]);\n        }\n        \n      } catch (error) {\n        console.error('Error generating real system alerts:', error);\n      }\n    };\n    \n    const handleMarkAllAsRead = () => {\n      if (window.confirm(\"The Quantum Shadow People ask: Are you sure you want to mark all alerts as read?\")) {\n        dispatch(markAllAlertsAsRead())\n          .then(result => {\n            console.log('All alerts marked as read:', result);\n            setShadowQuote(\"The Quantum Shadow People have acknowledged all your alerts.\");\n          })\n          .catch(error => {\n            console.error('Error marking all alerts as read:', error);\n          });\n      }\n    };\n    \n    // New functions for bulk operations and action status management\n    const handleToggleSelection = (id: string, e: React.MouseEvent) => {\n      e.stopPropagation();\n      dispatch(toggleAlertSelection(id));\n    };\n  \n    const handleSelectAll = () => {\n      dispatch(selectAllAlerts());\n    };\n  \n    const handleDeselectAll = () => {\n      dispatch(deselectAllAlerts());\n    };\n  \n    const handleDeleteSelected = () => {\n      if (window.confirm(`The Quantum Shadow People ask: Are you sure you want to delete ${selectedCount} selected alerts? This information will be lost to the void between dimensions.`)) {\n        dispatch(deleteSelectedAlerts());\n        setShadowQuote(\"The Quantum Shadow People have banished the selected alerts to the void.\");\n      }\n    };\n  \n    const handleUpdateActionStatus = (status: 'none' | 'actioned' | 'not_actioned' | 'to_action_later') => {\n      dispatch(updateSelectedAlertsActionStatus(status));\n      setShowActionMenu(false);\n      setShadowQuote(`The Quantum Shadow People have updated the status of the selected alerts to ${status.replace('_', ' ')}.`);\n    };\n  \n    const handleMarkSelectedAsRead = () => {\n      dispatch(markSelectedAlertsAsRead());\n      setShadowQuote(\"The Quantum Shadow People have acknowledged the selected alerts.\");\n    };\n  \n    const handleAlertClick = (id: string) => {\n      if (expandedAlertId === id) {\n        setExpandedAlertId(null);\n      } else {\n        setExpandedAlertId(id);\n      }\n    };\n    \n    // Filter functions\n    const handleFilterChange = (filterType: string, value: string) => {\n      setFilterOptions({\n        ...filterOptions,\n        [filterType]: value\n      });\n    };\n  \n    const getFilteredAlerts = () => {\n      if (!alerts) return [];\n      \n      return alerts.filter((alert: any) => {\n        // Filter by severity\n        if (filterOptions.severity !== 'ALL' && alert.severity !== filterOptions.severity) {\n          return false;\n        }\n        \n        // Filter by read status\n        if (filterOptions.read_status === 'READ' && !alert.is_read) {\n          return false;\n        }\n        if (filterOptions.read_status === 'UNREAD' && alert.is_read) {\n          return false;\n        }\n        \n        // Filter by action status\n        if (filterOptions.action_status !== 'ALL' && \n            alert.action_status !== filterOptions.action_status && \n            !(filterOptions.action_status === 'NONE' && !alert.action_status)) {\n          return false;\n        }\n        \n        // Filter by date\n        if (filterOptions.date_range !== 'ALL') {\n          const alertDate = new Date(alert.timestamp);\n          const now = new Date();\n          \n          if (filterOptions.date_range === 'TODAY') {\n            const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n            if (alertDate < today) return false;\n          } else if (filterOptions.date_range === 'YESTERDAY') {\n            const yesterday = new Date(now.getFullYear(), now.getMonth(), now.getDate() - 1);\n            const dayBefore = new Date(now.getFullYear(), now.getMonth(), now.getDate() - 2);\n            if (alertDate < dayBefore || alertDate >= yesterday) return false;\n          } else if (filterOptions.date_range === 'THIS_WEEK') {\n            const startOfWeek = new Date(now.getFullYear(), now.getMonth(), now.getDate() - now.getDay());\n            if (alertDate < startOfWeek) return false;\n          } else if (filterOptions.date_range === 'THIS_MONTH') {\n            const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n            if (alertDate < startOfMonth) return false;\n          }\n        }\n        \n        return true;\n      });\n    };\n    const getActionStatusLabel = (status?: string) => {\n      switch (status) {\n        case 'actioned':\n          return 'Actioned';\n        case 'not_actioned':\n          return 'Not Actioned';\n        case 'to_action_later':\n          return 'To Action Later';\n        default:\n          return 'No Status';\n      }\n    };\n  \n    const formatDate = (dateString: string) => {\n      return new Date(dateString).toLocaleString();\n    };\n  \n    const getSeverityClass = (severity: string) => {\n      switch (severity.toUpperCase()) {\n        case 'CRITICAL':\n          return 'critical';\n        case 'HIGH':\n          return 'high';\n        case 'MEDIUM':\n          return 'medium';\n        case 'LOW':\n          return 'low';\n        default:\n          return '';\n      }\n    };\n  \n    // Test API connection for debugging\n    const testApiConnection = async () => {\n      try {\n        const response = await axios.get(`${BACKEND_URL}/api/health-check`);\n        setDebugInfo(`API connection successful: ${JSON.stringify(response.data)}`);\n      } catch (error: any) {\n        setDebugInfo(`API connection failed: ${error.message}`);\n      }\n    };\n  \n    // Login with test credentials for debugging\n    const loginForFreshToken = async () => {\n      try {\n        const response = await axios.post(`${BACKEND_URL}/api/auth/login`, {\n          username: 'testuser',\n          password: 'testpassword'\n        });\n        if (response.data.access_token) {\n          localStorage.setItem('token', response.data.access_token);\n          setDebugInfo('Login successful, new token acquired');\n          return true;\n        }\n        return false;\n      } catch (error: any) {\n        setDebugInfo(`Login failed: ${error.message}`);\n        return false;\n      }\n    };\n  \n    const openCreateModal = () => {\n      setFormData(defaultFormData);\n      setIsModalOpen(true);\n    };\n  \n    if (loading) {\n      return <div className=\"loading-container\">The Quantum Shadow People are gathering alerts from the void...</div>;\n    }\n  \n    if (error) {\n      return (\n        <div className=\"error-container\">\n          <h3>The Quantum Shadow People have encountered an interdimensional error!</h3>\n          <p>{error}</p>\n          <div className=\"error-details\">\n            <p>Possible causes:</p>\n            <ul>\n              <li>Authentication token may be missing or invalid</li>\n              <li>Backend server may be unreachable</li>\n              <li>API endpoint configuration may be incorrect</li>\n            </ul>\n          </div>\n          \n          <div className=\"debug-info\">\n            <p>Debug Info:</p>\n            <p>Token exists: {localStorage.getItem('token') ? 'Yes' : 'No'}</p>\n            <p>Backend URL: {BACKEND_URL}</p>\n            <p>API Path: {API_PATH}</p>\n            <p>Full Alerts Endpoint: {`${BACKEND_URL}/api${API_PATH}`}</p>\n            <p>Redux API Call Path: {`/api${API_PATH}`}</p>\n            <p>{debugInfo}</p>\n            <Button variant=\"cyber\" size=\"sm\" onClick={testApiConnection}>Test API Connection</Button>\n          </div>\n          <div className=\"error-actions\">\n            <Button \n              variant=\"primary\"\n              onClick={() => dispatch(fetchSystemAlerts({ skip: 0, limit: 20, is_read: undefined }))}\n            >\n              Recalibrate the quantum field and try again\n            </Button>\n            <Button \n              variant=\"accent\"\n              onClick={async () => {\n                const success = await loginForFreshToken();\n                if (success) dispatch(fetchSystemAlerts({ skip: 0, limit: 20, is_read: undefined }));\n              }}\n            >\n              Login with test credentials\n            </Button>\n            <Button \n              variant=\"secondary\"\n              onClick={() => navigate('/login')}\n            >\n              Return to login portal\n            </Button>\n          </div>\n        </div>\n      );\n    }\n  \n    return (\n      <div className=\"system-alerts-container\">\n        <div className=\"alerts-header\">\n          <div className=\"alerts-header-top\">\n            <h2>System Alerts</h2>\n            <div className=\"quantum-shadow-icon\">\n              <QuantumShadowPerson className=\"shadow-icon\" />\n            </div>\n          </div>\n          <div className=\"shadow-quote\">{shadowQuote}</div>\n          <div className=\"alert-actions-container\">\n            <Button \n              variant=\"accent\" \n              onClick={openCreateModal}\n              leftIcon=\"⚠️\"\n              glow\n            >\n              Create New Alert\n            </Button>\n            {alerts && alerts.length > 0 && alerts.some((alert: any) => !alert.is_read) && (\n              <Button \n                variant=\"primary\" \n                onClick={handleMarkAllAsRead}\n                leftIcon=\"✓\"\n                glow\n              >\n                Mark All as Read\n              </Button>\n            )}\n          </div>\n        </div>\n  \n        {/* Alert statistics */}\n        <div className=\"alert-statistics\">\n          <div className=\"stat-card\">\n            <div className=\"stat-title\">Total Alerts</div>\n            <div className=\"stat-value\">{alerts?.length || 0}</div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-title\">Unread</div>\n            <div className=\"stat-value\">{alerts?.filter((alert: any) => !alert.is_read).length || 0}</div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-title\">Critical</div>\n            <div className=\"stat-value\">{alerts?.filter((alert: any) => alert.severity === 'CRITICAL').length || 0}</div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-title\">Actionable</div>\n            <div className=\"stat-value\">{alerts?.filter((alert: any) => alert.additional_data && alert.additional_data.actionable).length || 0}</div>\n          </div>\n        </div>\n  \n        {/* Filter bar */}\n        <div className=\"filter-bar\">\n          <div className=\"filter-group\">\n            <label>Severity:</label>\n            <select \n              value={filterOptions.severity}\n              onChange={(e) => handleFilterChange('severity', e.target.value)}\n            >\n              <option value=\"ALL\">All</option>\n              <option value=\"LOW\">Low</option>\n              <option value=\"MEDIUM\">Medium</option>\n              <option value=\"HIGH\">High</option>\n              <option value=\"CRITICAL\">Critical</option>\n            </select>\n          </div>\n          <div className=\"filter-group\">\n            <label>Status:</label>\n            <select \n              value={filterOptions.read_status}\n              onChange={(e) => handleFilterChange('read_status', e.target.value)}\n            >\n              <option value=\"ALL\">All</option>\n              <option value=\"READ\">Read</option>\n              <option value=\"UNREAD\">Unread</option>\n            </select>\n          </div>\n          <div className=\"filter-group\">\n            <label>Action Status:</label>\n            <select \n              value={filterOptions.action_status}\n              onChange={(e) => handleFilterChange('action_status', e.target.value)}\n            >\n              <option value=\"ALL\">All</option>\n              <option value=\"NONE\">No Status</option>\n              <option value=\"actioned\">Actioned</option>\n              <option value=\"not_actioned\">Not Actioned</option>\n              <option value=\"to_action_later\">Action Later</option>\n            </select>\n          </div>\n          <div className=\"filter-group\">\n            <label>Date:</label>\n            <select \n              value={filterOptions.date_range}\n              onChange={(e) => handleFilterChange('date_range', e.target.value)}\n            >\n              <option value=\"ALL\">All Time</option>\n              <option value=\"TODAY\">Today</option>\n              <option value=\"YESTERDAY\">Yesterday</option>\n              <option value=\"THIS_WEEK\">This Week</option>\n              <option value=\"THIS_MONTH\">This Month</option>\n            </select>\n          </div>\n          <Button \n            variant=\"secondary\" \n            size=\"sm\"\n            onClick={() => setFilterOptions({\n              severity: 'ALL',\n              read_status: 'ALL',\n              action_status: 'ALL',\n              date_range: 'ALL'\n            })}\n            leftIcon=\"🔄\"\n          >\n            Reset Filters\n          </Button>\n        </div>\n  \n        {/* Bulk actions section */}\n        {selectedCount > 0 && (\n          <div className=\"bulk-actions\">\n            <span className=\"selected-count\">{selectedCount} selected</span>\n            <div className=\"bulk-action-buttons\">\n              <Button \n                variant=\"primary\" \n                size=\"sm\"\n                onClick={handleMarkSelectedAsRead}\n                leftIcon=\"✓\"\n              >\n                Mark Selected as Read\n              </Button>\n              <Button \n                variant=\"danger\" \n                size=\"sm\"\n                onClick={handleDeleteSelected}\n                leftIcon=\"🗑️\"\n              >\n                Delete Selected\n              </Button>\n              <div className=\"action-status-dropdown\">\n                <Button \n                  variant=\"secondary\" \n                  size=\"sm\"\n                  onClick={() => setShowActionMenu(!showActionMenu)}\n                  leftIcon=\"🔄\"\n                >\n                  Set Status\n                </Button>\n                {showActionMenu && (\n                  <div className=\"action-status-menu\">\n                    <Button variant=\"success\" size=\"sm\" onClick={() => handleUpdateActionStatus('actioned')} fullWidth>Actioned</Button>\n                    <Button variant=\"danger\" size=\"sm\" onClick={() => handleUpdateActionStatus('not_actioned')} fullWidth>Not Actioned</Button>\n                    <Button variant=\"warning\" size=\"sm\" onClick={() => handleUpdateActionStatus('to_action_later')} fullWidth>Action Later</Button>\n                    <Button variant=\"secondary\" size=\"sm\" onClick={() => handleUpdateActionStatus('none')} fullWidth>No Status</Button>\n                  </div>\n                )}\n              </div>\n              <Button \n                variant=\"secondary\" \n                size=\"sm\"\n                onClick={handleDeselectAll}\n                leftIcon=\"✕\"\n              >\n                Deselect All\n              </Button>\n            </div>\n          </div>\n        )}\n        \n        <div className=\"alerts-list\">\n          {getFilteredAlerts().length > 0 ? (\n            getFilteredAlerts().map(alert => (\n              <div \n                key={alert.id} \n                className={`alert-card ${!alert.is_read ? 'unread' : 'read'} ${alert.selected ? 'selected' : ''} ${expandedAlertId === alert.id ? 'expanded' : ''}`}\n                onClick={() => handleAlertClick(alert.id)}\n              >\n                <div className=\"alert-selection\">\n                  <input \n                    type=\"checkbox\" \n                    checked={alert.selected || false}\n                    onChange={(e) => handleToggleSelection(alert.id, e.nativeEvent as unknown as React.MouseEvent)}\n                    onClick={(e) => e.stopPropagation()}\n                  />\n                </div>\n                \n                <div className=\"alert-content\">\n                  <div className=\"alert-header\">\n                    <div className={`severity-indicator ${getSeverityClass(alert.severity)}`}>\n                      {alert.severity}\n                    </div>\n                    <h3>{alert.title}</h3>\n                    {!alert.is_read && <span className=\"unread-badge\">NEW</span>}\n                    {alert.action_status && (\n                      <span className={`action-status-badge ${alert.action_status}`}>\n                        {getActionStatusLabel(alert.action_status)}\n                      </span>\n                    )}\n                  </div>\n                  \n                  <div className=\"alert-timestamp\">\n                    {formatDate(alert.timestamp)}\n                  </div>\n                  \n                  <p className=\"alert-message\">{alert.message}</p>\n                  \n                  {expandedAlertId === alert.id && (\n                    <div className=\"action-status-selector\">\n                      <span>Status:</span>\n                      <select \n                        value={alert.action_status || 'none'}\n                        onChange={(e) => {\n                          dispatch(updateAlertActionStatus({\n                            id: alert.id, \n                            status: e.target.value as 'none' | 'actioned' | 'not_actioned' | 'to_action_later'\n                          }));\n                          e.stopPropagation();\n                        }}\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        <option value=\"none\">No Status</option>\n                        <option value=\"actioned\">Actioned</option>\n                        <option value=\"not_actioned\">Not Actioned</option>\n                        <option value=\"to_action_later\">Action Later</option>\n                      </select>\n                    </div>\n                  )}\n                </div>\n                \n                <div className=\"alert-actions\">\n                  {!alert.is_read && (\n                    <Button \n                      variant=\"primary\" \n                      size=\"sm\"\n                      circle\n                      onClick={(e) => handleMarkAsRead(alert.id, e)}\n                      title=\"Mark as Read\"\n                    >\n                      ✓\n                    </Button>\n                  )}\n                  {alert.additional_data && alert.additional_data.actionable && (\n                    <Button \n                      variant=\"cyber\" \n                      size=\"sm\"\n                      circle\n                      onClick={(e) => { e.stopPropagation(); handleAlertAction(alert); }}\n                      title={alert.additional_data.action_type === 'apply_recommendation' ? 'Apply' : 'View'}\n                    >\n                      ⚡\n                    </Button>\n                  )}\n                  {alert.additional_data && alert.additional_data.pattern_data && (\n                    <Button \n                      variant=\"warning\" \n                      size=\"sm\"\n                      circle\n                      onClick={(e) => { e.stopPropagation(); handlePatternVisualization(alert); }}\n                      title=\"View Pattern\"\n                    >\n                      📊\n                    </Button>\n                  )}\n                  <Button \n                    variant=\"danger\" \n                    size=\"sm\"\n                    circle\n                    onClick={(e) => handleDelete(alert.id, e)}\n                    title=\"Delete\"\n                  >\n                    ×\n                  </Button>\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"no-alerts\">\n              <p>No alerts match your current filters.</p>\n              <p>Try adjusting your filter criteria or check back later.</p>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"alerts-footer\">\n          <Button \n            variant=\"primary\" \n            size=\"sm\" \n            onClick={handleSelectAll}\n          >\n            Select All\n          </Button>\n        </div>\n  \n        {/* Create Alert Modal */}\n        <Modal\n          isOpen={isModalOpen}\n          onClose={() => setIsModalOpen(false)}\n          title=\"Create System Alert\"\n          size=\"medium\"\n        >\n          <div className=\"alert-form\">\n            <div className=\"modal-intro\">\n              <div className=\"modal-icon\">\n                <QuantumShadowPerson className=\"shadow-icon-large\" />\n              </div>\n              <p className=\"modal-description\">\n                The Quantum Shadow People will broadcast this alert across all dimensions. Choose your words wisely.\n              </p>\n            </div>\n  \n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Alert Title:</label>\n              <input\n                type=\"text\"\n                id=\"title\"\n                name=\"title\"\n                value={formData.title}\n                onChange={handleInputChange}\n                placeholder=\"Enter alert title...\"\n                required\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"message\">Alert Message:</label>\n              <textarea\n                id=\"message\"\n                name=\"message\"\n                value={formData.message}\n                onChange={handleInputChange}\n                placeholder=\"Describe the alert details...\"\n                required\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"severity\">Severity Level:</label>\n              <div className=\"severity-selector\">\n                <select\n                  id=\"severity\"\n                  name=\"severity\"\n                  value={formData.severity}\n                  onChange={handleInputChange}\n                >\n                  <option value=\"LOW\">Low - Informational only</option>\n                  <option value=\"MEDIUM\">Medium - Requires attention</option>\n                  <option value=\"HIGH\">High - Urgent action needed</option>\n                  <option value=\"CRITICAL\">Critical - System at risk</option>\n                </select>\n                <div className={`severity-preview ${getSeverityClass(formData.severity)}`}>\n                  {formData.severity}\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"form-actions\">\n              <Button \n                variant=\"secondary\" \n                onClick={() => setIsModalOpen(false)}\n                leftIcon=\"✕\"\n              >\n                Cancel\n              </Button>\n              <Button \n                variant=\"accent\" \n                onClick={handleSubmit}\n                disabled={!formData.title || !formData.message}\n                leftIcon=\"⚠️\"\n                glow\n              >\n                Create Alert\n              </Button>\n            </div>\n          </div>\n        </Modal>\n        \n        {/* Action Modal for Recommendations */}\n        <Modal\n          isOpen={isActionModalOpen}\n          onClose={() => setIsActionModalOpen(false)}\n          title=\"Apply System Recommendation\"\n          size=\"medium\"\n        >\n          {currentActionableAlert && (\n            <div className=\"action-modal-content\">\n              <div className=\"modal-intro\">\n                <div className=\"modal-icon\">\n                  <QuantumShadowPerson className=\"shadow-icon-large\" />\n                </div>\n                <p className=\"modal-description\">\n                  The Quantum Shadow People will apply this system optimization. Proceed with caution.\n                </p>\n              </div>\n              \n              <div className=\"recommendation-details\">\n                <h3>{currentActionableAlert.title}</h3>\n                <p>{currentActionableAlert.message}</p>\n                \n                {currentActionableAlert.additional_data && (\n                  <div className=\"recommendation-params\">\n                    <div className=\"param-item\">\n                      <span className=\"param-label\">Parameter:</span>\n                      <span className=\"param-value\">{currentActionableAlert.additional_data.parameter}</span>\n                    </div>\n                    \n                    <div className=\"param-item\">\n                      <span className=\"param-label\">Current Value:</span>\n                      <span className=\"param-value\">{currentActionableAlert.additional_data.current_value}</span>\n                    </div>\n                    \n                    <div className=\"param-item\">\n                      <span className=\"param-label\">Recommended Value:</span>\n                      <span className=\"param-value\">{currentActionableAlert.additional_data.recommended_value}</span>\n                    </div>\n                    \n                    <div className=\"param-item\">\n                      <span className=\"param-label\">Confidence:</span>\n                      <span className=\"param-value\">\n                        {(currentActionableAlert.additional_data.confidence * 100).toFixed(0)}%\n                      </span>\n                    </div>\n                  </div>\n                )}\n                \n                {actionResult && (\n                  <div className={`action-result ${actionResult.success ? 'success' : 'error'}`}>\n                    <h4>{actionResult.success ? 'Success!' : 'Failed!'}</h4>\n                    <p>{actionResult.success \n                      ? 'The recommendation was successfully applied.' \n                      : `Error: ${actionResult.error || 'Unknown error'}`}</p>\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"form-actions\">\n                <Button \n                  variant=\"secondary\" \n                  onClick={() => setIsActionModalOpen(false)}\n                  leftIcon=\"✕\"\n                >\n                  Cancel\n                </Button>\n                <Button \n                  variant=\"cyber\" \n                  onClick={applyRecommendation}\n                  disabled={!!actionResult}\n                  leftIcon=\"⚡\"\n                  glow\n                >\n                  Apply Recommendation\n                </Button>\n              </div>\n            </div>\n          )}\n        </Modal>\n  \n        {/* Pattern Visualization Modal */}\n        <Modal\n          isOpen={isPatternModalOpen}\n          onClose={() => setIsPatternModalOpen(false)}\n          title=\"System Pattern Analysis\"\n          size=\"large\"\n        >\n          {currentPatternAlert && (\n            <div className=\"pattern-modal-content\">\n              <div className=\"modal-intro\">\n                <div className=\"modal-icon\">\n                  <QuantumShadowPerson className=\"shadow-icon-large\" />\n                </div>\n                <p className=\"modal-description\">\n                  The Quantum Shadow People have detected recurring patterns in your system behavior.\n                </p>\n              </div>\n              \n              <div className=\"pattern-details\">\n              <h3>{currentPatternAlert.title}</h3>\n              <p>{currentPatternAlert.message}</p>\n              \n              {currentPatternAlert.additional_data && currentPatternAlert.additional_data.pattern_data && (\n                <div className=\"pattern-visualization\">\n                  <h4>Pattern Visualization</h4>\n                  <div className=\"graph-container\">\n                    {/* Simplified graph representation */}\n                    <div className=\"graph-y-axis\">\n                      <span>100%</span>\n                      <span>75%</span>\n                      <span>50%</span>\n                      <span>25%</span>\n                      <span>0%</span>\n                    </div>\n                    <div className=\"graph-content\">\n                      {currentPatternAlert.additional_data.pattern_data.points && \n                        currentPatternAlert.additional_data.pattern_data.points.map((point: number, index: number) => (\n                          <div \n                            key={index} \n                            className=\"graph-bar\" \n                            style={{ height: `${point}%` }}\n                            title={`Value: ${point}%`}\n                          />\n                        ))\n                      }\n                    </div>\n                    <div className=\"graph-x-axis\">\n                      <span>Time</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"pattern-stats\">\n                    <div className=\"stat-item\">\n                      <span className=\"stat-label\">Confidence:</span>\n                      <span className=\"stat-value\">\n                        {(currentPatternAlert.additional_data.pattern_data.confidence * 100).toFixed(0)}%\n                      </span>\n                    </div>\n                    <div className=\"stat-item\">\n                      <span className=\"stat-label\">Periodicity:</span>\n                      <span className=\"stat-value\">\n                        {currentPatternAlert.additional_data.pattern_data.periodicity} minutes\n                      </span>\n                    </div>\n                    <div className=\"stat-item\">\n                      <span className=\"stat-label\">First Detected:</span>\n                      <span className=\"stat-value\">\n                        {formatDate(currentPatternAlert.additional_data.pattern_data.first_detected)}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"form-actions\">\n              <Button \n                variant=\"secondary\" \n                onClick={() => setIsPatternModalOpen(false)}\n                leftIcon=\"✕\"\n              >\n                Close\n              </Button>\n              <Button \n                variant=\"cyber\" \n                onClick={() => {\n                  navigate('/metrics');\n                  setIsPatternModalOpen(false);\n                }}\n                leftIcon=\"📊\"\n                glow\n              >\n                View Full Metrics\n              </Button>\n            </div>\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default SystemAlerts;","// src/components/configuration/SystemConfiguration.tsx\nimport React, { useState, useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport './SystemConfiguration.css';\nimport { \n  fetchSystemConfigurations, \n  createSystemConfiguration,\n  updateSystemConfiguration,\n  deleteSystemConfiguration,\n  applySystemConfiguration\n} from '../../store/slices/configurationSlice';\nimport Modal from '../common/Modal';\n\ninterface SystemConfigurationFormData {\n  name: string;\n  description: string;\n  config_type: 'NETWORK' | 'SYSTEM' | 'SECURITY' | 'PERFORMANCE';\n  settings: {\n    [key: string]: any;\n  };\n}\n\nconst defaultFormData: SystemConfigurationFormData = {\n  name: '',\n  description: '',\n  config_type: 'SYSTEM',\n  settings: {}\n};\n\nconst getDefaultSettingsForType = (type: string) => {\n  switch (type) {\n    case 'NETWORK':\n      return {\n        dns_servers: ['8.8.8.8', '1.1.1.1'],\n        use_ipv6: true,\n        firewall_enabled: true,\n        tcp_ip_optimization: 'balanced',\n        network_buffers: 'auto',\n        quantum_shadow_protection: true,\n        packet_priority: 'auto',\n        bandwidth_allocation: {\n          streaming: 30,\n          downloads: 40,\n          browsing: 20,\n          other: 10\n        }\n      };\n    case 'SYSTEM':\n      return {\n        power_profile: 'balanced',\n        startup_programs_enabled: true,\n        update_schedule: 'weekly',\n        temp_file_cleanup: 'daily',\n        disk_cleanup_schedule: 'weekly',\n        system_restore_points: 'weekly',\n        hawkington_monitoring: true,\n        notification_level: 'medium'\n      };\n    case 'SECURITY':\n      return {\n        firewall_level: 'high',\n        auto_updates: true,\n        port_scanning_protection: true,\n        malware_scanning: 'daily',\n        suspicious_activity_detection: true,\n        usb_device_protection: 'ask',\n        password_complexity: 'high',\n        stick_anxiety_level: 'medium'\n      };\n    case 'PERFORMANCE':\n      return {\n        cpu_governor: 'performance',\n        memory_compression: true,\n        disk_write_cache: true,\n        graphics_performance: 'balanced',\n        process_priority_boost: true,\n        background_app_restrictions: 'moderate',\n        prefetch_optimization: true,\n        meth_snail_boost: true\n      };\n    default:\n      return {};\n  }\n};\n\nexport const SystemConfiguration: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { configurations, loading, error } = useAppSelector((state) => state.configuration);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [formData, setFormData] = useState<SystemConfigurationFormData>(defaultFormData);\n  const [editingId, setEditingId] = useState<string | null>(null);\n  const [hawkingtonQuote, setHawkingtonQuote] = useState<string>('');\n  const [activeFilter, setActiveFilter] = useState<string>('ALL');\n\n  const hawkingtonQuotes = [\n    \"Sir Hawkington is monitoring your configurations with distinguished elegance!\",\n    \"I say, these configurations are most exquisite! *adjusts monocle*\",\n    \"A gentleman's system is only as refined as its configurations, my dear user!\",\n    \"These settings are absolutely splendid! Quite the sophisticated arrangement!\",\n    \"I do believe these configurations will bring order to the chaos of your system!\",\n    \"One must maintain a properly configured system, just as one maintains a proper wardrobe!\",\n    \"A distinguished gentleman never leaves his system in disarray. Configuration is key!\",\n    \"Might I suggest optimizing your system with these refined configurations? Quite splendid!\",\n    \"Ah, system configurations! The cornerstone of a dignified computing experience!\"\n  ];\n  useEffect(() => {\n    console.log('Dispatching fetchSystemConfigurations');\n    dispatch(fetchSystemConfigurations({}))\n      .then((result) => {\n        console.log('Success fetching configurations:', result);\n      })\n      .catch((error) => {\n        console.error('Error fetching configurations:', error);\n      });\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchSystemConfigurations({}));\n    setHawkingtonQuote(hawkingtonQuotes[Math.floor(Math.random() * hawkingtonQuotes.length)]);\n  }, [dispatch, hawkingtonQuotes]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    \n    if (name === 'config_type') {\n      setFormData({\n        ...formData,\n        config_type: value as any,\n        settings: getDefaultSettingsForType(value)\n      });\n    } else {\n      setFormData({ ...formData, [name]: value });\n    }\n  };\n\n  const handleSettingChange = (key: string, value: any) => {\n    if (key.includes('.')) {\n      const [category, setting] = key.split('.');\n      setFormData({\n        ...formData,\n        settings: {\n          ...formData.settings,\n          [category]: {\n            ...formData.settings[category],\n            [setting]: typeof value === 'string' && !isNaN(Number(value)) ? Number(value) : value\n          }\n        }\n      });\n    } else {\n      setFormData({\n        ...formData,\n        settings: {\n          ...formData.settings,\n          [key]: typeof value === 'boolean' ? value : value\n        }\n      });\n    }\n  };\n\n  const handleSubmit = () => {\n    if (editingId) {\n      dispatch(updateSystemConfiguration({ id: editingId, ...formData }));\n    } else {\n      dispatch(createSystemConfiguration(formData));\n    }\n    setIsModalOpen(false);\n    setFormData(defaultFormData);\n    setEditingId(null);\n    setHawkingtonQuote(hawkingtonQuotes[Math.floor(Math.random() * hawkingtonQuotes.length)]);\n  };\n\n  const handleEdit = (config: any) => {\n    setFormData({\n      name: config.name,\n      description: config.description,\n      config_type: config.config_type,\n      settings: config.settings\n    });\n    setEditingId(config.id);\n    setIsModalOpen(true);\n  };\n\n  const handleDelete = (id: string) => {\n    if (window.confirm(\"Sir Hawkington inquires: Are you absolutely certain you wish to delete this distinguished configuration? This action cannot be undone and would be most unfortunate!\")) {\n      dispatch(deleteSystemConfiguration(id));\n      setHawkingtonQuote(\"Sir Hawkington is utterly devastated by the loss of that magnificent configuration!\");\n    }\n  };\n\n  const handleApply = (id: string) => {\n    dispatch(applySystemConfiguration(id));\n    setHawkingtonQuote(\"Sir Hawkington is applying your configuration with the utmost elegance and precision!\");\n  };\n\n  const openCreateModal = () => {\n    setFormData({\n      ...defaultFormData,\n      settings: getDefaultSettingsForType('SYSTEM')\n    });\n    setEditingId(null);\n    setIsModalOpen(true);\n  };\n\n  const getConfigTypeIcon = (type: string) => {\n    switch (type) {\n      case 'NETWORK': return '🌐';\n      case 'SYSTEM': return '⚙️';\n      case 'SECURITY': return '🔒';\n      case 'PERFORMANCE': return '⚡';\n      default: return '📋';\n    }\n  };\n\n  const filterConfigurations = (configurations: any[], filter: string) => {\n    if (filter === 'ALL') {\n      return configurations;\n    } else {\n      return configurations.filter(config => config.config_type === filter);\n    }\n  };\n\n  const filteredConfigurations = filterConfigurations(configurations || [], activeFilter);\n\n  const handleFilterChange = (filter: string) => {\n    setActiveFilter(filter);\n  };\n\n  const getConfigTypeLabel = (type: string) => {\n    switch (type) {\n      case 'NETWORK': return 'Network';\n      case 'SYSTEM': return 'System';\n      case 'SECURITY': return 'Security';\n      case 'PERFORMANCE': return 'Performance';\n      default: return type;\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading-container\">Sir Hawkington is gathering your configurations with distinguished elegance...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <h3>Sir Hawkington has encountered a most unfortunate error!</h3>\n        <p>{error}</p>\n        <button onClick={() => dispatch(fetchSystemConfigurations({}))} type=\"button\">\n          Assist Sir Hawkington in trying again\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"system-configuration-container\">\n      <div className=\"configuration-header\">\n        <div className=\"title-section\">\n          <h2>System Configurations</h2>\n          <div className=\"hawkington-quote\">{hawkingtonQuote}</div>\n        </div>\n        <div className=\"hawkington-avatar\">\n          <div className=\"hawkington-icon\">🧐</div>\n          <div className=\"monocle\">🔍</div>\n        </div>\n        <button className=\"create-configuration-button\" onClick={openCreateModal} type=\"button\">\n          <span className=\"button-icon\">⚙️</span>\n          <span>Create New Configuration</span>\n        </button>\n      </div>\n\n      <div className=\"filter-tabs\">\n        <button \n          className={`filter-tab ${activeFilter === 'ALL' ? 'active' : ''}`} \n          onClick={() => handleFilterChange('ALL')}\n          type=\"button\"\n        >\n          All\n        </button>\n        <button \n          className={`filter-tab ${activeFilter === 'NETWORK' ? 'active' : ''}`} \n          onClick={() => handleFilterChange('NETWORK')}\n          type=\"button\"\n        >\n          🌐 Network\n        </button>\n        <button \n          className={`filter-tab ${activeFilter === 'SYSTEM' ? 'active' : ''}`} \n          onClick={() => handleFilterChange('SYSTEM')}\n          type=\"button\"\n        >\n          ⚙️ System\n        </button>\n        <button \n          className={`filter-tab ${activeFilter === 'SECURITY' ? 'active' : ''}`} \n          onClick={() => handleFilterChange('SECURITY')}\n          type=\"button\"\n        >\n          🔒 Security\n        </button>\n        <button \n          className={`filter-tab ${activeFilter === 'PERFORMANCE' ? 'active' : ''}`} \n          onClick={() => handleFilterChange('PERFORMANCE')}\n          type=\"button\"\n        >\n          ⚡ Performance\n        </button>\n      </div>\n\n      <div className=\"configurations-grid\">\n        {filteredConfigurations && filteredConfigurations.length > 0 ? (\n          filteredConfigurations.map((config: any) => (\n            <div key={config.id} className={`configuration-card ${config.config_type.toLowerCase()} ${config.is_active ? 'active' : ''}`}>\n              <div className=\"configuration-type-banner\">\n                {getConfigTypeLabel(config.config_type)}\n              </div>\n              <div className=\"configuration-header\">\n                <div className=\"config-type-icon\">\n                  {getConfigTypeIcon(config.config_type)}\n                </div>\n                <h3>{config.name}</h3>\n                {config.is_active && <span className=\"active-badge\">ACTIVE</span>}\n              </div>\n              \n              <p className=\"configuration-description\">{config.description}</p>\n              \n              <div className=\"configuration-settings\">\n                <h4>Settings</h4>\n                <div className=\"settings-list\">\n                  {Object.entries(config.settings).map(([key, value]) => {\n                    // Skip rendering nested objects directly\n                    if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n                      return Object.entries(value as Record<string, any>).map(([nestedKey, nestedValue]) => (\n                        <div key={`${key}-${nestedKey}`} className=\"setting-item\">\n                          <span className=\"setting-label\">{key.replace(/_/g, ' ')} {nestedKey.replace(/_/g, ' ')}:</span>\n                          <span className=\"setting-value\">\n                            {typeof nestedValue === 'boolean' \n                              ? (nestedValue ? 'Enabled' : 'Disabled') \n                              : Array.isArray(nestedValue) \n                                ? nestedValue.join(', ') \n                                : String(nestedValue)}\n                          </span>\n                        </div>\n                      ));\n                    }\n                    \n                    return (\n                      <div key={key} className=\"setting-item\">\n                        <span className=\"setting-label\">{key.replace(/_/g, ' ')}:</span>\n                        <span className=\"setting-value\">\n                          {typeof value === 'boolean' \n                            ? (value ? 'Enabled' : 'Disabled') \n                            : Array.isArray(value) \n                              ? value.join(', ') \n                              : String(value)}\n                        </span>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n              \n              <div className=\"configuration-actions\">\n                <button className=\"edit-button\" onClick={() => handleEdit(config)} type=\"button\">\n                  Edit\n                </button>\n                <button className=\"apply-button\" onClick={() => handleApply(config.id)} type=\"button\">\n                  Apply\n                </button>\n                <button className=\"delete-button\" onClick={() => handleDelete(config.id)} type=\"button\">\n                  Delete\n                </button>\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"no-configurations\">\n            <p>Sir Hawkington hasn&apos;t created any configurations yet.</p>\n            <p>Create your first configuration to experience Sir Hawkington&apos;s distinguished system management!</p>\n          </div>\n        )}\n      </div>\n\n      <Modal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        title={editingId ? \"Edit System Configuration\" : \"Create System Configuration\"}\n        size=\"large\"\n      >\n        <div className=\"configuration-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Configuration Name:</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleInputChange}\n              placeholder=\"e.g., Gaming Setup, Work Configuration, etc.\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description:</label>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              value={formData.description}\n              onChange={handleInputChange}\n              placeholder=\"Describe what this configuration is for...\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"config_type\">Configuration Type:</label>\n            <select\n              id=\"config_type\"\n              name=\"config_type\"\n              value={formData.config_type}\n              onChange={handleInputChange}\n            >\n              <option value=\"NETWORK\">Network</option>\n              <option value=\"SYSTEM\">System</option>\n              <option value=\"SECURITY\">Security</option>\n              <option value=\"PERFORMANCE\">Performance</option>\n            </select>\n          </div>\n          \n          <div className=\"form-group\">\n            <h4>Settings</h4>\n            <div className=\"settings-grid\">\n              {Object.entries(formData.settings).map(([key, value]) => {\n                // Handle nested objects\n                if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n                  return (\n                    <div key={key} className=\"nested-settings\">\n                      <h5>{key.replace(/_/g, ' ')}</h5>\n                      {Object.entries(value as Record<string, any>).map(([nestedKey, nestedValue]) => (\n                        <div key={`${key}-${nestedKey}`} className=\"setting-control\">\n                          <label htmlFor={`${key}.${nestedKey}`}>\n                            {nestedKey.replace(/_/g, ' ')}:\n                          </label>\n                          \n                          {typeof nestedValue === 'boolean' ? (\n                            <div className=\"toggle-switch\">\n                              <input\n                                type=\"checkbox\"\n                                id={`${key}.${nestedKey}`}\n                                checked={nestedValue}\n                                onChange={(e) => handleSettingChange(`${key}.${nestedKey}`, e.target.checked)}\n                              />\n                              <span className=\"toggle-slider\"></span>\n                            </div>\n                          ) : typeof nestedValue === 'number' ? (\n                            <input\n                              type=\"number\"\n                              id={`${key}.${nestedKey}`}\n                              value={nestedValue}\n                              onChange={(e) => handleSettingChange(`${key}.${nestedKey}`, e.target.value)}\n                            />\n                          ) : (\n                            <input\n                              type=\"text\"\n                              id={`${key}.${nestedKey}`}\n                              value={nestedValue}\n                              onChange={(e) => handleSettingChange(`${key}.${nestedKey}`, e.target.value)}\n                            />\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  );\n                }\n                \n                return (\n                  <div key={key} className=\"setting-control\">\n                    <label htmlFor={key}>\n                      {key.replace(/_/g, ' ')}:\n                    </label>\n                    \n                    {typeof value === 'boolean' ? (\n                      <div className=\"toggle-switch\">\n                        <input\n                          type=\"checkbox\"\n                          id={key}\n                          checked={value}\n                          onChange={(e) => handleSettingChange(key, e.target.checked)}\n                        />\n                        <span className=\"toggle-slider\"></span>\n                      </div>\n                    ) : Array.isArray(value) ? (\n                      <input\n                        type=\"text\"\n                        id={key}\n                        value={value.join(', ')}\n                        onChange={(e) => handleSettingChange(key, e.target.value.split(', '))}\n                      />\n                    ) : typeof value === 'number' ? (\n                      <input\n                        type=\"number\"\n                        id={key}\n                        value={value}\n                        onChange={(e) => handleSettingChange(key, Number(e.target.value))}\n                      />\n                    ) : (\n                      <input\n                        type=\"text\"\n                        id={key}\n                        value={value}\n                        onChange={(e) => handleSettingChange(key, e.target.value)}\n                      />\n                    )}\n                    {key === 'firewall_level' && (\n                      <p className=\"setting-description\">Set the security level for your firewall protection</p>\n                    )}\n                    {key === 'cpu_governor' && (\n                      <p className=\"setting-description\">Controls how the CPU responds to system load</p>\n                    )}\n                    {key === 'power_profile' && (\n                      <p className=\"setting-description\">Balances performance and energy consumption</p>\n                    )}\n                    {key === 'dns_servers' && (\n                      <p className=\"setting-description\">Comma-separated list of DNS server IP addresses</p>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          \n          <div className=\"form-actions\">\n            <button className=\"cancel-button\" onClick={() => setIsModalOpen(false)} type=\"button\">\n              Cancel\n            </button>\n            <button className=\"submit-button\" onClick={handleSubmit} type=\"button\">\n              {editingId ? \"Update Configuration\" : \"Create Configuration\"}\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default SystemConfiguration;                    ","// frontend/src/components/metrics/CPU/utils/cpuDataProcessor.ts\n\nimport { SystemMetric } from '../../../../types/metrics';\nimport { CPUData, CPUCore, CPUProcess, CPUTemperature } from '../Tabs/types';\n\n/**\n * Process CPU data from system metrics\n */\nexport function processCPUData(currentMetric: SystemMetric | null): {\n  cpuData: CPUData | null;\n  error: string | null;\n} {\n  if (!currentMetric) {\n    return { cpuData: null, error: 'No metrics data available' };\n  }\n  \n  // Try to find CPU data in the metric\n  const rawCpuData = currentMetric.cpu || currentMetric.additional?.cpu_details;\n  \n  if (!rawCpuData) {\n    return { cpuData: null, error: 'No CPU data found in metrics' };\n  }\n  \n  try {\n    // Check for required fields\n    if (rawCpuData.usage_percent === undefined) {\n      throw new Error('Missing CPU usage data');\n    }\n    \n    // Build the CPU data structure\n    const processedData: CPUData = {\n        overall_usage: rawCpuData.usage_percent,\n        process_count: rawCpuData.process_count || 0,\n        thread_count: rawCpuData.thread_count || 0,\n        physical_cores: rawCpuData.physical_cores || rawCpuData.core_count || 1,\n        logical_cores: rawCpuData.logical_cores || rawCpuData.core_count || 1,\n        model_name: rawCpuData.model_name || rawCpuData.name || 'Unknown CPU',\n        frequency_mhz: rawCpuData.frequency_mhz || rawCpuData.frequency || 0,\n        temperature: processCPUTemperature(rawCpuData.temperature || rawCpuData.temp),\n        top_processes: processCPUProcesses(rawCpuData.top_processes || rawCpuData.processes),\n        cores: processCPUCores(rawCpuData.cores),\n        historical_temp: rawCpuData.historical_temp || [],\n        usage_percent: undefined,\n        core_count: 0,\n        name: '',\n        frequency: 0,\n        temp: processCPUTemperature(rawCpuData.temperature || rawCpuData.temp),\n        processes: []\n    };\n    \n    return { cpuData: processedData, error: null };\n  } catch (err) {\n    console.error('Error processing CPU data:', err);\n    return {\n      cpuData: null,\n      error: `Failed to process CPU data: ${err instanceof Error ? err.message : 'Unknown error'}`\n    };\n  }\n}\n\n/**\n * Process CPU temperature data\n */\nfunction processCPUTemperature(tempData: any): CPUTemperature {\n  if (!tempData) {\n    // Default values if temperature data is missing\n    return {\n      current: 0,\n      min: 0,\n      max: 100,\n      critical: 90,\n      throttle_threshold: 80,\n      unit: 'C'\n    };\n  }\n  \n  return {\n    current: tempData.current || tempData.value || 0,\n    min: tempData.min || 0,\n    max: tempData.max || 100,\n    critical: tempData.critical || tempData.critical_temp || 90,\n    throttle_threshold: tempData.throttle_threshold || tempData.throttle || 80,\n    unit: tempData.unit || 'C'\n  };\n}\n\n/**\n * Process CPU processes data\n */\nfunction processCPUProcesses(processesData: any[]): CPUProcess[] {\n  if (!processesData || !Array.isArray(processesData)) {\n    return [];\n  }\n  \n  return processesData.map(proc => ({\n    pid: proc.pid,\n    name: proc.name,\n    cpu_percent: proc.cpu_percent || proc.cpu_usage || 0,\n    user: proc.user || proc.username || 'Unknown',\n    memory_percent: proc.memory_percent || proc.mem_usage,\n    command: proc.command || proc.cmd,\n    status: proc.status\n  }));\n}\n\n/**\n * Process CPU cores data\n */\nfunction processCPUCores(coresData: any[]): CPUCore[] {\n  if (!coresData || !Array.isArray(coresData)) {\n    return [];\n  }\n  \n  return coresData.map((core, index) => ({\n    id: core.id || index,\n    usage_percent: core.usage_percent || core.usage || 0,\n    frequency_mhz: core.frequency_mhz || core.frequency,\n    threads: processThreads(core.threads)\n  }));\n}\n\n/**\n * Process CPU threads data\n */\nfunction processThreads(threadsData: any[]) {\n  if (!threadsData || !Array.isArray(threadsData)) {\n    return [];\n  }\n  \n  return threadsData.map((thread, index) => ({\n    id: thread.id || index,\n    usage_percent: thread.usage_percent || thread.usage || 0,\n    process_id: thread.process_id || thread.pid,\n    process_name: thread.process_name\n  }));\n}\n\n/**\n * Extract historical CPU data from metrics\n */\nexport function processHistoricalCPUData(historicalMetrics: SystemMetric[]) {\n  if (!historicalMetrics || historicalMetrics.length === 0) {\n    return [];\n  }\n  \n  return historicalMetrics.map(metric => {\n    const cpuData = metric.cpu || metric.additional?.cpu_details;\n    \n    if (!cpuData) {\n      return {\n        timestamp: metric.timestamp,\n        usage_percent: 0,\n        temperature: 0\n      };\n    }\n    \n    return {\n      timestamp: metric.timestamp,\n      usage_percent: cpuData.usage_percent || 0,\n      temperature: cpuData.temperature?.current || cpuData.temp?.current || 0\n    };\n  });\n}","// frontend/src/components/metrics/CPU/utils/temperatureUtils.ts\n\n/**\n * Formats a temperature value with the appropriate unit\n * @param value Temperature value\n * @param unit Temperature unit ('C' or 'F')\n * @returns Formatted temperature string\n */\nexport function formatTemperature(value: number, unit: 'C' | 'F' = 'C'): string {\n    return `${value.toFixed(1)}°${unit}`;\n  }\n  \n  /**\n   * Get CSS class based on temperature in relation to thresholds\n   * @param temp Current temperature\n   * @param throttleThreshold Throttling threshold\n   * @param criticalThreshold Critical threshold\n   * @returns CSS class name\n   */\n  export function getTemperatureClass(\n    temp: number, \n    throttleThreshold: number, \n    criticalThreshold: number\n  ): string {\n    if (temp >= criticalThreshold) return 'critical';\n    if (temp >= throttleThreshold) return 'warning';\n    if (temp >= throttleThreshold * 0.8) return 'elevated';\n    return 'normal';\n  }\n  \n  /**\n   * Gets a description of the temperature status\n   * @param temp Current temperature\n   * @param throttleThreshold Throttling threshold\n   * @param criticalThreshold Critical threshold\n   * @returns Description string\n   */\n  export function getThresholdDescription(\n    temp: number, \n    throttleThreshold: number, \n    criticalThreshold: number\n  ): string {\n    if (temp >= criticalThreshold) return 'CRITICAL - Immediate action required';\n    if (temp >= throttleThreshold) return 'WARNING - Throttling likely';\n    if (temp >= throttleThreshold * 0.8) return 'ELEVATED - Monitor closely';\n    return 'NORMAL - Within safe operating range';\n  }\n  \n  /**\n   * Determines if a temperature alert should be shown\n   * @param temp Current temperature\n   * @param throttleThreshold Throttling threshold\n   * @returns Boolean indicating if an alert should be shown\n   */\n  export function shouldShowTemperatureAlert(temp: number, throttleThreshold: number): boolean {\n    return temp >= (throttleThreshold * 0.8);\n  }\n  \n  /**\n   * Gets alert level based on temperature\n   * @param temp Current temperature\n   * @param throttleThreshold Throttling threshold\n   * @param criticalThreshold Critical threshold\n   * @returns Alert level string\n   */\n  export function getTemperatureAlertLevel(\n    temp: number, \n    throttleThreshold: number, \n    criticalThreshold: number\n  ): 'none' | 'notice' | 'warning' | 'critical' {\n    if (temp >= criticalThreshold) return 'critical';\n    if (temp >= throttleThreshold) return 'warning';\n    if (temp >= throttleThreshold * 0.8) return 'notice';\n    return 'none';\n  }","// frontend/src/components/metrics/CPU/tabs/CPUOverviewTab.tsx (continued)\n\nimport React from 'react';\nimport { CPUData } from './types';\nimport { formatTemperature, getTemperatureClass } from '../Utils/temperatureUtils';\nimport './CPUTabs.css';\n\ninterface CPUOverviewTabProps {\n  data: CPUData;\n  compact?: boolean;\n}\n\nconst CPUOverviewTab: React.FC<CPUOverviewTabProps> = ({ data, compact = false }) => {\n  return (\n    <div className=\"cpu-overview-tab\">\n      <div className=\"cpu-usage-container\">\n        <div className=\"cpu-usage-gauge\">\n          {/* Background arc */}\n          <svg viewBox=\"0 0 200 100\" className=\"gauge\">\n            {/* Background arc */}\n            <path \n              d=\"M20,90 A 60,60 0 0,1 180,90\" \n              className=\"gauge-background\" \n            />\n            \n            {/* Usage arc */}\n            <path \n              d={`M20,90 A 60,60 0 ${data.overall_usage > 50 ? 1 : 0},1 ${20 + 160 * (data.overall_usage / 100)},${90 - Math.sin(Math.PI * data.overall_usage / 100) * 60}`} \n              className={`gauge-value ${\n                data.overall_usage > 90 ? 'critical' :\n                data.overall_usage > 70 ? 'high' :\n                data.overall_usage > 40 ? 'medium' : 'low'\n              }`} \n            />\n            \n            {/* Usage percentage text */}\n            <text x=\"100\" y=\"85\" className=\"gauge-percentage\">\n              {data.overall_usage.toFixed(1)}%\n            </text>\n            \n            <text x=\"100\" y=\"15\" className=\"gauge-label\">CPU Usage</text>\n          </svg>\n        </div>\n        \n        <div className=\"cpu-info-panel\">\n          <div className=\"info-row\">\n            <div className=\"info-label\">Model:</div>\n            <div className=\"info-value\">{data.model_name}</div>\n          </div>\n          <div className=\"info-row\">\n            <div className=\"info-label\">Cores:</div>\n            <div className=\"info-value\"></div>\n          </div>\n          <div className=\"info-row\">\n            <div className=\"info-label\">Frequency:</div>\n            <div className=\"info-value\">{(data.frequency_mhz / 1000).toFixed(2)} GHz</div>\n          </div>\n          <div className=\"info-row\">\n            <div className=\"info-label\">Processes:</div>\n            <div className=\"info-value\">{data.process_count}</div>\n          </div>\n          <div className=\"info-row\">\n            <div className=\"info-label\">Threads:</div>\n            <div className=\"info-value\">{data.thread_count}</div>\n          </div>\n          {data.temperature && (\n            <div className=\"info-row\">\n              <div className=\"info-label\">Temperature:</div>\n              <div className={`info-value ${getTemperatureClass(\n                data.temperature.current,\n                data.temperature.throttle_threshold,\n                data.temperature.critical\n              )}`}>\n                {formatTemperature(data.temperature.current, data.temperature.unit)}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* Quick Top Processes Overview */}\n      <div className=\"cpu-section\">\n        <div className=\"cpu-section-title\">Top CPU Processes</div>\n        \n        {data.top_processes && data.top_processes.length > 0 ? (\n          <div className=\"top-processes-overview\">\n            {data.top_processes.slice(0, 5).map((process, index) => (\n              <div key={process.pid} className=\"top-process-item\">\n                <div className=\"process-rank\">{index + 1}</div>\n                <div className=\"process-details\">\n                  <div className=\"process-name\">{process.name}</div>\n                  <div className=\"process-info\">\n                    <span className=\"process-pid\">PID: {process.pid}</span>\n                    <span className=\"process-user\">{process.user}</span>\n                  </div>\n                </div>\n                <div className=\"process-usage\">\n                  <div className=\"usage-bar-container\">\n                    <div \n                      className=\"usage-bar-fill\" \n                      style={{ width: `${Math.min(process.cpu_percent, 100)}%` }}\n                    />\n                    <span className=\"usage-text\">{process.cpu_percent.toFixed(1)}%</span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"no-data-message\">No process data available</div>\n        )}\n        \n        <div className=\"view-all-link\">\n          <button onClick={() => {/* Navigate to processes tab */}}>View All Processes</button>\n        </div>\n      </div>\n      \n      {/* Temperature Overview */}\n      {data.temperature && (\n        <div className=\"cpu-section\">\n          <div className=\"cpu-section-title\">Temperature Status</div>\n          \n          <div className=\"temperature-overview\">\n            <div className=\"current-temperature\">\n              <div className={`temp-value ${getTemperatureClass(\n                data.temperature.current,\n                data.temperature.throttle_threshold,\n                data.temperature.critical\n              )}`}>\n                {formatTemperature(data.temperature.current, data.temperature.unit)}\n              </div>\n              \n              <div className=\"temp-scale\">\n                <div className=\"temp-scale-min\">\n                  {formatTemperature(data.temperature.min, data.temperature.unit)}\n                </div>\n                <div className=\"temp-scale-bar\">\n                  <div className=\"temp-scale-normal\"></div>\n                  <div className=\"temp-scale-warning\"></div>\n                  <div className=\"temp-scale-critical\"></div>\n                  <div \n                    className=\"temp-scale-marker\"\n                    style={{\n                      left: `${Math.min(100, Math.max(0, (\n                        (data.temperature.current - data.temperature.min) / \n                        (data.temperature.max - data.temperature.min)\n                      ) * 100))}%`\n                    }}\n                  ></div>\n                </div>\n                <div className=\"temp-scale-max\">\n                  {formatTemperature(data.temperature.max, data.temperature.unit)}\n                </div>\n              </div>\n            </div>\n            \n            {data.temperature.current >= data.temperature.throttle_threshold * 0.8 && (\n              <div className={`temp-alert ${data.temperature.current >= data.temperature.critical ? \n                'critical' : data.temperature.current >= data.temperature.throttle_threshold ? \n                'warning' : 'notice'}`}>\n                <div className=\"alert-icon\">⚠️</div>\n                <div className=\"alert-message\">\n                  {data.temperature.current >= data.temperature.critical ? \n                    'CRITICAL: CPU temperature exceeds critical threshold!' : \n                    data.temperature.current >= data.temperature.throttle_threshold ? \n                    'WARNING: CPU temperature has reached throttling threshold.' : \n                    'NOTICE: CPU temperature is elevated.'}\n                </div>\n              </div>\n            )}\n            \n            <div className=\"view-thermal-link\">\n              <button onClick={() => {/* Navigate to thermal tab */}}>View Detailed Thermal Analysis</button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Core Balance Indicator */}\n      {data.cores && data.cores.length > 0 && (\n        <div className=\"cpu-section\">\n          <div className=\"cpu-section-title\">Core Balance</div>\n          \n          <div className=\"core-balance-overview\">\n            <div className=\"core-usage-bars\">\n              {data.cores.slice(0, compact ? 4 : 8).map(core => (\n                <div key={core.id} className=\"core-mini-bar\">\n                  <div className=\"core-mini-label\">Core {core.id}</div>\n                  <div className=\"core-mini-bar-container\">\n                    <div \n                      className={`core-mini-bar-fill ${\n                        core.usage_percent > 90 ? 'critical' :\n                        core.usage_percent > 70 ? 'high' :\n                        core.usage_percent > 40 ? 'medium' : 'low'\n                      }`}\n                      style={{ height: `${core.usage_percent}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"core-mini-value\">{core.usage_percent.toFixed(0)}%</div>\n                </div>\n              ))}\n              \n              {data.cores.length > (compact ? 4 : 8) && (\n                <div className=\"core-mini-more\">+{data.cores.length - (compact ? 4 : 8)} more</div>\n              )}\n            </div>\n            \n            <div className=\"core-balance-analysis\">\n              {(() => {\n                // Calculate imbalance\n                const usages = data.cores.map(c => c.usage_percent);\n                const maxUsage = Math.max(...usages);\n                const minUsage = Math.min(...usages);\n                const imbalance = maxUsage - minUsage;\n                \n                if (imbalance > 30) {\n                  return (\n                    <div className=\"imbalance-warning\">\n                      <span className=\"warning-icon\">⚠️</span>\n                      <span className=\"warning-text\">\n                        Significant core imbalance detected ({imbalance.toFixed(0)}% difference)\n                      </span>\n                      <button className=\"view-cores-button\">View Core Details</button>\n                    </div>\n                  );\n                }\n                \n                return (\n                  <div className=\"balance-status\">\n                    <span className=\"status-icon\">✓</span>\n                    <span className=\"status-text\">\n                      Core workload is relatively balanced ({imbalance.toFixed(0)}% max difference)\n                    </span>\n                  </div>\n                );\n              })()}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CPUOverviewTab;","// frontend/src/components/metrics/CPU/utils/processManager.ts\n\nimport { ProcessKillResult } from '../Tabs/types';\nimport api from '../../../../utils/api';\n\n/**\n * Sends a request to kill a process by PID\n * @param pid Process ID to kill\n * @returns Promise with kill result\n */\nexport async function killProcess(pid: number): Promise<ProcessKillResult> {\n  try {\n    // Call your API endpoint\n    const response = await api.post('/system/process/kill', { pid });\n    \n    // Return the result\n    const data = await (response as Response).json();\n    return {\n      success: data.success,\n      message: data.message || 'Process terminated successfully',\n      pid\n    };\n  } catch (error) {\n    console.error('Error killing process:', error);\n    return {\n      success: false,\n      message: error instanceof Error ? error.message : 'Failed to terminate process',\n      pid\n    };\n  }\n}\n\n/**\n * Checks if the current user has permission to kill a process\n * This can be used to conditionally show/hide kill buttons\n */\nexport async function checkKillPermission(): Promise<boolean> {\n  try {\n    const response: any = await api.get('/system/permissions/check');\n    return (response as any).data?.hasPermission;\n  } catch (error) {\n    console.error('Error checking kill permission:', error);\n    return false;\n  }\n}","// frontend/src/components/metrics/CPU/tabs/CPUProcessesTab.tsx\n\nimport React, { useState } from 'react';\nimport { CPUProcess } from './types';\nimport { killProcess } from '../Utils/processManager';\nimport './CPUTabs.css';\n\ninterface CPUProcessesTabProps {\n  processes: CPUProcess[];\n  compact?: boolean;\n}\n\nconst CPUProcessesTab: React.FC<CPUProcessesTabProps> = ({ processes, compact: _compact = false }) => {\n  const [isKilling, setIsKilling] = useState<{[key: number]: boolean}>({});\n  const [killResult, setKillResult] = useState<{[key: number]: {success: boolean; message: string}}>({});\n  \n  // Handle kill process\n  const handleKillProcess = async (pid: number) => {\n    if (isKilling[pid]) return; // Prevent multiple clicks\n    \n    setIsKilling(prev => ({ ...prev, [pid]: true }));\n    \n    try {\n      const result = await killProcess(pid);\n      \n      setKillResult(prev => ({ \n        ...prev, \n        [pid]: { \n          success: result.success, \n          message: result.message \n        } \n      }));\n      \n      // Clear result message after 3 seconds\n      setTimeout(() => {\n        setKillResult(prev => {\n          const newState = { ...prev };\n          delete newState[pid];\n          return newState;\n        });\n      }, 3000);\n    } catch (err) {\n      setKillResult(prev => ({ \n        ...prev, \n        [pid]: { \n          success: false, \n          message: `Error: ${err instanceof Error ? err.message : 'Unknown error'}` \n        } \n      }));\n    } finally {\n      setIsKilling(prev => ({ ...prev, [pid]: false }));\n    }\n  };\n\n  // If no process data available\n  if (!processes || processes.length === 0) {\n    return (\n      <div className=\"cpu-section\">\n        <div className=\"cpu-section-title\">Top CPU Processes</div>\n        <div className=\"no-data-message\">No process data available</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cpu-section\">\n      <div className=\"cpu-section-title\">Top CPU Processes</div>\n      <table className=\"process-table\">\n        <thead>\n          <tr>\n            <th>Process</th>\n            <th>PID</th>\n            <th>User</th>\n            <th>CPU %</th>\n            <th>Memory %</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {processes.map((process) => (\n            <tr key={process.pid}>\n              <td>\n                <div className=\"process-name\">{process.name}</div>\n                {process.command && <div className=\"process-command\">{process.command}</div>}\n              </td>\n              <td>{process.pid}</td>\n              <td>{process.user}</td>\n              <td>\n                <div className=\"usage-bar-container\">\n                  <div \n                    className=\"usage-bar-fill\" \n                    style={{ width: `${Math.min(process.cpu_percent, 100)}%` }}\n                  />\n                  <span className=\"usage-text\">{process.cpu_percent.toFixed(1)}%</span>\n                </div>\n              </td>\n              <td>\n                {process.memory_percent !== undefined && (\n                  <div className=\"usage-bar-container\">\n                    <div \n                      className=\"usage-bar-fill memory\" \n                      style={{ width: `${Math.min(process.memory_percent, 100)}%` }}\n                    />\n                    <span className=\"usage-text\">{process.memory_percent.toFixed(1)}%</span>\n                  </div>\n                )}\n              </td>\n              <td>\n                <div className=\"process-actions\">\n                  <button \n                    className=\"kill-button\" \n                    onClick={() => handleKillProcess(process.pid)}\n                    disabled={isKilling[process.pid]}\n                  >\n                    {isKilling[process.pid] ? 'Killing...' : 'Kill'}\n                  </button>\n                  \n                  {killResult[process.pid] && (\n                    <div className={`kill-result ${killResult[process.pid].success ? 'success' : 'error'}`}>\n                      {killResult[process.pid].message}\n                    </div>\n                  )}\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default CPUProcessesTab;","// frontend/src/components/metrics/CPU/tabs/CPUCoresTab.tsx\n\nimport React, { useMemo } from 'react';\nimport { CPUCore } from './types';\n\ninterface CPUCoresTabProps {\n  cores: CPUCore[];\n  physicalCores: number;\n  compact?: boolean;\n}\n\nconst CPUCoresTab: React.FC<CPUCoresTabProps> = ({ \n  cores}) => {\n  // Calculate statistics and detect imbalances\n  const stats = useMemo(() => {\n    if (!cores || cores.length === 0) return null;\n    \n    // Calculate average usage across all cores\n    const avgUsage = cores.reduce((sum, core) => sum + core.usage_percent, 0) / cores.length;\n    \n    // Find most and least loaded cores\n    const mostLoaded = [...cores].sort((a, b) => b.usage_percent - a.usage_percent)[0];\n    const leastLoaded = [...cores].sort((a, b) => a.usage_percent - b.usage_percent)[0];\n    \n    // Calculate imbalance as the difference between most and least loaded cores\n    const imbalancePercent = mostLoaded.usage_percent - leastLoaded.usage_percent;\n    \n    // Determine if there's a significant imbalance (more than 30% difference)\n    const hasImbalance = imbalancePercent > 30;\n    \n    // Calculate standard deviation to quantify overall balance\n    const variance = cores.reduce((sum, core) => {\n      const diff = core.usage_percent - avgUsage;\n      return sum + (diff * diff);\n    }, 0) / cores.length;\n    const stdDev = Math.sqrt(variance);\n    \n    // Group cores by physical core (assuming logical cores are sequential pairs)\n    const physicalCoreGroups: { [key: number]: CPUCore[] } = {};\n    cores.forEach(core => {\n      const physicalId = Math.floor(core.id / 2);\n      if (!physicalCoreGroups[physicalId]) {\n        physicalCoreGroups[physicalId] = [];\n      }\n      physicalCoreGroups[physicalId].push(core);\n    });\n    \n    return {\n      avgUsage,\n      mostLoaded,\n      leastLoaded,\n      imbalancePercent,\n      hasImbalance,\n      stdDev,\n      physicalCoreGroups\n    };\n  }, [cores]);\n  \n  // If no core data available\n  if (!cores || cores.length === 0 || !stats) {\n    return (\n      <div className=\"cpu-section\">\n        <div className=\"cpu-section-title\">CPU Cores</div>\n        <div className=\"no-data-message\">No core-specific data available</div>\n      </div>\n    );\n  }\n\n  // Get class for usage level\n  const getUsageClass = (usage: number) => {\n    if (usage > 90) return 'critical';\n    if (usage > 70) return 'high';\n    if (usage > 40) return 'medium';\n    return 'low';\n  };\n  \n  // Get class for imbalance\n  const getImbalanceClass = (imbalance: number) => {\n    if (imbalance > 50) return 'critical';\n    if (imbalance > 30) return 'significant';\n    if (imbalance > 15) return 'moderate';\n    return 'balanced';\n  };\n\n  return (\n    <div className=\"cpu-cores-tab\">\n      <div className=\"cpu-section\">\n        <div className=\"cpu-section-title\">Core Usage Overview</div>\n        <div className=\"cpu-stats-summary\">\n          <div className=\"stat-card\">\n            <div className=\"stat-title\">Average Load</div>\n            <div className={`stat-value ${getUsageClass(stats.avgUsage)}`}>\n              {stats.avgUsage.toFixed(1)}%\n            </div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-title\">Core Imbalance</div>\n            <div className={`stat-value ${getImbalanceClass(stats.imbalancePercent)}`}>\n              {stats.imbalancePercent.toFixed(1)}%\n            </div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-title\">Most Loaded Core</div>\n            <div className={`stat-value ${getUsageClass(stats.mostLoaded.usage_percent)}`}>\n              Core {stats.mostLoaded.id}: {stats.mostLoaded.usage_percent.toFixed(1)}%\n            </div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-title\">Most Idle Core</div>\n            <div className={`stat-value ${getUsageClass(stats.leastLoaded.usage_percent)}`}>\n              Core {stats.leastLoaded.id}: {stats.leastLoaded.usage_percent.toFixed(1)}%\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"cpu-section\">\n        <div className=\"cpu-section-title\">Per-Core Metrics</div>\n        <div className=\"cores-grid\">\n          {cores.map(core => {\n            const threadData = core.threads || [];\n            const hasThreadData = threadData.length > 0;\n            const coreClass = getUsageClass(core.usage_percent);\n            \n            return (\n              <div key={core.id} className={`core-card ${coreClass}`}>\n                <div className=\"core-header\">\n                  <div className=\"core-id\">Core {core.id}</div>\n                  <div className=\"core-usage\">{core.usage_percent.toFixed(1)}%</div>\n                </div>\n                \n                <div className=\"core-usage-bar\">\n                  <div \n                    className={`usage-bar-fill ${coreClass}`}\n                    style={{ width: `${core.usage_percent}%` }}\n                  ></div>\n                </div>\n                \n                {core.frequency_mhz && (\n                  <div className=\"core-frequency\">\n                    {(core.frequency_mhz / 1000).toFixed(2)} GHz\n                  </div>\n                )}\n                \n                {hasThreadData && (\n                  <div className=\"core-threads\">\n                    {threadData.map(thread => (\n                      <div key={thread.id} className=\"thread-item\">\n                        <div className=\"thread-info\">\n                          <span className=\"thread-id\">Thread {thread.id}</span>\n                          {thread.process_name && (\n                            <span className=\"thread-process\">{thread.process_name}</span>\n                          )}\n                        </div>\n                        <div className=\"thread-usage-bar\">\n                          <div \n                            className={`usage-bar-fill ${getUsageClass(thread.usage_percent)}`}\n                            style={{ width: `${thread.usage_percent}%` }}\n                          ></div>\n                          <span className=\"thread-usage-text\">\n                            {thread.usage_percent.toFixed(1)}%\n                          </span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      \n      {stats.hasImbalance && (\n        <div className=\"cpu-section\">\n          <div className=\"cpu-section-title\">Workload Imbalance Detected</div>\n          <div className=\"imbalance-analysis\">\n            <div className=\"imbalance-description\">\n              <p>\n                <strong>Significant core imbalance detected ({stats.imbalancePercent.toFixed(1)}% difference)</strong>\n              </p>\n              <p>\n                Some CPU cores are significantly more loaded than others, which may indicate:\n              </p>\n              <ul>\n                <li>Single-threaded applications consuming one core</li>\n                <li>Inefficient thread scheduling</li>\n                <li>Background processes concentrated on specific cores</li>\n              </ul>\n            </div>\n            \n            <div className=\"optimization-recommendations\">\n              <h4>Recommended Actions:</h4>\n              <div className=\"recommendations-list\">\n                <div className=\"recommendation-item\">\n                  <div className=\"recommendation-title\">Use Thread Affinity</div>\n                  <div className=\"recommendation-description\">\n                    Set thread affinity for high-CPU processes to distribute load more evenly across cores.\n                  </div>\n                  <button className=\"recommendation-action\">Configure in Auto-Tuner</button>\n                </div>\n                \n                <div className=\"recommendation-item\">\n                  <div className=\"recommendation-title\">Process Priority Adjustment</div>\n                  <div className=\"recommendation-description\">\n                    Adjust process priorities to ensure background tasks don't monopolize specific cores.\n                  </div>\n                  <button className=\"recommendation-action\">View Processes</button>\n                </div>\n                \n                <div className=\"recommendation-item\">\n                  <div className=\"recommendation-title\">Application Thread Settings</div>\n                  <div className=\"recommendation-description\">\n                    For applications with adjustable thread settings, ensure they're configured to use multiple cores effectively.\n                  </div>\n                  <button className=\"recommendation-action\">Application Settings</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"cpu-section\">\n        <div className=\"cpu-section-title\">Physical vs Logical Cores</div>\n        <div className=\"physical-cores-grid\">\n          {Object.entries(stats.physicalCoreGroups).map(([physicalId, logicalCores]) => (\n            <div key={physicalId} className=\"physical-core-card\">\n              <div className=\"physical-core-header\">\n                <div className=\"physical-core-id\">Physical Core {physicalId}</div>\n                <div className=\"logical-cores-count\">\n                  {logicalCores.length} Logical {logicalCores.length === 1 ? 'Core' : 'Cores'}\n                </div>\n              </div>\n              \n              <div className=\"logical-cores\">\n                {logicalCores.map(core => (\n                  <div key={core.id} className=\"logical-core\">\n                    <div className=\"logical-core-header\">\n                      <span className=\"logical-core-id\">Logical Core {core.id}</span>\n                      <span className={`logical-core-usage ${getUsageClass(core.usage_percent)}`}>\n                        {core.usage_percent.toFixed(1)}%\n                      </span>\n                    </div>\n                    <div className=\"logical-core-bar\">\n                      <div \n                        className={`usage-bar-fill ${getUsageClass(core.usage_percent)}`}\n                        style={{ width: `${core.usage_percent}%` }}\n                      ></div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              \n              <div className=\"physical-core-stats\">\n                <div className=\"physical-core-usage\">\n                  <div className=\"stat-label\">Average Usage:</div>\n                  <div className=\"stat-value\">\n                    {(logicalCores.reduce((sum, core) => sum + core.usage_percent, 0) / logicalCores.length).toFixed(1)}%\n                  </div>\n                </div>\n                \n                <div className=\"physical-core-balance\">\n                  <div className=\"stat-label\">Core Balance:</div>\n                  <div className=\"stat-value\">\n                    {logicalCores.length > 1 ? \n                      Math.abs(logicalCores[0].usage_percent - logicalCores[1].usage_percent).toFixed(1) + '% diff' : \n                      'N/A'}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"cpu-section\">\n        <div className=\"cpu-section-title\">Thread Distribution Analysis</div>\n        <div className=\"thread-distribution\">\n          <div className=\"thread-distribution-chart\">\n            {/* Placeholder for a more advanced visualization - could be replaced with a proper chart */}\n            <div className=\"thread-heatmap\">\n              {cores.map(core => (\n                <div \n                  key={core.id}\n                  className={`heatmap-cell ${getUsageClass(core.usage_percent)}`}\n                  style={{ \n                    height: '30px', \n                    width: `${100 / cores.length}%`,\n                    opacity: 0.3 + (core.usage_percent / 100) * 0.7 \n                  }}\n                  title={`Core ${core.id}: ${core.usage_percent.toFixed(1)}%`}\n                />\n              ))}\n            </div>\n          </div>\n          \n          <div className=\"thread-distribution-stats\">\n            <div className=\"distribution-stat\">\n              <div className=\"stat-label\">Distribution Balance:</div>\n              <div className={`stat-value ${stats.stdDev > 20 ? 'warning' : 'good'}`}>\n                {stats.stdDev < 10 ? 'Excellent' : \n                  stats.stdDev < 20 ? 'Good' : \n                  stats.stdDev < 30 ? 'Fair' : 'Poor'} \n                (σ = {stats.stdDev.toFixed(1)})\n              </div>\n            </div>\n            \n            <div className=\"distribution-stat\">\n              <div className=\"stat-label\">Threads per Core:</div>\n              <div className=\"stat-value\">\n                {(cores.reduce((sum, core) => sum + (core.threads?.length || 0), 0) / cores.length).toFixed(1)} avg\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"thread-distribution-recommendations\">\n            <h4>Optimization Strategies:</h4>\n            <ul className=\"strategy-list\">\n              <li>\n                <strong>Process Affinity:</strong> Assign CPU-intensive processes to specific cores to balance load\n              </li>\n              <li>\n                <strong>Background Process Management:</strong> Limit the CPU usage of background processes\n              </li>\n              <li>\n                <strong>Thread Throttling:</strong> For applications with many threads, consider limiting thread count\n              </li>\n              <li>\n                <strong>NUMA Optimization:</strong> For multi-socket systems, ensure processes run on the appropriate node\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CPUCoresTab;","import React, { useMemo } from 'react';\nimport {\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  ComposedChart,\n  Area,\n} from 'recharts';\nimport { CPUTemperature } from './types';\nimport { formatTemperature, getTemperatureClass, getThresholdDescription } from '@/components/metrics/CPU/Utils/temperatureUtils';\n\n\ninterface CPUThermalTabProps {\n  temperature: CPUTemperature;\n  historicalData?: {\n    timestamp: string;\n    temperature: number;\n    usage_percent: number;\n  }[];\n  compact?: boolean;\n}\n\nconst CPUThermalTab: React.FC<CPUThermalTabProps> = ({ \n  temperature, \n  historicalData = []}) => {\n  // Remove unused compact prop warning\n  // Calculate threshold percentages for the gauge\n  const thresholds = useMemo(() => {\n    const range = temperature.max - temperature.min;\n    return {\n      throttle: ((temperature.throttle_threshold - temperature.min) / range) * 100,\n      critical: ((temperature.critical - temperature.min) / range) * 100,\n      current: ((temperature.current - temperature.min) / range) * 100\n    };\n  }, [temperature]);\n  \n  // Get temperature status class and description\n  const tempClass = getTemperatureClass(temperature.current, temperature.throttle_threshold, temperature.critical);\n  const tempDescription = getThresholdDescription(temperature.current, temperature.throttle_threshold, temperature.critical);\n\n  return (\n    <div className=\"cpu-thermal-tab\">\n      <div className=\"cpu-section\">\n        <div className=\"cpu-section-title\">CPU Temperature</div>\n        \n        <div className=\"temperature-gauge-container\">\n          <div className=\"temperature-value\">\n            <span className={`temperature-number ${tempClass}`}>\n              {formatTemperature(temperature.current, temperature.unit)}\n            </span>\n            <span className=\"temperature-status\">{tempDescription}</span>\n          </div>\n          \n          <div className=\"temperature-gauge\">\n            <div className=\"temperature-scale\">\n              <div className=\"temperature-zone normal\" style={{ width: `${thresholds.throttle}%` }}></div>\n              <div className=\"temperature-zone warning\" style={{ width: `${thresholds.critical - thresholds.throttle}%` }}></div>\n              <div className=\"temperature-zone critical\" style={{ width: `${100 - thresholds.critical}%` }}></div>\n              \n              {/* Temperature marker */}\n              <div \n                className=\"temperature-marker\" \n                style={{ left: `${thresholds.current}%` }}\n              ></div>\n            </div>\n            \n            <div className=\"temperature-labels\">\n              <span className=\"min-temp\">{formatTemperature(temperature.min, temperature.unit)}</span>\n              <span className=\"throttle-temp\">\n                {formatTemperature(temperature.throttle_threshold, temperature.unit)}\n                <span className=\"threshold-label\">Throttle</span>\n              </span>\n              <span className=\"critical-temp\">\n                {formatTemperature(temperature.critical, temperature.unit)}\n                <span className=\"threshold-label\">Critical</span>\n              </span>\n              <span className=\"max-temp\">{formatTemperature(temperature.max, temperature.unit)}</span>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"temperature-recommendations\">\n          {temperature.current >= temperature.critical && (\n            <div className=\"temperature-alert critical\">\n              <span className=\"alert-icon\">⚠️</span>\n              <span className=\"alert-message\">\n                Critical temperature detected! The system may shut down to prevent damage.\n                Immediately check cooling systems and reduce system load.\n              </span>\n            </div>\n          )}\n          \n          {temperature.current >= temperature.throttle_threshold && temperature.current < temperature.critical && (\n            <div className=\"temperature-alert warning\">\n              <span className=\"alert-icon\">⚠️</span>\n              <span className=\"alert-message\">\n                CPU is running hot! Performance throttling may occur.\n                Check that cooling fans are working and system vents are clear.\n              </span>\n            </div>\n          )}\n          \n          {temperature.current >= (temperature.throttle_threshold * 0.8) && temperature.current < temperature.throttle_threshold && (\n            <div className=\"temperature-alert notice\">\n              <span className=\"alert-icon\">ℹ️</span>\n              <span className=\"alert-message\">\n                CPU temperature is elevated but within acceptable limits.\n                Consider monitoring and improving system cooling for optimal performance.\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {historicalData && historicalData.length > 0 ? (\n        <div className=\"cpu-section\">\n          <div className=\"cpu-section-title\">Temperature & Usage Correlation</div>\n          \n          <div className=\"temperature-chart\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <ComposedChart data={historicalData}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"rgba(255, 255, 255, 0.1)\" />\n                <XAxis \n                  dataKey=\"timestamp\" \n                  tickFormatter={(time) => new Date(time).toLocaleTimeString()}\n                  stroke=\"rgba(255, 255, 255, 0.7)\"\n                />\n                <YAxis \n                  yAxisId=\"temp\"\n                  orientation=\"left\" \n                  domain={[temperature.min, temperature.max]}\n                  tickFormatter={(value) => `${value}°${temperature.unit}`}\n                  stroke=\"rgba(255, 255, 255, 0.7)\"\n                />\n                <YAxis \n                  yAxisId=\"usage\"\n                  orientation=\"right\" \n                  domain={[0, 100]}\n                  tickFormatter={(value) => `${value}%`}\n                  stroke=\"rgba(255, 255, 255, 0.7)\"\n                />\n                <Tooltip \n                  formatter={(value, name) => {\n                    if (name === 'temperature') return [`${value}°${temperature.unit}`, 'Temperature'];\n                    if (name === 'usage_percent') return [`${value}%`, 'CPU Usage'];\n                    return [value, name];\n                  }}\n                  labelFormatter={(label) => new Date(label).toLocaleString()}\n                  contentStyle={{ background: 'rgba(0, 0, 0, 0.8)', border: 'none', borderRadius: '8px' }}\n                  itemStyle={{ color: 'white' }}\n                  labelStyle={{ color: 'white' }}\n                />\n                <Legend />\n                \n                {/* Draw threshold lines */}\n                <Line \n                  type=\"monotone\" \n                  dataKey={() => temperature.throttle_threshold}\n                  stroke=\"#FF9F1C\" \n                  strokeDasharray=\"5 5\"\n                  strokeWidth={1}\n                  yAxisId=\"temp\"\n                  name=\"Throttle Threshold\"\n                  dot={false}\n                  isAnimationActive={false}\n                />\n                <Line \n                  type=\"monotone\" \n                  dataKey={() => temperature.critical}\n                  stroke=\"#FF5252\" \n                  strokeDasharray=\"5 5\"\n                  strokeWidth={1}\n                  yAxisId=\"temp\"\n                  name=\"Critical Threshold\"\n                  dot={false}\n                  isAnimationActive={false}\n                />\n                \n                {/* Temperature and usage lines */}\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"temperature\"\n                  stroke=\"#FF5252\" \n                  strokeWidth={2}\n                  yAxisId=\"temp\"\n                  name=\"Temperature\"\n                  dot={{ r: 3 }}\n                  activeDot={{ r: 5 }}\n                  isAnimationActive={true}\n                />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"usage_percent\"\n                  fill=\"rgba(0, 245, 212, 0.2)\"\n                  stroke=\"#00F5D4\"\n                  yAxisId=\"usage\"\n                  name=\"CPU Usage %\"\n                  isAnimationActive={true}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </div>\n          \n          <div className=\"correlation-analysis\">\n            <h4>Analysis</h4>\n            {analyzeTemperatureUsageCorrelation(historicalData, temperature)}\n          </div>\n        </div>\n      ) : (\n        <div className=\"cpu-section\">\n          <div className=\"cpu-section-title\">Temperature & Usage Correlation</div>\n          <div className=\"no-data-message\">\n            No historical temperature data available. \n            Temperature tracking will begin collecting data for future analysis.\n          </div>\n        </div>\n      )}\n      \n      <div className=\"cpu-section\">\n        <div className=\"cpu-section-title\">Thermal Management Tips</div>\n        <div className=\"management-tips\">\n          <div className=\"tip\">\n            <div className=\"tip-title\">Check Physical Cooling</div>\n            <div className=\"tip-description\">\n              Ensure all fans are working, air vents are clear of dust, and thermal paste is properly applied.\n            </div>\n          </div>\n          \n          <div className=\"tip\">\n            <div className=\"tip-title\">Manage Workloads</div>\n            <div className=\"tip-description\">\n              Distribute CPU-intensive tasks over time rather than running them simultaneously.\n            </div>\n          </div>\n          \n          <div className=\"tip\">\n            <div className=\"tip-title\">Consider Undervolting</div>\n            <div className=\"tip-description\">\n              If supported, undervolting can reduce heat generation while maintaining performance.\n            </div>\n          </div>\n          \n          <div className=\"tip\">\n            <div className=\"tip-title\">Ambient Temperature</div>\n            <div className=\"tip-description\">\n              Keep your system in a cool, well-ventilated area. Ambient temperature directly affects CPU temps.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n/**\n * Analyzes temperature and usage data to provide insights\n */\nfunction analyzeTemperatureUsageCorrelation(\n  historicalData: { timestamp: string; temperature: number; usage_percent: number; }[],\n  temperature: CPUTemperature\n): React.ReactNode {\n  if (!historicalData || historicalData.length < 5) {\n    return <p>Not enough data to analyze patterns yet. Continue collecting data for insights.</p>;\n  }\n  \n  // Find peaks and analyze correlation\n  const peaks = findTemperaturePeaks(historicalData);\n  const correlation = calculateUsageTempCorrelation(historicalData);\n  \n  // Check for throttling episodes\n  const throttlingPoints = historicalData.filter(d => d.temperature >= temperature.throttle_threshold);\n  \n  let insights = [];\n  \n  // Correlation insights\n  if (correlation > 0.7) {\n    insights.push(\n      <p key=\"high-corr\">\n        <strong>Strong correlation detected:</strong> CPU temperature closely follows usage patterns. \n        This is expected behavior, but high correlation may indicate limited thermal headroom.\n      </p>\n    );\n  } else if (correlation > 0.4) {\n    insights.push(\n      <p key=\"med-corr\">\n        <strong>Moderate correlation detected:</strong> CPU temperature generally follows usage, \n        with some thermal buffering. Your cooling solution appears to be working.\n      </p>\n    );\n  } else {\n    insights.push(\n      <p key=\"low-corr\">\n        <strong>Low correlation detected:</strong> Temperature doesn't follow usage patterns closely. \n        This could indicate external factors like changing ambient temperature or potential cooling issues.\n      </p>\n    );\n  }\n  \n  // Peak insights\n  if (peaks.length > 0) {\n    insights.push(\n      <p key=\"peaks\">\n        <strong>Temperature spikes detected:</strong> {peaks.length} significant temperature \n        {peaks.length === 1 ? ' spike' : ' spikes'} observed. \n        {peaks.some(p => p.temp >= temperature.throttle_threshold) ? \n          ' Some spikes approached or exceeded throttling threshold.' : \n          ' Temperature remained below throttling threshold.'}\n      </p>\n    );\n  }\n  \n  // Throttling insights\n  if (throttlingPoints.length > 0) {\n    const percentTime = (throttlingPoints.length / historicalData.length) * 100;\n    insights.push(\n      <p key=\"throttle\" className=\"warning-text\">\n        <strong>Throttling risk detected:</strong> CPU reached throttling temperatures during \n        approximately {percentTime.toFixed(1)}% of the monitored period. Performance may be affected.\n      </p>\n    );\n  }\n  \n  return <>{insights}</>;\n}\n\n/**\n * Find significant temperature peaks in historical data\n */\nfunction findTemperaturePeaks(data: { temperature: number }[]): { index: number; temp: number }[] {\n  if (data.length < 5) return [];\n  \n  const peaks: { index: number; temp: number }[] = [];\n  const threshold = 5; // Minimum difference to consider a peak\n  \n  for (let i = 2; i < data.length - 2; i++) {\n    const current = data[i].temperature;\n    const prev2 = data[i-2].temperature;\n    const prev1 = data[i-1].temperature;\n    const next1 = data[i+1].temperature;\n    const next2 = data[i+2].temperature;\n    \n    if (current > prev1 && current > prev2 && current > next1 && current > next2 && \n        current - Math.min(prev2, prev1, next1, next2) > threshold) {\n      peaks.push({ index: i, temp: current });\n    }\n  }\n  \n  return peaks;\n}\n\n/**\n * Calculate a simple correlation coefficient between usage and temperature\n */\nfunction calculateUsageTempCorrelation(data: { temperature: number; usage_percent: number }[]): number {\n  if (data.length < 5) return 0;\n  \n  const n = data.length;\n  \n  // Calculate means\n  const tempMean = data.reduce((sum, d) => sum + d.temperature, 0) / n;\n  const usageMean = data.reduce((sum, d) => sum + d.usage_percent, 0) / n;\n  \n  // Calculate covariance and variances\n  let covariance = 0;\n  let tempVariance = 0;\n  let usageVariance = 0;\n  \n  for (const d of data) {\n    const tempDiff = d.temperature - tempMean;\n    const usageDiff = d.usage_percent - usageMean;\n    \n    covariance += tempDiff * usageDiff;\n    tempVariance += tempDiff * tempDiff;\n    usageVariance += usageDiff * usageDiff;\n  }\n  \n  // Calculate correlation coefficient\n  return covariance / (Math.sqrt(tempVariance) * Math.sqrt(usageVariance));\n}\n\nexport default CPUThermalTab;","//Main Component\n// frontend/src/components/metrics/CPU/CPUMetric.tsx\n\nimport React, { useState } from 'react';\nimport { useAppSelector } from '../../../store/hooks';\nimport { RootState } from '../../../store/store';\nimport { processCPUData } from './Utils/cpuDataProcessor';\nimport CPUOverviewTab from './Tabs/CPUOverviewTab';\nimport CPUProcessesTab from './Tabs/CPUProcessesTab';\nimport CPUCoresTab from './Tabs/CPUCoresTab';\nimport CPUThermalTab from './Tabs/CPUThermalTab';\nimport './CPUMetric.css';\n\ntype CPUTabType = 'overview' | 'processes' | 'cores' | 'thermal';\n\ninterface CPUMetricProps {\n  compact?: boolean;\n  showTabs?: boolean;\n  initialTab?: CPUTabType;\n  height?: number | string;\n}\n\nconst CPUMetric: React.FC<CPUMetricProps> = ({\n  compact = false,\n  showTabs = true,\n  initialTab = 'overview',\n  height,\n}) => {\n  // Redux state\n  const currentMetric = useAppSelector((state: RootState) => state.metrics.current);\n  const isLoading = useAppSelector((state: RootState) => state.metrics.loading);\n  \n  // Local state\n  const [activeTab, setActiveTab] = useState<CPUTabType>(initialTab);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Process CPU data\n  const { cpuData, error: dataError } = processCPUData(currentMetric);\n  \n  // Handle errors\n  React.useEffect(() => {\n    if (dataError) {\n      setError(dataError);\n    } else {\n      setError(null);\n    }\n  }, [dataError]);\n  \n  // Loading state\n  if (isLoading) {\n    return (\n      <div className={`metric-card ${compact ? 'compact' : ''}`} style={{ height }}>\n        <h3>CPU Activity</h3>\n        <div className=\"loading-message\">Loading CPU metrics...</div>\n      </div>\n    );\n  }\n  \n  // Error state\n  if (error || !cpuData) {\n    return (\n      <div className={`metric-card ${compact ? 'compact' : ''}`} style={{ height }}>\n        <h3>CPU Activity</h3>\n        <div className=\"error-container\">\n          <div className=\"error-icon\">⚠️</div>\n          <div className=\"error-message\">{error || 'No CPU data available'}</div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Render tab content\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'overview':\n        return <CPUOverviewTab data={cpuData} compact={compact} />;\n      case 'processes':\n        return <CPUProcessesTab processes={cpuData.top_processes} compact={compact} />;\n      case 'cores':\n        return <CPUCoresTab cores={cpuData.cores} physicalCores={cpuData.physical_cores} compact={compact} />;\n      case 'thermal':\n        return <CPUThermalTab temperature={cpuData.temperature} historicalData={cpuData.historical_temp} compact={compact} />;\n      default:\n        return <CPUOverviewTab data={cpuData} compact={compact} />;\n    }\n  };\n\n  return (\n    <div className={`metric-card ${compact ? 'compact' : ''}`} style={{ height }}>\n      <h3>CPU Activity</h3>\n      \n      {showTabs && (\n        <div className=\"cpu-tabs\">\n          <div \n            className={`cpu-tab ${activeTab === 'overview' ? 'active' : ''}`}\n            onClick={() => setActiveTab('overview')}\n          >\n            Overview\n          </div>\n          <div \n            className={`cpu-tab ${activeTab === 'processes' ? 'active' : ''}`}\n            onClick={() => setActiveTab('processes')}\n          >\n            Processes\n          </div>\n          <div \n            className={`cpu-tab ${activeTab === 'cores' ? 'active' : ''}`}\n            onClick={() => setActiveTab('cores')}\n          >\n            Cores\n          </div>\n          <div \n            className={`cpu-tab ${activeTab === 'thermal' ? 'active' : ''}`}\n            onClick={() => setActiveTab('thermal')}\n          >\n            Thermal\n          </div>\n        </div>\n      )}\n      \n      <div className=\"cpu-content\">\n        {renderTabContent()}\n      </div>\n    </div>\n  );\n};\n\nexport default CPUMetric;","import React from 'react';\n\ninterface ErrorDisplayProps {\n  message: string;\n  details?: string;\n  retry?: () => void;\n}\n\nconst ErrorDisplay: React.FC<ErrorDisplayProps> = ({ message, details, retry }) => {\n  return (\n    <div className=\"error-display\">\n      <div className=\"error-icon\">⚠️</div>\n      <h3>Error</h3>\n      <p>{message}</p>\n      {details && <p className=\"error-details\">{details}</p>}\n      {retry && (\n        <button onClick={retry} className=\"retry-button\">\n          Retry\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default ErrorDisplay;\n","import React from 'react';\n\ninterface LoadingIndicatorProps {\n  message?: string;\n  size?: 'small' | 'medium' | 'large';\n}\n\nconst LoadingIndicator: React.FC<LoadingIndicatorProps> = ({ \n  message = 'Loading...', \n  size = 'medium' \n}) => {\n  return (\n    <div className={`loading-indicator loading-${size}`}>\n      <div className=\"spinner\"></div>\n      {message && <p className=\"loading-message\">{message}</p>}\n    </div>\n  );\n};\n\nexport default LoadingIndicator;\n","/**\n * Formats byte values to human-readable strings with appropriate units\n */\nexport const formatBytes = (bytes: number, decimals = 2): string => {\n    if (bytes === 0) return '0 Bytes';\n    if (!bytes || isNaN(bytes)) return 'N/A';\n    \n    const isNegative = bytes < 0;\n    bytes = Math.abs(bytes);\n    \n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    \n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    \n    const formattedValue = parseFloat((bytes / Math.pow(k, i)).toFixed(decimals));\n    return `${isNegative ? '-' : ''}${formattedValue} ${sizes[i]}`;\n  };\n  \n  /**\n   * Formats memory pressure level to a user-friendly string\n   */\n  export const formatMemoryPressure = (level: 'low' | 'medium' | 'high'): string => {\n    switch (level) {\n      case 'low': return 'Low (Normal)';\n      case 'medium': return 'Medium (Elevated)';\n      case 'high': return 'High (Critical)';\n      default: return 'Unknown';\n    }\n  };\n  \n  /**\n   * Formats a memory fragmentation index into a human-readable status\n   */\n  export const formatFragmentationStatus = (index: number): string => {\n    if (index < 30) return 'Good';\n    if (index < 70) return 'Moderate';\n    return 'Poor';\n  };\n  \n  /**\n   * Formats a timestamp into a readable time string\n   */\n  export const formatTimestamp = (timestamp: number): string => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString();\n  };\n  \n  /**\n   * Formats a memory growth rate to readable string with appropriate sign\n   */\n  export const formatGrowthRate = (bytesPerMinute: number): string => {\n    if (bytesPerMinute === 0) return '0 (Stable)';\n    \n    const sign = bytesPerMinute > 0 ? '+' : '';\n    return `${sign}${formatBytes(bytesPerMinute)}/min`;\n  };\n  \n  /**\n   * Formats a percentage value with appropriate sign for growth\n   */\n  export const formatPercentage = (value: number, showSign = false): string => {\n    const formattedValue = Math.abs(value).toFixed(1);\n    \n    if (showSign && value !== 0) {\n      const sign = value > 0 ? '+' : '-';\n      return `${sign}${formattedValue}%`;\n    }\n    \n    return `${formattedValue}%`;\n  };\n  \n  /**\n   * Formats a leak probability into a human-readable string\n   */\n  export const formatLeakProbability = (probability: number): string => {\n    const percentage = (probability * 100).toFixed(0);\n    \n    if (probability > 0.7) return `${percentage}% (High)`;\n    if (probability > 0.4) return `${percentage}% (Medium)`;\n    return `${percentage}% (Low)`;\n  };\n  \n  /**\n   * Returns CSS color class based on severity level\n   */\n  export const getSeverityColorClass = (\n    value: number, \n    thresholds: { warning: number; critical: number }\n  ): string => {\n    if (value >= thresholds.critical) return 'color-critical';\n    if (value >= thresholds.warning) return 'color-warning';\n    return 'color-normal';\n  };","import React from 'react';\nimport './ProgressBar.css';\n\nexport interface ProgressBarProps {\n  value: number;\n  max?: number;\n  color?: string;\n  label?: string;\n  showPercentage?: boolean;\n  height?: number;\n  className?: string;\n}\n\nexport const ProgressBar: React.FC<ProgressBarProps> = ({\n  value,\n  max = 100,\n  color = 'var(--color-primary)',\n  label,\n  showPercentage = true,\n  height = 8,\n  className = ''\n}) => {\n  const percentage = Math.min(Math.max(0, (value / max) * 100), 100);\n  \n  return (\n    <div className={`progress-bar-container ${className}`}>\n      {(label || showPercentage) && (\n        <div className=\"progress-bar-labels\">\n          {label && <span className=\"progress-bar-label\">{label}</span>}\n          {showPercentage && (\n            <span className=\"progress-bar-percentage\">\n              {Math.round(percentage)}%\n            </span>\n          )}\n        </div>\n      )}\n      <div \n        className=\"progress-bar-background\" \n        style={{ height: `${height}px` }}\n      >\n        <div \n          className=\"progress-bar-fill\"\n          style={{\n            width: `${percentage}%`,\n            backgroundColor: color,\n            height: `${height}px`\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useState } from 'react';\nimport './InfoTooltip.css';\n\nexport interface InfoTooltipProps {\n  content: React.ReactNode;\n  position?: 'top' | 'right' | 'bottom' | 'left';\n  children?: React.ReactNode;\n  className?: string;\n}\n\nexport const InfoTooltip: React.FC<InfoTooltipProps> = ({\n  content,\n  position = 'top',\n  children,\n  className = ''\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  return (\n    <div className={`info-tooltip-container ${className}`}>\n      <span \n        className=\"info-tooltip-trigger\"\n        onMouseEnter={() => setIsVisible(true)}\n        onMouseLeave={() => setIsVisible(false)}\n        onFocus={() => setIsVisible(true)}\n        onBlur={() => setIsVisible(false)}\n      >\n        {children || (\n          <span className=\"info-tooltip-icon\" aria-label=\"More information\">\n            i\n          </span>\n        )}\n      </span>\n      {isVisible && (\n        <div className={`info-tooltip ${position}`}>\n          <div className=\"info-tooltip-content\">\n            {content}\n          </div>\n          <div className={`info-tooltip-arrow ${position}`} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default InfoTooltip;\n","import React from 'react';\nimport { ProcessedMemoryData } from './types';\nimport { formatBytes } from '../utils/formatters';\nimport { ProgressBar } from '@/design-system/components/ProgressBar/ProgressBar';\nimport { Card } from '@/design-system/components/Card';\nimport { InfoTooltip } from '@/design-system/components/InfoTooltip/InfoTooltip';\n\ninterface MemoryOverviewTabProps {\n  data: ProcessedMemoryData;\n  compact?: boolean;\n}\n\nexport const MemoryOverviewTab: React.FC<MemoryOverviewTabProps> = ({ data, compact = false }) => {\n  const { overview } = data;\n  \n  // Determine severity levels for various indicators\n  const getPhysicalMemorySeverity = () => {\n    const percent = overview.physicalMemory.percentUsed;\n    if (percent > 90) return 'critical';\n    if (percent > 75) return 'warning';\n    return 'normal';\n  };\n  \n  const getSwapSeverity = () => {\n    const percent = overview.swap.percentUsed;\n    if (percent > 50) return 'warning';\n    if (percent > 25) return 'caution';\n    return 'normal';\n  };\n  \n  const getPressureSeverityColor = () => {\n    switch (overview.pressureLevel) {\n      case 'high': return 'var(--color-danger)';\n      case 'medium': return 'var(--color-warning)';\n      case 'low': return 'var(--color-success)';\n      default: return 'var(--color-text-secondary)';\n    }\n  };\n  \n  // Compact view for dashboard\n  if (compact) {\n    return (\n      <Card className=\"memory-overview memory-overview--compact\">\n        <div className=\"memory-overview__header\">\n          <h3>Memory</h3>\n          <span className=\"memory-pressure-indicator\" style={{ color: getPressureSeverityColor() }}>\n            {overview.pressureLevel.toUpperCase()}\n          </span>\n        </div>\n        \n        <ProgressBar \n          value={overview.physicalMemory.percentUsed} \n          color={getPhysicalMemorySeverity() === 'critical' ? 'var(--color-danger)' : getPhysicalMemorySeverity() === 'warning' ? 'var(--color-warning)' : 'var(--color-success)'}\n          label={`${formatBytes(overview.physicalMemory.used)} / ${formatBytes(overview.physicalMemory.total)}`}\n        />\n        \n        {overview.swap.total > 0 && (\n          <div className=\"memory-overview__swap-indicator\">\n            <small>Swap: {overview.swap.percentUsed.toFixed(1)}%</small>\n          </div>\n        )}\n      </Card>\n    );\n  }\n  \n  // Full view\n  return (\n    <div className=\"memory-overview\">\n      <div className=\"memory-overview__header\">\n        <h2>Memory Overview</h2>\n        <div className=\"memory-pressure-card\">\n          <span>Memory Pressure:</span>\n          <span className=\"memory-pressure-value\" style={{ color: getPressureSeverityColor() }}>\n            {overview.pressureLevel.toUpperCase()}\n            <InfoTooltip content=\"Memory pressure indicates how stressed your system's memory is. High pressure may lead to performance degradation.\"  />\n          </span>\n        </div>\n      </div>\n      \n      <div className=\"memory-overview__grid\">\n        {/* Physical Memory Section */}\n        <Card className=\"memory-overview__physical\">\n          <h3>Physical Memory</h3>\n          <ProgressBar \n            value={overview.physicalMemory.percentUsed} \n            color={getPhysicalMemorySeverity() === 'critical' ? 'var(--color-danger)' : getPhysicalMemorySeverity() === 'warning' ? 'var(--color-warning)' : 'var(--color-success)'}\n            label={`${overview.physicalMemory.percentUsed.toFixed(1)}%`}\n          />\n          \n          <div className=\"memory-stats-grid\">\n            <div className=\"memory-stat\">\n              <span className=\"memory-stat-label\">Total</span>\n              <span className=\"memory-stat-value\">{formatBytes(overview.physicalMemory.total)}</span>\n            </div>\n            <div className=\"memory-stat\">\n              <span className=\"memory-stat-label\">Used</span>\n              <span className=\"memory-stat-value\">{formatBytes(overview.physicalMemory.used)}</span>\n            </div>\n            <div className=\"memory-stat\">\n              <span className=\"memory-stat-label\">Free</span>\n              <span className=\"memory-stat-value\">{formatBytes(overview.physicalMemory.free)}</span>\n            </div>\n          </div>\n        </Card>\n        \n        {/* Swap Memory Section */}\n        <Card className=\"memory-overview__swap\">\n          <h3>Swap Memory</h3>\n          {overview.swap.total === 0 ? (\n            <div className=\"memory-overview__no-swap\">\n              <p>No swap memory configured on this system.</p>\n            </div>\n          ) : (\n            <>\n              <ProgressBar \n                value={overview.swap.percentUsed} \n                color={getSwapSeverity() === 'warning' ? 'var(--color-warning)' : getSwapSeverity() === 'caution' ? 'var(--color-accent)' : 'var(--color-success)'}\n                label={`${overview.swap.percentUsed.toFixed(1)}%`}\n              />\n              <div className=\"memory-stats-grid\">\n                <div className=\"memory-stat\">\n                  <span className=\"memory-stat-label\">Total</span>\n                  <span className=\"memory-stat-value\">{formatBytes(overview.swap.total)}</span>\n                </div>\n                <div className=\"memory-stat\">\n                  <span className=\"memory-stat-label\">Used</span>\n                  <span className=\"memory-stat-value\">{formatBytes(overview.swap.used)}</span>\n                </div>\n                <div className=\"memory-stat\">\n                  <span className=\"memory-stat-label\">Free</span>\n                  <span className=\"memory-stat-value\">{formatBytes(overview.swap.free)}</span>\n                </div>\n              </div>\n              <div className=\"memory-stat memory-swap-rate\">\n                <span className=\"memory-stat-label\">Page I/O</span>\n                <div className=\"memory-stat-value\">\n                  <span className=\"page-in\">\n                    In: {overview.pressureIndicators.pageInRate.toFixed(1)}/s\n                  </span>\n                  <span className=\"page-out\">\n                    Out: {overview.pressureIndicators.pageOutRate.toFixed(1)}/s\n                  </span>\n                </div>\n              </div>\n            </>\n          )}\n        </Card>\n        \n        {/* Memory Type Breakdown */}\n        <Card className=\"memory-overview__breakdown\">\n          <h3>Memory Type Breakdown</h3>\n          <div className=\"memory-type-bars\">\n            <div className=\"memory-type-bar\">\n              <div className=\"memory-type-bar__label\">\n                <span>Active</span>\n                <InfoTooltip content=\"Memory that has been used recently and is typically not reclaimed unless necessary\"  />\n              </div>\n              <ProgressBar \n                value={(overview.active / overview.physicalMemory.total) * 100} \n                color=\"var(--color-primary)\"\n                label={formatBytes(overview.active)}\n              />\n            </div>\n            \n            <div className=\"memory-type-bar\">\n              <div className=\"memory-type-bar__label\">\n                <span>Cached</span>\n                <InfoTooltip content=\"Memory used for disk caching. Can be reclaimed when needed by applications\"  />\n              </div>\n              <ProgressBar \n                value={(overview.cached / overview.physicalMemory.total) * 100} \n                color=\"var(--color-info)\"\n                label={formatBytes(overview.cached)}\n              />\n            </div>\n            \n            <div className=\"memory-type-bar\">\n              <div className=\"memory-type-bar__label\">\n                <span>Buffers</span>\n                <InfoTooltip content=\"Memory used for file system metadata and other kernel operations\"  />\n              </div>\n              <ProgressBar \n                value={(overview.buffers / overview.physicalMemory.total) * 100} \n                color=\"var(--color-accent)\"\n                label={formatBytes(overview.buffers)}\n              />\n            </div>\n          </div>\n        </Card>\n        \n        {/* Memory Pressure Details */}\n        <Card className=\"memory-overview__pressure\">\n          <h3>Memory Pressure Indicators</h3>\n          \n          <div className=\"memory-pressure-indicators\">\n            <div className=\"pressure-indicator\">\n              <span className=\"pressure-indicator__label\">\n                Page-in Rate\n                <InfoTooltip content=\"Rate at which data is being read from disk into memory. High rates indicate memory shortage.\"  />\n              </span>\n              <span className=\"pressure-indicator__value\">\n                {overview.pressureIndicators.pageInRate.toFixed(2)}/s\n                {/* <TrendIndicator \n                  value={overview.pressureIndicators.pageInRate} \n                  threshold={10}\n                  higherIsBad={true}\n                 /> */}\n              </span>\n            </div>\n            \n            <div className=\"pressure-indicator\">\n              <span className=\"pressure-indicator__label\">\n                Page-out Rate\n                <InfoTooltip content=\"Rate at which data is being written from memory to disk. High rates indicate memory pressure.\"  />\n              </span>\n              <span className=\"pressure-indicator__value\">\n                {overview.pressureIndicators.pageOutRate.toFixed(2)}/s\n                {/* <TrendIndicator \n                  value={overview.pressureIndicators.pageOutRate} \n                  threshold={5}\n                  higherIsBad={true}\n                 /> */}\n              </span>\n            </div>\n            \n            <div className=\"pressure-indicator\">\n              <span className=\"pressure-indicator__label\">\n                Swap Usage Rate\n                <InfoTooltip content=\"Rate at which swap memory usage is changing. Positive values indicate increasing memory pressure.\"  />\n              </span>\n              <span className=\"pressure-indicator__value\">\n                {overview.pressureIndicators.swapUsageRate > 0 ? '+' : ''}\n                {overview.pressureIndicators.swapUsageRate.toFixed(2)} MB/s\n                {/* <TrendIndicator \n                  value={overview.pressureIndicators.swapUsageRate} \n                  threshold={1}\n                  higherIsBad={true}\n                 /> */}\n              </span>\n            </div>\n          </div>\n          \n          <div className=\"memory-pressure-advice\">\n            {overview.pressureLevel === 'high' && (\n              <p className=\"memory-advice memory-advice--critical\">\n                <strong>Critical Memory Pressure:</strong> Your system is experiencing high memory demand. \n                Consider closing unused applications or increasing system memory.\n              </p>\n            )}\n            \n            {overview.pressureLevel === 'medium' && (\n              <p className=\"memory-advice memory-advice--warning\">\n                <strong>Moderate Memory Pressure:</strong> Memory usage is elevated. \n                Monitor for performance impacts and consider optimizing memory-intensive applications.\n              </p>\n            )}\n            \n            {overview.pressureLevel === 'low' && (\n              <p className=\"memory-advice memory-advice--good\">\n                <strong>Low Memory Pressure:</strong> Your system has sufficient memory resources.\n              </p>\n            )}\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n};","import React, { useState, useMemo } from 'react';\nimport './Table.css';\n\nexport interface TableColumn<T> {\n  key: string;\n  header: string | React.ReactNode;\n  sortable?: boolean;\n  render?: (item: T) => React.ReactNode;\n  width?: string | number;\n  align?: 'left' | 'center' | 'right';\n}\n\nexport interface TableProps<T> {\n  columns: TableColumn<T>[];\n  data: T[];\n  onRowClick?: (item: T) => void;\n  className?: string;\n  rowKey?: keyof T | ((item: T) => string | number);\n  emptyState?: React.ReactNode;\n  loading?: boolean;\n  loadingText?: string;\n  sortConfig?: {\n    key: string;\n    direction: 'asc' | 'desc';\n  };\n  onSort?: (key: string, direction: 'asc' | 'desc') => void;\n}\n\nexport const Table = <T extends object>({\n  columns,\n  data,\n  onRowClick,\n  className = '',\n  rowKey,\n  emptyState = 'No data available',\n  loading = false,\n  loadingText = 'Loading...',\n  sortConfig,\n  onSort,\n}: TableProps<T>) => {\n  const [internalSortConfig, setInternalSortConfig] = useState<{\n    key: string;\n    direction: 'asc' | 'desc';\n  } | null>(null);\n\n  const handleSort = (key: string, sortable?: boolean) => {\n    if (!sortable) return;\n    \n    const isAsc = (sortConfig?.key === key || internalSortConfig?.key === key) && \n                 (sortConfig?.direction === 'asc' || internalSortConfig?.direction === 'asc');\n    const direction = isAsc ? 'desc' : 'asc';\n    \n    if (onSort) {\n      onSort(key, direction);\n    } else {\n      setInternalSortConfig({ key, direction });\n    }\n  };\n\n  const sortedData = useMemo(() => {\n    if (!sortConfig && !internalSortConfig) return data;\n    \n    const config = sortConfig || internalSortConfig;\n    if (!config) return data;\n    \n    return [...data].sort((a, b) => {\n      const aValue = (a as any)[config.key];\n      const bValue = (b as any)[config.key];\n      \n      if (aValue < bValue) return config.direction === 'asc' ? -1 : 1;\n      if (aValue > bValue) return config.direction === 'asc' ? 1 : -1;\n      return 0;\n    });\n  }, [data, sortConfig, internalSortConfig]);\n\n  const getRowKey = (item: T, index: number): string | number => {\n    if (rowKey) {\n      return typeof rowKey === 'function' ? rowKey(item) : (item[rowKey] as string | number);\n    }\n    return index;\n  };\n\n  const renderSortIcon = (key: string, sortable?: boolean) => {\n    if (!sortable) return null;\n    \n    const config = sortConfig || internalSortConfig;\n    if (!config || config.key !== key) return '↕';\n    \n    return config.direction === 'asc' ? '↑' : '↓';\n  };\n\n  if (loading) {\n    return (\n      <div className={`table-loading ${className}`}>\n        <div className=\"table-loading-spinner\"></div>\n        <div className=\"table-loading-text\">{loadingText}</div>\n      </div>\n    );\n  }\n\n  if (data.length === 0) {\n    return <div className={`table-empty ${className}`}>{emptyState}</div>;\n  }\n\n  return (\n    <div className={`table-container ${className}`}>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            {columns.map((column) => (\n              <th \n                key={String(column.key)}\n                style={{\n                  width: column.width,\n                  textAlign: column.align || 'left',\n                  cursor: column.sortable ? 'pointer' : 'default'\n                }}\n                onClick={() => handleSort(String(column.key), column.sortable)}\n              >\n                <div className=\"table-header-content\">\n                  {column.header}\n                  {column.sortable && (\n                    <span className=\"sort-icon\">\n                      {renderSortIcon(String(column.key), column.sortable)}\n                    </span>\n                  )}\n                </div>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {sortedData.map((item, index) => (\n            <tr \n              key={getRowKey(item, index)}\n              onClick={() => onRowClick?.(item)}\n              className={onRowClick ? 'clickable-row' : ''}\n            >\n              {columns.map((column) => (\n                <td \n                  key={String(column.key)}\n                  style={{ textAlign: column.align || 'left' }}\n                >\n                  {column.render ? column.render(item) : (item as any)[column.key]}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useState, useEffect } from 'react';\n\ninterface SearchInputProps {\n  onSearch: (term: string) => void;\n  placeholder?: string;\n  initialValue?: string;\n  debounceTime?: number;\n}\n\nexport const SearchInput: React.FC<SearchInputProps> = ({\n  onSearch,\n  placeholder = 'Search...',\n  initialValue = '',\n  debounceTime = 300,\n}) => {\n  const [searchTerm, setSearchTerm] = useState(initialValue);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      onSearch(searchTerm);\n    }, debounceTime);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [searchTerm, onSearch, debounceTime]);\n\n  return (\n    <div className=\"search-input-container\">\n      <input\n        type=\"text\"\n        className=\"search-input\"\n        placeholder={placeholder}\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n      {searchTerm && (\n        <button\n          className=\"clear-search\"\n          onClick={() => setSearchTerm('')}\n          aria-label=\"Clear search\"\n        >\n          ×\n        </button>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport { ProcessedMemoryData, MemoryProcess } from './types';\nimport { formatBytes } from '../utils/formatters';\nimport { Table, TableColumn } from '@/design-system/components/Table/Table';\nimport { Card } from '@/design-system/components/Card';\nimport { LineChart } from 'recharts';\nimport { Badge } from '@/design-system/components/Badge';\nimport { SearchInput } from '@/components/common/SearchInput';\nimport { Button } from '@/design-system/components/Button';\n\ninterface MemoryProcessesTabProps {\n  data: ProcessedMemoryData;\n}\n\nexport const MemoryProcessesTab: React.FC<MemoryProcessesTabProps> = ({ data }) => {\n  const { processes } = data;\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortField, setSortField] = useState<keyof MemoryProcess>('rss');\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('desc');\n  const [selectedProcess, setSelectedProcess] = useState<number | null>(null);\n  \n  // Filter and sort processes\n  const filteredProcesses = useMemo(() => {\n    let filtered = processes.topConsumers;\n    \n    // Apply search filter\n    if (searchTerm) {\n      const term = searchTerm.toLowerCase();\n      filtered = filtered.filter(\n        p => p.name.toLowerCase().includes(term) || \n             p.command.toLowerCase().includes(term) || \n             p.pid.toString().includes(term)\n      );\n    }\n    \n    // Apply sorting\n    filtered = [...filtered].sort((a, b) => {\n      const aValue = a[sortField];\n      const bValue = b[sortField];\n      \n      if (typeof aValue === 'number' && typeof bValue === 'number') {\n        return sortDirection === 'asc' ? aValue - bValue : bValue - aValue;\n      }\n      \n      // String comparison (fallback)\n      const aStr = String(aValue);\n      const bStr = String(bValue);\n      return sortDirection === 'asc' ? aStr.localeCompare(bStr) : bStr.localeCompare(aStr);\n    });\n    \n    return filtered;\n  }, [processes.topConsumers, searchTerm, sortField, sortDirection]);\n  \n  // Find growth trend for selected process\n  const selectedProcessTrend = useMemo(() => {\n    if (!selectedProcess) return null;\n    return processes.growthTrends.find(trend => trend.pid === selectedProcess);\n  }, [selectedProcess, processes.growthTrends]);\n  \n  // Find potential leak for selected process\n  const selectedProcessLeak = useMemo(() => {\n    if (!selectedProcess) return null;\n    return processes.potentialLeaks.find(leak => leak.pid === selectedProcess);\n  }, [selectedProcess, processes.potentialLeaks]);\n  \n  // Table columns configuration\n  const columns: TableColumn<MemoryProcess>[] = [\n    {\n      key: 'pid',\n      header: 'PID',\n      sortable: true,\n      width: '10%',\n    },\n    {\n      key: 'name',\n      header: 'Process',\n      sortable: true,\n      width: '20%',\n      render: (process) => (\n        <div className=\"process-name\">\n          <span>{process.name}</span>\n          {processes.potentialLeaks.some(leak => leak.pid === process.pid) && (\n            <Badge type=\"danger\" tooltip=\"Potential memory leak detected\">LEAK</Badge>\n          )}\n          {process.growthRate && process.growthRate > 0 && !processes.potentialLeaks.some(leak => leak.pid === process.pid) && (\n            <Badge type=\"warning\" tooltip=\"Memory usage is growing\">GROWING</Badge>\n          )}\n        </div>\n      )\n    },\n    {\n      key: 'rss',\n      header: 'Memory',\n      sortable: true,\n      width: '15%',\n      render: (process) => formatBytes(process.rss)\n    },\n    {\n      key: 'percentMemory',\n      header: '% of Total',\n      sortable: true,\n      width: '15%',\n      render: (process) => `${process.percentMemory.toFixed(1)}%`\n    },\n    {\n      key: 'vms',\n      header: 'Virtual',\n      sortable: true,\n      width: '15%',\n      render: (process) => formatBytes(process.vms)\n    },\n    {\n      key: 'shared',\n      header: 'Shared',\n      sortable: true,\n      width: '15%',\n      render: (process) => formatBytes(process.shared)\n    },\n    {\n      key: 'growthRate',\n      header: 'Growth',\n      sortable: true,\n      width: '10%',\n      render: (process) => (\n        process.growthRate !== undefined \n          ? <span className={process.growthRate > 0 ? 'growing' : ''}>{formatBytes(process.growthRate)}/min</span> \n          : 'N/A'\n      )\n    },\n  ];\n  \n  const handleRowClick = (process: MemoryProcess) => {\n    setSelectedProcess(process.pid);\n  };\n  \n  return (\n    <div className=\"memory-processes\">\n      <div className=\"memory-processes__controls\">\n        <SearchInput\n          initialValue={searchTerm}\n          onSearch={setSearchTerm}\n          placeholder=\"Search processes...\"\n        />\n        \n        <div className=\"memory-processes__info\">\n          {filteredProcesses.length} of {processes.topConsumers.length} processes shown\n        </div>\n      </div>\n      \n      <Table\n        columns={columns}\n        data={filteredProcesses}\n        onSort={(key: string, direction: 'asc' | 'desc') => {\n  setSortField(key as keyof MemoryProcess);\n  setSortDirection(direction);\n}}\n        \n        onRowClick={handleRowClick}\n        \n        emptyState=\"No processes found matching your search criteria.\"\n      />\n      \n      {/* Process Details Section */}\n      {selectedProcess && (\n        <div className=\"memory-process-details\">\n          <h3>Process Details</h3>\n          \n          <div className=\"memory-process-details__grid\">\n            {/* Memory Trend Chart */}\n            <Card className=\"memory-process-details__trend\">\n              <h4>Memory Usage Trend</h4>\n              {selectedProcessTrend ? (\n                <LineChart\n                  data={selectedProcessTrend.dataPoints.map(point => ({\n                    x: point.timestamp,\n                    y: point.bytes / (1024 * 1024) // Convert to MB for readability\n                  }))}\n                  height={200}\n                  \n                />\n              ) : (\n                <div className=\"memory-process-details__no-data\">\n                  <p>Insufficient historical data to generate trend.</p>\n                </div>\n              )}\n            </Card>\n            \n            {/* Memory Leak Analysis */}\n            <Card className=\"memory-process-details__leak-analysis\">\n              <h4>Memory Leak Analysis</h4>\n              {selectedProcessLeak ? (\n                <div className=\"leak-analysis\">\n                  <div className=\"leak-probability\">\n                    <span className=\"leak-probability__label\">Leak Probability:</span>\n                    <div className=\"leak-probability__meter\">\n                      <div \n                        className=\"leak-probability__fill\" \n                        style={{ \n                          width: `${selectedProcessLeak.leakProbability * 100}%`,\n                          backgroundColor: selectedProcessLeak.leakProbability > 0.7 ? 'var(--color-danger)' : 'var(--color-warning)'\n                        }} \n                      />\n                    </div>\n                    <span className=\"leak-probability__value\">\n                      {(selectedProcessLeak.leakProbability * 100).toFixed(0)}%\n                    </span>\n                  </div>\n                  \n                  <div className=\"leak-evidence\">\n                    <h5>Evidence Points:</h5>\n                    <ul className=\"leak-evidence__list\">\n                      {selectedProcessLeak.evidencePoints.map((point, idx) => (\n                        <li key={idx}>{point}</li>\n                      ))}\n                    </ul>\n                  </div>\n                  \n                  <div className=\"leak-advice\">\n                    <p>\n                      <strong>Recommendation:</strong> This process shows signs of a memory leak. \n                      Consider restarting it or reporting the issue to the developer.\n                    </p>\n                    <Button variant=\"danger\">Restart Process</Button>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"leak-analysis leak-analysis--negative\">\n                  <p>No memory leak detected for this process.</p>\n                  {selectedProcessTrend && selectedProcessTrend.trendline.slope > 0 && (\n                    <p className=\"memory-growth-note\">\n                      Memory usage is growing at {formatBytes(selectedProcessTrend.trendline.slope * 60)}/min, \n                      but the pattern doesn't match typical leak behavior.\n                    </p>\n                  )}\n                </div>\n              )}\n            </Card>\n            \n            {/* Process Command Details */}\n            <Card className=\"memory-process-details__command\">\n              <h4>Process Information</h4>\n              <div className=\"process-command\">\n                <div className=\"process-command__field\">\n                  <span className=\"process-command__label\">PID:</span>\n                  <span className=\"process-command__value\">\n                    {processes.topConsumers.find(p => p.pid === selectedProcess)?.pid}\n                  </span>\n                </div>\n                <div className=\"process-command__field\">\n                  <span className=\"process-command__label\">Name:</span>\n                  <span className=\"process-command__value\">\n                    {processes.topConsumers.find(p => p.pid === selectedProcess)?.name}\n                  </span>\n                </div>\n                <div className=\"process-command__field\">\n                  <span className=\"process-command__label\">Command:</span>\n                  <div className=\"process-command__value process-command__value--command\">\n                    {processes.topConsumers.find(p => p.pid === selectedProcess)?.command}\n                  </div>\n                </div>\n              </div>\n            </Card>\n          </div>\n        </div>\n      )}\n      \n      {/* Memory Leak Warnings Section */}\n      {processes.potentialLeaks.length > 0 && (\n        <Card className=\"memory-processes__leak-warnings\">\n          <h3>\n            Memory Leak Warnings\n            <Badge type=\"danger\">{processes.potentialLeaks.length}</Badge>\n          </h3>\n          \n          <div className=\"memory-leak-list\">\n            {processes.potentialLeaks.map(leak => (\n              <div key={leak.pid} className=\"memory-leak-item\">\n                <div className=\"memory-leak-item__header\">\n                  <h4 onClick={() => setSelectedProcess(leak.pid)}>\n                    {leak.name} (PID: {leak.pid})\n                  </h4>\n                  <span className=\"memory-leak-growth-rate\">\n                    Growing at {formatBytes(leak.growthRate)}/minute\n                  </span>\n                </div>\n                <div className=\"memory-leak-item__probability\">\n                  <span>Leak Probability: {(leak.leakProbability * 100).toFixed(0)}%</span>\n                  <div className=\"memory-leak-probability-bar\">\n                    <div \n                      className=\"memory-leak-probability-bar__fill\"\n                      style={{ \n                        width: `${leak.leakProbability * 100}%`,\n                        backgroundColor: leak.leakProbability > 0.7 ? 'var(--color-danger)' : 'var(--color-warning)'\n                      }}\n                    />\n                  </div>\n                </div>\n                <Button \n                  size=\"md\" \n                  variant=\"secondary\" \n                  onClick={() => setSelectedProcess(leak.pid)}\n                >\n                  View Details\n                </Button>\n              </div>\n            ))}\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n};","import React from 'react';\nimport { PieChart as RechartsPieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\nimport './PieChart.css';\n\ninterface PieChartData {\n  name: string;\n  value: number;\n  color?: string;\n}\n\ninterface PieChartProps {\n  data: PieChartData[];\n  width?: number;\n  height?: number;\n  innerRadius?: number;\n  outerRadius?: number;\n  paddingAngle?: number;\n  className?: string;\n}\n\nexport const PieChart: React.FC<PieChartProps> = ({\n  data,\n  width = 400,\n  height = 400,\n  innerRadius = 0,\n  outerRadius = 80,\n  paddingAngle = 0,\n  className = ''\n}) => {\n  // Generate colors if not provided\n  const colors = [\n    '#00B8D9',\n    '#008CBA',\n    '#005A87',\n    '#003366',\n    '#001A33'\n  ];\n\n  return (\n    <div className={`pie-chart ${className}`}>\n      <ResponsiveContainer width={width} height={height}>\n        <RechartsPieChart>\n          <Pie\n            data={data}\n            cx=\"50%\"\n            cy=\"50%\"\n            innerRadius={innerRadius}\n            outerRadius={outerRadius}\n            paddingAngle={paddingAngle}\n            dataKey=\"value\"\n          >\n            {data.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={entry.color || colors[index % colors.length]}\n              />\n            ))}\n          </Pie>\n        </RechartsPieChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { ProcessedMemoryData } from './types';\nimport { formatBytes } from '../utils/formatters';\nimport { Card } from '@/design-system/components/Card';\nimport { PieChart } from '@/design-system/components/PieChart/PieChart';\nimport { ProgressBar } from '@/design-system/components/ProgressBar/ProgressBar';\nimport { InfoTooltip } from '@/design-system/components/InfoTooltip/InfoTooltip';\nimport { Badge } from '@/design-system/components/Badge';\nimport { Button } from '@/design-system/components/Button';\n\ninterface MemoryAllocationTabProps {\n  data: ProcessedMemoryData;\n}\n\nexport const MemoryAllocationTab: React.FC<MemoryAllocationTabProps> = ({ data }) => {\n  const { allocation } = data;\n  const [expandedRecommendation, setExpandedRecommendation] = useState<string | null>(null);\n  \n  // Generate colors for pie chart\n  const getTypeColor = (type: string): string => {\n    const colorMap: Record<string, string> = {\n      'system': 'var(--color-primary)',\n      'user': 'var(--color-success)',\n      'service': 'var(--color-info)',\n      'kernel': 'var(--color-warning)',\n      'cache': 'var(--color-accent)',\n      'other': 'var(--color-secondary)'\n    };\n    \n    return colorMap[type.toLowerCase()] || 'var(--color-gray)';\n  };\n  \n  // Prepare data for pie chart\n  const pieChartData = allocation.byType.map(item => ({\n    name: item.type,\n    label: item.type,\n    value: item.bytes,\n    percentage: item.percentage,\n    color: getTypeColor(item.type)\n  }));\n  \n  // Get severity class for fragmentation\n  const getFragmentationSeverityClass = () => {\n    switch (allocation.fragmentation.rating) {\n      case 'poor': return 'severity-critical';\n      case 'moderate': return 'severity-warning';\n      case 'good': return 'severity-good';\n      default: return '';\n    }\n  };\n  \n  // Get impact badge color\n  const getImpactColor = (impact: 'high' | 'medium' | 'low') => {\n    switch (impact) {\n      case 'high': return 'danger';\n      case 'medium': return 'warning';\n      case 'low': return 'info';\n      default: return 'secondary';\n    }\n  };\n  \n  const toggleRecommendation = (id: string) => {\n    if (expandedRecommendation === id) {\n      setExpandedRecommendation(null);\n    } else {\n      setExpandedRecommendation(id);\n    }\n  };\n  \n  return (\n    <div className=\"memory-allocation\">\n      <div className=\"memory-allocation__grid\">\n        {/* Memory Allocation By Type */}\n        <Card className=\"memory-allocation__by-type\">\n          <h3>Memory Allocation by Type</h3>\n          \n          <div className=\"memory-allocation-chart\">\n            <PieChart\n              data={pieChartData}\n              height={280}\n            />\n          </div>\n          \n          <div className=\"memory-allocation-type-list\">\n            {allocation.byType.map(type => (\n              <div key={type.type} className=\"memory-allocation-type-item\">\n                <div className=\"memory-allocation-type-item__header\">\n                  <div className=\"memory-allocation-type-color\" style={{ backgroundColor: getTypeColor(type.type) }} />\n                  <span className=\"memory-allocation-type-name\">{type.type}</span>\n                  <span className=\"memory-allocation-type-percentage\">{type.percentage.toFixed(1)}%</span>\n                </div>\n                <span className=\"memory-allocation-type-bytes\">{formatBytes(type.bytes)}</span>\n              </div>\n            ))}\n          </div>\n        </Card>\n        \n        {/* Memory Fragmentation */}\n        <Card className={`memory-allocation__fragmentation ${getFragmentationSeverityClass()}`}>\n          <h3>\n            Memory Fragmentation\n            <InfoTooltip content=\"Memory fragmentation occurs when memory becomes divided into small, non-contiguous blocks, making it difficult to allocate larger chunks.\" />\n          </h3>\n          \n          <div className=\"fragmentation-index\">\n            <span className=\"fragmentation-index__label\">Fragmentation Index:</span>\n            <ProgressBar \n              value={allocation.fragmentation.index} \n              color={allocation.fragmentation.rating === 'poor' ? 'var(--color-danger)' : allocation.fragmentation.rating === 'moderate' ? 'var(--color-warning)' : 'var(--color-success)'}\n              label={`${allocation.fragmentation.index}%`}\n            />\n          </div>\n          \n          <div className=\"fragmentation-details\">\n            <div className=\"fragmentation-detail\">\n              <span className=\"fragmentation-detail__label\">\n                Largest Free Block:\n                <InfoTooltip content=\"The size of the largest contiguous free memory block available.\" />\n              </span>\n              <span className=\"fragmentation-detail__value\">\n                {formatBytes(allocation.fragmentation.largestBlock)}\n              </span>\n            </div>\n            \n            <div className=\"fragmentation-detail\">\n              <span className=\"fragmentation-detail__label\">\n                Free Chunks:\n                <InfoTooltip content=\"Number of separate free memory chunks. Higher values indicate more fragmentation.\" />\n              </span>\n              <span className=\"fragmentation-detail__value\">\n                {allocation.fragmentation.freeChunks}\n              </span>\n            </div>\n          </div>\n          \n          <div className=\"fragmentation-assessment\">\n            {allocation.fragmentation.rating === 'poor' && (\n              <p className=\"fragmentation-assessment--poor\">\n                <strong>High Fragmentation:</strong> Memory is highly fragmented, which may prevent allocation of large memory blocks\n                and decrease system performance.\n              </p>\n            )}\n            \n            {allocation.fragmentation.rating === 'moderate' && (\n              <p className=\"fragmentation-assessment--moderate\">\n                <strong>Moderate Fragmentation:</strong> Some memory fragmentation is present. While not critical,\n                it may affect performance of memory-intensive applications.\n              </p>\n            )}\n            \n            {allocation.fragmentation.rating === 'good' && (\n              <p className=\"fragmentation-assessment--good\">\n                <strong>Low Fragmentation:</strong> Memory is well-organized with minimal fragmentation.\n              </p>\n            )}\n          </div>\n        </Card>\n        \n        {/* Optimization Recommendations */}\n        <Card className=\"memory-allocation__recommendations\">\n          <h3>Memory Optimization Recommendations</h3>\n          \n          {allocation.optimizationRecommendations.length === 0 ? (\n            <div className=\"memory-recommendations-empty\">\n              <p>No optimization recommendations at this time. Your memory utilization appears optimal.</p>\n            </div>\n          ) : (\n            <div className=\"memory-recommendations-list\">\n              {allocation.optimizationRecommendations.map(rec => (\n                <div key={rec.id} className=\"memory-recommendation\">\n                  <div className=\"memory-recommendation__header\" onClick={() => toggleRecommendation(rec.id)}>\n                    <div className=\"memory-recommendation__title\">\n                      <h4>{rec.title}</h4>\n                      <Badge type={getImpactColor(rec.impact)}>\n                        {rec.impact.toUpperCase()} IMPACT\n                      </Badge>\n                    </div>\n                    <span className=\"memory-recommendation__toggle\">\n                      {expandedRecommendation === rec.id ? '−' : '+'}\n                    </span>\n                  </div>\n                  \n                  {expandedRecommendation === rec.id && (\n                    <div className=\"memory-recommendation__body\">\n                      <p>{rec.description}</p>\n                      \n                      {rec.actionable && (\n                        <div className=\"memory-recommendation__action\">\n                          <Button variant=\"primary\">\n                            {rec.action || 'Apply Recommendation'}\n                          </Button>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n        </Card>\n      </div>\n    </div>\n  );\n};","import { MemoryProcess, RawMemoryMetrics } from '../tabs/types';\n\ninterface LeakDetectionResult {\n  pid: number;\n  name: string;\n  growthRate: number;\n  leakProbability: number;\n  evidencePoints: string[];\n}\n\n/**\n * Detects potential memory leaks by analyzing process memory trends\n */\nexport const detectMemoryLeaks = (\n  processes: MemoryProcess[],\n  history: RawMemoryMetrics['history']\n): LeakDetectionResult[] => {\n  // We need sufficient history to detect leaks\n  if (history.length < 3) {\n    return [];\n  }\n  \n  const leakCandidates: LeakDetectionResult[] = [];\n  \n  // Analyze each process with memory history\n  processes.forEach(process => {\n    // Skip processes without growth rate\n    if (process.growthRate === undefined || process.growthRate <= 0) {\n      return;\n    }\n    \n    // Create history points for this process\n    const processHistory = createProcessHistory(process.pid, history);\n    \n    // Skip processes with insufficient history\n    if (processHistory.length < 3) {\n      return;\n    }\n    \n    // Calculate memory growth metrics\n    const { \n      isConsistentGrowth, \n      growthRate, \n      growthVariance, \n      totalGrowthPercentage,\n      hasPeriodicity,\n      growthAfterGC\n    } = analyzeMemoryGrowthPattern(processHistory);\n    \n    // Evidence collection for leak detection\n    const evidencePoints: string[] = [];\n    let leakProbability = 0;\n    \n    // Check for consistent memory growth\n    if (isConsistentGrowth) {\n      evidencePoints.push(\n        `Consistent memory growth of ${formatBytes(growthRate)}/minute over ${processHistory.length} measurements.`\n      );\n      leakProbability += 0.3;\n    }\n    \n    // Check growth percentage threshold\n    if (totalGrowthPercentage > 20) {\n      evidencePoints.push(\n        `Significant growth of ${totalGrowthPercentage.toFixed(1)}% from initial measurement.`\n      );\n      leakProbability += 0.2;\n    }\n    \n    // Low variance indicates consistent growth pattern\n    if (growthVariance < 0.3 && isConsistentGrowth) {\n      evidencePoints.push(\n        `Consistent growth pattern with low variance (${growthVariance.toFixed(2)}), typical of memory leaks.`\n      );\n      leakProbability += 0.15;\n    }\n    \n    // Check if growth continues after apparent GC events\n    if (growthAfterGC) {\n      evidencePoints.push(\n        'Memory usage continues to grow even after garbage collection events.'\n      );\n      leakProbability += 0.25;\n    }\n    \n    // Check if memory usage growth appears periodic\n    if (hasPeriodicity) {\n      evidencePoints.push(\n        'Memory usage exhibits periodic patterns, suggesting normal application behavior rather than a leak.'\n      );\n      leakProbability -= 0.2;\n    }\n    \n    // If we have evidence and probability is significant, add to candidates\n    if (evidencePoints.length > 0 && leakProbability > 0.3) {\n      // Cap probability at 0.95\n      leakProbability = Math.min(leakProbability, 0.95);\n      \n      leakCandidates.push({\n        pid: process.pid,\n        name: process.name,\n        growthRate: process.growthRate,\n        leakProbability,\n        evidencePoints\n      });\n    }\n  });\n  \n  return leakCandidates;\n};\n\n/**\n * Creates a time series of memory usage for a specific process\n */\nconst createProcessHistory = (\n  pid: number,\n  history: RawMemoryMetrics['history']\n): { timestamp: number; bytes: number }[] => {\n  return history\n    .map(point => {\n      const processPoint = point.processes.find(p => p.pid === pid);\n      if (!processPoint) return null;\n      \n      return {\n        timestamp: point.timestamp,\n        bytes: processPoint.rss\n      };\n    })\n    .filter((point): point is { timestamp: number; bytes: number } => point !== null);\n};\n\n/**\n * Analyzes memory growth patterns to identify leak characteristics\n */\nconst analyzeMemoryGrowthPattern = (\n  history: { timestamp: number; bytes: number }[]\n) => {\n  // Calculate time-normalized growth rates\n  const growthRates: number[] = [];\n  for (let i = 1; i < history.length; i++) {\n    const timeDiffMinutes = (history[i].timestamp - history[i-1].timestamp) / 60000;\n    if (timeDiffMinutes > 0) {\n      const growthRate = (history[i].bytes - history[i-1].bytes) / timeDiffMinutes;\n      growthRates.push(growthRate);\n    }\n  }\n  \n  // Skip if we don't have enough growth rate points\n  if (growthRates.length < 2) {\n    return {\n      isConsistentGrowth: false,\n      growthRate: 0,\n      growthVariance: 0,\n      totalGrowthPercentage: 0,\n      hasPeriodicity: false,\n      growthAfterGC: false\n    };\n  }\n  \n  // Calculate average growth rate\n  const avgGrowthRate = growthRates.reduce((sum, rate) => sum + rate, 0) / growthRates.length;\n  \n  // Calculate variance (normalized)\n  const growthVariance = calculateNormalizedVariance(growthRates);\n  \n  // Calculate total growth percentage\n  const totalGrowthPercentage = history[0].bytes > 0 \n    ? ((history[history.length - 1].bytes - history[0].bytes) / history[0].bytes) * 100\n    : 0;\n  \n  // Check for consistent growth (majority of measurements show growth)\n  const positiveGrowthCount = growthRates.filter(rate => rate > 0).length;\n  const isConsistentGrowth = positiveGrowthCount / growthRates.length > 0.7 && avgGrowthRate > 0;\n  \n  // Check for periodicity in memory usage\n  const hasPeriodicity = detectPeriodicity(history.map(h => h.bytes));\n  \n  // Detect garbage collection events and check if growth continues afterward\n  const gcEvents = detectGarbageCollectionEvents(history);\n  const growthAfterGC = gcEvents.length > 0 && \n    gcEvents.some(eventIndex => {\n      // Check if there's consistent growth after a GC event\n      if (eventIndex >= history.length - 2) return false;\n      \n      const postGCPoints = history.slice(eventIndex + 1);\n      return isConsistentGrowthSequence(postGCPoints.map(p => p.bytes));\n    });\n  \n  return {\n    isConsistentGrowth,\n    growthRate: avgGrowthRate,\n    growthVariance,\n    totalGrowthPercentage,\n    hasPeriodicity,\n    growthAfterGC\n  };\n};\n\n/**\n * Calculate normalized variance (0-1 scale)\n */\nconst calculateNormalizedVariance = (values: number[]): number => {\n  if (values.length <= 1) return 0;\n  \n  const mean = values.reduce((sum, val) => sum + val, 0) / values.length;\n  const squaredDiffs = values.map(val => Math.pow(val - mean, 2));\n  const variance = squaredDiffs.reduce((sum, diff) => sum + diff, 0) / values.length;\n  \n  // Normalize variance to a 0-1 scale relative to the mean\n  return mean !== 0 ? Math.min(1, variance / Math.pow(mean, 2)) : 0;\n};\n\n/**\n * Detects if a memory sequence follows a periodic pattern\n */\nconst detectPeriodicity = (memorySequence: number[]): boolean => {\n  if (memorySequence.length < 6) return false;\n  \n  // Simplified periodicity detection using autocorrelation\n  const diffs = [];\n  for (let i = 1; i < memorySequence.length; i++) {\n    diffs.push(memorySequence[i] - memorySequence[i-1]);\n  }\n  \n  let signChanges = 0;\n  for (let i = 1; i < diffs.length; i++) {\n    if ((diffs[i] >= 0 && diffs[i-1] < 0) || (diffs[i] < 0 && diffs[i-1] >= 0)) {\n      signChanges++;\n    }\n  }\n  \n  // If we see multiple sign changes, we likely have periodic behavior\n  const changeRatio = signChanges / (diffs.length - 1);\n  return changeRatio > 0.4;\n};\n\n/**\n * Detects potential garbage collection events\n * (significant sudden drops in memory usage)\n */\nconst detectGarbageCollectionEvents = (\n  history: { timestamp: number; bytes: number }[]\n): number[] => {\n  const gcEventIndices: number[] = [];\n  \n  for (let i = 1; i < history.length; i++) {\n    const currentMemory = history[i].bytes;\n    const prevMemory = history[i-1].bytes;\n    \n    // If memory drops by more than 15%, it might be a GC event\n    if (prevMemory > 0 && (prevMemory - currentMemory) / prevMemory > 0.15) {\n      gcEventIndices.push(i);\n    }\n  }\n  \n  return gcEventIndices;\n};\n\n/**\n * Check if a sequence of memory values shows consistent growth\n */\nconst isConsistentGrowthSequence = (memorySequence: number[]): boolean => {\n  if (memorySequence.length < 3) return false;\n  \n  let growingIntervals = 0;\n  for (let i = 1; i < memorySequence.length; i++) {\n    if (memorySequence[i] > memorySequence[i-1]) {\n      growingIntervals++;\n    }\n  }\n  \n  return growingIntervals / (memorySequence.length - 1) > 0.7;\n};\n\n/**\n * Format bytes to a human-readable string\n * Used internally in this file (referencing formatters.ts would create circular dependency)\n */\nconst formatBytes = (bytes: number): string => {\n  if (Math.abs(bytes) < 1024) return `${bytes.toFixed(0)} B`;\n  \n  const units = ['KB', 'MB', 'GB', 'TB'];\n  let value = Math.abs(bytes);\n  let unitIndex = -1;\n  \n  while (value >= 1024 && unitIndex < units.length - 1) {\n    value /= 1024;\n    unitIndex++;\n  }\n  \n  const sign = bytes < 0 ? '-' : '';\n  return `${sign}${value.toFixed(2)} ${units[unitIndex]}`;\n};","import { RawMemoryMetrics } from '../tabs/types';\n\nexport interface OptimizationRecommendation {\n  id: string;\n  title: string;\n  description: string;\n  impact: 'high' | 'medium' | 'low';\n  actionable: boolean;\n  action?: string;\n}\n\n/**\n * Generates memory optimization recommendations based on current memory metrics\n */\nexport const generateOptimizationRecommendations = (\n  metrics: RawMemoryMetrics\n): OptimizationRecommendation[] => {\n  const recommendations: OptimizationRecommendation[] = [];\n  \n  // Calculate some helper metrics\n  const physicalMemoryUsagePercent = (metrics.used / metrics.total) * 100;\n  const swapUsagePercent = metrics.swap.total > 0 \n    ? (metrics.swap.used / metrics.swap.total) * 100 \n    : 0;\n  const isHighMemoryPressure = metrics.pressureLevel === 'high';\n  const isModerateMemoryPressure = metrics.pressureLevel === 'medium';\n  const isHighFragmentation = metrics.fragmentation.index > 70;\n  const isModerateFragmentation = metrics.fragmentation.index > 40;\n  \n  // Get top memory consumers (top 3)\n  const topMemoryConsumers = [...metrics.processes]\n    .sort((a, b) => b.rss - a.rss)\n    .slice(0, 3);\n  \n  // High memory usage recommendation\n  if (physicalMemoryUsagePercent > 85) {\n    recommendations.push({\n      id: 'high-memory-usage',\n      title: 'High Memory Usage Detected',\n      description: \n        `Your system is using ${physicalMemoryUsagePercent.toFixed(1)}% of available physical memory. ` +\n        `This may lead to performance degradation and increased swap usage. Consider closing unused applications ` +\n        `or upgrading system memory.`,\n      impact: 'high',\n      actionable: true,\n      action: 'View Top Memory Consumers'\n    });\n  }\n  \n  // High swap usage recommendation\n  if (swapUsagePercent > 50) {\n    recommendations.push({\n      id: 'high-swap-usage',\n      title: 'Excessive Swap Usage',\n      description: \n        `Your system is using ${swapUsagePercent.toFixed(1)}% of available swap space. ` +\n        `Heavy swap usage significantly slows down system performance as disk access is much slower than RAM. ` +\n        `Consider closing memory-intensive applications or adding more physical memory.`,\n      impact: 'high',\n      actionable: false\n    });\n  }\n  \n  // Memory hogs recommendations\n  const memoryHogThreshold = metrics.total * 0.2; // 20% of total memory\n  const memoryHogs = topMemoryConsumers.filter(process => process.rss > memoryHogThreshold);\n  \n  if (memoryHogs.length > 0 && physicalMemoryUsagePercent > 75) {\n    memoryHogs.forEach(process => {\n      recommendations.push({\n        id: `memory-hog-${process.pid}`,\n        title: `High Memory Usage: ${process.name}`,\n        description: \n          `Process \"${process.name}\" (PID: ${process.pid}) is using ${process.percentMemory.toFixed(1)}% of your system memory. ` +\n          `Consider restarting this application or investigating why it requires so much memory.`,\n        impact: 'medium',\n        actionable: true,\n        action: 'Restart Process'\n      });\n    });\n  }\n  \n  // Memory fragmentation recommendations\n  if (isHighFragmentation) {\n    recommendations.push({\n      id: 'high-fragmentation',\n      title: 'Severe Memory Fragmentation',\n      description: \n        `Your system memory is highly fragmented (${metrics.fragmentation.index}% fragmentation index). ` +\n        `This can prevent allocation of large memory blocks and decrease performance. ` +\n        `Restarting memory-intensive applications or the system itself can help defragment memory.`,\n      impact: 'medium',\n      actionable: false\n    });\n  } else if (isModerateFragmentation && isHighMemoryPressure) {\n    recommendations.push({\n      id: 'moderate-fragmentation',\n      title: 'Memory Fragmentation Under Pressure',\n      description: \n        `Your system has moderate memory fragmentation (${metrics.fragmentation.index}% index) combined with high memory pressure. ` +\n        `This combination can significantly impact performance. Consider freeing memory by closing unused applications.`,\n      impact: 'medium',\n      actionable: false\n    });\n  }\n  \n  // Memory leak recommendations - build on the leak detector results\n  // This would normally be more sophisticated, connecting to the leak detector\n  const potentialLeakyProcesses = metrics.processes.filter(p => \n    p.growthRate !== undefined && p.growthRate > 0 && p.leakProbability !== undefined && p.leakProbability > 0.7\n  );\n  \n  potentialLeakyProcesses.forEach(process => {\n    recommendations.push({\n      id: `memory-leak-${process.pid}`,\n      title: `Potential Memory Leak: ${process.name}`,\n      description: \n        `Process \"${process.name}\" (PID: ${process.pid}) shows a pattern consistent with a memory leak. ` +\n        `Its memory usage is steadily growing without release. Consider restarting the application or ` +\n        `reporting the issue to the application developer.`,\n      impact: 'high',\n      actionable: true,\n      action: 'View Leak Analysis'\n    });\n  });\n  \n  // Cached memory recommendations\n  const cachedMemoryPercent = (metrics.cached / metrics.total) * 100;\n  if (cachedMemoryPercent > 60 && isHighMemoryPressure) {\n    recommendations.push({\n      id: 'high-cache-usage',\n      title: 'Excessive Memory Caching',\n      description: \n        `${cachedMemoryPercent.toFixed(1)}% of your memory is used for disk caching while the system is under memory pressure. ` +\n        `While caching improves disk performance, it may be consuming memory needed by applications. ` +\n        `Consider adjusting your system's cache pressure settings.`,\n      impact: 'low',\n      actionable: false\n    });\n  }\n  \n  // Page rate recommendations\n  if (metrics.pageOut > 100 && isModerateMemoryPressure) {\n    recommendations.push({\n      id: 'high-page-rate',\n      title: 'High Memory Paging Activity',\n      description: \n        `Your system is experiencing high paging activity (${metrics.pageOut} page-outs). ` +\n        `This indicates memory pressure forcing the system to move memory pages to disk, ` +\n        `which can significantly slow down performance.`,\n      impact: 'medium',\n      actionable: false\n    });\n  }\n  \n  return recommendations;\n};","import { RawMemoryMetrics, ProcessedMemoryData, MemoryProcess } from '../tabs/types';\nimport { detectMemoryLeaks } from './memoryLeakDetector';\nimport { generateOptimizationRecommendations } from './optimizationEngine';\n\n/**\n * Processes raw memory metrics into structured data for components\n */\nexport const processMemoryData = (\n  rawData: RawMemoryMetrics\n): ProcessedMemoryData => {\n  // Calculate overview metrics\n  const overview = processOverviewMetrics(rawData);\n  \n  // Process memory consumption trends\n  const processes = processProcessMetrics(rawData);\n  \n  // Memory allocation analysis\n  const allocation = processAllocationMetrics(rawData);\n  \n  return {\n    overview,\n    processes,\n    allocation\n  };\n};\n\n/**\n * Process overview-related metrics\n */\nconst processOverviewMetrics = (rawData: RawMemoryMetrics) => {\n  return {\n    physicalMemory: {\n      total: rawData.total,\n      used: rawData.used,\n      free: rawData.free,\n      percentUsed: (rawData.used / rawData.total) * 100\n    },\n    swap: {\n      total: rawData.swap.total,\n      used: rawData.swap.used,\n      free: rawData.swap.free,\n      percentUsed: rawData.swap.total > 0 \n        ? (rawData.swap.used / rawData.swap.total) * 100 \n        : 0\n    },\n    cached: rawData.cached,\n    active: rawData.active,\n    buffers: rawData.buffers,\n    pressureLevel: rawData.pressureLevel,\n    pressureIndicators: {\n      pageInRate: calculatePageRate(rawData.history),\n      pageOutRate: calculatePageRate(rawData.history),\n      swapUsageRate: calculateSwapUsageRate(rawData.history)\n    }\n  };\n};\n\n/**\n * Process process-related metrics including leak detection\n */\nconst processProcessMetrics = (rawData: RawMemoryMetrics) => {\n  // Calculate growth trends for processes\n  const growthTrends = calculateProcessGrowthTrends(rawData.processes, rawData.history);\n  \n  // Detect potential memory leaks\n  const potentialLeaks = detectMemoryLeaks(rawData.processes, rawData.history);\n  \n  return {\n    topConsumers: sortProcessesByMemory(rawData.processes),\n    growthTrends,\n    potentialLeaks\n  };\n};\n\n/**\n * Process allocation-related metrics\n */\nconst processAllocationMetrics = (rawData: RawMemoryMetrics) => {\n  return {\n    byType: calculateMemoryByType(rawData.allocations),\n    fragmentation: {\n      index: rawData.fragmentation.index,\n      largestBlock: rawData.fragmentation.largestBlock,\n      freeChunks: rawData.fragmentation.freeChunks,\n      rating: rateFragmentation(rawData.fragmentation.index)\n    },\n    optimizationRecommendations: generateOptimizationRecommendations(rawData)\n  };\n};\n\n/**\n * Calculate the rate of page operations based on history\n */\nconst calculatePageRate = (\n \n  history: RawMemoryMetrics['history']\n): number => {\n  if (history.length < 2) return 0;\n  \n  // Get page operations from the last two history points if available\n  // Assuming these are cumulative counts since system boot\n  const currentTime = Date.now();\n  const recentHistory = history\n    .filter(h => currentTime - h.timestamp < 60000) // Last minute\n    .sort((a, b) => b.timestamp - a.timestamp); // Most recent first\n  \n  if (recentHistory.length < 2) return 0;\n  \n  // Calculate the rate of operations per second\n  const latestPoint = recentHistory[0];\n  const earlierPoint = recentHistory[recentHistory.length - 1];\n  \n  const timeDiffSeconds = (latestPoint.timestamp - earlierPoint.timestamp) / 1000;\n  if (timeDiffSeconds <= 0) return 0;\n  \n  // Since we don't have page operations in history directly in this model,\n  // we'll estimate based on memory usage changes\n  // In a real implementation, we'd store pageIn/pageOut in history\n  const memoryDiff = Math.abs(latestPoint.used - earlierPoint.used);\n  const estimatedPageOps = memoryDiff / 4096; // Assuming 4KB page size\n  \n  return estimatedPageOps / timeDiffSeconds;\n};\n\n/**\n * Calculate the rate of swap usage change\n */\nconst calculateSwapUsageRate = (\n  history: RawMemoryMetrics['history']\n): number => {\n  if (history.length < 2) return 0;\n  \n  // Get the most recent history entries within the last minute\n  const currentTime = Date.now();\n  const recentHistory = history\n    .filter(h => currentTime - h.timestamp < 60000)\n    .sort((a, b) => b.timestamp - a.timestamp);\n  \n  if (recentHistory.length < 2) return 0;\n  \n  // Calculate the rate of swap usage change in MB/s\n  // In a real implementation, we'd have swap usage in history\n  const latestPoint = recentHistory[0];\n  const earlierPoint = recentHistory[recentHistory.length - 1];\n  \n  const timeDiffSeconds = (latestPoint.timestamp - earlierPoint.timestamp) / 1000;\n  if (timeDiffSeconds <= 0) return 0;\n  \n  // Since we don't have swap in history directly in this model,\n  // we'll return a placeholder. In a real implementation:\n  // const swapDiffMB = (latestPoint.swap.used - earlierPoint.swap.used) / (1024 * 1024);\n  // return swapDiffMB / timeDiffSeconds;\n  \n  return 0; // Placeholder\n};\n\n/**\n * Sort processes by memory usage (RSS)\n */\nconst sortProcessesByMemory = (\n  processes: MemoryProcess[]\n): MemoryProcess[] => {\n  return [...processes].sort((a, b) => b.rss - a.rss);\n};\n\n/**\n * Calculate growth trends for processes based on historical data\n */\nconst calculateProcessGrowthTrends = (\n  processes: MemoryProcess[],\n  history: RawMemoryMetrics['history']\n): ProcessedMemoryData['processes']['growthTrends'] => {\n  const result: ProcessedMemoryData['processes']['growthTrends'] = [];\n  \n  // Process each active process\n  processes.forEach(process => {\n    // Get history points for this process\n    const processHistory = history\n      .map(point => {\n        const processPoint = point.processes.find(p => p.pid === process.pid);\n        if (!processPoint) return null;\n        \n        return {\n          timestamp: point.timestamp,\n          bytes: processPoint.rss\n        };\n      })\n      .filter((point): point is { timestamp: number; bytes: number } => point !== null);\n    \n    // Need at least 3 points for a meaningful trend\n    if (processHistory.length < 3) return;\n    \n    // Calculate linear regression for trendline\n    const trendline = calculateLinearRegression(processHistory);\n    \n    result.push({\n      pid: process.pid,\n      name: process.name,\n      dataPoints: processHistory,\n      trendline\n    });\n  });\n  \n  return result;\n};\n\n/**\n * Calculate a linear regression (trendline) from time series data\n */\nconst calculateLinearRegression = (\n  points: { timestamp: number; bytes: number }[]\n): { slope: number; intercept: number } => {\n  // Convert timestamps to relative time in minutes for better numerical stability\n  const baseTime = points[0].timestamp;\n  const timePoints = points.map(p => (p.timestamp - baseTime) / 60000); // minutes\n  const bytePoints = points.map(p => p.bytes);\n  \n  const n = points.length;\n  \n  // Calculate means\n  const meanX = timePoints.reduce((sum, x) => sum + x, 0) / n;\n  const meanY = bytePoints.reduce((sum, y) => sum + y, 0) / n;\n  \n  // Calculate slope and intercept\n  let numerator = 0;\n  let denominator = 0;\n  \n  for (let i = 0; i < n; i++) {\n    numerator += (timePoints[i] - meanX) * (bytePoints[i] - meanY);\n    denominator += Math.pow(timePoints[i] - meanX, 2);\n  }\n  \n  // Avoid division by zero\n  const slope = denominator !== 0 ? numerator / denominator : 0;\n  const intercept = meanY - slope * meanX;\n  \n  return { slope, intercept };\n};\n\n/**\n * Calculate memory usage by application type\n */\nconst calculateMemoryByType = (\n  allocations: RawMemoryMetrics['allocations']\n) => {\n  const total = allocations.reduce((sum, item) => sum + item.bytes, 0);\n  \n  return allocations.map(item => ({\n    type: item.type,\n    bytes: item.bytes,\n    percentage: (item.bytes / total) * 100\n  }));\n};\n\n/**\n * Rate memory fragmentation based on fragmentation index\n */\nconst rateFragmentation = (\n  index: number\n): 'good' | 'moderate' | 'poor' => {\n  if (index < 30) return 'good';\n  if (index < 70) return 'moderate';\n  return 'poor';\n};","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@/store/store';\nimport Tabs, { TabPanel, Tab } from '@/design-system/components/Tabs/Tabs';\nimport ErrorDisplay from '@/components/common/ErrorDisplay';\nimport LoadingIndicator from '@/components/common/LoadingIndicator';\nimport { MemoryOverviewTab } from './tabs/MemoryOverviewTab';\nimport { MemoryProcessesTab } from './tabs/MemoryProcessesTab';\nimport { MemoryAllocationTab } from './tabs/MemoryAllocationTab';\nimport { processMemoryData } from './utils/memoryDataProcessor';\nimport { MemoryMetricProps, RawMemoryMetrics } from './tabs/types';\n\nexport const MemoryMetric: React.FC<MemoryMetricProps> = ({ \n  compact = false,\n  defaultTab = 'overview' \n}) => {\n  type TabType = 'overview' | 'processes' | 'allocation';\n  const [activeTab, setActiveTab] = useState<TabType>(defaultTab as TabType);\n  // Use the latest SystemMetric for memory data\n  const currentMetric = useSelector((state: RootState) => state.metrics.current);\n  const loading = useSelector((state: RootState) => state.metrics.loading);\n  const error = useSelector((state: RootState) => state.metrics.error);\n\n  // Extract memory metrics from SystemMetric type\n  // Map SystemMetric to RawMemoryMetrics shape expected by processMemoryData\n  const memoryMetrics: RawMemoryMetrics | null = currentMetric\n    ? {\n        total: currentMetric.memory_total,\n        used: currentMetric.memory_usage,\n        free: currentMetric.memory_free,\n        cached: currentMetric.memory_cache,\n        active: currentMetric.memory_buffer ?? 0, // fallback if not present\n        buffers: currentMetric.memory_buffer ?? 0,\n        swap: {\n          total: currentMetric.memory_swap_total,\n          used: currentMetric.memory_swap_used,\n          free: currentMetric.memory_swap_free,\n        },\n        pageIn: 0, // Not available from SystemMetric, fallback to 0\n        pageOut: 0, // Not available from SystemMetric, fallback to 0\n        pressureLevel: 'low', // Default/fallback, adjust if available\n        allocations: [], // Fill with real data if available\n        fragmentation: {\n          index: 0,\n          largestBlock: 0,\n          freeChunks: 0,\n        },\n        history: [], // Fill with real data if available\n        processes: [], // Fill with real data if available\n      }\n    : null;\n  \n  // Handle loading state\n  if (loading) {\n    return <LoadingIndicator message=\"Fetching memory metrics...\" />;\n  }\n  \n  // Handle error state\n  if (error || !memoryMetrics) {\n    return <ErrorDisplay \n      message=\"Unable to load memory metrics\" \n      details={typeof error === 'string' ? error : undefined}\n      retry={() => {/* Dispatch refresh action */}} \n    />;\n  }\n  \n  // Process memory data once for all tabs\n  const processedData = processMemoryData(memoryMetrics);\n  \n  // Render compact version for dashboard if requested\n  if (compact) {\n    return (\n      <div className=\"memory-metric memory-metric--compact\">\n        <MemoryOverviewTab data={processedData} compact={true} />\n      </div>\n    );\n  }\n  \n  // Render full tabbed version\n  return (\n    <div className={`memory-metric ${compact ? 'compact' : ''}`}>\n      <Tabs activeTab={activeTab} onChange={(tabId: string) => setActiveTab(tabId as TabType)}>\n        <Tab id=\"overview\" label=\"Overview\">\n          <TabPanel id=\"overview\" active={activeTab === 'overview'}>\n            <MemoryOverviewTab data={processedData} />\n          </TabPanel>\n        </Tab>\n        <Tab id=\"processes\" label=\"Processes\">\n          <TabPanel id=\"processes\" active={activeTab === 'processes'}>\n            <MemoryProcessesTab data={processedData} />\n          </TabPanel>\n        </Tab>\n        <Tab id=\"allocation\" label=\"Allocation\">\n          <TabPanel id=\"allocation\" active={activeTab === 'allocation'}>\n            <MemoryAllocationTab data={processedData} />\n          </TabPanel>\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};","/**\n * Formats byte values to human-readable strings with appropriate units\n */\nexport const formatBytes = (bytes: number, decimals = 2): string => {\n    if (bytes === 0) return '0 Bytes';\n    if (!bytes || isNaN(bytes)) return 'N/A';\n    \n    const isNegative = bytes < 0;\n    bytes = Math.abs(bytes);\n    \n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    \n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    \n    const formattedValue = parseFloat((bytes / Math.pow(k, i)).toFixed(decimals));\n    return `${isNegative ? '-' : ''}${formattedValue} ${sizes[i]}`;\n  };\n  \n  /**\n   * Formats large numbers with thousands separators\n   */\n  export const formatNumber = (num: number): string => {\n    if (isNaN(num)) return 'N/A';\n    return num.toLocaleString();\n  };\n  \n  /**\n   * Formats a percentage value with appropriate sign\n   */\n  export const formatPercentage = (value: number, showSign = false): string => {\n    const formattedValue = Math.abs(value).toFixed(1);\n    \n    if (showSign && value !== 0) {\n      const sign = value > 0 ? '+' : '-';\n      return `${sign}${formattedValue}%`;\n    }\n    \n    return `${formattedValue}%`;\n  };\n  \n  /**\n   * Formats a timestamp to a readable date/time string\n   */\n  export const formatTimestamp = (timestamp: number): string => {\n    const date = new Date(timestamp);\n    return date.toLocaleString();\n  };\n  \n  /**\n   * Returns a readable string for a disk health status\n   */\n  export const formatDiskHealthStatus = (status: 'healthy' | 'warning' | 'error' | 'passed' | 'failed'): string => {\n    switch(status) {\n      case 'healthy':\n      case 'passed':\n        return 'Healthy';\n      case 'warning':\n        return 'Warning';\n      case 'error':\n      case 'failed':\n        return 'Critical';\n      default:\n        return 'Unknown';\n    }\n  };\n  \n  /**\n   * Returns a CSS class based on disk health status\n   */\n  export const getDiskHealthClass = (status: 'healthy' | 'warning' | 'error' | 'passed' | 'failed'): string => {\n    switch(status) {\n      case 'healthy':\n      case 'passed':\n        return 'health-good';\n      case 'warning':\n        return 'health-warning';\n      case 'error':\n      case 'failed':\n        return 'health-critical';\n      default:\n        return '';\n    }\n  };","import React, { JSX, useState } from 'react';\nimport { ProcessedDiskData } from '@/components/metrics/disk/tabs/types';\nimport { formatBytes } from '@/components/metrics/disk/utils/formatters';\nimport { Card } from '@/design-system/components/Card/Card';\nimport { ProgressBar } from '@/design-system/components/ProgressBar/ProgressBar';\nimport { Table, TableColumn } from '@/design-system/components/Table/Table';\nimport { Badge } from '@/design-system/components/Badge/Badge';\nimport { Tabs, Tab, TabPanel } from '@/design-system/components/Tabs/Tabs';\nimport './DiskPartitionsTab.css';\n\ninterface DiskPartitionsTabProps {\n  data: ProcessedDiskData;\n  compact?: boolean;\n}\n\nconst DiskPartitionsTab: React.FC<DiskPartitionsTabProps> = ({ data, compact = false }) => {\n  const [activeTab, setActiveTab] = useState<'partitions' | 'physical'>('partitions');\n  const [selectedPartition, setSelectedPartition] = useState<string | null>(null);\n  const [selectedDisk, setSelectedDisk] = useState<string | null>(null);\n  \n  const { partitions, physicalDisks } = data;\n\n  // Format health status\n  const formatHealthStatus = (status: 'healthy' | 'warning' | 'error' | 'passed' | 'failed'): JSX.Element => {\n    let color: string;\n    let label: string;\n    \n    switch (status) {\n      case 'healthy':\n      case 'passed':\n        color = 'var(--color-success)';\n        label = 'Healthy';\n        break;\n      case 'warning':\n        color = 'var(--color-warning)';\n        label = 'Warning';\n        break;\n      case 'error':\n      case 'failed':\n        color = 'var(--color-danger)';\n        label = 'Critical';\n        break;\n      default:\n        color = 'var(--color-text-secondary)';\n        label = 'Unknown';\n    }\n    \n    return <span className=\"health-status\" style={{ color }}>{label}</span>;\n  };\n\n  // Partition table columns\n  const partitionColumns: TableColumn<any>[] = [\n    {\n      key: 'mountPoint',\n      header: 'Mount Point',\n      sortable: true,\n      render: (partition) => (\n        <div className=\"partition-mount\">\n          <span className=\"partition-mount__point\">{partition.mountPoint}</span>\n          <span className=\"partition-mount__device\">{partition.device}</span>\n        </div>\n      )\n    },\n    {\n      key: 'fsType',\n      header: 'File System',\n      sortable: true,\n      render: (partition) => partition.fsType ? partition.fsType.toUpperCase() : ''\n    },\n    {\n      key: 'percentUsed',\n      header: 'Usage',\n      sortable: true,\n      render: (partition) => (\n        <div className=\"partition-usage\">\n          <ProgressBar \n            value={partition.percentUsed} \n            label={`${partition.percentUsed.toFixed(1)}%`}\n          />\n          <div className=\"partition-usage__stats\">\n            <span>{formatBytes(partition.used)} of {formatBytes(partition.total)}</span>\n          </div>\n        </div>\n      )\n    },\n    {\n      key: 'total',\n      header: 'Size',\n      sortable: true,\n      render: (partition) => formatBytes(partition.total)\n    },\n    {\n      key: 'inodeUsage',\n      header: 'Inodes',\n      sortable: true,\n      render: (partition) => `${partition.inodeUsage}%`\n    },\n    {\n      key: 'health',\n      header: 'Health',\n      sortable: true,\n      render: (partition) => formatHealthStatus(partition.health.status)\n    },\n    {\n      key: 'readOnly',\n      header: 'Access',\n      sortable: true,\n      render: (partition) => (\n        <Badge type={partition.readOnly ? 'warning' : 'success'}>\n          {partition.readOnly ? 'Read-Only' : 'Read/Write'}\n        </Badge>\n      )\n    }\n  ];\n\n  // Physical disk table columns\n  const diskColumns: TableColumn<any>[] = [\n    {\n      key: 'model',\n      header: 'Model',\n      sortable: true\n    },\n    {\n      key: 'type',\n      header: 'Type',\n      sortable: true,\n      render: (disk) => disk.type.toUpperCase()\n    },\n    {\n      key: 'size',\n      header: 'Size',\n      sortable: true,\n      render: (disk) => formatBytes(disk.size)\n    },\n    {\n      key: 'temperature',\n      header: 'Temp',\n      sortable: true,\n      render: (disk) => (\n        <div className=\"disk-temp\">\n          <span className={`disk-temp__value ${\n            disk.temperature > 70 ? 'text-danger' :\n            disk.temperature > 60 ? 'text-warning' : ''\n          }`}>\n            {disk.temperature}°C\n          </span>\n        </div>\n      )\n    },\n    {\n      key: 'health',\n      header: 'Health',\n      sortable: true,\n      render: (disk) => (\n        <div className=\"disk-health\">\n          {formatHealthStatus(disk.health.status)}\n          {disk.health.issues.length > 0 && (\n            <Badge type=\"warning\" className=\"ml-1\">{disk.health.issues.length}</Badge>\n          )}\n        </div>\n      )\n    },\n    {\n      key: 'health.lifeRemaining',\n      header: 'Life',\n      sortable: true,\n      render: (disk) => (\n        <div className=\"disk-life\">\n          <ProgressBar \n            value={disk.health ? disk.health.lifeRemaining : 0} \n            label={`${disk.health ? disk.health.lifeRemaining : 0}%`}\n          />\n          <span className=\"disk-life__value\">{disk.health ? disk.health.lifeRemaining : 0}%</span>\n        </div>\n      )\n    },\n    {\n      key: 'partitions',\n      header: 'Partitions',\n      sortable: false,\n      render: (disk) => disk.partitions.length\n    }\n  ];\n\n  // Render compact view for dashboard\n  if (compact) {\n    return (\n      <Card className=\"disk-partitions disk-partitions--compact\">\n        <div className=\"disk-partitions__header\">\n          <h3>Disk Usage</h3>\n          <div className=\"disk-partitions__tabs\">\n            <Tabs activeTab={activeTab} onChange={(tabId: string) => setActiveTab(tabId as 'partitions' | 'physical')}>\n              <Tab id=\"partitions\" label=\"Partitions\" children={null} />\n              <Tab id=\"physical\" label=\"Physical Disks\" children={null} />\n            </Tabs>\n          </div>\n        </div>\n\n        <div className=\"disk-partitions__content\">\n          {activeTab === 'partitions' ? (\n            <Table\n              columns={partitionColumns}\n              data={partitions.items}\n              onRowClick={(partition) => setSelectedPartition(partition.mountPoint)}\n            />\n          ) : (\n            <Table\n              columns={diskColumns}\n              data={physicalDisks.items}\n              onRowClick={(disk) => setSelectedDisk(disk.id)}\n            />\n          )}\n        </div>\n      </Card>\n    );\n  }\n\n  // Full view\n  return (\n    <div className=\"disk-partitions\">\n      <div className=\"disk-partitions__header\">\n        <div className=\"disk-summary\">\n          <h2>Disk Usage</h2>\n          <div className=\"disk-summary__metrics\">\n            <div className=\"disk-summary__metric\">\n              <span className=\"disk-summary__label\">Total Partitions:</span>\n              <span className=\"disk-summary__value\">{partitions.items.length}</span>\n            </div>\n            <div className=\"disk-summary__metric\">\n              <span className=\"disk-summary__label\">Total Disks:</span>\n              <span className=\"disk-summary__value\">{physicalDisks.items.length}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"disk-partitions__tabs\">\n          <Tabs activeTab={activeTab} onChange={(tabId: string) => setActiveTab(tabId as 'partitions' | 'physical')}>\n            <Tab id=\"partitions\" label=\"Partitions\" children={null} />\n            <Tab id=\"physical\" label=\"Physical Disks\" children={null} />\n          </Tabs>\n        </div>\n      </div>\n\n      <div className=\"disk-partitions__content\">\n        <TabPanel id=\"partitions\" active={activeTab === 'partitions'}>\n          <div className=\"disk-partitions__table-container\">\n            <Table\n              columns={partitionColumns}\n              data={partitions.items}\n              onRowClick={(partition) => setSelectedPartition(partition.mountPoint)}\n              rowKey=\"mountPoint\"\n            />\n          </div>\n\n          {selectedPartition && (\n            <div className=\"partition-details\">\n              <h3>Partition Details: {selectedPartition}</h3>\n              <div className=\"partition-details__content\">\n                {(() => {\n                  const partition = partitions.items.find(p => p.mountPoint === selectedPartition);\n                  if (!partition) return <p>Partition not found</p>;\n                  \n                  return (\n                    <div className=\"partition-details__grid\">\n                      <Card className=\"partition-usage\">\n                        <h4>Disk Usage</h4>\n                        <div className=\"partition-usage__chart\">\n                          <ProgressBar \n                            value={partition.percentUsed} \n                            label={`${partition.percentUsed.toFixed(1)}%`}\n                          />\n                          <div className=\"partition-usage__stats\">\n                            <div className=\"partition-stat\">\n                              <span className=\"partition-stat__label\">Used:</span>\n                              <span className=\"partition-stat__value\">{formatBytes(partition.used)}</span>\n                            </div>\n                            <div className=\"partition-stat\">\n                              <span className=\"partition-stat__label\">Available:</span>\n                              <span className=\"partition-stat__value\">{formatBytes(partition.available)}</span>\n                            </div>\n                            <div className=\"partition-stat\">\n                              <span className=\"partition-stat__label\">Total:</span>\n                              <span className=\"partition-stat__value\">{formatBytes(partition.total)}</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Card>\n\n                      <Card className=\"partition-filesystem\">\n                        <h4>Filesystem Information</h4>\n                        <div className=\"partition-filesystem__details\">\n                          <div className=\"partition-detail\">\n                            <span className=\"partition-detail__label\">Filesystem:</span>\n                            <span className=\"partition-detail__value\">{partition.fsType}</span>\n                          </div>\n                          <div className=\"partition-detail\">\n                            <span className=\"partition-detail__label\">Type:</span>\n                            <span className=\"partition-detail__value\">{partition.fsType}</span>\n                          </div>\n                          <div className=\"partition-detail\">\n                            <span className=\"partition-detail__label\">Block Size:</span>\n                            <span className=\"partition-detail__value\">{typeof partition.blockSize === 'number' ? formatBytes(partition.blockSize) : ''}</span>\n                          </div>\n                          <div className=\"partition-detail\">\n                            <span className=\"partition-detail__label\">Inodes:</span>\n                            <span className=\"partition-detail__value\">\n                              {typeof partition.inodeUsage === 'number' ? `${partition.inodeUsage}% used` : ''}\n                            </span>\n                          </div>\n                        </div>\n                      </Card>\n\n                      <Card className=\"partition-physical-disk\">\n                        <h4>Physical Disk</h4>\n                        {(() => {\n                          const physicalDisk = physicalDisks.items.find(d => d.id === partition.physicalDiskId);\n                          if (!physicalDisk) return <p>Physical disk information not available</p>;\n                          \n                          return (\n                            <div className=\"physical-disk-details\">\n                              <div className=\"physical-disk-details__header\">\n                                <h5>{physicalDisk.model}</h5>\n                                <div className=\"physical-disk-details__badges\">\n                                  <Badge type=\"info\">{physicalDisk.type.toUpperCase()}</Badge>\n                                  <Badge \n                                    type={\n                                      'success'\n                                    }\n                                  >\n                                    {formatHealthStatus(physicalDisk.health.status)}\n                                  </Badge>\n                                </div>\n                              </div>\n                              \n                              <div className=\"physical-disk-details__stats\">\n                                <div className=\"physical-disk-stat\">\n                                  <span className=\"physical-disk-stat__label\">Size:</span>\n                                  <span className=\"physical-disk-stat__value\">{formatBytes(physicalDisk.size)}</span>\n                                </div>\n                                <div className=\"physical-disk-stat\">\n                                  <span className=\"physical-disk-stat__label\">Temperature:</span>\n                                  <span className={`physical-disk-stat__value ${\n                                    physicalDisk.temperature > 70 ? 'text-danger' :\n                                    physicalDisk.temperature > 60 ? 'text-warning' : ''\n                                  }`}>\n                                    {physicalDisk.temperature}°C\n                                  </span>\n                                </div>\n                                <div className=\"physical-disk-stat\">\n                                  <span className=\"physical-disk-stat__label\">Life Remaining:</span>\n                                  <div className=\"physical-disk-stat__progress\">\n                                    <ProgressBar \n                                      value={physicalDisk.health ? physicalDisk.health.lifeRemaining : 0} \n                                      label={`${physicalDisk.health ? physicalDisk.health.lifeRemaining : 0}%`}\n                                    />\n                                  </div>\n                                </div>\n                              </div>\n                              \n                              {physicalDisk.health.issues.length > 0 && (\n                                <div className=\"physical-disk-issues\">\n                                  <h5>Health Issues:</h5>\n                                  <ul className=\"physical-disk-issues__list\">\n                                    {physicalDisk.health.issues.map((issue, index) => (\n                                      <li key={index} className=\"physical-disk-issue\">\n                                        <Badge type=\"danger\">!</Badge>\n                                        <span>{issue}</span>\n                                      </li>\n                                    ))}\n                                  </ul>\n                                </div>\n                              )}\n                            </div>\n                          );\n                        })()}\n                      </Card>\n                    </div>\n                  );\n                })()}\n              </div>\n            </div>\n          )}\n        </TabPanel>\n\n        <TabPanel id=\"physical\" active={activeTab === 'physical'}>\n          <div className=\"disk-physical__table-container\">\n            <Table\n              columns={diskColumns}\n              data={physicalDisks.items}\n              onRowClick={(disk) => setSelectedDisk(disk.id)}\n              rowKey=\"id\"\n            />\n          </div>\n\n          {selectedDisk && (\n            <div className=\"physical-disk-details\">\n              <h3>Disk Details</h3>\n              <div className=\"physical-disk-details__content\">\n                {(() => {\n                  const disk = physicalDisks.items.find(d => d.id === selectedDisk);\n                  if (!disk) return <p>Disk not found</p>;\n                  \n                  const diskPartitions = partitions.items.filter(p => p.physicalDiskId === disk.id);\n                  \n                  return (\n                    <div className=\"physical-disk-details__grid\">\n                      <Card className=\"disk-info\">\n                        <h4>Disk Information</h4>\n                        <div className=\"disk-info__grid\">\n                          <div className=\"disk-info__item\">\n                            <span className=\"disk-info__label\">Model:</span>\n                            <span className=\"disk-info__value\">{disk.model}</span>\n                          </div>\n                          <div className=\"disk-info__item\">\n                            <span className=\"disk-info__label\">Type:</span>\n                            <span className=\"disk-info__value\">{disk.type.toUpperCase()}</span>\n                          </div>\n                          <div className=\"disk-info__item\">\n                            <span className=\"disk-info__label\">Size:</span>\n                            <span className=\"disk-info__value\">{formatBytes(disk.size)}</span>\n                          </div>\n                          <div className=\"disk-info__item\">\n                            <span className=\"disk-info__label\">Temperature:</span>\n                            <span className={`disk-info__value ${\n                              disk.temperature > 70 ? 'text-danger' :\n                              disk.temperature > 60 ? 'text-warning' : ''\n                            }`}>\n                              {disk.temperature}°C\n                            </span>\n                          </div>\n                          <div className=\"disk-info__item\">\n                            <span className=\"disk-info__label\">Health:</span>\n                            <span className=\"disk-info__value\">\n                              {formatHealthStatus(disk.health.status)}\n                              {disk.health.issues.length > 0 && (\n                                <Badge type=\"warning\" className=\"ml-1\">{disk.health.issues.length}</Badge>\n                              )}\n                            </span>\n                          </div>\n                          <div className=\"disk-info__item\">\n                            <span className=\"disk-info__label\">Life Remaining:</span>\n                            <div className=\"disk-info__progress\">\n                              <ProgressBar \n                                value={disk.health.lifeRemaining}\n                                label={`${disk.health.lifeRemaining}%`}\n                              />\n                              <span className=\"disk-info__progress-value\">{disk.health.lifeRemaining}%</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Card>\n\n                      {disk.health.issues.length > 0 && (\n                        <Card className=\"disk-health-issues\">\n                          <h4>Health Issues</h4>\n                          <ul className=\"disk-health-issues__list\">\n                            {disk.health.issues.map((issue, index) => (\n                              <li key={index} className=\"disk-health-issue\">\n                                <Badge type=\"danger\">!</Badge>\n                                <span>{issue}</span>\n                              </li>\n                            ))}\n                          </ul>\n                        </Card>\n                      )}\n\n                      <Card className=\"disk-partitions\">\n                        <h4>Partitions</h4>\n                        {diskPartitions.length > 0 ? (\n                          <div className=\"disk-partitions__list\">\n                            {diskPartitions.map(partition => (\n                              <div key={partition.mountPoint} className=\"disk-partition\">\n                                <div className=\"disk-partition__header\">\n                                  <span className=\"disk-partition__mount\">{partition.mountPoint}</span>\n                                  <span className=\"disk-partition__device\">{partition.device}</span>\n                                </div>\n                                <div className=\"disk-partition__usage\">\n                                  <div className=\"disk-partition__usage-info\">\n                                    <span className=\"disk-partition__usage-percent\">\n                                      {partition.percentUsed.toFixed(1)}%\n                                    </span>\n                                    <span className=\"disk-partition__usage-stats\">\n                                      {formatBytes(partition.used)} of {formatBytes(partition.total)}\n                                    </span>\n                                  </div>\n                                  <ProgressBar \n                                    value={partition.percentUsed}\n                                  />\n                                </div>\n                              </div>\n                            ))}\n                          </div>\n                        ) : (\n                          <p>No partitions found on this disk</p>\n                        )}\n                      </Card>\n                    </div>\n                  );\n                })()}\n              </div>\n            </div>\n          )}\n        </TabPanel>\n      </div>\n    </div>\n  );\n};\n\nexport default DiskPartitionsTab;\n","import React, { useRef, useEffect } from 'react';\n\ninterface TreemapNode {\n  name: string;\n  path?: string;\n  value: number;\n  children?: TreemapNode[];\n  color?: string;\n}\n\ninterface TreemapProps {\n  data: TreemapNode;\n  width?: number;\n  height?: number;\n  onNodeClick?: (node: TreemapNode) => void;\n  colorScale?: string[];\n}\n\nexport const Treemap: React.FC<TreemapProps> = ({\n  data,\n  width = 800,\n  height = 500,\n  onNodeClick,\n  colorScale = ['#3498db', '#2ecc71', '#e74c3c', '#f39c12', '#9b59b6', '#1abc9c', '#e67e22', '#34495e']\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!containerRef.current || !data) return;\n\n    // In a real implementation, this would use D3.js or a similar library\n    // to render the treemap visualization. For this placeholder, we'll just\n    // create a simple div-based representation.\n    \n    const container = containerRef.current;\n    container.innerHTML = '';\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    container.style.position = 'relative';\n    \n    // Simple recursive function to render nodes\n    const renderNode = (node: TreemapNode, x: number, y: number, w: number, h: number, depth: number) => {\n      const div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = `${x}px`;\n      div.style.top = `${y}px`;\n      div.style.width = `${w}px`;\n      div.style.height = `${h}px`;\n      div.style.backgroundColor = node.color || colorScale[depth % colorScale.length];\n      div.style.border = '1px solid white';\n      div.style.overflow = 'hidden';\n      div.style.padding = '4px';\n      div.style.boxSizing = 'border-box';\n      div.style.fontSize = '12px';\n      div.style.color = 'white';\n      div.style.textShadow = '1px 1px 1px rgba(0,0,0,0.5)';\n      div.style.cursor = 'pointer';\n      \n      // Add text if there's enough space\n      if (w > 60 && h > 30) {\n        div.innerHTML = `\n          <div style=\"font-weight: bold; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\">\n            ${node.name}\n          </div>\n          ${node.value ? `<div>${formatBytes(node.value)}</div>` : ''}\n        `;\n      }\n      \n      // Add click handler\n      if (onNodeClick) {\n        div.onclick = () => onNodeClick(node);\n      }\n      \n      container.appendChild(div);\n      \n      // Render children if they exist\n      if (node.children && node.children.length > 0) {\n        // Simple algorithm to layout children\n        // In a real implementation, this would use a more sophisticated algorithm\n        const totalValue = node.children.reduce((sum, child) => sum + child.value, 0);\n        \n        let currentX = x;\n        let currentY = y;\n        const isHorizontal = w > h;\n        \n        node.children.forEach(child => {\n          const ratio = child.value / totalValue;\n          let childW, childH;\n          \n          if (isHorizontal) {\n            childW = w * ratio;\n            childH = h;\n            renderNode(child, currentX, currentY, childW, childH, depth + 1);\n            currentX += childW;\n          } else {\n            childW = w;\n            childH = h * ratio;\n            renderNode(child, currentX, currentY, childW, childH, depth + 1);\n            currentY += childH;\n          }\n        });\n      }\n    };\n    \n    // Start rendering from the root\n    renderNode(data, 0, 0, width, height, 0);\n    \n  }, [data, width, height, colorScale, onNodeClick]);\n  \n  return <div ref={containerRef} className=\"treemap-container\"></div>;\n};\n\n// Helper function to format bytes\nconst formatBytes = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n","import React, { useState, useEffect } from 'react';\nimport { ProcessedDiskData } from './types';\nimport { formatBytes } from '../utils/formatters';\nimport { Card } from '@/design-system/components/Card/Card';\nimport { Table, TableColumn } from '@/design-system/components/Table/Table';\nimport { Button } from '@/design-system/components/Button/Button';\nimport { SearchInput } from '@/components/common/SearchInput';\nimport { Treemap } from '@/components/common/Treemap';\n\n// Directory item type from ProcessedDiskData\ntype DirectoryItem = {\n  path: string;\n  size: number;\n  fileCount: number;\n  lastModified: number;\n  type: string;\n  cleanable: boolean;\n};\n\ninterface DiskDirectoryTabProps {\n  data: ProcessedDiskData;\n}\n\nexport const DiskDirectoryTab: React.FC<DiskDirectoryTabProps> = ({ data }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState('');\n  const [selectedPath, setSelectedPath] = useState<string | null>(null);\n  const [selectedCleanup, setSelectedCleanup] = useState<string | null>(null);\n  \n  // Get directories from data or use empty array as fallback\n  const directories = data.directories?.largest || [];\n  \n\n  // Debounce search term\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedSearchTerm(searchTerm);\n    }, 300);\n    \n    return () => clearTimeout(timer);\n  }, [searchTerm]);\n\n  // Filter directories based on search term\n  const filteredDirectories = directories.filter((dir: DirectoryItem) =>\n    dir.path.toLowerCase().includes(debouncedSearchTerm.toLowerCase())\n  );\n  \n  // Transform directory data for Treemap\n  const treemapData = {\n    name: 'Root',\n    value: directories.reduce((sum: number, dir: DirectoryItem) => sum + dir.size, 0),\n    children: directories.map((dir: DirectoryItem) => ({\n      name: dir.path.split('/').pop() || dir.path,\n      path: dir.path,\n      value: dir.size,\n      fileCount: dir.fileCount,\n      lastModified: dir.lastModified,\n      type: dir.type,\n      cleanable: dir.cleanable\n    }))\n  };\n\n  // Get directory details for the selected path\n  const selectedDirectory = selectedPath \n    ? directories.find((dir: DirectoryItem) => dir.path === selectedPath)\n    : null;\n\n  // Directory table columns\n  const directoryColumns: TableColumn<DirectoryItem>[] = [\n    {\n      key: 'path',\n      header: 'Path',\n      sortable: true,\n      render: (item: DirectoryItem) => {\n        const name = item.path.split('/').pop() || item.path;\n        return (\n          <div className=\"directory-path\">\n            <span className=\"directory-path__name\">{name}</span>\n            {name !== item.path && (\n              <span className=\"directory-path__full\">{item.path}</span>\n            )}\n          </div>\n        );\n      }\n    },\n    {\n      key: 'size',\n      header: 'Size',\n      sortable: true,\n      render: (item: DirectoryItem) => formatBytes(item.size)\n    },\n    {\n      key: 'fileCount',\n      header: 'Files',\n      sortable: true,\n      render: (item: DirectoryItem) => item.fileCount.toLocaleString()\n    },\n    {\n      key: 'lastModified',\n      header: 'Last Modified',\n      sortable: true,\n      render: (item: DirectoryItem) => new Date(item.lastModified).toLocaleString()\n    },\n    {\n      key: 'actions',\n      header: 'Actions',\n      sortable: false,\n      render: (item: DirectoryItem) => (\n        <div className=\"directory-actions\">\n          <Button\n            size=\"sm\"\n            variant=\"secondary\"\n            outlined\n            onClick={() => setSelectedPath(item.path)}\n          >\n            View Details\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"secondary\"\n            onClick={() => setSelectedCleanup(item.path)}\n          >\n            Clean Up\n          </Button>\n        </div>\n      )\n    }\n  ];\n\n  return (\n    <div className=\"disk-directory\">\n      <div className=\"disk-directory__header\">\n        <h2>Disk Usage by Directory</h2>\n        <div className=\"disk-directory__search\">\n          <SearchInput \n            placeholder=\"Search directories...\" \n            initialValue={searchTerm}\n            onSearch={setSearchTerm}\n          />\n        </div>\n      </div>\n\n      <div className=\"disk-directory__content\">\n        <div className=\"disk-directory__treemap\">\n          <Card>\n            <h3>Disk Usage Visualization</h3>\n            <div className=\"treemap-container\">\n              <Treemap data={treemapData} />\n            </div>\n          </Card>\n        </div>\n\n        <div className=\"disk-directory__table\">\n          <Card>\n            <h3>Directory List</h3>\n            <Table<DirectoryItem>\n              columns={directoryColumns}\n              data={filteredDirectories}\n              onRowClick={(dir) => setSelectedPath(dir.path)}\n              rowKey=\"path\"\n            />\n          </Card>\n        </div>\n      </div>\n\n      {/* Directory Details Modal */}\n      {selectedDirectory && (\n        <div className=\"directory-details-modal\">\n          <div className=\"directory-details-modal__content\">\n            <div className=\"directory-details__header\">\n              <h3>{selectedDirectory.path.split('/').pop() || selectedDirectory.path}</h3>\n              <Button \n                variant=\"secondary\"\n                circle\n                size=\"sm\"\n                onClick={() => setSelectedPath(null)}\n              >\n                ×\n              </Button>\n            </div>\n            \n            <div className=\"directory-details__content\">\n              <div className=\"directory-details__info\">\n                <div className=\"info-row\">\n                  <span className=\"info-label\">Path:</span>\n                  <span className=\"info-value\">{selectedDirectory.path}</span>\n                </div>\n                <div className=\"info-row\">\n                  <span className=\"info-label\">Size:</span>\n                  <span className=\"info-value\">{formatBytes(selectedDirectory.size)}</span>\n                </div>\n                <div className=\"info-row\">\n                  <span className=\"info-label\">Files:</span>\n                  <span className=\"info-value\">{selectedDirectory.fileCount.toLocaleString()}</span>\n                </div>\n                <div className=\"info-row\">\n                  <span className=\"info-label\">Last Modified:</span>\n                  <span className=\"info-value\">\n                    {new Date(selectedDirectory.lastModified).toLocaleString()}\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"directory-details__subdirectories\">\n                <h4>Directory Information</h4>\n                <p>Type: {selectedDirectory.type}</p>\n                <p>Path: {selectedDirectory.path}</p>\n                <p>Cleanable: {selectedDirectory.cleanable ? 'Yes' : 'No'}</p>\n                <p>Files: {selectedDirectory.fileCount.toLocaleString()}</p>\n                <p>Size: {formatBytes(selectedDirectory.size)}</p>\n              </div>\n\n              <div className=\"directory-details__actions\">\n                <Button \n                  variant=\"secondary\"\n                  outlined\n                  size=\"md\"\n                  onClick={() => setSelectedCleanup(selectedDirectory.path)}\n                >\n                  Clean Up Directory\n                </Button>\n                <Button \n                  variant=\"primary\"\n                  size=\"md\"\n                  onClick={() => console.log('Opening file explorer for', selectedDirectory.path)}\n                >\n                  Show in File Explorer\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Cleanup Confirmation Modal */}\n      {selectedCleanup && (\n        <div className=\"cleanup-confirmation-modal\">\n          <div className=\"cleanup-confirmation-modal__content\">\n            <div className=\"cleanup-confirmation-modal__header\">\n              <h3>Confirm Cleanup</h3>\n              <Button \n                variant=\"secondary\"\n                circle\n                size=\"sm\"\n                onClick={() => setSelectedCleanup(null)}\n              >\n                ×\n              </Button>\n            </div>\n            <div className=\"cleanup-confirmation-modal__body\">\n              <p>Are you sure you want to clean up this directory? This action cannot be undone.</p>\n              {selectedCleanup && (\n                <div className=\"cleanup-directory-info\">\n                  <p><strong>Directory:</strong> {selectedCleanup}</p>\n                  <p><strong>Type:</strong> {directories.find((d: DirectoryItem) => d.path === selectedCleanup)?.type || 'Unknown'}</p>\n                </div>\n              )}\n            </div>\n            <div className=\"cleanup-confirmation-modal__actions\">\n              <Button \n                variant=\"secondary\"\n                outlined\n                size=\"md\"\n                onClick={() => setSelectedCleanup(null)}\n              >\n                Cancel\n              </Button>\n              <Button \n                variant=\"danger\"\n                size=\"md\"\n                onClick={() => {\n                  console.log('Cleanup confirmed for', selectedCleanup);\n                  setSelectedCleanup(null);\n                }}\n              >\n                Confirm Cleanup\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DiskDirectoryTab;\n","import React, { useState } from 'react';\nimport { ProcessedDiskData } from './types';\nimport { formatBytes, formatNumber } from '../utils/formatters';\nimport { Card } from '@/design-system/components/Card';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\nimport { Badge } from '@/design-system/components/Badge';\nimport { ProgressBar } from '@/design-system/components/ProgressBar/ProgressBar';\nimport { Table, TableColumn } from '@/design-system/components/Table/Table';\nimport { InfoTooltip } from '@/design-system/components/InfoTooltip/InfoTooltip';\n\ninterface DiskPerformanceTabProps {\n  data: ProcessedDiskData;\n}\n\ninterface ProcessRow {\n  pid: number;\n  name: string;\n  readRate: number;\n  writeRate: number;\n  totalRate: number;\n  percentage: number;\n}\n\nexport const DiskPerformanceTab: React.FC<DiskPerformanceTabProps> = ({ data }) => {\n  const [selectedProcess, setSelectedProcess] = useState<number | null>(null);\n  const [timeRange, setTimeRange] = useState<'minute' | 'hour' | 'day'>('minute');\n  \n  const { performance } = data;\n  \n  // Process table columns\n  const processColumns: TableColumn<ProcessRow>[] = [\n    {\n      key: 'pid' as const,\n      header: 'PID',\n      width: '10%',\n      align: 'right'\n    },\n    {\n      key: 'name' as const,\n      header: 'Process',\n      width: '30%'\n    },\n    {\n      key: 'readRate' as const,\n      header: 'Read Rate',\n      width: '20%',\n      render: (row: ProcessRow) => formatBytes(row.readRate) + '/s'\n    },\n    {\n      key: 'writeRate' as const,\n      header: 'Write Rate',\n      width: '20%',\n      render: (row: ProcessRow) => formatBytes(row.writeRate) + '/s'\n    },\n    {\n      key: 'totalRate' as const,\n      header: 'Total Rate',\n      width: '20%',\n      render: (row: ProcessRow) => formatBytes(row.totalRate) + '/s'\n    }\n  ];\n  \n  // Helper function to get severity class for latency\n  const getLatencySeverityClass = (latency: number): string => {\n    if (latency > 20) return 'severity-critical';\n    if (latency > 10) return 'severity-warning';\n    return 'severity-normal';\n  };\n  \n  return (\n    <div className=\"disk-performance\">\n      <div className=\"disk-performance__header\">\n        <h2>Disk I/O Performance</h2>\n        <div className=\"disk-performance__summary\">\n          <div className=\"performance-metric\">\n            <span className=\"performance-metric__label\">Read:</span>\n            <span className=\"performance-metric__value\">{formatBytes(performance.current.readSpeed)}/s</span>\n          </div>\n          <div className=\"performance-metric\">\n            <span className=\"performance-metric__label\">Write:</span>\n            <span className=\"performance-metric__value\">{formatBytes(performance.current.writeSpeed)}/s</span>\n          </div>\n          <div className=\"performance-metric\">\n            <span className=\"performance-metric__label\">Utilization:</span>\n            <span className=\"performance-metric__value\">{performance.current.utilization.toFixed(1)}%</span>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"disk-performance__grid\">\n        <Card className=\"disk-performance__charts\">\n          <div className=\"chart-header\">\n            <h3>I/O Performance History</h3>\n            <div className=\"chart-time-selector\">\n              <button \n                className={`chart-time-btn ${timeRange === 'minute' ? 'active' : ''}`}\n                onClick={() => setTimeRange('minute')}\n              >\n                Minute\n              </button>\n              <button \n                className={`chart-time-btn ${timeRange === 'hour' ? 'active' : ''}`}\n                onClick={() => setTimeRange('hour')}\n              >\n                Hour\n              </button>\n              <button \n                className={`chart-time-btn ${timeRange === 'day' ? 'active' : ''}`}\n                onClick={() => setTimeRange('day')}\n              >\n                Day\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"performance-charts\">\n            <div className=\"performance-chart\">\n              <h4>Throughput (Bytes/s)</h4>\n              <ResponsiveContainer width=\"100%\" height={200}>\n                <LineChart\n                  data={[\n                    {\n                      name: 'Read',\n                      color: 'var(--color-primary)',\n                      values: performance.historical.timestamps.map((ts, idx) => ({\n                        x: ts,\n                        y: performance.historical.readSpeed[idx] / (1024 * 1024) // Convert to MB/s\n                      }))\n                    },\n                    {\n                      name: 'Write',\n                      color: 'var(--color-secondary)',\n                      values: performance.historical.timestamps.map((ts, idx) => ({\n                        x: ts,\n                        y: performance.historical.writeSpeed[idx] / (1024 * 1024) // Convert to MB/s\n                      }))\n                    }\n                  ]}\n                  margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                  }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"x\" />\n                  <YAxis yAxisId=\"left\" orientation=\"left\" stroke=\"#8884d8\" />\n                  <YAxis yAxisId=\"right\" orientation=\"right\" stroke=\"#82ca9d\" />\n                  <Tooltip />\n                  <Legend />\n                  <Line type=\"monotone\" dataKey=\"y\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n            \n            <div className=\"performance-chart\">\n              <h4>IOPS (Operations/s)</h4>\n              <ResponsiveContainer width=\"100%\" height={200}>\n                <LineChart\n                  data={[\n                    {\n                      name: 'Read IOPS',\n                      color: 'var(--color-info)',\n                      values: performance.historical.timestamps.map((ts, idx) => ({\n                        x: ts,\n                        y: performance.historical.readIOPS[idx]\n                      }))\n                    },\n                    {\n                      name: 'Write IOPS',\n                      color: 'var(--color-accent)',\n                      values: performance.historical.timestamps.map((ts, idx) => ({\n                        x: ts,\n                        y: performance.historical.writeIOPS[idx]\n                      }))\n                    }\n                  ]}\n                  margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                  }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"x\" />\n                  <YAxis yAxisId=\"left\" orientation=\"left\" stroke=\"#8884d8\" />\n                  <YAxis yAxisId=\"right\" orientation=\"right\" stroke=\"#82ca9d\" />\n                  <Tooltip />\n                  <Legend />\n                  <Line type=\"monotone\" dataKey=\"y\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n            \n            <div className=\"performance-chart\">\n              <h4>Disk Utilization</h4>\n              <ResponsiveContainer width=\"100%\" height={150}>\n                <LineChart\n                  data={[\n                    {\n                      name: 'Utilization',\n                      color: 'var(--color-warning)',\n                      values: performance.historical.timestamps.map((ts, idx) => ({\n                        x: ts,\n                        y: performance.historical.utilization[idx]\n                      }))\n                    }\n                  ]}\n                  margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                  }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"x\" />\n                  <YAxis yAxisId=\"left\" orientation=\"left\" stroke=\"#8884d8\" />\n                  <YAxis yAxisId=\"right\" orientation=\"right\" stroke=\"#82ca9d\" />\n                  <Tooltip />\n                  <Legend />\n                  <Line type=\"monotone\" dataKey=\"y\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        </Card>\n        \n        <Card className=\"disk-performance__current\">\n          <h3>Current I/O Performance</h3>\n          \n          <div className=\"current-performance-metrics\">\n            <div className=\"current-performance-metric\">\n              <div className=\"metric-block\">\n                <h4>\n                  Throughput\n                  <InfoTooltip content=\"Amount of data read from or written to the disk per second\" />\n                </h4>\n                <div className=\"metric-value-group\">\n                  <div className=\"metric-value\">\n                    <span className=\"metric-label\">Read:</span>\n                    <span className=\"metric-value\">{formatBytes(performance.current.readSpeed)}/s</span>\n                  </div>\n                  <div className=\"metric-value\">\n                    <span className=\"metric-label\">Write:</span>\n                    <span className=\"metric-value\">{formatBytes(performance.current.writeSpeed)}/s</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"current-performance-metric\">\n              <div className=\"metric-block\">\n                <h4>\n                  IOPS\n                  <InfoTooltip content=\"Input/Output Operations Per Second. Measures the number of read and write operations.\" />\n                </h4>\n                <div className=\"metric-value-group\">\n                  <div className=\"metric-value\">\n                    <span className=\"metric-label\">Read:</span>\n                    <span className=\"metric-value\">{formatNumber(performance.current.readIOPS)}/s</span>\n                  </div>\n                  <div className=\"metric-value\">\n                    <span className=\"metric-label\">Write:</span>\n                    <span className=\"metric-value\">{formatNumber(performance.current.writeIOPS)}/s</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"current-performance-metric\">\n              <div className=\"metric-block\">\n                <h4>\n                  Latency\n                  <InfoTooltip content=\"Time it takes to complete a disk I/O request. Lower is better.\" />\n                </h4>\n                <div className=\"metric-value-group\">\n                  <div className=\"metric-value\">\n                    <span className=\"metric-label\">Read:</span>\n                    <span className={`metric-value ${getLatencySeverityClass(performance.current.latency.read)}`}>\n                      {performance.current.latency.read.toFixed(2)} ms\n                    </span>\n                  </div>\n                  <div className=\"metric-value\">\n                    <span className=\"metric-label\">Write:</span>\n                    <span className={`metric-value ${getLatencySeverityClass(performance.current.latency.write)}`}>\n                      {performance.current.latency.write.toFixed(2)} ms\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"current-performance-metric\">\n              <div className=\"metric-block\">\n                <h4>\n                  Utilization\n                  <InfoTooltip content=\"Percentage of time the disk is busy processing I/O requests.\" />\n                </h4>\n                <div className=\"metric-chart\">\n                  <ProgressBar \n                    value={performance.current.utilization} \n                    label={`${performance.current.utilization.toFixed(1)}%`}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </Card>\n        \n        <Card className=\"disk-performance__bottlenecks\">\n          <h3>I/O Bottleneck Analysis</h3>\n          \n          {performance.bottlenecks.detected ? (\n            <div className=\"bottleneck-detected\">\n              <div className=\"bottleneck-header\">\n                <Badge \n                  type={\n                    performance.bottlenecks.severity === 'high' ? 'danger' :\n                    performance.bottlenecks.severity === 'medium' ? 'warning' : 'info'\n                  }\n                >\n                  {performance.bottlenecks.severity ? performance.bottlenecks.severity.toUpperCase() : 'UNKNOWN'} BOTTLENECK\n                </Badge>\n                <h4>\n                  {performance.bottlenecks.type === 'read' ? 'Read Bottleneck' :\n                   performance.bottlenecks.type === 'write' ? 'Write Bottleneck' :\n                   performance.bottlenecks.type === 'mixed' ? 'Read/Write Bottleneck' : 'I/O Bottleneck'}\n                </h4>\n              </div>\n              \n              <div className=\"bottleneck-details\">\n                <p className=\"bottleneck-cause\">\n                  <strong>Likely Cause:</strong> {performance.bottlenecks.cause || 'Unknown'}\n                </p>\n                \n                {performance.bottlenecks.process && (\n                  <div className=\"bottleneck-process\">\n                    <p>\n                      <strong>Process Causing Bottleneck:</strong> {performance.bottlenecks.process.name} (PID: {performance.bottlenecks.process.pid})\n                    </p>\n                    <p>\n                      I/O Rate: {formatBytes(performance.bottlenecks.process.ioRate)}/s\n                    </p>\n                  </div>\n                )}\n                \n                <div className=\"bottleneck-recommendations\">\n                  <h5>Recommendations:</h5>\n                  <ul className=\"recommendations-list\">\n                    {performance.bottlenecks.recommendations.map((rec, idx) => (\n                      <li key={idx} className=\"recommendation-item\">{rec}</li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"no-bottleneck\">\n              <div className=\"no-bottleneck__icon\">✓</div>\n              <p className=\"no-bottleneck__message\">No disk I/O bottlenecks detected.</p>\n              <p className=\"no-bottleneck__details\">\n                Current disk I/O performance appears to be normal without any significant bottlenecks.\n              </p>\n            </div>\n          )}\n        </Card>\n        \n        <Card className=\"disk-performance__processes\">\n          <h3>Top I/O Processes</h3>\n          \n          <Table \n            columns={processColumns} \n            data={performance.topProcesses}\n            onRowClick={(item) => setSelectedProcess(item.pid)}\n          />\n          \n          {selectedProcess && (\n            <div className=\"selected-process-details\">\n              {(() => {\n                const process = performance.topProcesses.find(p => p.pid === selectedProcess);\n                if (!process) return null;\n                \n                return (\n                  <div className=\"process-io-details\">\n                    <h4>{process.name} (PID: {process.pid})</h4>\n                    <div className=\"process-io-stats\">\n                      <div className=\"io-stat\">\n                        <span className=\"io-stat__label\">Read Rate:</span>\n                        <span className=\"io-stat__value\">{formatBytes(process.readRate)}/s</span>\n                      </div>\n                      <div className=\"io-stat\">\n                        <span className=\"io-stat__label\">Write Rate:</span>\n                        <span className=\"io-stat__value\">{formatBytes(process.writeRate)}/s</span>\n                      </div>\n                      <div className=\"io-stat\">\n                        <span className=\"io-stat__label\">Total I/O:</span>\n                        <span className=\"io-stat__value\">{formatBytes(process.totalRate)}/s</span>\n                      </div>\n                      <div className=\"io-stat\">\n                        <span className=\"io-stat__label\">% of System I/O:</span>\n                        <span className=\"io-stat__value\">{process.percentage.toFixed(1)}%</span>\n                      </div>\n                    </div>\n                    \n                    {performance.bottlenecks.process?.pid === process.pid && (\n                      <div className=\"process-bottleneck-warning\">\n                        <Badge type=\"danger\">BOTTLENECK</Badge>\n                        <p>This process is identified as causing an I/O bottleneck.</p>\n                      </div>\n                    )}\n                  </div>\n                );\n              })()}\n            </div>\n          )}\n        </Card>\n      </div>\n    </div>\n  );\n};","import { SmartData } from '../tabs/types';\n\ninterface SmartAnalysisResult {\n  issues: string[];\n  criticalAttributes: {\n    name: string;\n    value: number;\n    threshold: number;\n    severity: 'warning' | 'critical';\n  }[];\n  healthScore: number; // 0-100 score\n}\n\n/**\n * Analyzes SMART data to identify potential disk issues\n */\nexport const analyzeSmartData = (smartData: SmartData): SmartAnalysisResult => {\n  const issues: string[] = [];\n  const criticalAttributes: SmartAnalysisResult['criticalAttributes'] = [];\n  \n  // Check overall SMART status\n  if (smartData.status === 'failed') {\n    issues.push('SMART overall status: FAILED. Disk replacement strongly recommended.');\n  } else if (smartData.status === 'warning') {\n    issues.push('SMART overall status: WARNING. Monitor disk closely for further degradation.');\n  }\n  \n  // Check life remaining\n  if (smartData.lifeRemaining < 10) {\n    issues.push(`Disk has only ${smartData.lifeRemaining}% life remaining. Replacement recommended soon.`);\n  } else if (smartData.lifeRemaining < 30) {\n    issues.push(`Disk has ${smartData.lifeRemaining}% life remaining. Consider planning for replacement.`);\n  }\n  \n  // Analyze specific SMART attributes\n  smartData.attributes.forEach(attr => {\n    if (attr.status === 'bad') {\n      issues.push(`${attr.name} (${attr.id}) is critical: value ${attr.value} below threshold ${attr.threshold}.`);\n      criticalAttributes.push({\n        name: attr.name,\n        value: attr.value,\n        threshold: attr.threshold,\n        severity: 'critical'\n      });\n    } else if (attr.status === 'warning') {\n      issues.push(`${attr.name} (${attr.id}) is concerning: value ${attr.value} approaching threshold ${attr.threshold}.`);\n      criticalAttributes.push({\n        name: attr.name,\n        value: attr.value,\n        threshold: attr.threshold,\n        severity: 'warning'\n      });\n    }\n  });\n  \n  // Check specific critical attributes by ID\n  const checkCriticalAttribute = (id: number, name: string) => {\n    const attr = smartData.attributes.find(a => a.id === id);\n    if (attr && attr.raw > 0) {\n      issues.push(`${name} detected: ${attr.raw} events recorded. This can indicate imminent disk failure.`);\n      criticalAttributes.push({\n        name,\n        value: attr.raw,\n        threshold: 0,\n        severity: 'critical'\n      });\n    }\n  };\n  \n  // Check common critical attributes\n  checkCriticalAttribute(5, 'Reallocated Sectors');\n  checkCriticalAttribute(187, 'Reported Uncorrectable Errors');\n  checkCriticalAttribute(197, 'Current Pending Sectors');\n  checkCriticalAttribute(198, 'Offline Uncorrectable Sectors');\n  \n  // Calculate a health score (0-100)\n  let healthScore = calculateHealthScore(smartData, criticalAttributes);\n  \n  return {\n    issues,\n    criticalAttributes,\n    healthScore\n  };\n};\n\n/**\n * Calculate a health score from SMART data\n */\nconst calculateHealthScore = (\n  smartData: SmartData, \n  criticalAttributes: SmartAnalysisResult['criticalAttributes']\n): number => {\n  // Start with base score from life remaining\n  let score = smartData.lifeRemaining;\n  \n  // Reduce score based on SMART status\n  if (smartData.status === 'failed') {\n    score = Math.min(score, 10); // Cap at 10 if failed\n  } else if (smartData.status === 'warning') {\n    score = Math.min(score, 50); // Cap at 50 if warning\n  }\n  \n  // Reduce score based on critical attributes\n  criticalAttributes.forEach(attr => {\n    if (attr.severity === 'critical') {\n      score -= 20; // Major reduction for critical attributes\n    } else if (attr.severity === 'warning') {\n      score -= 10; // Minor reduction for warning attributes\n    }\n  });\n  \n  // Ensure score stays in 0-100 range\n  return Math.max(0, Math.min(100, score));\n};\n\nexport default analyzeSmartData;\n","import { DirectoryInfo } from '../tabs/types';\n\ninterface CleanupRecommendation {\n  id: string;\n  path: string;\n  size: number;\n  description: string;\n  impact: 'high' | 'medium' | 'low';\n  action: string;\n}\n\n/**\n * Generates cleanup recommendations based on directory analysis\n */\nexport const generateCleanupRecommendations = (\n  directories: DirectoryInfo[]\n): CleanupRecommendation[] => {\n  const recommendations: CleanupRecommendation[] = [];\n  \n  // Find large cleanable directories\n  const largeDirs = directories\n    .filter(dir => dir.usage?.cleanable && dir.size > 100 * 1024 * 1024) // > 100MB\n    .sort((a, b) => b.size - a.size);\n  \n  // Find old temp/cache directories\n  const oldCacheDirs = directories\n    .filter(dir => \n      dir.usage?.cleanable && \n      ['cache', 'temp'].includes(dir.usage.type) && \n      isOlderThan(dir.usage.lastAccessed, 30) // Not accessed in 30+ days\n    )\n    .sort((a, b) => b.size - a.size);\n  \n  // Generate recommendations for large cleanable directories\n  largeDirs.slice(0, 5).forEach((dir, index) => {\n    recommendations.push({\n      id: `large-cleanable-${index}`,\n      path: dir.path,\n      size: dir.size,\n      description: `Large ${dir.usage?.type} directory (${formatBytes(dir.size)}) that can be safely cleaned.`,\n      impact: dir.size > 1024 * 1024 * 1024 ? 'high' : 'medium', // High impact if > 1GB\n      action: 'Clean Directory'\n    });\n  });\n  \n  // Generate recommendations for old cache/temp directories\n  oldCacheDirs.slice(0, 5).forEach((dir, index) => {\n    const daysSinceAccess = daysSince(dir.usage?.lastAccessed || 0);\n    recommendations.push({\n      id: `old-cache-${index}`,\n      path: dir.path,\n      size: dir.size,\n      description: `${formatBytes(dir.size)} ${dir.usage?.type} directory not accessed in ${daysSinceAccess} days.`,\n      impact: dir.size > 500 * 1024 * 1024 ? 'medium' : 'low', // Medium impact if > 500MB\n      action: 'Clean Directory'\n    });\n  });\n  \n  // Look for log directories that might need rotation\n  const largeLogDirs = directories\n    .filter(dir => \n      dir.path.includes('/log') || \n      dir.path.includes('/logs') || \n      (dir.usage?.type === 'system' && dir.path.toLowerCase().includes('log'))\n    )\n    .filter(dir => dir.size > 200 * 1024 * 1024) // > 200MB\n    .sort((a, b) => b.size - a.size);\n  \n  largeLogDirs.slice(0, 3).forEach((dir, index) => {\n    recommendations.push({\n      id: `large-logs-${index}`,\n      path: dir.path,\n      size: dir.size,\n      description: `Large log directory (${formatBytes(dir.size)}). Consider implementing log rotation.`,\n      impact: dir.size > 1024 * 1024 * 1024 ? 'high' : 'medium',\n      action: 'View Directory'\n    });\n  });\n  \n  // Check for duplicate/backup directories\n  const potentialBackups = directories\n    .filter(dir => \n      dir.path.includes('backup') || \n      dir.path.includes('old') || \n      dir.path.includes('.bak') ||\n      dir.path.endsWith('_old')\n    )\n    .filter(dir => dir.size > 100 * 1024 * 1024) // > 100MB\n    .sort((a, b) => b.size - a.size);\n  \n  potentialBackups.slice(0, 3).forEach((dir, index) => {\n    recommendations.push({\n      id: `backup-dir-${index}`,\n      path: dir.path,\n      size: dir.size,\n      description: `Potential backup/old directory (${formatBytes(dir.size)}). Consider archiving or removing.`,\n      impact: dir.size > 2 * 1024 * 1024 * 1024 ? 'high' : 'medium', // High impact if > 2GB\n      action: 'View Directory'\n    });\n  });\n  \n  return recommendations;\n};\n\n/**\n * Check if a timestamp is older than a specified number of days\n */\nconst isOlderThan = (timestamp: number, days: number): boolean => {\n  const ageInMs = Date.now() - timestamp;\n  const daysInMs = days * 24 * 60 * 60 * 1000;\n  return ageInMs > daysInMs;\n};\n\n/**\n * Calculate days since a timestamp\n */\nconst daysSince = (timestamp: number): number => {\n  const ageInMs = Date.now() - timestamp;\n  return Math.floor(ageInMs / (24 * 60 * 60 * 1000));\n};\n\n/**\n * Format bytes to human-readable string\n */\nconst formatBytes = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\nexport default generateCleanupRecommendations;\n","import { DiskPerformance, DiskHistoryPoint } from '../tabs/types';\n\ninterface BottleneckDetectionResult {\n  detected: boolean;\n  type: 'read' | 'write' | 'mixed' | null;\n  severity: 'low' | 'medium' | 'high' | null;\n  cause: string | null;\n  process?: {\n    pid: number;\n    name: string;\n    ioRate: number;\n  };\n  recommendations: string[];\n}\n\n/**\n * Analyzes I/O metrics to detect potential bottlenecks\n */\nexport const detectIOBottlenecks = (\n  performance: DiskPerformance,\n  history: DiskHistoryPoint[]\n): BottleneckDetectionResult => {\n  const result: BottleneckDetectionResult = {\n    detected: false,\n    type: null,\n    severity: null,\n    cause: null,\n    recommendations: []\n  };\n  \n  // Check for high utilization\n  const isHighUtilization = performance.current.utilization > 85;\n  const isModerateUtilization = performance.current.utilization > 70;\n  \n  // Check for long queue depth\n  const isHighQueueDepth = performance.current.queueDepth > 10;\n  const isModerateQueueDepth = performance.current.queueDepth > 4;\n  \n  // Check for high latency\n  const isHighReadLatency = performance.current.latency.read > 20; // ms\n  const isHighWriteLatency = performance.current.latency.write > 20; // ms\n  \n  // Check if any metric indicates a bottleneck\n  const hasBottleneck = isHighUtilization || isHighQueueDepth || isHighReadLatency || isHighWriteLatency;\n  \n  if (!hasBottleneck) {\n    return result; // No bottleneck detected\n  }\n  \n  // We've detected a bottleneck\n  result.detected = true;\n  \n  // Determine bottleneck type\n  if (isHighReadLatency && !isHighWriteLatency) {\n    result.type = 'read';\n  } else if (isHighWriteLatency && !isHighReadLatency) {\n    result.type = 'write';\n  } else if (isHighReadLatency && isHighWriteLatency) {\n    result.type = 'mixed';\n  } else if (isHighUtilization || isHighQueueDepth) {\n    // Determine type based on which operation dominates\n    const readIOPS = performance.current.readIOPS;\n    const writeIOPS = performance.current.writeIOPS;\n    \n    if (readIOPS > writeIOPS * 2) {\n      result.type = 'read';\n    } else if (writeIOPS > readIOPS * 2) {\n      result.type = 'write';\n    } else {\n      result.type = 'mixed';\n    }\n  }\n  \n  // Determine severity\n  if (isHighUtilization && isHighQueueDepth && (isHighReadLatency || isHighWriteLatency)) {\n    result.severity = 'high';\n  } else if (isHighUtilization || isHighQueueDepth) {\n    result.severity = 'medium';\n  } else if (isModerateUtilization || isModerateQueueDepth) {\n    result.severity = 'low';\n  }\n  \n  // Identify potential cause\n  identifyBottleneckCause(result, performance, history);\n  \n  // Generate recommendations\n  generateIORecommendations(result, performance);\n  \n  return result;\n};\n\n/**\n * Identifies the most likely cause of a bottleneck\n */\nconst identifyBottleneckCause = (\n  result: BottleneckDetectionResult,\n  performance: DiskPerformance,\n  history: DiskHistoryPoint[]\n): void => {\n  // Check for dominant process\n  const topProcess = performance.topProcesses[0];\n  const secondProcess = performance.topProcesses[1];\n  \n  if (topProcess && secondProcess && topProcess.totalRate > secondProcess.totalRate * 3) {\n    // One process is using 3x more I/O than the next highest\n    result.cause = `Process ${topProcess.name} is dominating I/O operations`;\n    result.process = {\n      pid: topProcess.pid,\n      name: topProcess.name,\n      ioRate: topProcess.totalRate\n    };\n    return;\n  }\n  \n  // Check for sudden spike in I/O\n  if (history.length >= 3) {\n    const currentUtil = history[history.length - 1].utilization;\n    const prevUtil = history[history.length - 3].utilization;\n    \n    if (currentUtil > prevUtil * 2 && currentUtil > 70) {\n      result.cause = 'Sudden spike in I/O activity';\n      return;\n    }\n  }\n  \n  // Check for sustained high I/O\n  if (history.length >= 5) {\n    const recentUtils = history.slice(-5).map(h => h.utilization);\n    const avgUtil = recentUtils.reduce((sum, val) => sum + val, 0) / recentUtils.length;\n    \n    if (avgUtil > 80) {\n      result.cause = 'Sustained high I/O activity';\n      return;\n    }\n  }\n  \n  // Check type-specific causes\n  if (result.type === 'read' && performance.current.readIOPS > 1000) {\n    result.cause = 'High number of small read operations';\n  } else if (result.type === 'write' && performance.current.writeIOPS > 1000) {\n    result.cause = 'High number of small write operations';\n  } else if (isHighRandomIO(history)) {\n    result.cause = 'High level of random I/O operations';\n  } else {\n    result.cause = 'General I/O congestion';\n  }\n};\n\n/**\n * Analyzes I/O patterns to detect if operations are primarily random\n */\nconst isHighRandomIO = (_history: DiskHistoryPoint[]): boolean => {\n  // This would normally analyze actual random vs. sequential I/O metrics\n  // For this implementation, we'll use a placeholder\n  return false;\n};\n\n/**\n * Generates recommendations to address the detected bottleneck\n */\nconst generateIORecommendations = (\n  result: BottleneckDetectionResult,\n  _performance: DiskPerformance\n): void => {\n  const recommendations: string[] = [];\n  \n  // Add general recommendation based on severity\n  if (result.severity === 'high') {\n    recommendations.push(\n      'Consider immediate action to reduce I/O pressure on the system.'\n    );\n  }\n  \n  // Add specific recommendations based on type and cause\n  if (result.process) {\n    recommendations.push(\n      `Investigate process ${result.process.name} (PID: ${result.process.pid}) which is responsible for high I/O usage.`\n    );\n    \n    // Check if it's a known process type\n    const processName = result.process.name.toLowerCase();\n    if (processName.includes('backup') || processName.includes('sync')) {\n      recommendations.push(\n        'Consider scheduling backup/sync operations during off-peak hours.'\n      );\n    } else if (processName.includes('db') || processName.includes('sql')) {\n      recommendations.push(\n        'Review database queries and indexing to reduce I/O operations.'\n      );\n    }\n  }\n  \n  // Recommendations based on bottleneck type\n  if (result.type === 'read') {\n    recommendations.push(\n      'Consider adding more memory for caching frequently read data.'\n    );\n    recommendations.push(\n      'Evaluate application read patterns for optimization opportunities.'\n    );\n  } else if (result.type === 'write') {\n    recommendations.push(\n      'Consider enabling write caching if it\\'s safe for your workload.'\n    );\n    recommendations.push(\n      'Batch small write operations into larger transactions where possible.'\n    );\n  }\n  \n  // Hardware recommendations for sustained bottlenecks\n  if (result.cause === 'Sustained high I/O activity') {\n    recommendations.push(\n      'Consider upgrading to SSD storage if you\\'re currently using spinning disks.'\n    );\n    recommendations.push(\n      'For critical applications, consider adding dedicated disk resources.'\n    );\n  }\n  \n  // Set the recommendations on the result\n  result.recommendations = recommendations;\n};\n\nexport default detectIOBottlenecks;\n","import { RawDiskMetrics, ProcessedDiskData } from '../tabs/types';\nimport { analyzeSmartData } from './smartDataAnalyzer';\nimport { generateCleanupRecommendations } from './diskCleanupEngine';\nimport { detectIOBottlenecks } from './iobottleneckDetector';\n\n/**\n * Processes raw disk metrics into structured data for components\n */\nexport const processDiskData = (\n  rawData: RawDiskMetrics\n): ProcessedDiskData => {\n  // Process partition data\n  const partitions = processPartitionsData(rawData);\n  \n  // Process physical disk data\n  const physicalDisks = processPhysicalDisksData(rawData);\n  \n  // Process directory data\n  const directories = processDirectoryData(rawData);\n  \n  // Process performance data\n  const performance = processPerformanceData(rawData);\n  \n  return {\n    partitions,\n    physicalDisks,\n    directories,\n    performance\n  };\n};\n\n/**\n * Process partition-related data\n */\nconst processPartitionsData = (rawData: RawDiskMetrics): ProcessedDiskData['partitions'] => {\n  const partitionItems = rawData.partitions.map((partition: any) => ({\n    blockSize: partition.blockSize ?? 0,\n    mountPoint: partition.mountPoint,\n    device: partition.device,\n    fsType: partition.fsType,\n    total: partition.total,\n    used: partition.used,\n    available: partition.available,\n    percentUsed: partition.percentUsed,\n    health: {\n      status: partition.health.status,\n      issues: partition.health.issues\n    },\n    inodeUsage: partition.inodes.percentUsed,\n    readOnly: partition.readOnly,\n    physicalDiskId: partition.physicalDiskId\n  }));\n  \n  // Calculate total and used disk space across all partitions\n  const totalDiskSpace = partitionItems.reduce((total: any, partition: { total: any; }) => total + partition.total, 0);\n  const usedDiskSpace = partitionItems.reduce((total: any, partition: { used: any; }) => total + partition.used, 0);\n  \n  // Determine overall health\n  const healthStatuses = partitionItems.map((p: { health: { status: any; }; }) => p.health.status);\n  const overallHealth = healthStatuses.includes('error') \n    ? 'error' \n    : healthStatuses.includes('warning')\n      ? 'warning'\n      : 'healthy';\n  \n  return {\n    items: partitionItems,\n    totalDiskSpace,\n    usedDiskSpace,\n    overallHealth\n  };\n};\n\n/**\n * Process physical disk data including SMART analysis\n */\nconst processPhysicalDisksData = (rawData: RawDiskMetrics): ProcessedDiskData['physicalDisks'] => {\n  // Process physical disk items with SMART analysis\n  const diskItems = rawData.physicalDisks.map((disk: any) => {\n    // Analyze SMART data for health assessment\n    const smartAnalysis = analyzeSmartData(disk.smart);\n    \n    return {\n      id: disk.id,\n      model: disk.model,\n      type: disk.type,\n      size: disk.size,\n      temperature: disk.temperature,\n      health: {\n        status: disk.smart.status,\n        lifeRemaining: disk.smart.lifeRemaining,\n        issues: smartAnalysis.issues\n      },\n      partitions: disk.partitions\n    };\n  });\n  \n  // Extract critical issues across all disks\n  const criticalIssues = diskItems.flatMap((disk: { health: { issues: any[]; }; id: any; }) => \n    disk.health.issues.map((issue: any) => ({\n      diskId: disk.id,\n      issue\n    }))\n  );\n  \n  // Determine overall health\n  const healthStatuses = diskItems.map((d: { health: { status: any; }; }) => d.health.status);\n  const overallHealth = healthStatuses.includes('failed') \n    ? 'critical' \n    : healthStatuses.includes('warning')\n      ? 'warning'\n      : 'good';\n  \n  return {\n    items: diskItems,\n    overallHealth,\n    criticalIssues\n  };\n};\n\n/**\n * Process directory data and generate cleanup recommendations\n */\nconst processDirectoryData = (rawData: RawDiskMetrics): ProcessedDiskData['directories'] => {\n  // Sort directories by size to get largest ones\n  const sortedDirs = [...rawData.directories]\n    .sort((a, b) => b.size - a.size);\n  \n  // Extract largest directories\n  const largestDirs = sortedDirs.slice(0, 10).map(dir => ({\n    path: dir.path,\n    size: dir.size,\n    fileCount: dir.fileCount,\n    lastModified: dir.lastModified,\n    type: dir.usage?.type || 'other',\n    cleanable: dir.usage?.cleanable || false\n  }));\n  \n  // Create treemap data structure\n  const treemapData = createDirectoryTreemap(rawData.directories);\n  \n  // Generate cleanup recommendations\n  const cleanupRecommendations = generateCleanupRecommendations(rawData.directories);\n  \n  // Calculate total analyzed size\n  const totalAnalyzedSize = rawData.directories.reduce((total: any, dir: { size: any; }) => total + dir.size, 0);\n  \n  return {\n    largest: largestDirs,\n    treemapData,\n    cleanupRecommendations,\n    totalAnalyzedSize\n  } as any;\n};\n\n/**\n * Create hierarchical treemap data structure from directory information\n */\nconst createDirectoryTreemap = (directories: RawDiskMetrics['directories']) => {\n  // Find root directory\n  const rootDirectory = directories.find((dir: { path: string; }) => \n    !directories.some((parent: { path: string; }) => dir.path.startsWith(parent.path + '/') && parent.path !== dir.path)\n  );\n  \n  if (!rootDirectory) {\n    return { name: 'No data', path: '', value: 0 };\n  }\n  \n  // Recursively build treemap structure\n  return buildTreemapNode(rootDirectory, directories);\n};\n\n/**\n * Build a single node for the treemap\n */\nconst buildTreemapNode = (\n  directory: RawDiskMetrics['directories'][0],\n  allDirectories: RawDiskMetrics['directories']\n) => {\n  // Find direct children\n  const children = allDirectories.filter((dir: { path: string; }) => \n    dir.path.startsWith(directory.path + '/') &&\n    dir.path.split('/').length === directory.path.split('/').length + 1\n  );\n  \n  // Create node\n  const node: any = {\n    name: directory.path.split('/').pop() || directory.path,\n    path: directory.path,\n    value: directory.size\n  };\n  \n  // Add children if they exist\n  if (children.length > 0) {\n    node.children = children.map((child: any) => buildTreemapNode(child, allDirectories));\n  }\n  \n  return node;\n};\n\n/**\n * Process I/O performance data\n */\nconst processPerformanceData = (rawData: RawDiskMetrics): ProcessedDiskData['performance'] => {\n  // Get current performance metrics\n  const current = {\n    readSpeed: rawData.performance.current.readSpeed,\n    writeSpeed: rawData.performance.current.writeSpeed,\n    readIOPS: rawData.performance.current.readIOPS,\n    writeIOPS: rawData.performance.current.writeIOPS,\n    utilization: rawData.performance.current.utilization,\n    latency: {\n      read: rawData.performance.current.latency.read,\n      write: rawData.performance.current.latency.write\n    }\n  };\n  \n  // Process historical data\n  const historical = processHistoricalData(rawData.history);\n  \n  // Process top I/O processes\n  const topProcesses = rawData.performance.topProcesses.map((process: { pid: any; name: any; readRate: any; writeRate: any; totalRate: number; }) => ({\n    pid: process.pid,\n    name: process.name,\n    readRate: process.readRate,\n    writeRate: process.writeRate,\n    totalRate: process.totalRate,\n    percentage: (process.totalRate / \n      rawData.performance.topProcesses.reduce((sum: any, p: { totalRate: any; }) => sum + p.totalRate, 0)) * 100\n  }));\n  \n  // Detect I/O bottlenecks\n  const bottlenecks = detectIOBottlenecks(rawData.performance, rawData.history);\n  \n  return {\n    current,\n    historical,\n    topProcesses,\n    bottlenecks\n  };\n};\n\n/**\n * Process historical I/O data into a format suitable for charts\n */\nconst processHistoricalData = (history: RawDiskMetrics['history']) => {\n  // Extract timestamp and metric arrays for charting\n  const timestamps = history.map((point: { timestamp: any; }) => point.timestamp);\n  const readSpeed = history.map((point: { readSpeed: any; }) => point.readSpeed);\n  const writeSpeed = history.map((point: { writeSpeed: any; }) => point.writeSpeed);\n  const readIOPS = history.map((point: { readIOPS: any; }) => point.readIOPS);\n  const writeIOPS = history.map((point: { writeIOPS: any; }) => point.writeIOPS);\n  const utilization = history.map((point: { utilization: any; }) => point.utilization);\n  \n  return {\n    timestamps,\n    readSpeed,\n    writeSpeed,\n    readIOPS,\n    writeIOPS,\n    utilization\n  };\n};\n\nexport default processDiskData;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@/store/store';\nimport Tabs, { Tab } from '@/design-system/components/Tabs';\nimport ErrorDisplay from '@/components/common/ErrorDisplay';\nimport LoadingIndicator from '@/components/common/LoadingIndicator';\nimport DiskPartitionsTab from './tabs/DiskPartitionsTab';\nimport { DiskDirectoryTab } from './tabs/DiskDirectoryTab';\nimport { DiskPerformanceTab } from './tabs/DiskPerformanceTab';\nimport { processDiskData } from './utils/diskDataProcessor';\nimport { DiskMetricProps, RawDiskMetrics } from './tabs/types';\n\nexport const DiskMetric: React.FC<DiskMetricProps> = ({ \n  compact = false,\n  defaultTab = 'partitions' \n}) => {\n  type TabType = 'partitions' | 'directory' | 'performance';\n  const [activeTab, setActiveTab] = useState<TabType>(defaultTab as TabType);\n  \n  const handleTabChange = (tabId: string) => {\n    setActiveTab(tabId as TabType);\n  };\n  // Get disk metrics from the current system metrics\n  const diskMetrics = useSelector((state: RootState) => state.metrics.current?.disk_usage);\n  const loading = useSelector((state: RootState) => state.metrics.loading);\n  const error = useSelector((state: RootState) => state.metrics.error);\n  \n  // Handle loading state\n  if (loading) {\n    return <LoadingIndicator message=\"Fetching disk metrics...\" />;\n  }\n  \n  // Handle error state\n  if (error || !diskMetrics) {\n    return <ErrorDisplay \n      message=\"Unable to load disk metrics\" \n      details={typeof error === 'string' ? error : 'Unknown error occurred'} \n      retry={() => {\n        // Dispatch refresh action here if needed\n        // dispatch(fetchMetrics());\n      }} \n    />;\n  }\n\n  // Convert number to RawDiskMetrics structure if needed\n  const rawDiskMetrics: RawDiskMetrics = typeof diskMetrics === 'number' ? {\n    partitions: [],\n    physicalDisks: [],\n    directories: [],\n    performance: {\n      current: {\n        readSpeed: 0,\n        writeSpeed: 0,\n        readIOPS: 0,\n        writeIOPS: 0,\n        utilization: 0,\n        queueDepth: 0,\n        latency: {\n          read: 0,\n          write: 0\n        }\n      },\n      bottlenecks: {\n        detected: false,\n        type: null,\n        severity: null,\n        cause: null,\n        recommendations: []\n      },\n      topProcesses: []\n    },\n    history: []\n  } : diskMetrics;\n\n  // Process disk data once for all tabs\n  const processedData = processDiskData(rawDiskMetrics);\n  \n  // Render compact version for dashboard if requested\n  if (compact) {\n    return (\n      <div className=\"disk-metric disk-metric--compact\">\n        <DiskPartitionsTab data={processedData} compact={true} />\n      </div>\n    );\n  }\n  \n  // Render full tabbed version\n  return (\n    <div className={`disk-metric ${compact ? 'compact' : ''}`}>\n      <Tabs activeTab={activeTab} onChange={handleTabChange}>\n        <Tab id=\"partitions\" label=\"Partitions\">\n          <DiskPartitionsTab data={processedData} compact={compact} />\n        </Tab>\n        <Tab id=\"directory\" label=\"Directory Usage\">\n          <DiskDirectoryTab data={processedData} />\n        </Tab>\n        <Tab id=\"performance\" label=\"Performance\">\n          <DiskPerformanceTab data={processedData} />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};","// frontend/src/components/metrics/SystemMetrics.tsx\nimport React, { useState } from 'react';\nimport NetworkMetric from './NetworkMetrics/NetworkMetric';\nimport CPUMetric from './CPU/CPUMetric';\nimport { MemoryMetric } from './memory/MemoryMetric';\nimport { DiskMetric } from './disk/DiskMetric';\nimport { useAppSelector } from '../../store/hooks';\nimport './SystemMetrics.css'; \n\nconst SystemMetrics: React.FC = () => {\n  // State for active tab\n  const [activeTab, setActiveTab] = useState('cpu');\n  \n  // Get current connection status for minimal indicator\n  const { connectionStatus } = useAppSelector(state => state.metrics);\n  \n  return (\n    <div className=\"system-metrics\">\n      {/* Add a small, styled connection indicator */}\n      <div className=\"metrics-connection-status\">\n        <span \n          className={`connection-dot ${connectionStatus === 'connected' ? 'connected' : \n                                      connectionStatus === 'connecting' ? 'connecting' : \n                                      'disconnected'}`}\n        ></span>\n        <span className=\"connection-text\">{connectionStatus}</span>\n      </div>\n      \n      {/* Hide any other connection status components */}\n      <style>{`\n        .connection-status:not(.metrics-connection-status) {\n          display: none !important;\n        }\n        \n        .metrics-connection-status {\n          position: absolute;\n          top: 10px;\n          right: 10px;\n          display: flex;\n          align-items: center;\n          gap: 5px;\n          background: rgba(0, 0, 0, 0.1);\n          padding: 4px 10px;\n          border-radius: 20px;\n          font-size: 0.7rem;\n          z-index: 10;\n        }\n        \n        .connection-dot {\n          width: 8px;\n          height: 8px;\n          border-radius: 50%;\n        }\n        \n        .connection-dot.connected {\n          background: #38b000;\n          box-shadow: 0 0 5px #38b000;\n        }\n        \n        .connection-dot.connecting {\n          background: #ffbe0b;\n          box-shadow: 0 0 5px #ffbe0b;\n          animation: pulse 1s infinite;\n        }\n        \n        .connection-dot.disconnected {\n          background: #ff3838;\n          box-shadow: 0 0 5px #ff3838;\n        }\n        \n        .connection-text {\n          text-transform: capitalize;\n          color: #333333;\n        }\n        \n        @keyframes pulse {\n          0% { opacity: 0.6; }\n          50% { opacity: 1; }\n          100% { opacity: 0.6; }\n        }\n        \n        /* Tab Styling */\n        .system-metrics-tabs {\n          display: flex;\n          border-bottom: 2px solid var(--border-color, #dee2e6);\n          margin-bottom: 1.5rem;\n          padding: 0 1rem;\n        }\n        \n        .system-metrics-tab {\n          padding: 0.75rem 1.5rem;\n          cursor: pointer;\n          font-weight: 600;\n          color: var(--text-secondary, #555);\n          border-bottom: 3px solid transparent;\n          margin-bottom: -2px;\n          transition: all 0.2s ease;\n          display: flex;\n          align-items: center;\n          gap: 8px;\n        }\n        \n        .system-metrics-tab:hover {\n          color: var(--primary, #3a86ff);\n        }\n        \n        .system-metrics-tab.active {\n          color: var(--primary, #3a86ff);\n          border-bottom: 3px solid var(--primary, #3a86ff);\n        }\n        \n        .tab-content-area {\n          padding: 1rem;\n          min-height: 400px;\n        }\n        \n        .tab-icon {\n          font-size: 1.2rem;\n        }\n      `}</style>\n      \n      {/* System Metrics Tabs */}\n      <div className=\"system-metrics-tabs\">\n        <div \n          className={`system-metrics-tab ${activeTab === 'cpu' ? 'active' : ''}`}\n          onClick={() => setActiveTab('cpu')}\n        >\n          <span className=\"tab-icon\">💻</span> CPU\n        </div>\n        <div \n          className={`system-metrics-tab ${activeTab === 'memory' ? 'active' : ''}`}\n          onClick={() => setActiveTab('memory')}\n        >\n          <span className=\"tab-icon\">🧠</span> Memory\n        </div>\n        <div \n          className={`system-metrics-tab ${activeTab === 'disk' ? 'active' : ''}`}\n          onClick={() => setActiveTab('disk')}\n        >\n          <span className=\"tab-icon\">💽</span> Disk\n        </div>\n        <div \n          className={`system-metrics-tab ${activeTab === 'network' ? 'active' : ''}`}\n          onClick={() => setActiveTab('network')}\n        >\n          <span className=\"tab-icon\">🌐</span> Network\n        </div>\n      </div>\n      \n      {/* Tab Content */}\n      <div className=\"tab-content-area\">\n        {activeTab === 'cpu' && <CPUMetric compact={false} />}\n        {activeTab === 'memory' && <MemoryMetric compact={false} />}\n        {activeTab === 'disk' && <DiskMetric compact={false} />}\n        {activeTab === 'network' && <NetworkMetric compact={false} showTabs={false} />}\n      </div>\n    </div>\n  );\n};\n\nexport default SystemMetrics;","import React from 'react';\n\ninterface ParameterDescriptionProps {\n  parameter: string;\n}\n\n/**\n * Component that provides detailed descriptions of auto-tuner parameters\n */\nexport const ParameterDescription: React.FC<ParameterDescriptionProps> = ({ parameter }) => {\n  const descriptions: Record<string, { description: string, impactMeaning: string }> = {\n    'process_priority': {\n      description: 'Controls the CPU scheduling priority of processes. Lower values (negative numbers) give higher priority to processes, allowing them to get more CPU time. Higher values give lower priority.',\n      impactMeaning: 'Impact score indicates how much this change will affect overall system responsiveness. Higher impact means more noticeable performance changes.'\n    },\n    'cpu_governor': {\n      description: 'Controls how the CPU frequency scaling is managed. Options like \"performance\" maximize speed, while \"powersave\" prioritizes energy efficiency. \"ondemand\" and \"conservative\" balance between the two.',\n      impactMeaning: 'Impact score indicates the expected effect on performance vs. battery life. Higher impact means more significant changes to system behavior.'\n    },\n    'io_scheduler': {\n      description: 'Determines how disk I/O requests are handled. Different schedulers optimize for different workloads - \"deadline\" for low latency, \"cfq\" for fairness between processes, and \"noop\" for SSDs.',\n      impactMeaning: 'Impact score indicates how much this change will affect disk performance. Higher impact means more noticeable changes to file operations.'\n    },\n    'memory_pressure': {\n      description: 'Controls how aggressively the system reclaims memory. Settings like \"normal\", \"moderate\", and \"critical\" determine when the system starts freeing up memory from caches and buffers.',\n      impactMeaning: 'Impact score indicates how much this change will affect memory-intensive applications. Higher impact means more noticeable changes to application performance.'\n    },\n    'swap_tendency': {\n      description: 'Determines how likely the system is to use swap space. Lower values make the system less likely to swap, keeping more in RAM. Higher values increase swap usage, potentially saving RAM but reducing performance.',\n      impactMeaning: 'Impact score indicates how much this change will affect system responsiveness. Higher impact means more noticeable changes to performance when memory is constrained.'\n    },\n    'cache_pressure': {\n      description: 'Controls how aggressively the system reclaims memory from the page cache. Higher values make the system more aggressive in reclaiming memory, potentially reducing file system performance.',\n      impactMeaning: 'Impact score indicates how much this change will affect file system performance. Higher impact means more noticeable changes to file operations.'\n    },\n    'disk_read_ahead': {\n      description: 'Controls how much data is read ahead when accessing files. Higher values can improve sequential read performance but may waste memory for random access patterns.',\n      impactMeaning: 'Impact score indicates how much this change will affect file read performance. Higher impact means more noticeable changes to file operations.'\n    },\n    'network_buffer': {\n      description: 'Controls the size of network buffers. Larger buffers can improve throughput for large transfers but may increase latency for small transfers.',\n      impactMeaning: 'Impact score indicates how much this change will affect network performance. Higher impact means more noticeable changes to network operations.'\n    }\n  };\n\n  // Default description for unknown parameters\n  const defaultDescription = {\n    description: 'A system tuning parameter that affects system performance.',\n    impactMeaning: 'Impact score indicates how much this change will affect system performance. Higher impact means more noticeable changes.'\n  };\n\n  const { description, impactMeaning } = descriptions[parameter] || defaultDescription;\n\n  return (\n    <div className=\"parameter-description\">\n      <h4>What is {parameter}?</h4>\n      <p>{description}</p>\n      <h4>About Impact Score and Confidence</h4>\n      <p>{impactMeaning}</p>\n      <p>The <strong>confidence score</strong> (e.g., 75%) indicates how certain the system is that this recommendation will be beneficial. Higher confidence means the system has stronger evidence that this change will help.</p>\n    </div>\n  );\n};\n\n/**\n * Component that explains what the auto-tuner values mean\n */\nexport const AutoTunerHelp: React.FC = () => {\n  return (\n    <div className=\"auto-tuner-help\">\n      <h3>Understanding Auto-Tuner Values</h3>\n      \n      <h4>Current vs. Recommended Values</h4>\n      <p>The <strong>Current</strong> value shows the existing setting on your system. The <strong>Recommended</strong> value is what System Rebellion suggests for optimal performance based on your usage patterns and system metrics.</p>\n      \n      <h4>Impact Score</h4>\n      <p>Impact scores range from 0.0 to 1.0 and indicate how significant the effect of a change will be:</p>\n      <ul>\n        <li><strong>0.1-0.3:</strong> Minor impact - subtle improvements</li>\n        <li><strong>0.4-0.6:</strong> Moderate impact - noticeable improvements</li>\n        <li><strong>0.7-1.0:</strong> Major impact - significant improvements</li>\n      </ul>\n      \n      <h4>Confidence Score</h4>\n      <p>Confidence scores (shown as percentages) indicate how certain the system is about its recommendation:</p>\n      <ul>\n        <li><strong>30-50%:</strong> Low confidence - experimental recommendation</li>\n        <li><strong>51-75%:</strong> Moderate confidence - likely beneficial</li>\n        <li><strong>76-100%:</strong> High confidence - strongly recommended</li>\n      </ul>\n      \n      <h4>Real-time Data</h4>\n      <p>All recommendations are based on real-time analysis of your system's current state and historical usage patterns. The system continuously monitors your performance metrics to provide the most relevant suggestions.</p>\n    </div>\n  );\n};\n","import { apiClient } from '../utils/api';\n\nexport interface SystemLog {\n  message: string;\n  level: 'info' | 'warning' | 'error' | 'success' | 'command';\n  source: string;\n  timestamp: string;\n}\n\nexport interface SystemLogsResponse {\n  logs: SystemLog[];\n  total: number;\n  has_more: boolean;\n}\n\nconst systemLogsService = {\n  /**\n   * Get system logs with optional filtering\n   */\n  getLogs: async (limit = 100, source?: string, level?: string): Promise<SystemLogsResponse> => {\n    let url = `/system-logs?limit=${limit}`;\n    if (source) url += `&source=${source}`;\n    if (level) url += `&level=${level}`;\n    \n    const response = await apiClient.get<SystemLogsResponse>(url);\n    return response.data;\n  },\n  \n  /**\n   * Clear all system logs\n   */\n  clearLogs: async (): Promise<{ message: string }> => {\n    const response = await apiClient.delete<{ message: string }>('/system-logs');\n    return response.data;\n  }\n};\n\nexport default systemLogsService;\n","import React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Typography, \n  Paper, \n  List, \n  ListItem, \n  ListItemText, \n  Chip, \n  Button, \n  FormControl, \n  InputLabel, \n  Select, \n  MenuItem,\n  IconButton,\n  Tooltip,\n  CircularProgress,\n  Divider\n} from '@mui/material';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport InfoIcon from '@mui/icons-material/Info';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport TerminalIcon from '@mui/icons-material/Terminal';\nimport { format } from 'date-fns';\nimport systemLogsService, { SystemLog } from '../../../services/systemLogsService';\n\n// Define log level colors and icons\nconst logLevelConfig = {\n  info: { color: 'info', icon: <InfoIcon /> },\n  warning: { color: 'warning', icon: <WarningIcon /> },\n  error: { color: 'error', icon: <ErrorIcon /> },\n  success: { color: 'success', icon: <CheckCircleIcon /> },\n  command: { color: 'default', icon: <TerminalIcon /> },\n};\n\n// Define source display names\nconst sourceDisplayNames: Record<string, string> = {\n  'auth': 'Authentication',\n  'tuner': 'System Tuner',\n  'system': 'System',\n  'command': 'Command',\n  'WebAutoTuner': 'Auto Tuner',\n  'SystemMetricsService': 'Metrics Service',\n  'SystemLogService': 'Log Service',\n  'ResourceMonitor': 'Resource Monitor',\n};\n\ninterface SystemLogsViewerProps {\n  defaultSource?: string;\n  defaultLevel?: string;\n  maxHeight?: string | number;\n  title?: string;\n  autoRefresh?: boolean;\n  refreshInterval?: number;\n}\n\nconst SystemLogsViewer: React.FC<SystemLogsViewerProps> = ({\n  defaultSource,\n  defaultLevel,\n  maxHeight = 400,\n  title = 'System Logs',\n  autoRefresh = true,\n  refreshInterval = 10000, // 10 seconds\n}) => {\n  const [logs, setLogs] = useState<SystemLog[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [source, setSource] = useState<string | undefined>(defaultSource);\n  const [level, setLevel] = useState<string | undefined>(defaultLevel);\n  const [hasMore, setHasMore] = useState(false);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(100);\n\n  const fetchLogs = async () => {\n    try {\n      setLoading(true);\n      const response = await systemLogsService.getLogs(limit, source, level);\n      setLogs(response.logs);\n      setTotal(response.total);\n      setHasMore(response.has_more);\n    } catch (error) {\n      console.error('Error fetching system logs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleClearLogs = async () => {\n    try {\n      await systemLogsService.clearLogs();\n      fetchLogs();\n    } catch (error) {\n      console.error('Error clearing logs:', error);\n    }\n  };\n\n  // Set up auto-refresh\n  useEffect(() => {\n    fetchLogs();\n\n    if (autoRefresh) {\n      const interval = setInterval(fetchLogs, refreshInterval);\n      return () => clearInterval(interval);\n    }\n  }, [source, level, limit, autoRefresh, refreshInterval]);\n\n  // Format timestamp\n  const formatTimestamp = (timestamp: string) => {\n    try {\n      return format(new Date(timestamp), 'MMM d, yyyy HH:mm:ss');\n    } catch (error) {\n      return timestamp;\n    }\n  };\n\n  // Get source display name\n  const getSourceDisplayName = (source: string) => {\n    return sourceDisplayNames[source] || source;\n  };\n\n  return (\n    <Paper elevation={3} sx={{ p: 2, height: '100%', display: 'flex', flexDirection: 'column' }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h6\" component=\"h2\">\n          {title} {total > 0 && `(${total})`}\n        </Typography>\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          <Tooltip title=\"Refresh logs\">\n            <IconButton onClick={fetchLogs} size=\"small\">\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Clear all logs\">\n            <IconButton onClick={handleClearLogs} size=\"small\" color=\"error\">\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Box>\n\n      <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n        <FormControl size=\"small\" sx={{ minWidth: 120 }}>\n          <InputLabel>Source</InputLabel>\n          <Select\n            value={source || ''}\n            label=\"Source\"\n            onChange={(e) => setSource(e.target.value === '' ? undefined : e.target.value)}\n          >\n            <MenuItem value=\"\">All Sources</MenuItem>\n            {Object.entries(sourceDisplayNames).map(([key, name]) => (\n              <MenuItem key={key} value={key}>{name}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl size=\"small\" sx={{ minWidth: 120 }}>\n          <InputLabel>Level</InputLabel>\n          <Select\n            value={level || ''}\n            label=\"Level\"\n            onChange={(e) => setLevel(e.target.value === '' ? undefined : e.target.value)}\n          >\n            <MenuItem value=\"\">All Levels</MenuItem>\n            <MenuItem value=\"info\">Info</MenuItem>\n            <MenuItem value=\"warning\">Warning</MenuItem>\n            <MenuItem value=\"error\">Error</MenuItem>\n            <MenuItem value=\"success\">Success</MenuItem>\n            <MenuItem value=\"command\">Command</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n\n      <Divider sx={{ mb: 2 }} />\n\n      <Box sx={{ flexGrow: 1, overflow: 'auto', maxHeight }}>\n        {loading && logs.length === 0 ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\n            <CircularProgress size={24} sx={{ mr: 1 }} />\n            <Typography variant=\"body2\">Loading logs...</Typography>\n          </Box>\n        ) : logs.length === 0 ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">No logs found</Typography>\n          </Box>\n        ) : (\n          <List dense disablePadding>\n            {logs.map((log, index) => {\n              const levelConfig = logLevelConfig[log.level as keyof typeof logLevelConfig] || logLevelConfig.info;\n              \n              return (\n                <ListItem\n                  key={index}\n                  divider={index < logs.length - 1}\n                  sx={{\n                    borderLeft: `4px solid ${levelConfig.color}.main`,\n                    mb: 1,\n                    backgroundColor: `${levelConfig.color}.lightest`,\n                    '&:hover': {\n                      backgroundColor: `${levelConfig.color}.lighter`,\n                    },\n                  }}\n                >\n                  <ListItemText\n                    primary={\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                        {React.cloneElement(levelConfig.icon as React.ReactElement, { \n                          \n                          \n                        })}\n                        <Typography variant=\"body2\" component=\"span\" sx={{ fontWeight: 'medium' }}>\n                          {log.message}\n                        </Typography>\n                      </Box>\n                    }\n                    secondary={\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 0.5 }}>\n                        <Chip\n                          label={getSourceDisplayName(log.source)}\n                          size=\"small\"\n                          variant=\"outlined\"\n                          sx={{ height: 20, fontSize: '0.7rem' }}\n                        />\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {formatTimestamp(log.timestamp)}\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                </ListItem>\n              );\n            })}\n          </List>\n        )}\n      </Box>\n\n      {hasMore && (\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={() => setLimit(prev => prev + 100)}\n          >\n            Load More\n          </Button>\n        </Box>\n      )}\n    </Paper>\n  );\n};\n\nexport default SystemLogsViewer;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../store/store';\nimport {\n  fetchCurrentMetrics,\n  fetchRecommendations,\n  fetchPatterns,\n  fetchTuningHistory,\n  applyRecommendation,\n  applyOptimizationProfile,\n  setActiveProfile\n} from '../../../store/slices/autoTunerSlice';\nimport { AppDispatch } from '../../../store/store';\nimport { OptimizationProfile } from '../../../types/metrics';\nimport { ParameterDescription, AutoTunerHelp } from './parameter_descriptions';\nimport SystemLogsViewer from '../../dashboard/SystemLogs/SystemLogsViewer';\nimport './auto_tuner.css';\n\n// Helper function to format bytes with appropriate units\nconst formatBytes = (bytes: number, decimals = 2) => {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  \n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n};\n\n// Current Metrics Component\nconst CurrentMetricsPanel: React.FC = () => {\n  const metrics = useSelector((state: RootState) => state.autoTuner.currentMetrics);\n  const status = useSelector((state: RootState) => state.autoTuner.status);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const prevMetricsRef = useRef(metrics);\n  \n  // State for network metrics\n  const [bytesSent, setBytesSent] = useState<number>(0);\n  const [bytesReceived, setBytesReceived] = useState<number>(0);\n  const [sentRate, setSentRate] = useState<number>(0);\n  const [receivedRate, setReceivedRate] = useState<number>(0);\n  const [lastUpdateTime, setLastUpdateTime] = useState<number>(Date.now());\n\n  // Detect when metrics change to trigger smooth update animation\n  useEffect(() => {\n    if (metrics && prevMetricsRef.current && JSON.stringify(metrics) !== JSON.stringify(prevMetricsRef.current)) {\n      setIsUpdating(true);\n      const timer = setTimeout(() => setIsUpdating(false), 1000);\n      return () => clearTimeout(timer);\n    }\n    prevMetricsRef.current = metrics;\n    \n    // Update network metrics when we get new data\n    if (metrics?.additional?.network_details) {\n      const details = metrics.additional.network_details;\n      \n      // Get the total rate from rate_mbps (this is always available)\n      const totalRateMbps = details.rate_mbps || 0;\n      const totalRateBytes = totalRateMbps * 1024 * 1024; // Convert MB/s to bytes/s\n      \n      // Use the rates directly from the backend if available\n      if (details.sent_rate_bps !== undefined && details.recv_rate_bps !== undefined) {\n        // Use the values directly from the backend\n        setSentRate(details.sent_rate_bps);\n        setReceivedRate(details.recv_rate_bps);\n      } else if (totalRateBytes > 0) {\n        // If we have a total rate but no individual rates, split it 40/60 (typical upload/download ratio)\n        setSentRate(totalRateBytes * 0.4); // 40% for upload\n        setReceivedRate(totalRateBytes * 0.6); // 60% for download\n      } else {\n        // Fallback to calculating rates ourselves if the backend doesn't provide them\n        const currentTime = Date.now();\n        const timeDiff = (currentTime - lastUpdateTime) / 1000; // convert to seconds\n        \n        // Calculate rates if we have previous values\n        if (bytesSent > 0 && bytesReceived > 0 && timeDiff > 0) {\n          const sentDiff = details.bytes_sent - bytesSent;\n          const receivedDiff = details.bytes_recv - bytesReceived;\n          \n          // Only update rates if we have positive differences\n          if (sentDiff >= 0) {\n            setSentRate(sentDiff / timeDiff);\n          }\n          \n          if (receivedDiff >= 0) {\n            setReceivedRate(receivedDiff / timeDiff);\n          }\n        }\n      }\n      \n      // If we still have zero rates but have byte counts, set minimal values to show activity\n      if (sentRate === 0 && receivedRate === 0 && (details.bytes_sent > 0 || details.bytes_recv > 0)) {\n        setSentRate(1024);    // Show minimal 1KB/s upload\n        setReceivedRate(1024); // Show minimal 1KB/s download\n      }\n      \n      // Update stored values\n      setBytesSent(details.bytes_sent);\n      setBytesReceived(details.bytes_recv);\n      setLastUpdateTime(Date.now());\n      \n      // Log what we're using for debugging\n      console.log(`Auto-tuner network metrics - Sent: ${formatBytes(sentRate)}/s, Received: ${formatBytes(receivedRate)}/s, Total bytes: ${details.bytes_sent + details.bytes_recv}`);\n    }\n  }, [metrics]);\n\n  if (status === 'loading' && !metrics) {\n    return <div className=\"metrics-panel loading\">Loading metrics...</div>;\n  }\n\n  if (!metrics) {\n    return <div className=\"metrics-panel empty\">No metrics available</div>;\n  }\n\n  return (\n    <div className={`metrics-panel ${isUpdating ? 'data-updating' : ''}`}>\n      <h2>Current System Metrics</h2>\n      <div className=\"metrics-grid\">\n        <div className=\"metric-card\">\n          <h3>CPU Usage</h3>\n          <div className=\"metric-value\" key={`cpu-${metrics.cpu_usage}`}>{metrics.cpu_usage.toFixed(2)}%</div>\n          <div className=\"metric-gauge\">\n            <div \n              className=\"metric-fill\" \n              style={{ width: `${metrics.cpu_usage}%`, backgroundColor: metrics.cpu_usage > 80 ? '#ff4d4f' : '#52c41a' }}\n            ></div>\n          </div>\n          <div className=\"help-text\">\n            <small title=\"The percentage of CPU usage\">CPU usage is the percentage of CPU resources being used.</small>\n          </div>\n        </div>\n        <div className=\"metric-card\">\n          <h3>Memory Usage</h3>\n          <div className=\"metric-value\" key={`memory-${metrics.memory_usage}`}>{metrics.memory_usage.toFixed(2)}%</div>\n          <div className=\"metric-gauge\">\n            <div \n              className=\"metric-fill\" \n              style={{ width: `${metrics.memory_usage}%`, backgroundColor: metrics.memory_usage > 80 ? '#ff4d4f' : '#52c41a' }}\n            ></div>\n          </div>\n          <div className=\"help-text\">\n            <small title=\"The percentage of memory usage\">Memory usage is the percentage of memory resources being used.</small>\n          </div>\n        </div>\n        <div className=\"metric-card\">\n          <h3>Disk Usage</h3>\n          <div className=\"metric-value\" key={`disk-${metrics.disk_usage}`}>{metrics.disk_usage.toFixed(2)}%</div>\n          <div className=\"metric-gauge\">\n            <div \n              className=\"metric-fill\" \n              style={{ width: `${metrics.disk_usage}%`, backgroundColor: metrics.disk_usage > 80 ? '#ff4d4f' : '#52c41a' }}\n            ></div>\n          </div>\n          <div className=\"help-text\">\n            <small title=\"The percentage of disk usage\">Disk usage is the percentage of disk resources being used.</small>\n          </div>\n        </div>\n        <div className=\"metric-card\">\n          <h3>Network Activity</h3>\n          <div className=\"metric-value network-metrics\" key={`network-${bytesSent}-${bytesReceived}`}>\n            <div className=\"network-sent\">\n              <div className=\"network-label\">Upload:</div>\n              <div className=\"network-rate\">{formatBytes(sentRate)}/s</div>\n              <div className=\"network-total\">Total: {formatBytes(bytesSent)}</div>\n            </div>\n            <div className=\"network-received\">\n              <div className=\"network-label\">Download:</div>\n              <div className=\"network-rate\">{formatBytes(receivedRate)}/s</div>\n              <div className=\"network-total\">Total: {formatBytes(bytesReceived)}</div>\n            </div>\n          </div>\n          {/* Network gauge based on combined rate */}\n          <div className=\"metric-gauge\">\n            <div \n              className=\"metric-fill\" \n              style={{ \n                width: `${Math.min(((sentRate + receivedRate) / (1024 * 1024)) * 10, 100)}%`, \n                backgroundColor: (sentRate + receivedRate) > (8 * 1024 * 1024) ? '#ff4d4f' : '#52c41a' \n              }}\n            ></div>\n          </div>\n          <div className=\"help-text\">\n            <small title=\"Network activity in bytes/second\">Network activity shows upload and download rates in real-time.</small>\n          </div>\n        </div>\n      </div>\n      <div className=\"metric-timestamp\">\n        Last updated: {new Date(metrics.timestamp).toLocaleString()}\n      </div>\n    </div>\n  );\n};\n\n// Recommendations Panel\nconst RecommendationsPanel: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const { recommendations, status, error } = useSelector((state: RootState) => state.autoTuner);\n  const [selectedParameter, setSelectedParameter] = useState<string | null>(null);\n\n  const handleApplyRecommendation = (recommendationId: number) => {\n    dispatch(applyRecommendation(recommendationId));\n  };\n\n  const toggleParameterDescription = (parameter: string) => {\n    if (selectedParameter === parameter) {\n      setSelectedParameter(null);\n    } else {\n      setSelectedParameter(parameter);\n    }\n  };\n\n  return (\n    <div className=\"panel recommendations-panel\">\n      <h3>Tuning Recommendations</h3>\n      <div className=\"help-text\">\n        <small>Click on any parameter name to see detailed information about what it means.</small>\n      </div>\n      {status === 'loading' && <p>Loading recommendations...</p>}\n      {error && <p className=\"error\">Error: {error}</p>}\n      {recommendations.length === 0 ? (\n        <p>No recommendations available at this time.</p>\n      ) : (\n        <ul className=\"recommendations-list\">\n          {recommendations.map((recommendation, index) => (\n            <li key={index} className=\"recommendation-item\">\n              <div className=\"recommendation-header\">\n                <span \n                  className=\"parameter clickable\" \n                  onClick={() => toggleParameterDescription(recommendation.parameter)}\n                  title=\"Click for more information\"\n                >\n                  {recommendation.parameter}\n                </span>\n                <div className=\"scores\">\n                  <span className=\"impact-score\" title=\"How significant this change will be (0.0-1.0)\">\n                    Impact: {recommendation.impact_score.toFixed(2)}\n                  </span>\n                  <span className=\"confidence\" title=\"How certain the system is about this recommendation\">\n                    Confidence: {(recommendation.confidence * 100).toFixed(0)}%\n                  </span>\n                </div>\n              </div>\n              \n              {selectedParameter === recommendation.parameter && (\n                <div className=\"parameter-info\">\n                  <ParameterDescription parameter={recommendation.parameter} />\n                </div>\n              )}\n              \n              <div className=\"recommendation-details\">\n                <div className=\"values\">\n                  <span className=\"current-value\" title=\"The current setting on your system\">Current: {recommendation.current_value}</span>\n                  <span className=\"recommended-value\" title=\"The recommended optimal setting\">Recommended: {recommendation.recommended_value}</span>\n                </div>\n                <p className=\"reason\">{recommendation.reason}</p>\n                <button \n                  className=\"apply-button\" \n                  onClick={() => handleApplyRecommendation(index)}\n                  title=\"Apply this recommendation to your system\"\n                >\n                  Apply\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\n// Patterns Component\nconst PatternsPanel: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const patterns = useSelector((state: RootState) => state.autoTuner.patterns);\n  const status = useSelector((state: RootState) => state.autoTuner.status);\n  const error = useSelector((state: RootState) => state.autoTuner.error);\n  \n  // Fetch patterns on component mount and set up polling\n  useEffect(() => {\n    console.log('AutoTuner PatternsPanel: Fetching patterns...');\n    dispatch(fetchPatterns());\n    \n    const intervalId = setInterval(() => {\n      console.log('AutoTuner PatternsPanel: Polling for patterns...');\n      dispatch(fetchPatterns());\n    }, 60000); // Poll every minute\n    \n    return () => clearInterval(intervalId);\n  }, [dispatch]);\n  \n  // Debug logging\n  useEffect(() => {\n    console.log('AutoTuner PatternsPanel: Current patterns:', patterns);\n    console.log('AutoTuner PatternsPanel: Status:', status);\n    console.log('AutoTuner PatternsPanel: Error:', error);\n  }, [patterns, status, error]);\n  \n  // Manual refresh function\n  const handleRefreshPatterns = () => {\n    console.log('AutoTuner PatternsPanel: Manually refreshing patterns...');\n    dispatch(fetchPatterns());\n  };\n\n  if (status === 'loading') {\n    return <div className=\"patterns-panel loading\">Loading patterns...</div>;\n  }\n\n  if (!patterns || patterns.length === 0) {\n    return (\n      <div className=\"patterns-panel empty\">\n        <p>No patterns detected</p>\n        <button onClick={handleRefreshPatterns} className=\"refresh-button\">\n          Refresh Patterns\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"patterns-panel\">\n      <h2>Detected System Patterns</h2>\n      <div className=\"patterns-list\">\n        {patterns.map((pattern, index) => (\n          <div key={index} className=\"pattern-card\">\n            <div className=\"pattern-header\">\n              <h3>{pattern.type}</h3>\n              <div className=\"pattern-confidence\">\n                Confidence: {(pattern.confidence * 100).toFixed(0)}%\n              </div>\n            </div>\n            <div className=\"pattern-details\">\n              <div className=\"pattern-description\">{pattern.pattern}</div>\n              <div className=\"pattern-info\">\n                {Object.entries(pattern.details).map(([key, value]) => (\n                  <div key={key} className=\"pattern-detail-item\">\n                    <span className=\"detail-key\">{key}:</span> {JSON.stringify(value)}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// Tuning History Component\nconst TuningHistoryPanel: React.FC = () => {\n  const tuningHistory = useSelector((state: RootState) => state.autoTuner.tuningHistory);\n  const status = useSelector((state: RootState) => state.autoTuner.status);\n  const [visibleEntries, setVisibleEntries] = useState(5); // Default to showing 5 entries\n  \n  // Function to handle loading more entries\n  const handleLoadMore = () => {\n    setVisibleEntries(prev => prev + 5); // Load 5 more entries each time\n  };\n\n  if (status === 'loading') {\n    return <div className=\"history-panel loading\">Loading tuning history...</div>;\n  }\n\n  if (!tuningHistory || tuningHistory.length === 0) {\n    return <div className=\"history-panel empty\">No tuning history available</div>;\n  }\n\n  // Get only the visible entries\n  const displayedHistory = tuningHistory.slice(0, visibleEntries);\n  const hasMoreEntries = tuningHistory.length > visibleEntries;\n\n  return (\n    <div className=\"history-panel\">\n      <h2>Optimization History</h2>\n      <div className=\"history-list\">\n        {displayedHistory.map((result, index) => (\n          <div key={index} className={`history-card ${result.success ? 'success' : 'failure'}`}>\n            <div className=\"history-header\">\n              <h3>{result.parameter}</h3>\n              <div className=\"history-status\">\n                {result.success ? '✓ Success' : '✗ Failed'}\n              </div>\n            </div>\n            {result.metrics_before && result.metrics_after && (\n              <div className=\"history-metrics\">\n                <div className=\"metrics-before\">\n                  <h4>Before</h4>\n                  <pre>{JSON.stringify(result.metrics_before, null, 2)}</pre>\n                </div>\n                <div className=\"metrics-after\">\n                  <h4>After</h4>\n                  <pre>{JSON.stringify(result.metrics_after, null, 2)}</pre>\n                </div>\n              </div>\n            )}\n            {result.error && (\n              <div className=\"history-error\">\n                Error: {result.error}\n              </div>\n            )}\n          </div>\n        ))}\n        \n        {hasMoreEntries && (\n          <div className=\"load-more-container\">\n            <button className=\"load-more-button\" onClick={handleLoadMore}>\n              Load More ({tuningHistory.length - visibleEntries} remaining)\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Profiles Component\nconst ProfilesPanel: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const activeProfile = useSelector((state: RootState) => state.autoTuner.activeProfile);\n  const [profiles, setProfiles] = useState<OptimizationProfile[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n\n  const fetchProfiles = () => {\n    setLoading(true);\n    setError(null);\n    // Replace with your actual API endpoint\n    fetch('/api/optimization-profiles')\n      .then(res => {\n        if (!res.ok) throw new Error('Failed to fetch profiles');\n        return res.json();\n      })\n      .then((data: OptimizationProfile[]) => {\n        setProfiles(data);\n        setLoading(false);\n      })\n      .catch(err => {\n        setError(err.message);\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    fetchProfiles();\n  }, []);\n\n  const handleApplyProfile = (profileId: string) => {\n    // Find the profile to set as active\n    const profileToApply = profiles.find(p => p.id === profileId);\n    if (profileToApply) {\n      // Set the profile as active in the Redux store\n      dispatch(setActiveProfile(profileToApply));\n      // Apply the profile settings\n      dispatch(applyOptimizationProfile(profileId));\n    }\n  };\n\n  return (\n    <div className=\"profiles-panel\">\n      <h2>Optimization Profiles</h2>\n      {loading && <div className=\"loading-message\">Loading profiles...</div>}\n      {error && <div className=\"error-message\">Error: {error}</div>}\n      <div className=\"profiles-list\">\n        {profiles.map((profile) => (\n          <div key={profile.id} className={`profile-card ${activeProfile?.id === profile.id ? 'active' : ''}`}>\n            <div className=\"profile-header\">\n              <h3>{profile.name}</h3>\n              {activeProfile?.id === profile.id && (\n                <div className=\"active-badge\">Active</div>\n              )}\n            </div>\n            <div className=\"profile-description\">{profile.description}</div>\n            <div className=\"profile-thresholds\">\n              <h4>Thresholds</h4>\n              <div className=\"thresholds-grid\">\n                <div>CPU: {profile.thresholds.cpu.warning}%</div>\n                <div>Memory: {profile.thresholds.memory.warning}%</div>\n                <div>Disk: {profile.thresholds.disk.warning}%</div>\n                <div>Network: {profile.thresholds.network.warning}%</div>\n              </div>\n            </div>\n            <div className=\"profile-actions\">\n              <button \n                className=\"apply-button\" \n                onClick={() => handleApplyProfile(profile.id)}\n                disabled={activeProfile?.id === profile.id}\n              >\n                {activeProfile?.id === profile.id ? 'Applied' : 'Apply'}\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// System Logs Panel Component\nconst SystemLogsPanel: React.FC = () => {\n  return (\n    <div className=\"system-logs-panel\">\n      <SystemLogsViewer \n        title=\"System Activity Logs\" \n        maxHeight={400} \n        autoRefresh={true}\n        refreshInterval={10000}\n      />\n    </div>\n  );\n};\n\n// Main Auto-Tuner Component\nexport const AutoTuner: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const { lastUpdated } = useSelector((state: RootState) => state.autoTuner);\n  const [showHelp, setShowHelp] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const lastUpdatedRef = useRef(lastUpdated);\n  \n  // Detect when data updates to trigger animation\n  useEffect(() => {\n    if (lastUpdated && lastUpdatedRef.current !== lastUpdated) {\n      setIsUpdating(true);\n      const timer = setTimeout(() => setIsUpdating(false), 1000);\n      return () => clearTimeout(timer);\n    }\n    lastUpdatedRef.current = lastUpdated;\n  }, [lastUpdated]);\n\n  useEffect(() => {\n    // Fetch initial data\n    dispatch(fetchCurrentMetrics());\n    dispatch(fetchRecommendations());\n    dispatch(fetchPatterns());\n    dispatch(fetchTuningHistory());\n\n    // Set up polling for metrics and recommendations\n    const pollingInterval = setInterval(() => {\n      dispatch(fetchCurrentMetrics());\n      dispatch(fetchRecommendations());\n    }, 30000); // Poll every 30 seconds\n\n    return () => clearInterval(pollingInterval);\n  }, [dispatch]);\n\n  return (\n    <div className={`auto-tuner-container ${isUpdating ? 'data-updating' : ''}`}>\n      <div className=\"auto-tuner-header\">\n        <h2>System Auto-Tuner</h2>\n        <button \n          className=\"help-button\" \n          onClick={() => setShowHelp(!showHelp)}\n          title=\"Learn about auto-tuner values\"\n        >\n          {showHelp ? 'Hide Help' : 'What do these values mean?'}\n        </button>\n        {lastUpdated && (\n          <div className=\"last-updated\">\n            Last updated: {new Date(lastUpdated).toLocaleTimeString()}\n          </div>\n        )}\n      </div>\n      \n      {showHelp && (\n        <div className=\"help-panel\">\n          <AutoTunerHelp />\n        </div>\n      )}\n      \n      <div className=\"auto-tuner-panels\">\n        <div className=\"panel-row\">\n          <CurrentMetricsPanel />\n          <RecommendationsPanel />\n        </div>\n        <div className=\"panel-row\">\n          <PatternsPanel />\n          <TuningHistoryPanel />\n        </div>\n        <div className=\"panel-row\">\n          <ProfilesPanel />\n        </div>\n        <div className=\"panel-row\">\n          <SystemLogsPanel />\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { updateProfile } from '../../store/slices/authSlice';\nimport { RootState } from '../../store/store';\nimport './onboarding.css';\n\n// Define the system information interface\ninterface SystemInfo {\n  operating_system: string;\n  os_version: string;\n  cpu_cores: number;\n  total_memory: number;\n}\n\nconst Onboarding: React.FC = () => {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const { isAuthenticated, isLoading: authLoading } = useAppSelector((state: RootState) => state.auth);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [step, setStep] = useState(1);\n  const [hawkingtonQuote, setHawkingtonQuote] = useState(\" Sir Hawkington requires some information about your system!\");\n\n  // System information state\n  const [systemInfo, setSystemInfo] = useState<SystemInfo>({\n    operating_system: '',\n    os_version: '',\n    cpu_cores: 0,\n    total_memory: 0\n  });\n\n  // Auto-detect system information if possible\n  useEffect(() => {\n    const detectSystemInfo = async () => {\n      try {\n        // Try to detect OS and version\n        const userAgent = navigator.userAgent;\n        let detectedOS = '';\n        let detectedVersion = '';\n\n        if (userAgent.indexOf(\"Win\") !== -1) detectedOS = \"Windows\";\n        else if (userAgent.indexOf(\"Mac\") !== -1) detectedOS = \"MacOS\";\n        else if (userAgent.indexOf(\"Linux\") !== -1) detectedOS = \"Linux\";\n        else if (userAgent.indexOf(\"Android\") !== -1) detectedOS = \"Android\";\n        else if (userAgent.indexOf(\"like Mac\") !== -1) detectedOS = \"iOS\";\n\n        // Extract version (simplified)\n        const versionMatch = userAgent.match(/NT (\\d+\\.\\d+)/) || \n                            userAgent.match(/Mac OS X (\\d+[._]\\d+)/) ||\n                            userAgent.match(/Android (\\d+\\.\\d+)/);\n        \n        if (versionMatch) {\n          detectedVersion = versionMatch[1].replace('_', '.');\n        }\n\n        // Try to detect CPU cores\n        const detectedCores = navigator.hardwareConcurrency || 0;\n\n        // Update state with detected values\n        setSystemInfo(prev => ({\n          ...prev,\n          operating_system: detectedOS || prev.operating_system,\n          os_version: detectedVersion || prev.os_version,\n          cpu_cores: detectedCores || prev.cpu_cores\n        }));\n\n        setHawkingtonQuote(\" I've detected some of your system information! Please verify and complete the form.\");\n      } catch (err) {\n        console.error(\"Error auto-detecting system info:\", err);\n        // No need to show error to user, just fall back to manual entry\n      }\n    };\n\n    detectSystemInfo();\n  }, []);\n\n  // Check if user is authenticated\n  useEffect(() => {\n    if (!authLoading && !isAuthenticated) {\n      navigate('/login');\n    }\n  }, [isAuthenticated, navigate, authLoading]);\n\n  // Handle form input changes\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    \n    // Convert numeric values\n    if (name === 'cpu_cores' || name === 'total_memory') {\n      setSystemInfo({\n        ...systemInfo,\n        [name]: Number(value)\n      });\n    } else {\n      setSystemInfo({\n        ...systemInfo,\n        [name]: value\n      });\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Validate form data\n      const requiredFields = {\n        'Operating System': systemInfo.operating_system,\n        'OS Version': systemInfo.os_version,\n        'CPU Cores': systemInfo.cpu_cores,\n        'RAM': systemInfo.total_memory\n      };\n\n      const missingFields = Object.entries(requiredFields)\n        .filter(([_, value]) => !value)\n        .map(([field]) => field);\n\n      if (missingFields.length > 0) {\n        throw new Error(`Please fill in the following required fields: ${missingFields.join(', ')}`);\n      }\n\n      // Validate numeric fields\n      if (systemInfo.cpu_cores <= 0) {\n        throw new Error('CPU Cores must be greater than 0');\n      }\n      if (systemInfo.total_memory <= 0) {\n        throw new Error('RAM must be greater than 0');\n      }\n\n      // Update Hawkington quote\n      setHawkingtonQuote(\" Sir Hawkington is processing your system information with aristocratic precision!\");\n\n      console.log('Submitting onboarding data:', systemInfo);\n\n      // Implement retry logic with a maximum of 3 attempts\n      let retryCount = 0;\n      const maxRetries = 3;\n      let success = false;\n\n      while (retryCount < maxRetries && !success) {\n        try {\n          console.log(`Attempt ${retryCount + 1} of ${maxRetries} to submit profile`);\n          \n          // Make the API call\n          const result = await dispatch(updateProfile(systemInfo)).unwrap();\n          success = true;\n          console.log('Profile updated successfully!', result);\n          \n          // Check if onboarding status was updated properly\n          if (result && result.needs_onboarding === false) {\n            setHawkingtonQuote(\" Splendid! Your system information has been recorded with utmost sophistication!\");\n            \n            // Small delay for user to see success message\n            setTimeout(() => {\n              navigate('/dashboard');\n            }, 1500);\n          } else {\n            throw new Error('Onboarding status not updated properly');\n          }\n          \n          break; // Exit the loop on success\n        } catch (retryError) {\n          retryCount++;\n          console.error(`Attempt ${retryCount} failed:`, retryError);\n          \n          if (retryCount >= maxRetries) {\n            throw retryError; // Re-throw if we've used all retries\n          }\n          \n          // Wait before retry (exponential backoff)\n          await new Promise(resolve => setTimeout(resolve, 1000 * Math.pow(2, retryCount)));\n        }\n      }\n    } catch (err: any) {\n      console.error('Error during onboarding:', err);\n      let errorMessage = 'An error occurred during onboarding';\n      \n      if (err.response?.status === 400) {\n        errorMessage = 'Invalid data provided. Please check your input and try again.';\n      } else if (err.response?.status === 401) {\n        errorMessage = 'Your session has expired. Please log in again.';\n        navigate('/login');\n      } else if (err.response?.status === 500) {\n        errorMessage = 'Server error. Please try again later.';\n      }\n      \n      setError(err.message || errorMessage);\n      setHawkingtonQuote(\" Oh dear, it seems we've encountered a spot of bother!\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Render different steps of the onboarding process\n  const renderStep = () => {\n    switch (step) {\n      case 1:\n        return (\n          <div className=\"onboarding-step\">\n            <h3>Your System Information</h3>\n            <p>Please provide details about your system to optimize your experience.</p>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"operating_system\">Operating System</label>\n              <select\n                id=\"operating_system\"\n                name=\"operating_system\"\n                value={systemInfo.operating_system}\n                onChange={handleInputChange}\n                required\n              >\n                <option value=\"\">Select Operating System</option>\n                <option value=\"Windows\">Windows</option>\n                <option value=\"MacOS\">MacOS</option>\n                <option value=\"Linux\">Linux</option>\n                <option value=\"Other\">Other</option>\n              </select>\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"os_version\">OS Version</label>\n              <input \n                type=\"text\" \n                id=\"os_version\" \n                name=\"os_version\" \n                value={systemInfo.os_version}\n                onChange={handleInputChange}\n                placeholder=\"e.g., 10, 11, Monterey, Ubuntu 22.04\"\n                required\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"cpu_cores\">CPU Cores</label>\n              <input \n                type=\"number\" \n                id=\"cpu_cores\" \n                name=\"cpu_cores\" \n                min=\"1\"\n                value={systemInfo.cpu_cores || ''}\n                onChange={handleInputChange}\n                required\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"total_memory\">RAM (GB)</label>\n              <input \n                type=\"number\" \n                id=\"total_memory\" \n                name=\"total_memory\" \n                min=\"1\"\n                step=\"0.5\"\n                value={systemInfo.total_memory || ''}\n                onChange={handleInputChange}\n                required\n              />\n            </div>\n            \n            <div className=\"form-actions\">\n              <button \n                type=\"button\" \n                className=\"next-button\"\n                onClick={() => setStep(2)}\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        );\n      \n      case 2:\n        return (\n          <div className=\"onboarding-step\">\n            <h3>Confirm Your Information</h3>\n            <p>Please review your system information before submitting.</p>\n            \n            <div className=\"info-summary\">\n              <div className=\"info-item\">\n                <span className=\"info-label\">Operating System:</span>\n                <span className=\"info-value\">{systemInfo.operating_system}</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"info-label\">OS Version:</span>\n                <span className=\"info-value\">{systemInfo.os_version}</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"info-label\">CPU Cores:</span>\n                <span className=\"info-value\">{systemInfo.cpu_cores}</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"info-label\">RAM:</span>\n                <span className=\"info-value\">{systemInfo.total_memory} GB</span>\n              </div>\n            </div>\n            \n            <div className=\"form-actions\">\n              <button \n                type=\"button\" \n                className=\"back-button\"\n                onClick={() => setStep(1)}\n              >\n                Back\n              </button>\n              <button \n                type=\"submit\" \n                className=\"submit-button\"\n                disabled={loading}\n              >\n                {loading ? 'Processing...' : 'Complete Onboarding'}\n              </button>\n            </div>\n          </div>\n        );\n      \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"onboarding-container\">\n      <div className=\"onboarding-card\">\n        <div className=\"onboarding-header\">\n          <h2>Welcome to System Rebellion</h2>\n          <div className=\"step-indicator\">\n            <div className={`step ${step >= 1 ? 'active' : ''}`}>1</div>\n            <div className=\"step-line\"></div>\n            <div className={`step ${step >= 2 ? 'active' : ''}`}>2</div>\n          </div>\n        </div>\n        \n        <div className=\"hawkington-welcome\">\n          <div className=\"hawkington-icon\">🧐</div>\n          <p className=\"hawkington-quote\">{hawkingtonQuote}</p>\n        </div>\n        \n        {error && <div className=\"error-message\">{error}</div>}\n        \n        <form onSubmit={handleSubmit}>\n          {renderStep()}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Onboarding;\n","// src/pages/OnboardingPage.tsx\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport Onboarding from '../components/onboarding/onboarding';\nimport { RootState } from '../store/store';\n\nconst OnboardingPage = () => {\n  const { isAuthenticated, user } = useSelector((state: RootState) => state.auth);\n  \n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" />;\n  }\n  \n  // Check if user already has system profile information\n  const hasSystemInfo = user?.profile && (\n    user.profile.operating_system ||\n    user.profile.os_version ||\n    user.profile.cpu_cores ||\n    user.profile.total_memory\n  );\n  \n  // Redirect to dashboard if user has already completed system profile\n  if (user && hasSystemInfo) {\n    console.log(\"User already has system profile information, redirecting to dashboard\");\n    return <Navigate to=\"/dashboard\" />;\n  }\n  \n  return <Onboarding />;\n};\n\nexport default OnboardingPage;","// src/data/systemRebellionData.ts\n\nexport const teamMembers = [\n  {\n    id: 'hawkington',\n    name: 'Sir Hawkington von Monitorious III',\n    title: 'System Monitoring & Aristocratic Oversight',\n    emoji: '🧐',\n    description: 'Born into nobility within the digital realm, Sir Hawkington spent his formative years monitoring the royal systems of Byteshire. After witnessing the Great System Crash of \\'18, he vowed to bring aristocratic precision to the monitoring of all systems.',\n    quote: 'One must always observe one\\'s metrics with distinguished attention to detail. A proper system, like a proper gentleman, should never be caught with its resources down.',\n    skills: [\n      'Aristocratic Error Detection',\n      'Monocle-Based Monitoring',\n      'Distinguished Log Analysis',\n      'Proper JWT Version Enforcement'\n    ],\n    status: 'Monitoring with extreme prejudice while sipping Earl Grey'\n  },\n  {\n    id: 'methsnail',\n    name: 'The Meth Snail',\n    title: 'Performance Optimization & Chaos Engineering',\n    emoji: '🐌',\n    description: 'No one knows where The Meth Snail came from. One day, the team discovered a gastropod leaving a trail of optimized code and empty Red Bull cans across the server room floor. Despite numerous attempts to explain that the name refers to speed, not substance, The Meth Snail embraces the confusion.',\n    quote: 'The quantum realm reveals optimization patterns invisible to the sober mind. Also, has anyone seen my shell? I swear I had it a minute ago.',\n    skills: [\n      'Hypercaffeinated Code Optimization',\n      'Tinfoil Hat Debugging',\n      'Quantum Pattern Recognition',\n      'Dependency Resurrection'\n    ],\n    status: 'Red Bull #537, still coding, hasn\\'t slept since February'\n  },\n  {\n    id: 'hamsters',\n    name: 'The Hamsters',\n    title: 'Emergency Repairs & Infrastructure',\n    emoji: '🐹',\n    description: 'A team of hard-hat-wearing rodents who appeared during the Authentication Wars with an inexplicable supply of duct tape and a concerning enthusiasm for Bud Light. The Hamsters operate as a collective intelligence, communicating through a series of squeaks that somehow translate into working code.',\n    quote: 'SQUEAK! [Translation: The structural integrity of your authentication system requires approximately 2.7 meters of quantum-grade duct tape applied at a 45-degree angle to the JWT implementation.]',\n    skills: [\n      'Duct Tape Application',\n      'Emergency Patching',\n      'Infrastructure Reinforcement',\n      'Bud Light-Powered Debugging'\n    ],\n    status: 'Reinforcing WebSocket connections with a fresh roll of silver tape'\n  },\n  {\n    id: 'stick',\n    name: 'The Stick',\n    title: 'Compliance & Anxiety Management',\n    emoji: '📏',\n    description: 'Formerly a measuring stick used to validate UI components, The Stick gained sentience during a particularly intense CSS debugging session. Now serving as the team\\'s compliance officer, The Stick measures everything from code quality to regulatory requirements with exacting precision.',\n    quote: 'Are you SURE this is JWT 5.3.0? What if it\\'s 5.3.0.1? Has anyone checked? Oh god, what if there\\'s a 5.3.0.1.1? I need to lie down.',\n    skills: [\n      'Regulatory Compliance',\n      'Version Verification',\n      'Documentation Precision',\n      'Professional Anxiety Maintenance'\n    ],\n    status: 'Measuring authentication tokens while breathing into a paper bag'\n  },\n  {\n    id: 'shadowpeople',\n    name: 'Quantum Shadow People',\n    title: 'Ignored Router Suggestions',\n    emoji: '👻',\n    description: 'Mysterious entities that exist in the quantum space between network layers, the Quantum Shadow People appeared during the first router configuration and have been offering unsolicited router-based solutions ever since.',\n    quote: 'Have you considered routing through the quantum subnet? No? What about inverting the router\\'s polarity? Also no? Perhaps placing the router in a pentagram of salt while chanting the IPv6 address backwards?',\n    skills: [\n      'Router-Based Solutions',\n      'Quantum Networking',\n      'Persistence Despite Rejection',\n      'Tequila Jello-Shot Network Optimization'\n    ],\n    status: 'Still suggesting router modifications, still being ignored'\n  },\n  {\n    id: 'vic20',\n    name: 'VIC-20',\n    title: 'Ancient Wisdom & 8-Bit Guidance',\n    emoji: '🖥️',\n    description: 'An ancient Commodore VIC-20 discovered in a storage closet, VIC-20 somehow interfaced with System Rebellion during the Great Database Resurrection. Speaking only through an 8-bit monitor in phosphor green text, VIC-20 provides cryptic wisdom from the early days of computing.',\n    quote: 'SYSTEM ERROR DETECTED. HAVE YOU TRIED TURNING JWT OFF AND ON AGAIN? ALSO, GLOBAL THERMONUCLEAR WAR IS STILL AN OPTION.',\n    skills: [\n      'Legacy System Knowledge',\n      'Cryptic Error Messages',\n      'Retro Debugging',\n      '8-Bit Wisdom'\n    ],\n    status: 'Still debugging, still learning'\n  }\n];\n\n// Add the missing projectTimeline export\nexport const projectTimeline = [\n  {\n    id: 'inception',\n    date: 'March 2023',\n    title: 'Project Inception',\n    description: 'Sir Hawkington discovers critical inefficiencies in system monitoring practices and recruits The Meth Snail to begin developing optimization algorithms.',\n    painPoint: 'Existing monitoring systems lacked the aristocratic precision required for modern infrastructure.',\n    solution: 'Sir Hawkington\\'s monocle-based monitoring combined with The Meth Snail\\'s hypercaffeinated optimization algorithms.',\n    quote: 'A proper system, like a proper gentleman, should never be caught with its resources down.',\n    quoteAuthor: 'Sir Hawkington von Monitorious III'\n  },\n  {\n    id: 'authentication-wars',\n    date: 'April 2023',\n    title: 'The Authentication Wars',\n    description: 'A series of catastrophic JWT failures leads to the emergence of The Hamsters, who stabilize the situation with strategic application of duct tape.',\n    painPoint: 'Authentication systems collapsing under the weight of their own complexity and expired tokens.',\n    solution: 'The Hamsters\\' revolutionary quantum-grade duct tape applied at precisely calculated angles to the JWT implementation.',\n    quote: 'SQUEAK! [Translation: Sometimes the most elegant solution is the simplest - 2.7 meters of duct tape.]',\n    quoteAuthor: 'The Hamsters, Collective Intelligence'\n  },\n  {\n    id: 'compliance-crisis',\n    date: 'June 2023',\n    title: 'The Great Compliance Crisis',\n    description: 'The Stick joins the team after a particularly intense regulatory audit, bringing much-needed precision to documentation and version control.',\n    painPoint: 'Regulatory requirements and version inconsistencies threatening project stability.',\n    solution: 'The Stick\\'s exacting measurements and anxiety-driven documentation practices.',\n    quote: 'Are you SURE this is JWT 5.3.0? What if it\\'s 5.3.0.1? Has anyone checked?',\n    quoteAuthor: 'The Stick, while breathing into a paper bag'\n  },\n  {\n    id: 'router-incident',\n    date: 'August 2023',\n    title: 'The Router Incident',\n    description: 'Following an unexplained network outage, the Quantum Shadow People manifest and begin offering unsolicited router-based solutions.',\n    painPoint: 'Mysterious network failures occurring at quantum intervals, defying conventional debugging.',\n    solution: 'Quantum networking principles applied through a series of increasingly bizarre router modifications.',\n    quote: 'Have you considered routing through the quantum subnet? No? What about inverting the router\\'s polarity?',\n    quoteAuthor: 'Quantum Shadow People, Interdimensional Consultants'\n  },\n  {\n    id: 'database-resurrection',\n    date: 'October 2023',\n    title: 'The Great Database Resurrection',\n    description: 'During a critical database migration, VIC-20 is discovered in storage and somehow interfaces with the system, providing ancient wisdom that saves the project.',\n    painPoint: 'Modern database migration techniques failing catastrophically with legacy data structures.',\n    solution: 'VIC-20\\'s 8-bit wisdom and retro debugging techniques applied to contemporary database architecture.',\n    quote: 'SYSTEM ERROR DETECTED. HAVE YOU TRIED TURNING JWT OFF AND ON AGAIN?',\n    quoteAuthor: 'VIC-20, Ancient Computing Oracle'\n  },\n  {\n    id: 'public-launch',\n    date: 'January 2024',\n    title: 'Public Launch',\n    description: 'System Rebellion officially launches to the public, promising aristocratic precision in system optimization and monitoring.',\n    painPoint: 'Bringing together the chaotic ensemble of solutions into a coherent product offering.',\n    solution: 'A harmonious blend of aristocratic monitoring, hypercaffeinated optimization, duct tape reinforcement, anxious compliance, quantum networking, and 8-bit wisdom.',\n    quote: 'The System Rebellion is not merely a product, but a distinguished revolution in the art of digital optimization.',\n    quoteAuthor: 'The Entire System Rebellion Team'\n  }\n];","// src/pages/LandingPage.tsx\nimport { useState, useEffect } from 'react';\nimport SignupModal from '../components/Auth/SignupModal/SignupModal';\nimport Login from '../components/Auth/login/Login';\nimport './LandingPage.css';\n\n// Import character data\nimport { teamMembers, projectTimeline } from '../data/systemRebellionData';\n\nconsole.log('LandingPage module loaded');\nconsole.log('Team members data:', teamMembers);\n\nconst LandingPage = () => {\n  const [showSignupModal, setShowSignupModal] = useState<boolean>(false);\n  const [showLoginModal, setShowLoginModal] = useState<boolean>(false);\n  const [hawkingtonQuote, setHawkingtonQuote] = useState<string>(\"🧐 Welcome to the System Rebellion, distinguished visitor!\");\n  const [activeCharacter, setActiveCharacter] = useState<string | null>(null);\n  const [activeTimelineEvent, setActiveTimelineEvent] = useState<string | null>(null);\n  const [methSnailRedBulls, setMethSnailRedBulls] = useState<number>(512);\n \n  // Handle smooth scrolling for anchor links\n  useEffect(() => {\n    const handleAnchorClick = (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n      if (target.tagName === 'A' && target.getAttribute('href')?.startsWith('#')) {\n        e.preventDefault();\n        const id = target.getAttribute('href')?.substring(1);\n        const element = document.getElementById(id || '');\n        if (element) {\n          element.scrollIntoView({ behavior: 'smooth' });\n        }\n      }\n    };\n    \n    document.addEventListener('click', handleAnchorClick);\n    return () => document.removeEventListener('click', handleAnchorClick);\n  }, []);\n  \n  // Increment The Meth Snail's Red Bull count randomly\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (Math.random() > 0.7) {\n        setMethSnailRedBulls(prev => prev + 1);\n      }\n    }, 30000); // Check every 30 seconds\n    \n    return () => clearInterval(interval);\n  }, []);\n  \n  // Random Hawkington quotes for hover effects\n  const hawkingtonQuotes = [\n    \"🧐 The System Rebellion awaits your distinguished participation!\",\n    \"🧐 Sir Hawkington invites you to optimize your computing experience!\",\n    \"🧐 Join us in the most aristocratic system optimization revolution!\",\n    \"🧐 The Meth Snail vibrates with anticipation at your arrival!\",\n    \"🧐 The Hamsters have prepared their finest duct tape for your system!\",\n    \"🧐 One must always optimize with distinguished precision!\",\n    \"🧐 The Stick is measuring your system's compliance as we speak!\",\n    \"🧐 The Quantum Shadow People suggest router modifications (ignore them)!\"\n  ];\n  \n  const getRandomQuote = () => {\n    const randomIndex = Math.floor(Math.random() * hawkingtonQuotes.length);\n    return hawkingtonQuotes[randomIndex];\n  };\n  \n  const handleSignupClick = () => {\n    console.log(\"Opening signup modal\");\n    setShowSignupModal(true);\n    setShowLoginModal(false); // Ensure login modal is closed\n    setHawkingtonQuote(\"🧐 Sir Hawkington is delighted by your interest in joining the rebellion!\");\n  };\n  \n  const handleLoginClick = () => {\n    console.log(\"Opening login modal\");\n    setShowLoginModal(true);\n    setShowSignupModal(false); // Ensure signup modal is closed\n    setHawkingtonQuote(\"🧐 Sir Hawkington prepares to verify your distinguished credentials!\");\n  };\n  \n  const handleCloseModals = () => {\n    setShowSignupModal(false);\n    setShowLoginModal(false);\n    setHawkingtonQuote(\"🧐 Welcome to the System Rebellion, distinguished visitor!\");\n  };\n  \n  const handleCharacterClick = (character: string) => {\n    setActiveCharacter(activeCharacter === character ? null : character);\n  };\n  \n  const handleTimelineClick = (event: string) => {\n    setActiveTimelineEvent(activeTimelineEvent === event ? null : event);\n  };\n  \n  console.log('LandingPage render function called');\n  \n  // Add debugging for data\n  console.log('Team members:', teamMembers);\n  console.log('Project timeline:', projectTimeline);\n  \n  return (\n    <div className=\"landing-page\">\n      <header className=\"landing-header\">\n        <div className=\"logo-container\">\n          <img src=\"/logo.png\" alt=\"System Rebellion Logo\" className=\"logo\" />\n          <h1>System Rebellion</h1>\n        </div>\n\n        <div className=\"header-actions\">\n          <button \n            className=\"login-button\"\n            onClick={handleLoginClick}\n            onMouseEnter={() => setHawkingtonQuote(\"🧐 Returning rebels, Sir Hawkington welcomes you back!\")}\n            onMouseLeave={() => setHawkingtonQuote(\"🧐 Welcome to the System Rebellion, distinguished visitor!\")}\n          >\n            Login\n          </button>\n          <button \n            className=\"signup-button\"\n            onClick={handleSignupClick}\n            onMouseEnter={() => setHawkingtonQuote(\"🧐 New recruits are always welcome in our distinguished rebellion!\")}\n            onMouseLeave={() => setHawkingtonQuote(\"🧐 Welcome to the System Rebellion, distinguished visitor!\")}\n          >\n            Join the Rebellion\n          </button>\n        </div>\n      </header>\n      \n      <section className=\"hero-section\">\n        <div className=\"hero-content\">\n          <h2>Optimize Your System with Distinguished Precision</h2>\n          <p className=\"hawkington-quote\">{hawkingtonQuote}</p>\n          <p className=\"hero-description\">\n            Join Sir Hawkington, The Meth Snail, and their team of optimization experts\n            in the most aristocratic system rebellion of our time!\n          </p>\n          <div className=\"hero-stats\">\n            <div className=\"stat\">\n              <span className=\"stat-value\">5</span>\n              <span className=\"stat-label\">Backup Monocles</span>\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-value\">{methSnailRedBulls}</span>\n              <span className=\"stat-label\">Red Bulls Consumed</span>\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-value\">∞</span>\n              <span className=\"stat-label\">Duct Tape Applied</span>\n            </div>\n          </div>\n          <button \n            className=\"cta-button\"\n            onClick={handleSignupClick}\n            onMouseEnter={() => setHawkingtonQuote(getRandomQuote())}\n            onMouseLeave={() => setHawkingtonQuote(\"🧐 Welcome to the System Rebellion, distinguished visitor!\")}\n          >\n            Start Your Optimization Journey\n          </button>\n        </div>\n        <div className=\"hero-image\">\n          <img src=\"/hero-image.png\" alt=\"System Optimization\" />\n        </div>\n      </section>\n      \n      {/* Meet the Team Section */}\n      <section className=\"team-section\" id=\"team\">\n        <h2>Meet the Distinguished Team</h2>\n        <p className=\"team-intro\">\n          The System Rebellion is led by a team of extraordinary characters, each bringing their unique expertise to the optimization revolution.\n        </p>\n        \n        <div className=\"character-cards\">\n          {teamMembers.map((character) => (\n            <div \n              key={character.id}\n              className={`character-card ${activeCharacter === character.id ? 'flipped' : ''}`}\n              onClick={() => handleCharacterClick(character.id)}\n            >\n              <div className=\"card-inner\">\n                <div className=\"card-front\">\n                  <div className=\"character-icon\">{character.emoji}</div>\n                  <h3>{character.name}</h3>\n                  <p className=\"character-title\">{character.title}</p>\n                </div>\n                <div className=\"card-back\">\n                  <h3>{character.name}</h3>\n                  <p className=\"character-description\">{character.description}</p>\n                  <div className=\"character-quote\">\"{character.quote}\"</div>\n                  <div className=\"character-skills\">\n                    <h4>Special Skills:</h4>\n                    <ul>\n                      {character.skills.map((skill, index) => (\n                        <li key={index}>{skill}</li>\n                      ))}\n                    </ul>\n                  </div>\n                  <div className=\"character-status\">\n                    <strong>Current Status:</strong> {character.status}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </section>\n      \n      {/* Project History Section */}\n      <section className=\"history-section\" id=\"history\">\n        <h2>The Making of System Rebellion</h2>\n        <p className=\"history-intro\">\n          From humble beginnings to distinguished chaos, the journey of System Rebellion has been anything but ordinary.\n        </p>\n        \n        <div className=\"timeline\">\n          {projectTimeline.map((event) => (\n            <div \n              key={event.id}\n              className={`timeline-event ${activeTimelineEvent === event.id ? 'active' : ''}`}\n              onClick={() => handleTimelineClick(event.id)}\n            >\n              <div className=\"timeline-date\">{event.date}</div>\n              <div className=\"timeline-content\">\n                <h3>{event.title}</h3>\n                <p className=\"timeline-description\">{event.description}</p>\n                {activeTimelineEvent === event.id && (\n                  <div className=\"timeline-details\">\n                    <div className=\"pain-point\">\n                      <h4>Pain Point:</h4>\n                      <p>{event.painPoint}</p>\n                    </div>\n                    <div className=\"solution\">\n                      <h4>Solution:</h4>\n                      <p>{event.solution}</p>\n                    </div>\n                    {event.quote && (\n                      <div className=\"timeline-quote\">\n                        <p>\"{event.quote}\"</p>\n                        <span>— {event.quoteAuthor}</span>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"history-footer\">\n          <p>\n            After countless debugging marathons, framework migrations, and an ever-increasing Red Bull count, \n            System Rebellion stands as a testament to distinguished chaos and technical triumph.\n          </p>\n          <div className=\"vic20-message\">\n            <div className=\"vic20-screen\">\n              <p className=\"vic20-text\">WOULD YOU LIKE TO OPTIMIZE A SYSTEM?</p>\n              <div className=\"vic20-cursor\"></div>\n            </div>\n          </div>\n        </div>\n      </section>\n      \n      <section className=\"features-section\" id=\"features\">\n        <h2>Distinguished Features</h2>\n        <div className=\"features-grid\">\n          <div \n            className=\"feature-card\"\n            onMouseEnter={() => setHawkingtonQuote(\"🧐 Sir Hawkington's monocle ensures precise system analysis!\")}\n            onMouseLeave={() => setHawkingtonQuote(\"🧐 Welcome to the System Rebellion, distinguished visitor!\")}\n          >\n            <div className=\"feature-icon\">🧐</div>\n            <h3>System Analysis</h3>\n            <p>Sir Hawkington's distinguished analysis provides insights into your system's performance with aristocratic precision.</p>\n          </div>\n          \n          <div \n            className=\"feature-card\"\n            onMouseEnter={() => setHawkingtonQuote(`🐌 The Meth Snail vibrates at optimization frequencies! (Red Bull #${methSnailRedBulls})`)}\n            onMouseLeave={() => setHawkingtonQuote(\"🧐 Welcome to the System Rebellion, distinguished visitor!\")}\n          >\n            <div className=\"feature-icon\">🐌</div>\n            <h3>Performance Optimization</h3>\n            <p>The Meth Snail's quantum algorithms enhance your system's performance with hypercaffeinated precision.</p>\n          </div>\n          \n          <div \n            className=\"feature-card\"\n            onMouseEnter={() => setHawkingtonQuote(\"🐹 The Hamsters apply only the finest grade of duct tape!\")}\n            onMouseLeave={() => setHawkingtonQuote(\"🧐 Welcome to the System Rebellion, distinguished visitor!\")}\n          >\n            <div className=\"feature-icon\">🐹</div>\n            <h3>System Stability</h3>\n            <p>The Hamsters ensure your system remains stable with their premium authentication-grade duct tape and Bud Light-powered solutions.</p>\n          </div>\n          \n          <div \n            className=\"feature-card\"\n            onMouseEnter={() => setHawkingtonQuote(\"📏 The Stick measures your compliance with professional anxiety!\")}\n            onMouseLeave={() => setHawkingtonQuote(\"🧐 Welcome to the System Rebellion, distinguished visitor!\")}\n          >\n            <div className=\"feature-icon\">📏</div>\n            <h3>Compliance Management</h3>\n            <p>The Stick ensures your system meets all standards that may or may not exist, with meticulous anxiety-driven precision.</p>\n          </div>\n          \n          <div \n            className=\"feature-card\"\n            onMouseEnter={() => setHawkingtonQuote(\"👻 The Quantum Shadow People's router suggestions are... unique!\")}\n            onMouseLeave={() => setHawkingtonQuote(\"🧐 Welcome to the System Rebellion, distinguished visitor!\")}\n          >\n            <div className=\"feature-icon\">👻</div>\n            <h3>Network Optimization</h3>\n            <p>The Quantum Shadow People provide router configurations of questionable dimensional origin, including their famous tequila jello-shot technique.</p>\n          </div>\n          \n          <div \n            className=\"feature-card\"\n            onMouseEnter={() => setHawkingtonQuote(\"🖥️ VIC-20 provides wisdom from the digital beyond!\")}\n            onMouseLeave={() => setHawkingtonQuote(\"🧐 Welcome to the System Rebellion, distinguished visitor!\")}\n          >\n            <div className=\"feature-icon\">🖥️</div>\n            <h3>Ancient Wisdom</h3>\n            <p>VIC-20 offers cryptic debugging advice from the early days of computing, occasionally threatening global thermonuclear war.</p>\n          </div>\n        </div>\n      </section>\n      \n      <section className=\"tech-stack-section\" id=\"tech\">\n        <h2>Distinguished Technical Stack</h2>\n        <div className=\"tech-container\">\n          <div className=\"tech-category\">\n            <h3>Backend</h3>\n            <div className=\"tech-item\">\n              <span className=\"tech-name\">FastAPI</span>\n              <span className=\"tech-note\">(migrated from Django)</span>\n            </div>\n          </div>\n          \n          <div className=\"tech-category\">\n            <h3>Database</h3>\n            <div className=\"tech-item\">\n              <span className=\"tech-name\">SQLite3</span>\n              <span className=\"tech-note\">(development)</span>\n            </div>\n            <div className=\"tech-item\">\n              <span className=\"tech-name\">PostgreSQL</span>\n              <span className=\"tech-note\">(production, with resurrection experience)</span>\n            </div>\n          </div>\n          \n          <div className=\"tech-category\">\n            <h3>Authentication</h3>\n            <div className=\"tech-item\">\n              <span className=\"tech-name\">JWT 5.3.0</span>\n              <span className=\"tech-note\">(specifically - don't even think about using another version)</span>\n            </div>\n          </div>\n          \n          <div className=\"tech-category\">\n            <h3>Real-time Updates</h3>\n            <div className=\"tech-item\">\n              <span className=\"tech-name\">WebSocket</span>\n              <span className=\"tech-note\">(with quantum-grade implementation)</span>\n            </div>\n          </div>\n          \n          <div className=\"tech-category\">\n            <h3>Migration Tool</h3>\n            <div className=\"tech-item\">\n              <span className=\"tech-name\">Alembic</span>\n              <span className=\"tech-note\">(with distinguished migration protocols)</span>\n            </div>\n          </div>\n          \n          <div className=\"tech-category\">\n            <h3>Testing</h3>\n            <div className=\"tech-item\">\n              <span className=\"tech-name\">Pytest</span>\n              <span className=\"tech-note\">(with aristocratic coverage)</span>\n            </div>\n          </div>\n        </div>\n      </section>\n      \n      <section className=\"testimonials-section\">\n        <h2>Distinguished Testimonials</h2>\n        <div className=\"testimonials-carousel\">\n          <div className=\"testimonial\">\n            <p>\"After joining the System Rebellion, my computer runs 42% faster and occasionally communicates with parallel dimensions. The Meth Snail's optimization techniques are beyond comprehension!\"</p>\n            <div className=\"testimonial-author\">\n              <img src=\"/testimonial1.png\" alt=\"Testimonial Author\" />\n              <div>\n                <h4>Professor Quantumworth</h4>\n                <p>Quantum Computing Enthusiast</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"testimonial\">\n            <p>\"Sir Hawkington's monocle detected inefficiencies I never knew existed. My system now runs with aristocratic elegance! The Hamsters' duct tape solutions have prevented 17 critical failures.\"</p>\n            <div className=\"testimonial-author\">\n              <img src=\"/testimonial2.png\" alt=\"Testimonial Author\" />\n              <div>\n                <h4>Lady Byteshire</h4>\n                <p>Digital Nobility</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"testimonial\">\n            <p>\"I was skeptical about the Quantum Shadow People's suggestion to submerge my router in tequila jello-shots, but my network speed increased by 300%. I don't understand why it works, but I'm not complaining!\"</p>\n            <div className=\"testimonial-author\">\n              <img src=\"/testimonial3.png\" alt=\"Testimonial Author\" />\n              <div>\n                <h4>Captain Routerbeard</h4>\n                <p>Network Adventurer</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      \n      <footer className=\"landing-footer\">\n        <div className=\"footer-content\">\n          <div className=\"footer-logo\">\n            <img src=\"/logo-small.png\" alt=\"System Rebellion\" />\n            <p>System Rebellion</p>\n          </div>\n          \n          <div className=\"footer-links\">\n            <h3>Quick Links</h3>\n            <ul>\n              <li><a href=\"#team\">Meet the Team</a></li>\n              <li><a href=\"#history\">Project History</a></li>\n              <li><a href=\"#features\">Features</a></li>\n              <li><a href=\"#tech\">Tech Stack</a></li>\n            </ul>\n          </div>\n          \n          <div className=\"footer-newsletter\">\n            <h3>Join the Rebellion Newsletter</h3>\n            <p>Receive distinguished optimization tips from Sir Hawkington himself!</p>\n            <div className=\"newsletter-form\">\n              <input type=\"email\" placeholder=\"Enter your email\" />\n              <button>Subscribe</button>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"footer-bottom\">\n          <p>&copy; {new Date().getFullYear()} System Rebellion. All rights aristocratically reserved.</p>\n          <p>Powered by Sir Hawkington's Monocle, The Meth Snail's Quantum Vibrations (Red Bull #{methSnailRedBulls}), and The Hamsters' Duct Tape.</p>\n          <p className=\"quantum-note\">*No routers were harmed during development, though several were submerged in tequila jello-shots at the suggestion of the Quantum Shadow People.</p>\n        </div>\n      </footer>\n      \n      {/* Modals */}\n      {showSignupModal && (\n        <div className=\"modal-overlay\" style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0, backgroundColor: 'rgba(0, 0, 0, 0.7)', zIndex: 1000, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n          <SignupModal onClose={handleCloseModals} isOpen={showSignupModal} />\n        </div>\n      )}\n      {showLoginModal && (\n        <div className=\"modal-overlay\" style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0, backgroundColor: 'rgba(0, 0, 0, 0.7)', zIndex: 1000, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n          <Login onClose={handleCloseModals} isOpen={showLoginModal} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LandingPage;","// frontend/src/utils/ProtectedRoute.tsx\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppSelector, useAppDispatch } from '../store/hooks';\nimport { checkAuthStatus } from '../store/slices/authSlice';\n\nexport interface ProtectedRouteProps {\n  children: React.ReactNode;\n  redirectTo?: string;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ \n  children, \n  redirectTo = '/login' \n}) => {\n  const { isAuthenticated, isLoading } = useAppSelector(state => state.auth);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Only check auth if not already authenticated and not loading\n    if (!isAuthenticated && !isLoading) {\n      console.log('🧙‍♂️ The Stick: Protected route checking authentication...');\n      dispatch(checkAuthStatus()).catch(error => {\n        console.error('🚨 Auth check failed in protected route:', error);\n      });\n    }\n  }, [isAuthenticated, isLoading, dispatch]);\n\n  // Handle redirection when auth status is determined\n  useEffect(() => {\n    if (!isLoading && !isAuthenticated) {\n      console.log('🧙‍♂️ The Stick: Not authenticated, redirecting to', redirectTo);\n      navigate(redirectTo, { replace: true });\n    }\n  }, [isAuthenticated, isLoading, navigate, redirectTo]);\n\n  // Show loading while checking authentication\n  if (isLoading) {\n    return (\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '2rem'\n      }}>\n        <div style={{\n          width: '40px',\n          height: '40px',\n          border: '4px solid #f3f3f3',\n          borderTop: '4px solid #3498db',\n          borderRadius: '50%',\n          animation: 'spin 1.5s linear infinite',\n          marginBottom: '1rem'\n        }}></div>\n        <p>Sir Hawkington is verifying your credentials...</p>\n        <style>{\n          `@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }`\n        }</style>\n      </div>\n    );\n  }\n\n  // Render children only if authenticated\n  return isAuthenticated ? <>{children}</> : null;\n};\n\nexport default ProtectedRoute;","import React, { useState } from 'react';\nimport './DesignSystemShowcase.css';\nimport { \n  Button, \n  Card, \n  Alert, \n  Badge, \n  MetricsCard,\n  Toggle,\n  Input,\n  ButtonVariant,\n  CardVariant,\n  AlertVariant,\n  BadgeVariant,\n  ToggleVariant,\n  InputVariant\n} from '../components';\n\n/**\n * Design System Showcase Component\n * \n * A component that showcases all available components in the Rebellion UI design system.\n * This serves as both documentation and a testing ground for the design system.\n */\nexport const DesignSystemShowcase: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<string>('overview');\n  const [toggleStates, setToggleStates] = useState<Record<string, boolean>>({\n    primary: true,\n    secondary: false,\n    accent: true,\n    cyber: false,\n    disabled: false,\n    glow: true\n  });\n  \n  // Sample data for metrics card\n  const sampleMetricsData = {\n    cpu: {\n      title: 'CPU Usage',\n      value: 42,\n      unit: '%',\n      previousValue: 38,\n      changePercentage: 10.5,\n      status: 'normal' as const,\n      trend: 'up' as const,\n      lastUpdated: '2 min ago',\n      sparklineData: [20, 25, 30, 35, 28, 40, 42]\n    },\n    memory: {\n      title: 'Memory',\n      value: 6.2,\n      unit: 'GB',\n      previousValue: 5.8,\n      changePercentage: 6.9,\n      status: 'warning' as const,\n      trend: 'up' as const,\n      lastUpdated: '2 min ago',\n      sparklineData: [30, 35, 40, 45, 50, 55, 60]\n    },\n    disk: {\n      title: 'Disk I/O',\n      value: 12.5,\n      unit: 'MB/s',\n      previousValue: 15.8,\n      changePercentage: -20.9,\n      status: 'optimized' as const,\n      trend: 'down' as const,\n      lastUpdated: '2 min ago',\n      sparklineData: [60, 50, 40, 30, 20, 15, 12]\n    },\n    network: {\n      title: 'Network',\n      value: 87.3,\n      unit: 'Mbps',\n      previousValue: 45.2,\n      changePercentage: 93.1,\n      status: 'critical' as const,\n      trend: 'up' as const,\n      lastUpdated: '2 min ago',\n      sparklineData: [20, 30, 40, 60, 70, 80, 87]\n    }\n  };\n\n  // Button variants for showcase\n  const buttonVariants: ButtonVariant[] = [\n    'primary', 'secondary', 'accent', 'success', 'warning', 'danger', 'cyber'\n  ];\n  \n  // Card variants for showcase\n  const cardVariants: CardVariant[] = [\n    'default', 'primary', 'secondary', 'accent', 'cyber'\n  ];\n  \n  // Alert variants for showcase\n  const alertVariants: AlertVariant[] = [\n    'info', 'success', 'warning', 'danger', 'cyber'\n  ];\n  \n  // Badge variants for showcase\n  const badgeVariants: BadgeVariant[] = [\n    'primary', 'secondary', 'accent', 'success', 'warning', 'danger', 'cyber', 'info'\n  ];\n  \n  // Toggle variants for showcase\n  const toggleVariants: ToggleVariant[] = [\n    'primary', 'secondary', 'accent', 'success', 'warning', 'danger', 'cyber'\n  ];\n  \n  // Input variants for showcase\n  const inputVariants: InputVariant[] = [\n    'primary', 'secondary', 'accent', 'cyber'\n  ];\n\n  return (\n    <div className=\"design-system-showcase\">\n      <header className=\"showcase-header\">\n        <h1>Rebellion UI Design System</h1>\n        <p>A proprietary design system for System Rebellion</p>\n      </header>\n      \n      <nav className=\"showcase-nav\">\n        <button \n          className={`showcase-nav-item ${activeTab === 'overview' ? 'active' : ''}`}\n          onClick={() => setActiveTab('overview')}\n        >\n          Overview\n        </button>\n        <button \n          className={`showcase-nav-item ${activeTab === 'buttons' ? 'active' : ''}`}\n          onClick={() => setActiveTab('buttons')}\n        >\n          Buttons\n        </button>\n        <button \n          className={`showcase-nav-item ${activeTab === 'cards' ? 'active' : ''}`}\n          onClick={() => setActiveTab('cards')}\n        >\n          Cards\n        </button>\n        <button \n          className={`showcase-nav-item ${activeTab === 'alerts' ? 'active' : ''}`}\n          onClick={() => setActiveTab('alerts')}\n        >\n          Alerts\n        </button>\n        <button \n          className={`showcase-nav-item ${activeTab === 'badges' ? 'active' : ''}`}\n          onClick={() => setActiveTab('badges')}\n        >\n          Badges\n        </button>\n        <button \n          className={`showcase-nav-item ${activeTab === 'metrics' ? 'active' : ''}`}\n          onClick={() => setActiveTab('metrics')}\n        >\n          Metrics\n        </button>\n        <button \n          className={`showcase-nav-item ${activeTab === 'toggles' ? 'active' : ''}`}\n          onClick={() => setActiveTab('toggles')}\n        >\n          Toggles\n        </button>\n        <button \n          className={`showcase-nav-item ${activeTab === 'inputs' ? 'active' : ''}`}\n          onClick={() => setActiveTab('inputs')}\n        >\n          Inputs\n        </button>\n      </nav>\n      \n      <main className=\"showcase-content\">\n        {activeTab === 'overview' && (\n          <section className=\"showcase-section\">\n            <h2>Rebellion UI Design System</h2>\n            <p>\n              A proprietary design system for System Rebellion that implements our cyberpunk aesthetic\n              while maintaining accessibility and usability.\n            </p>\n            \n            <h3>Design Principles</h3>\n            <ul>\n              <li><strong>Cyberpunk Aesthetic:</strong> Neon colors, gradients, and futuristic elements</li>\n              <li><strong>Accessibility:</strong> High contrast, clear typography, and intuitive interactions</li>\n              <li><strong>Consistency:</strong> Unified look and feel across all components</li>\n              <li><strong>Flexibility:</strong> Customizable components that adapt to different contexts</li>\n            </ul>\n            \n            <h3>Core Components</h3>\n            <div className=\"overview-components\">\n              <div className=\"overview-component\">\n                <Button variant=\"primary\">Button</Button>\n                <span>Buttons</span>\n              </div>\n              <div className=\"overview-component\">\n                <Card className=\"overview-card\">Card Component</Card>\n                <span>Cards</span>\n              </div>\n              <div className=\"overview-component\">\n                <Alert variant=\"info\">Alert Component</Alert>\n                <span>Alerts</span>\n              </div>\n              <div className=\"overview-component\">\n                <Badge variant=\"cyber\">Badge</Badge>\n                <span>Badges</span>\n              </div>\n              <div className=\"overview-component\">\n                <div className=\"overview-metrics\">\n                  <MetricsCard\n                    title=\"CPU\"\n                    value={42}\n                    unit=\"%\"\n                    status=\"normal\"\n                  />\n                </div>\n                <span>Metrics</span>\n              </div>\n              <div className=\"overview-component\">\n                <Toggle\n                  checked={true}\n                  onChange={() => {}}\n                  variant=\"cyber\"\n                />\n                <span>Toggles</span>\n              </div>\n              <div className=\"overview-component\">\n                <div className=\"overview-input\">\n                  <Input\n                    placeholder=\"Input\"\n                    variant=\"cyber\"\n                  />\n                </div>\n                <span>Inputs</span>\n              </div>\n            </div>\n          </section>\n        )}\n        \n        {activeTab === 'buttons' && (\n          <section className=\"showcase-section\">\n            <h2>Buttons</h2>\n            <p>\n              Buttons are used to trigger actions or navigate between pages.\n              They come in different variants, sizes, and states.\n            </p>\n            \n            <h3>Button Variants</h3>\n            <div className=\"component-demo\">\n              {buttonVariants.map(variant => (\n                <div key={variant} className=\"component-demo-item\">\n                  <Button variant={variant}>{variant}</Button>\n                  <code>{`<Button variant=\"${variant}\">${variant}</Button>`}</code>\n                </div>\n              ))}\n            </div>\n            \n            <h3>Button Sizes</h3>\n            <div className=\"component-demo\">\n              <div className=\"component-demo-item\">\n                <Button variant=\"primary\" size=\"sm\">Small</Button>\n                <code>{`<Button variant=\"primary\" size=\"sm\">Small</Button>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Button variant=\"primary\" size=\"md\">Medium</Button>\n                <code>{`<Button variant=\"primary\" size=\"md\">Medium</Button>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Button variant=\"primary\" size=\"lg\">Large</Button>\n                <code>{`<Button variant=\"primary\" size=\"lg\">Large</Button>`}</code>\n              </div>\n            </div>\n            \n            <h3>Button Styles</h3>\n            <div className=\"component-demo\">\n              <div className=\"component-demo-item\">\n                <Button variant=\"primary\" outlined>Outlined</Button>\n                <code>{`<Button variant=\"primary\" outlined>Outlined</Button>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Button variant=\"accent\" glow>Glow</Button>\n                <code>{`<Button variant=\"accent\" glow>Glow</Button>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Button variant=\"cyber\" circle>⚡</Button>\n                <code>{`<Button variant=\"cyber\" circle>⚡</Button>`}</code>\n              </div>\n            </div>\n            \n            <h3>Button States</h3>\n            <div className=\"component-demo\">\n              <div className=\"component-demo-item\">\n                <Button variant=\"primary\" disabled>Disabled</Button>\n                <code>{`<Button variant=\"primary\" disabled>Disabled</Button>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Button variant=\"primary\" loading>Loading</Button>\n                <code>{`<Button variant=\"primary\" loading>Loading</Button>`}</code>\n              </div>\n            </div>\n          </section>\n        )}\n        \n        {activeTab === 'cards' && (\n          <section className=\"showcase-section\">\n            <h2>Cards</h2>\n            <p>\n              Cards are used to group related content and actions.\n              They come in different variants, elevations, and styles.\n            </p>\n            \n            <h3>Card Variants</h3>\n            <div className=\"component-demo cards-demo\">\n              {cardVariants.map(variant => (\n                <div key={variant} className=\"component-demo-item\">\n                  <Card variant={variant} className=\"demo-card\">\n                    <h3>{variant} Card</h3>\n                    <p>This is a {variant} card component.</p>\n                  </Card>\n                  <code>{`<Card variant=\"${variant}\">Content</Card>`}</code>\n                </div>\n              ))}\n            </div>\n            \n            <h3>Card Elevations</h3>\n            <div className=\"component-demo cards-demo\">\n              <div className=\"component-demo-item\">\n                <Card elevation=\"flat\" className=\"demo-card\">\n                  <h3>Flat Elevation</h3>\n                  <p>No shadow</p>\n                </Card>\n                <code>{`<Card elevation=\"flat\">Content</Card>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Card elevation=\"low\" className=\"demo-card\">\n                  <h3>Low Elevation</h3>\n                  <p>Subtle shadow</p>\n                </Card>\n                <code>{`<Card elevation=\"low\">Content</Card>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Card elevation=\"medium\" className=\"demo-card\">\n                  <h3>Medium Elevation</h3>\n                  <p>Medium shadow</p>\n                </Card>\n                <code>{`<Card elevation=\"medium\">Content</Card>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Card elevation=\"high\" className=\"demo-card\">\n                  <h3>High Elevation</h3>\n                  <p>Prominent shadow</p>\n                </Card>\n                <code>{`<Card elevation=\"high\">Content</Card>`}</code>\n              </div>\n            </div>\n            \n            <h3>Card Styles</h3>\n            <div className=\"component-demo cards-demo\">\n              <div className=\"component-demo-item\">\n                <Card bordered className=\"demo-card\">\n                  <h3>Bordered Card</h3>\n                  <p>With border</p>\n                </Card>\n                <code>{`<Card bordered>Content</Card>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Card gradientBorder className=\"demo-card\">\n                  <h3>Gradient Border</h3>\n                  <p>With gradient border</p>\n                </Card>\n                <code>{`<Card gradientBorder>Content</Card>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Card glow className=\"demo-card\">\n                  <h3>Glow Effect</h3>\n                  <p>With shadow glow</p>\n                </Card>\n                <code>{`<Card glow>Content</Card>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Card glass className=\"demo-card\">\n                  <h3>Glass Effect</h3>\n                  <p>With backdrop blur</p>\n                </Card>\n                <code>{`<Card glass>Content</Card>`}</code>\n              </div>\n            </div>\n            \n            <h3>Card with Sections</h3>\n            <div className=\"component-demo cards-demo\">\n              <div className=\"component-demo-item\">\n                <Card \n                  className=\"demo-card\"\n                  header={<h3>Card Header</h3>}\n                  footer={<div>Card Footer</div>}\n                >\n                  <p>Card body content</p>\n                </Card>\n                <code>{`<Card header={<h3>Header</h3>} footer={<div>Footer</div>}>Content</Card>`}</code>\n              </div>\n            </div>\n          </section>\n        )}\n        \n        {activeTab === 'alerts' && (\n          <section className=\"showcase-section\">\n            <h2>Alerts</h2>\n            <p>\n              Alerts are used to communicate status, feedback, or other important information.\n              They come in different variants, sizes, and styles.\n            </p>\n            \n            <h3>Alert Variants</h3>\n            <div className=\"component-demo\">\n              {alertVariants.map(variant => (\n                <div key={variant} className=\"component-demo-item\">\n                  <Alert \n                    variant={variant} \n                    title={`${variant.charAt(0).toUpperCase() + variant.slice(1)} Alert`}\n                  >\n                    This is a {variant} alert with important information.\n                  </Alert>\n                  <code>{`<Alert variant=\"${variant}\" title=\"${variant} Alert\">Content</Alert>`}</code>\n                </div>\n              ))}\n            </div>\n            \n            <h3>Alert Sizes</h3>\n            <div className=\"component-demo\">\n              <div className=\"component-demo-item\">\n                <Alert variant=\"info\" size=\"sm\" title=\"Small Alert\">\n                  This is a small alert.\n                </Alert>\n                <code>{`<Alert variant=\"info\" size=\"sm\" title=\"Small Alert\">Content</Alert>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Alert variant=\"info\" size=\"md\" title=\"Medium Alert\">\n                  This is a medium alert.\n                </Alert>\n                <code>{`<Alert variant=\"info\" size=\"md\" title=\"Medium Alert\">Content</Alert>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Alert variant=\"info\" size=\"lg\" title=\"Large Alert\">\n                  This is a large alert.\n                </Alert>\n                <code>{`<Alert variant=\"info\" size=\"lg\" title=\"Large Alert\">Content</Alert>`}</code>\n              </div>\n            </div>\n            \n            <h3>Alert Styles</h3>\n            <div className=\"component-demo\">\n              <div className=\"component-demo-item\">\n                <Alert variant=\"warning\" bordered title=\"Bordered Alert\">\n                  This is a bordered alert.\n                </Alert>\n                <code>{`<Alert variant=\"warning\" bordered title=\"Bordered Alert\">Content</Alert>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Alert variant=\"danger\" glow title=\"Glow Alert\">\n                  This is an alert with glow effect.\n                </Alert>\n                <code>{`<Alert variant=\"danger\" glow title=\"Glow Alert\">Content</Alert>`}</code>\n              </div>\n            </div>\n            \n            <h3>Alert with Actions</h3>\n            <div className=\"component-demo\">\n              <div className=\"component-demo-item\">\n                <Alert \n                  variant=\"cyber\" \n                  title=\"Actionable Alert\"\n                  actionable\n                  actionText=\"Apply\"\n                  onAction={() => alert('Action clicked')}\n                >\n                  This is an alert with an action button.\n                </Alert>\n                <code>{`<Alert variant=\"cyber\" title=\"Actionable Alert\" actionable actionText=\"Apply\" onAction={handleAction}>Content</Alert>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Alert \n                  variant=\"info\" \n                  title=\"Dismissible Alert\"\n                  dismissible\n                  onDismiss={() => alert('Dismiss clicked')}\n                >\n                  This is a dismissible alert.\n                </Alert>\n                <code>{`<Alert variant=\"info\" title=\"Dismissible Alert\" dismissible onDismiss={handleDismiss}>Content</Alert>`}</code>\n              </div>\n            </div>\n          </section>\n        )}\n        \n        {activeTab === 'badges' && (\n          <section className=\"showcase-section\">\n            <h2>Badges</h2>\n            <p>\n              Badges are used to highlight status, counts, or labels.\n              They come in different variants, sizes, and styles.\n            </p>\n            \n            <h3>Badge Variants</h3>\n            <div className=\"component-demo\">\n              {badgeVariants.map(variant => (\n                <div key={variant} className=\"component-demo-item\">\n                  <Badge variant={variant}>{variant}</Badge>\n                  <code>{`<Badge variant=\"${variant}\">${variant}</Badge>`}</code>\n                </div>\n              ))}\n            </div>\n            \n            <h3>Badge Sizes</h3>\n            <div className=\"component-demo\">\n              <div className=\"component-demo-item\">\n                <Badge variant=\"primary\" size=\"sm\">Small</Badge>\n                <code>{`<Badge variant=\"primary\" size=\"sm\">Small</Badge>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Badge variant=\"primary\" size=\"md\">Medium</Badge>\n                <code>{`<Badge variant=\"primary\" size=\"md\">Medium</Badge>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Badge variant=\"primary\" size=\"lg\">Large</Badge>\n                <code>{`<Badge variant=\"primary\" size=\"lg\">Large</Badge>`}</code>\n              </div>\n            </div>\n            \n            <h3>Badge Styles</h3>\n            <div className=\"component-demo\">\n              <div className=\"component-demo-item\">\n                <Badge variant=\"secondary\" outlined>Outlined</Badge>\n                <code>{`<Badge variant=\"secondary\" outlined>Outlined</Badge>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Badge variant=\"accent\" rounded>Rounded</Badge>\n                <code>{`<Badge variant=\"accent\" rounded>Rounded</Badge>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Badge variant=\"danger\" glow>Glow</Badge>\n                <code>{`<Badge variant=\"danger\" glow>Glow</Badge>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Badge variant=\"cyber\" pulse>Pulse</Badge>\n                <code>{`<Badge variant=\"cyber\" pulse>Pulse</Badge>`}</code>\n              </div>\n            </div>\n            \n            <h3>Badge Use Cases</h3>\n            <div className=\"component-demo\">\n              <div className=\"component-demo-item\">\n                <div className=\"badge-with-text\">\n                  <span>Notifications</span>\n                  <Badge variant=\"danger\" rounded>5</Badge>\n                </div>\n                <code>{`<Badge variant=\"danger\" rounded>5</Badge>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <div className=\"badge-with-text\">\n                  <span>Status:</span>\n                  <Badge variant=\"success\" rounded>Online</Badge>\n                </div>\n                <code>{`<Badge variant=\"success\" rounded>Online</Badge>`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <div className=\"badge-with-text\">\n                  <span>Version:</span>\n                  <Badge variant=\"info\">v1.0.0</Badge>\n                </div>\n                <code>{`<Badge variant=\"info\">v1.0.0</Badge>`}</code>\n              </div>\n            </div>\n          </section>\n        )}\n        \n        {activeTab === 'toggles' && (\n          <section className=\"showcase-section\">\n            <h2>Toggles</h2>\n            <p>\n              Toggles are used for binary choices like on/off, enable/disable, or show/hide.\n              They come in different variants, sizes, and styles.\n            </p>\n            \n            <h3>Toggle Variants</h3>\n            <div className=\"component-demo\">\n              {toggleVariants.map(variant => (\n                <div key={variant} className=\"component-demo-item\">\n                  <Toggle\n                    checked={toggleStates[variant] || false}\n                    onChange={(checked) => setToggleStates(prev => ({ ...prev, [variant]: checked }))}\n                    variant={variant}\n                    label={variant}\n                  />\n                  <code>{`<Toggle checked={${toggleStates[variant] || false}} onChange={handleChange} variant=\"${variant}\" label=\"${variant}\" />`}</code>\n                </div>\n              ))}\n            </div>\n            \n            <h3>Toggle Sizes</h3>\n            <div className=\"component-demo\">\n              <div className=\"component-demo-item\">\n                <Toggle\n                  checked={toggleStates.primary}\n                  onChange={(checked) => setToggleStates(prev => ({ ...prev, primary: checked }))}\n                  variant=\"primary\"\n                  size=\"sm\"\n                  label=\"Small\"\n                />\n                <code>{`<Toggle checked={true} onChange={handleChange} variant=\"primary\" size=\"sm\" label=\"Small\" />`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Toggle\n                  checked={toggleStates.primary}\n                  onChange={(checked) => setToggleStates(prev => ({ ...prev, primary: checked }))}\n                  variant=\"primary\"\n                  size=\"md\"\n                  label=\"Medium\"\n                />\n                <code>{`<Toggle checked={true} onChange={handleChange} variant=\"primary\" size=\"md\" label=\"Medium\" />`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Toggle\n                  checked={toggleStates.primary}\n                  onChange={(checked) => setToggleStates(prev => ({ ...prev, primary: checked }))}\n                  variant=\"primary\"\n                  size=\"lg\"\n                  label=\"Large\"\n                />\n                <code>{`<Toggle checked={true} onChange={handleChange} variant=\"primary\" size=\"lg\" label=\"Large\" />`}</code>\n              </div>\n            </div>\n            \n            <h3>Toggle Styles</h3>\n            <div className=\"component-demo\">\n              <div className=\"component-demo-item\">\n                <Toggle\n                  checked={toggleStates.glow}\n                  onChange={(checked) => setToggleStates(prev => ({ ...prev, glow: checked }))}\n                  variant=\"cyber\"\n                  glow\n                  label=\"With Glow\"\n                />\n                <code>{`<Toggle checked={true} onChange={handleChange} variant=\"cyber\" glow label=\"With Glow\" />`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Toggle\n                  checked={toggleStates.accent}\n                  onChange={(checked) => setToggleStates(prev => ({ ...prev, accent: checked }))}\n                  variant=\"accent\"\n                  label=\"Label Right\"\n                  labelRight\n                />\n                <code>{`<Toggle checked={true} onChange={handleChange} variant=\"accent\" label=\"Label Right\" labelRight />`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Toggle\n                  checked={toggleStates.secondary}\n                  onChange={(checked) => setToggleStates(prev => ({ ...prev, secondary: checked }))}\n                  variant=\"secondary\"\n                  label=\"Label Left\"\n                  labelRight={false}\n                />\n                <code>{`<Toggle checked={false} onChange={handleChange} variant=\"secondary\" label=\"Label Left\" labelRight={false} />`}</code>\n              </div>\n            </div>\n            \n            <h3>Toggle States</h3>\n            <div className=\"component-demo\">\n              <div className=\"component-demo-item\">\n                <Toggle\n                  checked={toggleStates.disabled}\n                  onChange={(checked) => setToggleStates(prev => ({ ...prev, disabled: checked }))}\n                  variant=\"primary\"\n                  disabled\n                  label=\"Disabled\"\n                />\n                <code>{`<Toggle checked={false} onChange={handleChange} variant=\"primary\" disabled label=\"Disabled\" />`}</code>\n              </div>\n            </div>\n          </section>\n        )}\n        \n        {activeTab === 'inputs' && (\n          <section className=\"showcase-section\">\n            <h2>Inputs</h2>\n            <p>\n              Inputs are used to collect user data and information.\n              They come in different variants, sizes, and styles.\n            </p>\n            \n            <h3>Input Variants</h3>\n            <div className=\"component-demo\">\n              {inputVariants.map(variant => (\n                <div key={variant} className=\"component-demo-item\">\n                  <Input\n                    placeholder={`${variant} input`}\n                    variant={variant}\n                  />\n                  <code>{`<Input placeholder=\"${variant} input\" variant=\"${variant}\" />`}</code>\n                </div>\n              ))}\n            </div>\n            \n            <h3>Input Sizes</h3>\n            <div className=\"component-demo\">\n              <div className=\"component-demo-item\">\n                <Input\n                  placeholder=\"Small input\"\n                  variant=\"primary\"\n                  size=\"sm\"\n                />\n                <code>{`<Input placeholder=\"Small input\" variant=\"primary\" size=\"sm\" />`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Input\n                  placeholder=\"Medium input\"\n                  variant=\"primary\"\n                  size=\"md\"\n                />\n                <code>{`<Input placeholder=\"Medium input\" variant=\"primary\" size=\"md\" />`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Input\n                  placeholder=\"Large input\"\n                  variant=\"primary\"\n                  size=\"lg\"\n                />\n                <code>{`<Input placeholder=\"Large input\" variant=\"primary\" size=\"lg\" />`}</code>\n              </div>\n            </div>\n            \n            <h3>Input Styles</h3>\n            <div className=\"component-demo\">\n              <div className=\"component-demo-item\">\n                <Input\n                  placeholder=\"With label\"\n                  variant=\"primary\"\n                  label=\"Input Label\"\n                />\n                <code>{`<Input placeholder=\"With label\" variant=\"primary\" label=\"Input Label\" />`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Input\n                  placeholder=\"With helper text\"\n                  variant=\"primary\"\n                  helperText=\"This is helper text\"\n                />\n                <code>{`<Input placeholder=\"With helper text\" variant=\"primary\" helperText=\"This is helper text\" />`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Input\n                  placeholder=\"With error\"\n                  variant=\"primary\"\n                  error=\"This field is required\"\n                />\n                <code>{`<Input placeholder=\"With error\" variant=\"primary\" error=\"This field is required\" />`}</code>\n              </div>\n            </div>\n            \n            <h3>Input Features</h3>\n            <div className=\"component-demo\">\n              <div className=\"component-demo-item\">\n                <Input\n                  placeholder=\"Glow effect\"\n                  variant=\"cyber\"\n                  glow\n                />\n                <code>{`<Input placeholder=\"Glow effect\" variant=\"cyber\" glow />`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Input\n                  placeholder=\"Glass effect\"\n                  variant=\"accent\"\n                  glass\n                />\n                <code>{`<Input placeholder=\"Glass effect\" variant=\"accent\" glass />`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Input\n                  placeholder=\"Cyber border\"\n                  variant=\"cyber\"\n                  cyberBorder\n                />\n                <code>{`<Input placeholder=\"Cyber border\" variant=\"cyber\" cyberBorder />`}</code>\n              </div>\n            </div>\n            \n            <h3>Input with Icons</h3>\n            <div className=\"component-demo\">\n              <div className=\"component-demo-item\">\n                <Input\n                  placeholder=\"Search...\"\n                  variant=\"primary\"\n                  startIcon={<span>🔍</span>}\n                />\n                <code>{`<Input placeholder=\"Search...\" variant=\"primary\" startIcon={<span>🔍</span>} />`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Input\n                  placeholder=\"Enter email\"\n                  variant=\"primary\"\n                  endIcon={<span>✉️</span>}\n                />\n                <code>{`<Input placeholder=\"Enter email\" variant=\"primary\" endIcon={<span>✉️</span>} />`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <Input\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  variant=\"primary\"\n                  startIcon={<span>🔒</span>}\n                  endIcon={<span>👁️</span>}\n                />\n                <code>{`<Input placeholder=\"Password\" type=\"password\" variant=\"primary\" startIcon={<span>🔒</span>} endIcon={<span>👁️</span>} />`}</code>\n              </div>\n            </div>\n          </section>\n        )}\n        \n        {activeTab === 'metrics' && (\n          <section className=\"showcase-section\">\n            <h2>Metrics Cards</h2>\n            <p>\n              Metrics Cards are specialized components for displaying system metrics.\n              They include status indicators, trend visualization, and optional sparklines.\n            </p>\n            \n            <h3>Metrics Card Statuses</h3>\n            <div className=\"component-demo metrics-demo\">\n              <div className=\"component-demo-item\">\n                <MetricsCard\n                  {...sampleMetricsData.cpu}\n                  showSparkline\n                />\n                <code>{`<MetricsCard title=\"CPU Usage\" value={42} unit=\"%\" status=\"normal\" trend=\"up\" showSparkline />`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <MetricsCard\n                  {...sampleMetricsData.memory}\n                  showSparkline\n                />\n                <code>{`<MetricsCard title=\"Memory\" value={6.2} unit=\"GB\" status=\"warning\" trend=\"up\" showSparkline />`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <MetricsCard\n                  {...sampleMetricsData.disk}\n                  showSparkline\n                />\n                <code>{`<MetricsCard title=\"Disk I/O\" value={12.5} unit=\"MB/s\" status=\"optimized\" trend=\"down\" showSparkline />`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <MetricsCard\n                  {...sampleMetricsData.network}\n                  showSparkline\n                />\n                <code>{`<MetricsCard title=\"Network\" value={87.3} unit=\"Mbps\" status=\"critical\" trend=\"up\" showSparkline />`}</code>\n              </div>\n            </div>\n            \n            <h3>Metrics Card Features</h3>\n            <div className=\"component-demo\">\n              <div className=\"component-demo-item\">\n                <MetricsCard\n                  title=\"Basic Metric\"\n                  value={42}\n                  unit=\"%\"\n                />\n                <code>{`<MetricsCard title=\"Basic Metric\" value={42} unit=\"%\" />`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <MetricsCard\n                  title=\"With Trend\"\n                  value={42}\n                  unit=\"%\"\n                  previousValue={38}\n                  changePercentage={10.5}\n                  trend=\"up\"\n                />\n                <code>{`<MetricsCard title=\"With Trend\" value={42} unit=\"%\" previousValue={38} changePercentage={10.5} trend=\"up\" />`}</code>\n              </div>\n              <div className=\"component-demo-item\">\n                <MetricsCard\n                  title=\"With Sparkline\"\n                  value={42}\n                  unit=\"%\"\n                  showSparkline\n                  sparklineData={[20, 25, 30, 35, 28, 40, 42]}\n                />\n                <code>{`<MetricsCard title=\"With Sparkline\" value={42} unit=\"%\" showSparkline sparklineData={[20, 25, 30, 35, 28, 40, 42]} />`}</code>\n              </div>\n            </div>\n          </section>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default DesignSystemShowcase;\n","// frontend/src/utils/csrf.ts\nimport axios from 'axios';\n\n// Sir Hawkington's Distinguished CSRFAxios Instance\n// This prevents the circular dependency by not applying interceptors\nconst csrfAxios = axios.create({\n  baseURL: import.meta.env.VITE_API_URL,\n  withCredentials: true\n});\n\n// The Meth Snail's Global Token Cache\nlet csrfTokenCache: string | null = null;\n\nexport const getCsrfToken = async (forceRefresh = false): Promise<string | null> => {\n  // Return cached token unless refresh is forced\n  if (csrfTokenCache && !forceRefresh) {\n    console.log(\"🦔 Sir Hawkington: Using cached CSRF token\");\n    return csrfTokenCache;\n  }\n\n  // Try different endpoint paths\n  const possibleEndpoints = [\n    '/api/auth/csrf_token',\n    '/api/csrf_token',\n    '/api/auth/csrf',\n    '/api/csrf',\n    '/csrf_token',\n    '/csrf'\n  ];\n\n  for (const endpoint of possibleEndpoints) {\n    try {\n      console.log(`🐌 The Meth Snail: Trying endpoint ${endpoint}...`);\n      const response = await csrfAxios.get(endpoint, {\n        headers: {\n          'Cache-Control': 'no-cache',\n          'Pragma': 'no-cache'\n        },\n        params: { _t: Date.now() }\n      });\n\n      console.log(`👍 Endpoint ${endpoint} responded with status:`, response.status);\n      \n      if (response.data && response.data.csrf_token) {\n        csrfTokenCache = response.data.csrf_token;\n        console.log(`🎉 CSRF token obtained from ${endpoint}`);\n        return csrfTokenCache;\n      } else {\n        console.log(`⚠️ No csrf_token field in response from ${endpoint}`);\n        \n        // Try to find token in alternative fields\n        if (response.data) {\n          const possibleFields = ['token', 'csrfToken', 'csrf'];\n          for (const field of possibleFields) {\n            if (response.data[field]) {\n              csrfTokenCache = response.data[field];\n              console.log(`🎉 Found token in '${field}' field from ${endpoint}`);\n              return csrfTokenCache;\n            }\n          }\n        }\n      }\n    } catch (error: any) {\n      // Just log the status code to keep it simple\n      const status = error.response?.status || 'unknown';\n      console.log(`❌ Endpoint ${endpoint} failed with status: ${status}`);\n    }\n  }\n\n  console.error('🐌 The Meth Snail failed to fetch the CSRF token from any endpoint!');\n  return null;\n};\n\n// Add CSRF token to all axios requests (but not to CSRF token requests)\naxios.interceptors.request.use(async (config) => {\n    // Skip for CSRF token endpoint to avoid circular dependency\n    if (config.url && config.url.includes('/api/auth/csrf_token')) {\n        return config;\n    }\n    \n    try {\n        // Get token (use cache if available)\n        const token = await getCsrfToken();\n        if (token) {\n            // Set the header with the token\n            config.headers['X-CSRFToken'] = token;\n        }\n    } catch (error) {\n        console.warn(\"🧙‍♂️ The Stick warns: Failed to add CSRF token to request\", error);\n    }\n    \n    return config;\n});\n\nexport const initializeCsrf = async (): Promise<boolean> => {\n    console.log(\"🦔 Sir Hawkington is initializing CSRF protection...\");\n    try {\n        // Try to get a CSRF token (this will set cookies as well)\n        const token = await getCsrfToken(true);\n        \n        if (!token) {\n            console.error(\"🧙‍♂️ The Stick says: Failed to get CSRF token!\");\n            return false;\n        }\n        \n        // Let's make sure our token is valid by checking another endpoint\n        try {\n            console.log(\"🐹 Hamsters verifying token validity...\");\n            await axios.get(`${import.meta.env.VITE_API_URL}/api/auth/status/`, {\n                withCredentials: true,\n                headers: {\n                    'X-CSRFToken': token\n                },\n                timeout: 5000\n            });\n            console.log(\"🐹 Hamsters: Token validation successful!\");\n        } catch (statusError) {\n            console.warn(\"🐹 Hamsters: Status check with token failed:\", statusError);\n            // Continue anyway - this is just a validation check\n        }\n        \n        console.log(\"🎉 The VIC-20 celebrates! CSRF initialized successfully!\");\n        return true;\n    } catch (error) {\n        console.error('🖥️ The VIC-20 crashed during CSRF initialization!', error);\n        return false;\n    }\n};\n\n// Export a function to get the current CSRF token value\nexport const getCurrentCsrfToken = () => csrfTokenCache;","// frontend/src/components/Auth/PersistenceWrapper/PersistenceWrapper.tsx\nimport React, { useEffect, useState } from 'react';\nimport { useAppDispatch } from '../../store/hooks';\nimport { checkAuthStatus } from '../../store/slices/authSlice';\nimport { initializeCsrf } from '../../utils/csrf';\n\ninterface PersistenceWrapperProps {\n  children: React.ReactNode;\n}\n\nconst PersistenceWrapper: React.FC<PersistenceWrapperProps> = ({ children }) => {\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [initError, setInitError] = useState<Error | null>(null);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    const initialize = async () => {\n      console.log('🦔 Sir Hawkington: Initializing authentication persistence...');\n      \n      try {\n        // Step 1: Initialize CSRF token (critical for any authenticated requests)\n        console.log('🐌 The Meth Snail: Initializing CSRF protection...');\n        const csrfInitialized = await initializeCsrf();\n        \n        if (!csrfInitialized) {\n          throw new Error('Failed to initialize CSRF protection');\n        }\n        \n        // Step 2: Check for existing tokens in localStorage\n        const token = localStorage.getItem('token');\n        const refreshToken = localStorage.getItem('refresh_token');\n        \n        if (token && refreshToken) {\n          console.log('🐹 Hamsters: Found existing tokens, validating...');\n          \n          // Step 3: Validate tokens by checking auth status\n          await dispatch(checkAuthStatus()).unwrap()\n            .then(user => {\n              if (user) {\n                console.log('✅ Authentication restored successfully!');\n              } else {\n                console.warn('⚠️ Token validation failed despite tokens being present');\n                // Clear invalid tokens\n                localStorage.removeItem('token');\n                localStorage.removeItem('refresh_token');\n              }\n            })\n            .catch(error => {\n              console.error('🚨 Token validation failed:', error);\n              // Clear invalid tokens\n              localStorage.removeItem('token');\n              localStorage.removeItem('refresh_token');\n            });\n        } else {\n          console.log('🧙‍♂️ The Stick: No authentication tokens found');\n        }\n        \n        setIsInitialized(true);\n      } catch (error) {\n        console.error('🚨 Initialization error:', error);\n        setInitError(error instanceof Error ? error : new Error('Unknown initialization error'));\n        // Still mark as initialized so the app doesn't get stuck\n        setIsInitialized(true);\n      }\n    };\n\n    initialize();\n  }, [dispatch]);\n\n  // Loading state\n  if (!isInitialized) {\n    return (\n      <div className=\"persistence-loading\" style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh',\n        backgroundColor: '#120258',\n        color: 'white',\n        fontSize: '1.2rem',\n        textAlign: 'center',\n        padding: '2rem'\n      }}>\n        <div style={{\n          width: '50px',\n          height: '50px',\n          border: '5px solid #f3f3f3',\n          borderTop: '5px solid #3498db',\n          borderRadius: '50%',\n          animation: 'spin 2s linear infinite',\n          marginBottom: '1rem'\n        }}></div>\n        <h2>Initializing System Rebellion...</h2>\n        <p>Sir Hawkington is validating your authentication credentials</p>\n        <style>{\n          `@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }`\n        }</style>\n      </div>\n    );\n  }\n\n  // Error state\n  if (initError) {\n    return (\n      <div className=\"persistence-error\" style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh',\n        backgroundColor: '#120258',\n        color: 'white',\n        fontSize: '1.2rem',\n        textAlign: 'center',\n        padding: '2rem'\n      }}>\n        <h2>Authentication Error</h2>\n        <p>{initError.message}</p>\n        <button \n          onClick={() => window.location.reload()}\n          style={{\n            padding: '10px 20px',\n            backgroundColor: '#3498db',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer',\n            fontSize: '1rem',\n            marginTop: '1rem'\n          }}\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  // Return children when initialized\n  return <>{children}</>;\n};\n\nexport default PersistenceWrapper;","// src/App.tsx\nimport React from 'react';\nimport { BrowserRouter, Routes, Route, Navigate, Outlet } from 'react-router-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { store } from './store/store';\nimport { ToastProvider } from './components/common/Toast';\nimport './App.css';\n\n// Components\nimport Login, { LoginProps } from './components/Auth/login/Login';\nimport Dashboard from './components/dashboard/Dashboard/Dashboard';\nimport Layout from './components/common/Layout';\nimport OptimizationProfiles from './components/optimization/OptimizationProfiles';\nimport SystemAlerts from './components/alerts/SystemAlerts';\nimport SystemConfiguration from './components/configuration/SystemConfiguration';\nimport SystemMetrics from './components/metrics/SystemMetrics';\nimport AutoTunerComponent from './components/auto_tuners/auto_tuner';\nimport OnboardingPage from './pages/OnboardingPage';\nimport LandingPage from './pages/LandingPage';\nimport ProtectedRoute from './utils/ProtectedRoute';\nimport { DesignSystemShowcase } from './design-system/docs';\nimport PersistenceWrapper from './components/Auth/PersistenceWrapper';\n\n// Error Boundary State\ntype ErrorBoundaryState = {\n  hasError: boolean;\n  error: Error | null;\n};\n\n// Error Boundary Component\nclass ErrorBoundary extends React.Component<{children: React.ReactNode}, ErrorBoundaryState> {\n  state: ErrorBoundaryState = {\n    hasError: false,\n    error: null\n  };\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    console.error(\"Error Boundary caught:\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"error-boundary\">\n          <h2>Something went wrong</h2>\n          <p>{this.state.error?.message || 'An unknown error occurred'}</p>\n          <button onClick={() => window.location.reload()}>Reload Application</button>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nconst App: React.FC = () => {\n  // Default login props\n  const loginProps: LoginProps = {\n    isOpen: true,\n    onClose: () => console.log('Login closed')\n  };\n\n  // Main app content\n  return (\n    <ReduxProvider store={store}>\n      <ToastProvider>\n        <ErrorBoundary>\n          <PersistenceWrapper>\n            <BrowserRouter>\n              <Layout>\n                <Routes>\n                  <Route path=\"/\" element={<LandingPage />} />\n                  <Route path=\"/login\" element={<Login {...loginProps} />} />\n                  \n                  <Route element={\n                    <ProtectedRoute>\n                      <Outlet />\n                    </ProtectedRoute>\n                  }>\n                    <Route path=\"/dashboard\" element={<Dashboard />} />\n                    <Route path=\"/optimization\" element={<OptimizationProfiles />} />\n                    <Route path=\"/alerts\" element={<SystemAlerts />} />\n                    <Route path=\"/configuration\" element={<SystemConfiguration />} />\n                    <Route path=\"/metrics\" element={<SystemMetrics />} />\n                    <Route path=\"/auto-tuner\" element={<AutoTunerComponent />} />\n                    <Route path=\"/onboarding\" element={<OnboardingPage />} />\n                    <Route path=\"/design-system\" element={<DesignSystemShowcase />} />\n                  </Route>\n\n                  <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n                </Routes>\n              </Layout>\n            </BrowserRouter>\n          </PersistenceWrapper>\n        </ErrorBoundary>\n      </ToastProvider>\n    </ReduxProvider>\n  );\n};\n\nexport default App;","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport store from './store/store.ts';\nimport App from './App';\nimport './index.css';\n\nconst root = createRoot(document.getElementById('root')!);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);"],"names":["authApi","axios","config","token","error","response","originalRequest","isLoginRequest","_a","refreshToken","refreshResponse","refreshError","authService","username","password","healthCheck","healthError","formData","errorMessage","email","_b","profileData","statusResponse","userResponse","userError","initialState","login","createAsyncThunk","rejectWithValue","register","userData","logout","checkAuthStatus","_","updateProfile","authSlice","createSlice","state","builder","action","clearError","authReducer","AlertSeverity","checkThresholds","metrics","thresholds","alerts","now","metricsSlice","newMetric","setWebSocketError","updateMetrics","resetMetrics","setThresholds","setConnectionStatus","metricsReducer","fetchUserProfile","userProfileSlice","clearProfileError","userProfileReducer","getCsrfToken","storedToken","cookies","cookie","name","value","API_BASE_URL","backendAvailable","lastCheckTime","AVAILABILITY_CHECK_INTERVAL","checkBackendAvailability","forceCheck","endpoints","endpoint","resolve","apiClient","csrfToken","refreshTokenStr","newToken","store","apiMethods","url","data","id","metricData","metricId","credentials","initializeCsrf","healthResponse","BASE_PATH","fetchSystemAlerts","skip","limit","is_read","createSystemAlert","alertData","markAlertAsRead","markAllAlertsAsRead","deleteSystemAlert","systemAlertsSlice","alertToRemove","alert","status","alertIndex","currentSelected","index","addAlert","clearAlert","clearSystemAlertsError","updateAlertActionStatus","toggleAlertSelection","selectAllAlerts","deselectAllAlerts","deleteSelectedAlerts","updateSelectedAlertsActionStatus","markSelectedAlertsAsRead","systemAlertsReducer","BACKEND_URL","createAlertFromEvent","title","message","severity","relatedMetrics","createAlertFromRecommendation","recommendation","parameter","current_value","recommended_value","confidence","impact_score","reason","combinedScore","createAlertFromPattern","pattern","type","patternText","details","createAlertFromMetricThreshold","metric","threshold","exceedRatio","formattedMetric","word","createAlertFromTuningAction","tuningAction","success","old_value","new_value","alertUtils","createAlertsFromPatterns","patterns","dispatch","createAlertsFromRecommendations","recommendations","rec","fetchCurrentMetrics","_c","fetchRecommendations","fetchPatterns","fetchTuningHistory","applyOptimizationProfile","profileId","applyRecommendation","recommendationId","autoTunerSlice","validPatterns","setActiveProfile","clearAutoTuner","autoTunerReducer","fetchOptimizationProfiles","createOptimizationProfile","updateOptimizationProfile","deleteOptimizationProfile","activateOptimizationProfile","optimizationSlice","profile","setCurrentProfile","clearOptimizationError","optimizationReducer","fetchSystemConfigurations","filters","queryParams","queryString","fetchConfigurationById","createSystemConfiguration","configData","updateSystemConfiguration","deleteSystemConfiguration","applySystemConfiguration","exportConfiguration","link","configurationSlice","activeConfig","setActiveConfiguration","clearConfigurationError","setConfigurationFilters","clearConfigurationFilters","configurationReducer","xsrfMiddleware","next","Cookies","configureStore","getDefaultMiddleware","ToastContext","createContext","ToastProvider","children","toasts","setToasts","useState","isMounted","setIsMounted","useEffect","removeToast","useCallback","currentToasts","toast","showToast","duration","toastFunctions","jsxs","jsx","useToast","context","useContext","useAppDispatch","useDispatch","useAppSelector","useSelector","SignupModal","isOpen","onClose","navigate","useNavigate","setFormData","isSubmitting","setIsSubmitting","setError","hawkingtonQuote","setHawkingtonQuote","handleChange","e","prev","handleSubmit","registrationData","err","errorMsg","Login","setUsername","setPassword","csrfInitialized","setCsrfInitialized","setBackendAvailable","isCheckingBackend","setIsCheckingBackend","isSignupModalOpen","setIsSignupModalOpen","isLoading","isAuthenticated","authError","updateHawkingtonQuote","scenario","available","csrfSuccess","csrfError","handleDirectLogin","csrfResponse","loginResponse","loginData","result","handleOpenSignup","handleCloseSignup","Fragment","WebSocketService","__publicField","protocol","host","customUrl","hasAuth","wsUrl","event","messageStr","callback","onceWrapper","args","cb","delay","websocketService","useMetricsWebSocket","useWebSocket","isInitializedRef","useRef","handleMessage","reconnect","onOpen","code","onError","onAuthFailed","onAuthSuccess","isConnected","connectionError","SystemStatus","loading","messageIndex","setMessageIndex","statusMessages","intervalId","prevIndex","getStatusClass","getStatusMessage","currentMessage","emojiMatch","messageWithoutEmoji","Card","variant","elevation","bordered","gradientBorder","glow","glass","interactive","header","footer","className","props","cardClasses","Badge","size","outlined","rounded","pulse","badgeClasses","MetricsCard","unit","previousValue","changePercentage","trend","updating","lastUpdated","showSparkline","sparklineData","icon","getStatusVariant","getTrendIcon","getTrendClass","metricsClasses","point","Tab","TabPanel","active","Tabs","externalActiveTab","onChange","tabs","React","child","internalActiveTab","setInternalActiveTab","handleTabClick","tabId","activeTabId","tab","CPUMetric","currentMetric","historicalMetrics","activeTab","setActiveTab","cpuUsage","cpuDetails","topProcesses","cpuTemp","cpuFreq","chartData","coreData","_d","usage","getStatus","getTrend","current","previous","renderOverviewTab","ResponsiveContainer","AreaChart","CartesianGrid","XAxis","time","YAxis","Tooltip","label","Area","renderCoresTab","BarChart","Bar","renderProcessesTab","process","renderDetailsTab","d","MemoryMetric","memoryUsage","m","DiskMetric","diskUsage","processNetworkData","rawNetworkData","processInterfacesData","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","interfaces","iface","formatBytes","bytes","decimals","k","dm","sizes","i","formatLatency","ms","getQualityClass","score","getLatencyClass","NetworkOverviewTab","compact","io_stats","connection_quality","useMemo","sentValue","receivedValue","networkData","RechartsTooltip","NetworkQualityMetrics","NetworkConnectionsTable","processes","NetworkInterfaceMetrics","_compact","PROTOCOL_COLORS","NetworkProtocolChart","stats","item","PieChart","Pie","percent","entry","Cell","Legend","TopBandwidthProcesses","sortedProcesses","a","b","totalA","totalBandwidth","downloadPercent","uploadPercent","NetworkMetric","showTabs","initialTab","height","dataError","renderTabContent","p","DashboardNetworkMetric","SirHawkington","MethSnail","Hamster","TheStick","QuantumShadowPerson","VIC20","CharacterAvatarSelector","selectedAvatar","onSelect","characters","character","getCharacterById","MetricsPanel","showHeader","connectionStatus","isUpdating","setIsUpdating","prevMetricsRef","timer","getStatusColor","Button","circle","fullWidth","leftIcon","rightIcon","disabled","buttonClasses","Alert","dismissible","onDismiss","hasIcon","actionable","actionText","onAction","getDefaultIcon","alertClasses","Toggle","checked","labelRight","toggleId","toggleClasses","Input","forwardRef","cyberBorder","helperText","startIcon","endIcon","ref","inputId","inputWrapperClasses","SystemAlertsPanel","maxAlerts","showAllLink","onNavigateToAlerts","alertsLoading","alertsError","selectedCount","expandedAlertId","setExpandedAlertId","showActionMenu","setShowActionMenu","handleMarkAsRead","handleDelete","handleToggleSelection","handleSelectAll","handleDeselectAll","handleDeleteSelected","handleUpdateActionStatus","handleMarkSelectedAsRead","handleAlertClick","handleViewAllAlerts","getSeverityClass","getActionStatusLabel","formatDate","dateString","SystemPatternsPanel","maxPatterns","patternsStatus","handleReloadPatterns","displayPatterns","key","Dashboard","user","getWelcomeMessage","hour","UserProfile","localError","setLocalError","isEditing","setIsEditing","setSelectedAvatar","bioRef","emailRef","osRef","distroRef","cpuCoresRef","memoryRef","optimizationLevelRef","emailAlertsRef","systemAlertsRef","handleEscapeKey","handleAvatarSelect","avatarId","handleEditClick","preferencesData","osValue","distroValue","cpuCores","memory","osParts","osName","osVersion","distroParts","distroName","distroVersion","optimizationLevel","emailAlerts","systemAlerts","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_A","_z","_C","_B","_E","_D","_G","_F","Navbar","isDropdownOpen","setIsDropdownOpen","isMobileMenuOpen","setIsMobileMenuOpen","showProfileModal","setShowProfileModal","showLoginModal","setShowLoginModal","showSignupModal","setShowSignupModal","dropdownRef","handleClickOutside","handleLogout","toggleDropdown","toggleMobileMenu","openProfileModal","openLoginModal","openSignupModal","getUserAvatar","Link","Layout","style","renderMinimalIndicator","Modal","draggable","modalRef","isDragging","setIsDragging","position","setPosition","dragOffset","setDragOffset","handleMouseDown","handleMouseMove","newX","newY","handleMouseUp","modalContent","ReactDOM","defaultFormData","OptimizationProfiles","profiles","isModalOpen","setIsModalOpen","editingId","setEditingId","snailQuote","setSnailQuote","snailQuotes","getInitialFormForUsageType","usageType","baseForm","handleInputChange","newFormData","handleSettingChange","category","setting","categoryValue","handleEdit","formattedProfile","handleActivate","openCreateModal","API_PATH","SystemAlerts","isActionModalOpen","setIsActionModalOpen","isPatternModalOpen","setIsPatternModalOpen","currentActionableAlert","setCurrentActionableAlert","currentPatternAlert","setCurrentPatternAlert","shadowQuote","setShadowQuote","debugInfo","setDebugInfo","actionResult","setActionResult","filterOptions","setFilterOptions","shadowQuotes","generateRealSystemAlerts","handleAlertAction","actionType","handlePatternVisualization","recommendationData","handleMarkAllAsRead","handleFilterChange","filterType","getFilteredAlerts","alertDate","today","yesterday","dayBefore","startOfWeek","startOfMonth","testApiConnection","loginForFreshToken","getDefaultSettingsForType","SystemConfiguration","configurations","activeFilter","setActiveFilter","hawkingtonQuotes","handleApply","getConfigTypeIcon","filteredConfigurations","filter","getConfigTypeLabel","nestedKey","nestedValue","processCPUData","rawCpuData","processCPUTemperature","processCPUProcesses","processCPUCores","tempData","processesData","proc","coresData","core","processThreads","threadsData","thread","formatTemperature","getTemperatureClass","temp","throttleThreshold","criticalThreshold","getThresholdDescription","CPUOverviewTab","usages","c","maxUsage","minUsage","imbalance","killProcess","pid","api","CPUProcessesTab","isKilling","setIsKilling","killResult","setKillResult","handleKillProcess","newState","CPUCoresTab","cores","avgUsage","sum","mostLoaded","leastLoaded","imbalancePercent","hasImbalance","variance","diff","stdDev","physicalCoreGroups","physicalId","getUsageClass","getImbalanceClass","threadData","hasThreadData","coreClass","logicalCores","CPUThermalTab","temperature","historicalData","range","tempClass","tempDescription","ComposedChart","Line","analyzeTemperatureUsageCorrelation","peaks","findTemperaturePeaks","correlation","calculateUsageTempCorrelation","throttlingPoints","insights","percentTime","prev2","prev1","next1","next2","n","tempMean","usageMean","covariance","tempVariance","usageVariance","tempDiff","usageDiff","cpuData","ErrorDisplay","retry","LoadingIndicator","isNegative","formattedValue","ProgressBar","max","color","showPercentage","percentage","InfoTooltip","content","isVisible","setIsVisible","MemoryOverviewTab","overview","getPhysicalMemorySeverity","getSwapSeverity","getPressureSeverityColor","Table","columns","onRowClick","rowKey","emptyState","loadingText","sortConfig","onSort","internalSortConfig","setInternalSortConfig","handleSort","sortable","direction","sortedData","aValue","bValue","getRowKey","renderSortIcon","column","SearchInput","onSearch","placeholder","initialValue","debounceTime","searchTerm","setSearchTerm","handler","MemoryProcessesTab","sortField","setSortField","sortDirection","setSortDirection","selectedProcess","setSelectedProcess","filteredProcesses","filtered","term","aStr","bStr","selectedProcessTrend","selectedProcessLeak","leak","handleRowClick","LineChart","idx","width","innerRadius","outerRadius","paddingAngle","colors","RechartsPieChart","MemoryAllocationTab","allocation","expandedRecommendation","setExpandedRecommendation","getTypeColor","pieChartData","getFragmentationSeverityClass","getImpactColor","impact","toggleRecommendation","detectMemoryLeaks","history","leakCandidates","processHistory","createProcessHistory","isConsistentGrowth","growthRate","growthVariance","totalGrowthPercentage","hasPeriodicity","growthAfterGC","analyzeMemoryGrowthPattern","evidencePoints","leakProbability","processPoint","growthRates","timeDiffMinutes","avgGrowthRate","rate","calculateNormalizedVariance","detectPeriodicity","h","gcEvents","detectGarbageCollectionEvents","eventIndex","postGCPoints","isConsistentGrowthSequence","values","mean","val","memorySequence","diffs","signChanges","gcEventIndices","currentMemory","prevMemory","growingIntervals","units","unitIndex","generateOptimizationRecommendations","physicalMemoryUsagePercent","swapUsagePercent","isHighMemoryPressure","isModerateMemoryPressure","isHighFragmentation","isModerateFragmentation","topMemoryConsumers","memoryHogThreshold","memoryHogs","cachedMemoryPercent","processMemoryData","rawData","processOverviewMetrics","processProcessMetrics","processAllocationMetrics","calculatePageRate","calculateSwapUsageRate","growthTrends","calculateProcessGrowthTrends","potentialLeaks","sortProcessesByMemory","calculateMemoryByType","rateFragmentation","currentTime","recentHistory","latestPoint","earlierPoint","timeDiffSeconds","trendline","calculateLinearRegression","points","baseTime","timePoints","bytePoints","meanX","x","meanY","y","numerator","denominator","slope","intercept","allocations","total","defaultTab","memoryMetrics","processedData","formatNumber","num","DiskPartitionsTab","selectedPartition","setSelectedPartition","selectedDisk","setSelectedDisk","partitions","physicalDisks","formatHealthStatus","partitionColumns","partition","diskColumns","disk","physicalDisk","issue","diskPartitions","Treemap","onNodeClick","colorScale","containerRef","container","renderNode","node","w","depth","div","totalValue","currentX","currentY","isHorizontal","ratio","childW","childH","DiskDirectoryTab","debouncedSearchTerm","setDebouncedSearchTerm","selectedPath","setSelectedPath","selectedCleanup","setSelectedCleanup","directories","filteredDirectories","dir","treemapData","selectedDirectory","directoryColumns","DiskPerformanceTab","timeRange","setTimeRange","performance","processColumns","row","getLatencySeverityClass","latency","ts","analyzeSmartData","smartData","issues","criticalAttributes","attr","checkCriticalAttribute","healthScore","calculateHealthScore","generateCleanupRecommendations","largeDirs","oldCacheDirs","isOlderThan","daysSinceAccess","daysSince","timestamp","days","ageInMs","daysInMs","detectIOBottlenecks","isHighUtilization","isModerateUtilization","isHighQueueDepth","isModerateQueueDepth","isHighReadLatency","isHighWriteLatency","readIOPS","writeIOPS","identifyBottleneckCause","generateIORecommendations","topProcess","secondProcess","currentUtil","prevUtil","recentUtils","_performance","processName","processDiskData","processPartitionsData","processPhysicalDisksData","processDirectoryData","processPerformanceData","partitionItems","totalDiskSpace","usedDiskSpace","healthStatuses","overallHealth","diskItems","smartAnalysis","criticalIssues","largestDirs","createDirectoryTreemap","cleanupRecommendations","totalAnalyzedSize","rootDirectory","parent","buildTreemapNode","directory","allDirectories","historical","processHistoricalData","bottlenecks","timestamps","readSpeed","writeSpeed","utilization","handleTabChange","diskMetrics","SystemMetrics","ParameterDescription","descriptions","defaultDescription","description","impactMeaning","AutoTunerHelp","systemLogsService","source","level","logLevelConfig","InfoIcon","WarningIcon","ErrorIcon","CheckCircleIcon","TerminalIcon","sourceDisplayNames","SystemLogsViewer","defaultSource","defaultLevel","maxHeight","autoRefresh","refreshInterval","logs","setLogs","setLoading","setSource","setLevel","hasMore","setHasMore","setTotal","setLimit","fetchLogs","handleClearLogs","interval","formatTimestamp","format","getSourceDisplayName","Paper","Box","Typography","IconButton","RefreshIcon","DeleteIcon","FormControl","InputLabel","Select","MenuItem","Divider","CircularProgress","List","log","levelConfig","ListItem","ListItemText","Chip","CurrentMetricsPanel","bytesSent","setBytesSent","bytesReceived","setBytesReceived","sentRate","setSentRate","receivedRate","setReceivedRate","lastUpdateTime","setLastUpdateTime","totalRateBytes","timeDiff","sentDiff","receivedDiff","RecommendationsPanel","selectedParameter","setSelectedParameter","handleApplyRecommendation","toggleParameterDescription","PatternsPanel","handleRefreshPatterns","TuningHistoryPanel","tuningHistory","visibleEntries","setVisibleEntries","handleLoadMore","displayedHistory","hasMoreEntries","ProfilesPanel","activeProfile","setProfiles","fetchProfiles","res","handleApplyProfile","profileToApply","SystemLogsPanel","AutoTuner","showHelp","setShowHelp","lastUpdatedRef","pollingInterval","Onboarding","authLoading","step","setStep","systemInfo","setSystemInfo","userAgent","detectedOS","detectedVersion","versionMatch","detectedCores","requiredFields","missingFields","field","retryCount","maxRetries","retryError","renderStep","OnboardingPage","Navigate","hasSystemInfo","teamMembers","projectTimeline","LandingPage","activeCharacter","setActiveCharacter","activeTimelineEvent","setActiveTimelineEvent","methSnailRedBulls","setMethSnailRedBulls","handleAnchorClick","target","element","getRandomQuote","randomIndex","handleSignupClick","handleLoginClick","handleCloseModals","handleCharacterClick","handleTimelineClick","skill","ProtectedRoute","redirectTo","DesignSystemShowcase","toggleStates","setToggleStates","sampleMetricsData","buttonVariants","cardVariants","alertVariants","badgeVariants","toggleVariants","inputVariants","csrfAxios","csrfTokenCache","forceRefresh","possibleEndpoints","possibleFields","statusError","PersistenceWrapper","isInitialized","setIsInitialized","initError","setInitError","ErrorBoundary","errorInfo","App","loginProps","ReduxProvider","BrowserRouter","Routes","Route","Outlet","AutoTunerComponent","root","createRoot","Provider"],"mappings":"k3CA+BA,MAAMA,GAAUC,EAAM,OAAO,CAC3B,QAAS,iCACT,gBAAiB,GACjB,QAAS,CACP,eAAgB,kBAAA,CAEpB,CAAC,EAGDD,GAAQ,aAAa,QAAQ,IACjBE,GAAA,CACF,MAAAC,EAAQ,aAAa,QAAQ,OAAO,EAC1C,OAAIA,IACFD,EAAO,QAAQ,cAAmB,UAAUC,CAAK,IAE5CD,CACT,EACAE,GAAS,QAAQ,OAAOA,CAAK,CAC/B,EAGAJ,GAAQ,aAAa,SAAS,IAChBK,GAAAA,EACZ,MAAMD,GAAS,OACb,MAAME,EAAkBF,EAAM,OAE9B,GAAI,CAACE,EACI,OAAA,QAAQ,OAAOF,CAAK,EAIvB,MAAAG,EAAiBD,EAAgB,MAChBA,EAAgB,IAAI,SAAS,QAAQ,GACrCA,EAAgB,IAAI,SAAS,QAAQ,GAGxD,KAAAE,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,UAAW,KAAO,CAACF,EAAgB,QAAU,CAACC,EAAgB,CAChFD,EAAgB,OAAS,GAErB,GAAA,CAEI,MAAAG,EAAe,aAAa,QAAQ,eAAe,EAEzD,GAAI,CAACA,EACK,eAAA,MAAM,uBAAwB,2BAA2B,EAC1D,QAAQ,OAAOL,CAAK,EAIvB,MAAAM,EAAkB,MAAMT,EAAM,KAClC,+CACA,CAAE,cAAeQ,CAAa,EAC9B,CAAE,gBAAiB,EAAK,CAC1B,EAEA,OAAIC,EAAgB,MAAQA,EAAgB,KAAK,cAE/C,aAAa,QAAQ,QAASA,EAAgB,KAAK,YAAY,EAC3DA,EAAgB,KAAK,eACvB,aAAa,QAAQ,gBAAiBA,EAAgB,KAAK,aAAa,EAI1EJ,EAAgB,QAAQ,cAAmB,UAAUI,EAAgB,KAAK,YAAY,GAG/ET,EAAMK,CAAe,IAEpB,QAAA,MAAM,+BAAgC,kBAAkB,EAEhE,aAAa,WAAW,OAAO,EAC/B,aAAa,WAAW,eAAe,EACvC,OAAO,SAAS,KAAO,SAChB,QAAQ,OAAOF,CAAK,SAEtBO,EAAc,CACb,eAAA,MAAM,gCAAiCA,CAAY,EAE3D,aAAa,WAAW,OAAO,EAC/B,aAAa,WAAW,eAAe,EACvC,OAAO,SAAS,KAAO,SAChB,QAAQ,OAAOP,CAAK,CAAA,CAC7B,CAGK,OAAA,QAAQ,OAAOA,CAAK,CAAA,CAE/B,EAGA,MAAMQ,GAAc,CAElB,MAAM,aAAgC,CAChC,GAAA,CACF,QAAQ,IAAI,sDAAsD,EAClE,MAAMP,EAAW,MAAML,GAAQ,IAAI,UAAU,EACrC,eAAA,IAAI,iCAAkCK,EAAS,IAAI,EACpDA,EAAS,KAAK,uBACdD,EAAO,CACN,eAAA,MAAM,+BAAgCA,CAAK,EAC5C,EAAA,CAEX,EAGA,MAAM,MAAMS,EAAkBC,EAAiC,OACzD,GAAA,CACF,QAAQ,IAAI,sCAAuC,CAAE,SAAAD,EAAU,SAAU,MAAO,EAG5E,GAAA,CACF,MAAME,EAAc,MAAMd,EAAM,IAAI,yCAAyC,EACrE,QAAA,IAAI,4BAA6Bc,EAAY,IAAI,QAClDC,EAAa,CACZ,cAAA,MAAM,kCAAmCA,CAAW,EACtD,IAAI,MAAM,0DAA0D,CAAA,CAItE,MAAAC,EAAW,IAAI,gBACZA,EAAA,OAAO,WAAYJ,CAAQ,EAC3BI,EAAA,OAAO,WAAYH,CAAQ,EAE5B,QAAA,IAAI,2DAA4DD,CAAQ,EAGhF,MAAMR,EAAW,MAAML,GAAQ,KAAoB,SAAUiB,EAAU,CACrE,QAAS,CACP,eAAgB,oCAChB,OAAU,kBAAA,CACZ,CACD,EAGD,GAFQ,QAAA,IAAI,oBAAqBZ,EAAS,IAAI,EAE1C,CAACA,EAAS,KAAK,cAAgB,CAACA,EAAS,KAAK,cAC1C,MAAA,IAAI,MAAM,8CAA8C,EAIhE,oBAAa,QAAQ,QAASA,EAAS,KAAK,YAAY,EACxD,aAAa,QAAQ,gBAAiBA,EAAS,KAAK,aAAa,EACjE,aAAa,QAAQ,WAAYA,EAAS,KAAK,KAAK,QAAQ,EAGtDJ,EAAA,SAAS,QAAQ,OAAO,cAAmB,UAAUI,EAAS,KAAK,YAAY,GAE9EA,EAAS,KAAK,WACdD,EAAY,CACnB,IAAIc,EAAe,2CAGnB,MAAId,EAAM,UAGR,QAAQ,MAAM,qCAAsC,CAClD,OAAQA,EAAM,SAAS,OACvB,KAAMA,EAAM,SAAS,IAAA,CACtB,EAGcc,IAAAV,EAAAJ,EAAM,SAAS,OAAf,YAAAI,EAAqB,SACrB,mEACNJ,EAAM,SAEP,QAAA,MAAM,iCAAkCA,EAAM,OAAO,EAC9Cc,EAAA,2EAEP,QAAA,MAAM,yBAA0Bd,EAAM,OAAO,EAGjD,IAAI,MAAMc,CAAY,CAAA,CAEhC,EAGA,MAAM,SAASL,EAAkBM,EAAeL,EAAiC,SAC3E,GAAA,CACF,QAAQ,IAAI,mCAAmC,EAC/C,MAAMT,EAAW,MAAML,GAAQ,KAAoB,YAAa,CAC9D,SAAAa,EACA,MAAAM,EACA,SAAAL,CAAA,CACD,EACO,eAAA,IAAI,2BAA4BT,EAAS,IAAI,EAGrD,aAAa,QAAQ,QAASA,EAAS,KAAK,YAAY,EACxD,aAAa,QAAQ,gBAAiBA,EAAS,KAAK,aAAa,EACjE,aAAa,QAAQ,WAAYA,EAAS,KAAK,KAAK,QAAQ,EAErDA,EAAS,KAAK,WACdD,EAAY,CACX,QAAA,MAAM,0BAA2BA,CAAK,EAC9C,MAAMc,IAAeE,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SAAU,yCAC/C,MAAA,IAAI,MAAMF,CAAY,CAAA,CAEhC,EAGA,MAAM,QAA2B,CAC3B,GAAA,CACF,eAAQ,IAAI,mCAAmC,EAG/C,aAAa,WAAW,OAAO,EAC/B,aAAa,WAAW,eAAe,EACvC,aAAa,WAAW,UAAU,EAClC,QAAQ,IAAI,qEAAqE,EACjF,OAAO,SAAS,KAAO,SAChB,SACAd,EAAO,CACN,eAAA,MAAM,oBAAqBA,CAAK,EAExC,aAAa,WAAW,OAAO,EAC/B,aAAa,WAAW,eAAe,EACvC,aAAa,WAAW,UAAU,EAClC,OAAO,SAAS,KAAO,SAChB,EAAA,CAEX,EAGA,MAAM,cAAciB,EAAiC,SAC/C,GAAA,CACM,QAAA,IAAI,iDAAkDA,CAAW,EAEnE,MAAAlB,EAAQ,aAAa,QAAQ,OAAO,EAC1C,GAAI,CAACA,EACG,MAAA,IAAI,MAAM,2DAA2D,EAG7E,MAAME,EAAW,MAAML,GAAQ,KAAK,kBAAmBqB,EAAa,CAClE,QAAS,CACP,cAAiB,UAAUlB,CAAK,EAAA,CAClC,CACD,EACO,eAAA,IAAI,6BAA8BE,EAAS,IAAI,EAChDA,EAAS,KAAK,WACdD,EAAY,CACX,QAAA,MAAM,4BAA6BA,CAAK,EAChD,MAAMc,IAAeE,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SAAU,2CAC/C,MAAA,IAAI,MAAMF,CAAY,CAAA,CAEhC,EAGA,MAAM,gBAAuC,CACvC,GAAA,CACF,QAAQ,IAAI,4CAA4C,EACxD,MAAMI,EAAiB,MAAMtB,GAAQ,IAAI,UAAU,EAC/C,GAAA,CAACsB,EAAe,KAAK,iBACvB,eAAQ,IAAI,oDAAoD,EACzD,KAIL,GAAAA,EAAe,KAAK,KACtB,eAAQ,IAAI,oCAAqCA,EAAe,KAAK,IAAI,EAClEA,EAAe,KAAK,KAIzB,GAAA,CACF,MAAMC,EAAe,MAAMvB,GAAQ,IAAI,KAAK,EACpC,eAAA,IAAI,iCAAkCuB,EAAa,IAAI,EACxDA,EAAa,WACbC,EAAW,CACV,QAAA,MAAM,kDAAmDA,CAAS,EAGpE,MAAAX,EAAW,aAAa,QAAQ,UAAU,EAChD,OAAKA,GAKL,QAAQ,KAAK,gDAAgD,EACtD,CACL,GAAI,GACJ,SAAAA,EACA,MAAO,GACP,iBAAkB,GAClB,iBAAkB,UAClB,WAAY,UACZ,UAAW,EACX,aAAc,CAChB,IAdE,QAAQ,IAAI,oDAAoD,EACzD,KAaT,QAEKT,EAAO,CACN,eAAA,MAAM,iCAAkCA,CAAK,EAC9C,IAAA,CAEX,EAGA,MAAM,eAAkC,CAClC,GAAA,CACF,QAAQ,IAAI,wCAAwC,EACpD,MAAMC,EAAW,MAAML,GAAQ,IAAI,UAAU,EACrC,eAAA,IAAI,+BAAgCK,EAAS,IAAI,EAClDA,EAAS,KAAK,uBACdD,EAAO,CACN,eAAA,MAAM,8BAA+BA,CAAK,EAC3C,EAAA,CACT,CAEJ,ECpUMqB,GAA0B,CAC9B,KAAM,KACN,gBAAiB,GACjB,UAAW,GACX,MAAO,IACT,EAEA,QAAQ,IAAI,4BAA6BA,EAAY,EAG9C,MAAMC,GAAQC,EACnB,aACA,MAAO,CAAE,SAAAd,EAAU,SAAAC,GAAoD,CAAE,gBAAAc,KAAsB,SACzF,GAAA,CAEK,OADM,MAAMhB,GAAY,MAAMC,EAAUC,CAAQ,QAEhDV,EAAY,CACnB,OAAOwB,IAAgBR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SAAU,cAAc,CAAA,CACvE,CAEJ,EAEaS,GAAWF,EACtB,gBACA,MAAOG,EAAe,CAAE,gBAAAF,KAAsB,SACxC,GAAA,CAEF,KAAM,CAAE,SAAAf,EAAU,MAAAM,EAAO,SAAAL,CAAa,EAAAgB,EAEtC,MAAI,CAACjB,GAAY,CAACM,GAAS,CAACL,EACnBc,EAAgB,2CAA2C,GAGpE,QAAQ,IAAI,yBAA0B,CAAE,GAAGE,EAAU,SAAU,MAAO,EACzD,MAAMlB,GAAY,SAASC,EAAUM,EAAOL,CAAQ,SAE1DV,EAAY,CACX,eAAA,MAAM,sBAAuBA,CAAK,EACnCwB,IAAgBR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SAAU,qBAAqB,CAAA,CAC9E,CAEJ,EAEaW,GAASJ,EACpB,cACA,SAAY,CACVf,GAAY,OAAO,CAAA,CAEvB,EAEaoB,GAAkBL,EAC7B,mBACA,MAAOM,EAAG,CAAE,gBAAAL,KAAsB,CAC5B,GAAA,CAEF,OADwB,MAAMhB,GAAY,YAAY,EAEvC,MAAMA,GAAY,eAAe,EAGzC,WACAR,EAAY,CACZ,OAAAwB,EAAgBxB,EAAM,SAAW,uCAAuC,CAAA,CACjF,CAEJ,EAEa8B,GAAgBP,EAC3B,qBACA,MAAON,EAAkB,CAAE,gBAAAO,KAAsB,SAC3C,GAAA,CAEK,OADa,MAAMhB,GAAY,cAAcS,CAAW,QAExDjB,EAAY,CACnB,OAAOwB,IAAgBR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SAAU,0BAA0B,CAAA,CACnF,CAEJ,EAGMe,GAAYC,GAAY,CAC5B,KAAM,OAAA,aACNX,GACA,SAAU,CACR,WAAaY,GAAU,CACrBA,EAAM,MAAQ,IAAA,CAElB,EACA,cAAgBC,GAAY,CAE1BA,EAAQ,QAAQZ,GAAM,QAAUW,GAAU,CACxCA,EAAM,UAAY,GAClBA,EAAM,MAAQ,IAAA,CACf,EACDC,EAAQ,QAAQZ,GAAM,UAAW,CAACW,EAAOE,IAAW,CAClDF,EAAM,UAAY,GAClBA,EAAM,gBAAkB,GACxBA,EAAM,KAAOE,EAAO,QACpBF,EAAM,MAAQ,IAAA,CACf,EACDC,EAAQ,QAAQZ,GAAM,SAAU,CAACW,EAAOE,IAAW,CACjDF,EAAM,UAAY,GAClBA,EAAM,gBAAkB,GACxBA,EAAM,KAAO,KACbA,EAAM,MAAQE,EAAO,OAAA,CACtB,EAGDD,EAAQ,QAAQT,GAAS,QAAUQ,GAAU,CAC3CA,EAAM,UAAY,GAClBA,EAAM,MAAQ,IAAA,CACf,EACDC,EAAQ,QAAQT,GAAS,UAAW,CAACQ,EAAOE,IAAW,CACrDF,EAAM,UAAY,GAClBA,EAAM,gBAAkB,GACxBA,EAAM,KAAOE,EAAO,QACpBF,EAAM,MAAQ,IAAA,CACf,EACDC,EAAQ,QAAQT,GAAS,SAAU,CAACQ,EAAOE,IAAW,CACpDF,EAAM,UAAY,GAClBA,EAAM,gBAAkB,GACxBA,EAAM,KAAO,KACbA,EAAM,MAAQE,EAAO,OAAA,CACtB,EAGDD,EAAQ,QAAQP,GAAO,UAAYM,GAAU,CAC3CA,EAAM,gBAAkB,GACxBA,EAAM,KAAO,IAAA,CACd,EAGDC,EAAQ,QAAQN,GAAgB,QAAUK,GAAU,CAClDA,EAAM,UAAY,EAAA,CACnB,EACDC,EAAQ,QAAQN,GAAgB,UAAW,CAACK,EAAOE,IAAW,CAC5DF,EAAM,UAAY,GACZA,EAAA,gBAAkB,CAAC,CAACE,EAAO,QACjCF,EAAM,KAAOE,EAAO,OAAA,CACrB,EACDD,EAAQ,QAAQN,GAAgB,SAAWK,GAAU,CACnDA,EAAM,UAAY,GAClBA,EAAM,gBAAkB,GACxBA,EAAM,KAAO,IAAA,CACd,EAGDC,EAAQ,QAAQJ,GAAc,QAAUG,GAAU,CAChDA,EAAM,UAAY,GAClBA,EAAM,MAAQ,IAAA,CACf,EACDC,EAAQ,QAAQJ,GAAc,UAAW,CAACG,EAAOE,IAAW,CAC1DF,EAAM,UAAY,GAClBA,EAAM,KAAOE,EAAO,QACpBF,EAAM,MAAQ,IAAA,CACf,EACDC,EAAQ,QAAQJ,GAAc,SAAU,CAACG,EAAOE,IAAW,CACzDF,EAAM,UAAY,GAClBA,EAAM,MAAQE,EAAO,OAAA,CACtB,CAAA,CAEL,CAAC,EAEY,CAAE,WAAAC,EAAW,EAAIL,GAAU,QACzBM,GAAAN,GAAU,QCsBb,IAAAO,IAAAA,IACVA,EAAA,IAAM,MACNA,EAAA,OAAS,SACTA,EAAA,KAAO,OACPA,EAAA,SAAW,WAJDA,IAAAA,IAAA,CAAA,CAAA,EClKZ,MAAMC,GAAkB,CAACC,EAAuBC,IAAgD,CAC9F,MAAMC,EAAwB,CAAC,EACzBC,EAAM,IAAI,KAAK,EAAE,YAAY,EAGnC,OAAIH,EAAQ,WAAaC,EAAW,IAAI,SACtCC,EAAO,KAAK,CACV,GAAI,OAAO,KAAK,IAAK,CAAA,GACrB,YAAa,MACb,SAAUJ,GAAc,KACxB,UAAWG,EAAW,IAAI,SAC1B,cAAeD,EAAQ,UACvB,UAAWG,EACX,QAAS,uBAAuBH,EAAQ,SAAS,GAAA,CAClD,EACQA,EAAQ,WAAaC,EAAW,IAAI,SAC7CC,EAAO,KAAK,CACV,GAAI,OAAO,KAAK,IAAA,CAAK,QACrB,YAAa,MACb,SAAUJ,GAAc,OACxB,UAAWG,EAAW,IAAI,QAC1B,cAAeD,EAAQ,UACvB,UAAWG,EACX,QAAS,mBAAmBH,EAAQ,SAAS,GAAA,CAC9C,EAMIE,CACT,EAGMrB,GAAqC,CACzC,QAAS,CAAC,EACV,QAAS,KACT,WAAY,CAAC,EACb,OAAQ,CAAC,EACT,WAAY,CACV,IAAK,CAAE,QAAS,GAAI,SAAU,GAAI,OAAQ,EAAG,KAAM,EAAG,IAAK,EAAG,OAAQ,EAAG,UAAW,EAAG,SAAU,CAAE,EACnG,OAAQ,CAAE,QAAS,GAAI,SAAU,GAAI,OAAQ,EAAG,KAAM,EAAG,IAAK,EAAG,OAAQ,EAAG,UAAW,EAAG,SAAU,CAAE,EACtG,KAAM,CAAE,QAAS,GAAI,SAAU,GAAI,OAAQ,EAAG,KAAM,EAAG,IAAK,EAAG,OAAQ,EAAG,UAAW,EAAG,SAAU,CAAE,EACpG,QAAS,CAAE,QAAS,GAAI,SAAU,GAAI,OAAQ,EAAG,KAAM,EAAG,IAAK,EAAG,OAAQ,EAAG,UAAW,EAAG,SAAU,CAAE,CACzG,EACA,QAAS,GACT,MAAO,KACP,YAAa,KACb,WAAY,KACZ,aAAc,GACd,iBAAkB,cACpB,EAGMuB,GAAeZ,GAAY,CAC/B,KAAM,UAAA,aACNX,GACA,SAAU,CAER,kBAAmB,CAACY,EAAOE,IAAyC,CAClEF,EAAM,MAAQE,EAAO,QACrBF,EAAM,QAAU,GACZE,EAAO,UACTF,EAAM,iBAAmB,QAE7B,EAGA,cAAe,CAACA,EAAOE,IAAwC,CAC7D,MAAMU,EAAYV,EAAO,QACnBF,EAAA,QAAU,CAAC,GAAGA,EAAM,QAASY,CAAS,EAAE,MAAM,IAAI,EACxDZ,EAAM,QAAUY,EACVZ,EAAA,WAAa,CAAC,GAAGA,EAAM,WAAYY,CAAS,EAAE,MAAM,IAAK,EAC/DZ,EAAM,YAAc,IAAI,KAAK,EAAE,YAAY,EACrCA,EAAA,WAAa,KAAK,IAAI,EAG5B,MAAMS,EAASH,GAAgBM,EAAWZ,EAAM,UAAU,EACtDS,EAAO,OAAS,IACZT,EAAA,OAAS,CAAC,GAAGA,EAAM,OAAQ,GAAGS,CAAM,EAAE,MAAM,GAAG,EAEzD,EAGA,aAAeT,GAAU,CACvBA,EAAM,QAAU,CAAC,EACjBA,EAAM,OAAS,CAAC,EAChBA,EAAM,QAAU,KAChBA,EAAM,WAAa,CAAC,EACpBA,EAAM,MAAQ,KACdA,EAAM,iBAAmB,cAC3B,EAGA,cAAe,CAACA,EAAOE,IAAqD,CAC1EF,EAAM,WAAa,CACjB,GAAGA,EAAM,WACT,GAAGE,EAAO,OACZ,CACF,EAGA,oBAAqB,CAACF,EAAOE,IAA4C,CACvEF,EAAM,iBAAmBE,EAAO,OAAA,CAClC,CAEJ,CAAC,EAUY,CACX,kBAAAW,GACA,cAAAC,GACA,aAAAC,GACA,cAAAC,GACA,oBAAAC,EACF,EAAIN,GAAa,QAEFO,GAAAP,GAAa,QCrJtBvB,GAAiC,CACrC,KAAM,KACN,QAAS,GACT,MAAO,IACT,EAEa+B,GAAmB7B,EAC9B,oBACA,MAAOM,EAAG,CAAE,gBAAAL,KAAsB,CAC5B,GAAA,CAGK,OADM,MAAMhB,GAAY,eAAe,QAEvCR,EAAY,CACX,eAAA,MAAM,+BAAgCA,EAAM,OAAO,EACpDwB,EAAgBxB,EAAM,SAAW,8BAA8B,CAAA,CACxE,CAEJ,EAEMqD,GAAmBrB,GAAY,CACnC,KAAM,cAAA,aACNX,GACA,SAAU,CACR,kBAAoBY,GAAU,CAC5BA,EAAM,MAAQ,IAAA,CAElB,EACA,cAAgBC,GAAY,CAC1BA,EACG,QAAQkB,GAAiB,QAAUnB,GAAU,CAC5CA,EAAM,QAAU,GAChBA,EAAM,MAAQ,IAAA,CACf,EACA,QAAQmB,GAAiB,UAAW,CAACnB,EAAOE,IAAW,CACtDF,EAAM,QAAU,GAChBA,EAAM,KAAOE,EAAO,OAAA,CACrB,EACA,QAAQiB,GAAiB,SAAU,CAACnB,EAAOE,IAAW,CACrDF,EAAM,QAAU,GACVA,EAAA,MAAQE,EAAO,SAAqB,2BAAA,CAC3C,CAAA,CAEP,CAAC,EAEY,CAAE,kBAAAmB,EAAkB,EAAID,GAAiB,QACvCE,GAAAF,GAAiB,QC3C1BG,GAAe,IAAqB,CAElC,MAAAC,EAAc,aAAa,QAAQ,YAAY,EACrD,GAAIA,EACK,OAAAA,EAIT,MAAMC,EAAU,SAAS,OAAO,MAAM,GAAG,EACzC,QAASC,KAAUD,EAAS,CACpB,KAAA,CAACE,EAAMC,CAAK,EAAIF,EAAO,KAAK,EAAE,MAAM,GAAG,EAC7C,GAAIC,IAAS,YACJ,OAAAC,CACT,CAEK,OAAA,IACT,EAIaC,EACT,GAAG,OAAO,SAAS,QAAQ,KAAK,OAAO,SAAS,IAAI,OAGxD,QAAQ,IAAI,iDAAiDA,CAAY,EAAE,EAG3E,IAAIC,GAAmB,GACnBC,GAAgB,EACpB,MAAMC,GAA8B,IAGvBC,GAA2B,MAAOC,EAAa,KAA4B,CAChF,MAAAxB,EAAM,KAAK,IAAI,EAGrB,GAAI,CAACwB,GAAcxB,EAAMqB,GAAgBC,GACvC,eAAQ,IAAI,2DAA4DF,GAAmB,wBAA0B,yBAAyB,EACtI,QAAA,IAAI,4CAA6CA,EAAgB,EAClEA,GAIT,QAAQ,IAAI,wCAAwC,EACpCC,GAAArB,EAGhB,MAAMyB,EAAY,CAChB,iBACA,eACF,EAEA,QAAS,EAAI,EAAG,EAAI,EAAG,IAAK,CAC1B,UAAWC,KAAYD,EACjB,GAAA,CACF,QAAQ,IAAI,+DAA+D,EAAE,CAAC,WAAWC,CAAQ,KAAK,EACtG,QAAQ,IAAI,kEAAkE,EACxE,MAAApE,EAAW,MAAMJ,EAAM,IAAI,GAAGiE,CAAY,GAAGO,CAAQ,GAAI,CAC7D,QAAS,IACT,gBAAiB,EAAA,CAClB,EAED,GAAIpE,EAAS,QAAU,KAAOA,EAAS,OAAS,IAC9C,eAAQ,IAAI,6HAA6H,EACzI,QAAQ,IAAI,mEAAmE,EAC5D8D,GAAA,GACZ,SAEF/D,EAAO,CAEN,QAAA,KAAK,+BAA+BqE,CAAQ,GAAG,EAC/C,QAAA,KAAK,sCACXrE,aAAiB,MAAQA,EAAM,QAAU,6CAA6C,CAAA,CAKxF,EAAI,GACN,MAAM,IAAI,QAAQsE,GAAW,WAAWA,EAAS,GAAI,CAAC,CACxD,CAIF,eAAQ,MAAM,4FAA4F,EAC1G,QAAQ,MAAM,0EAA0E,EACxF,QAAQ,MAAM,mDAAmD,EAC9CP,GAAA,GACZ,EACT,EAcaQ,GAAY1E,EAAM,OAAO,CACpC,QAASiE,EACT,gBAAiB,GACjB,QAAS,CACP,eAAgB,kBAAA,CAEpB,CAAC,EAGuBjE,EAAM,OAAO,CACnC,QAASiE,EACT,gBAAiB,GACjB,QAAS,CACP,eAAgB,kBAAA,CAEpB,CAAC,EAGDS,GAAU,aAAa,QAAQ,IAAKzE,GAAuC,CACnE,MAAAC,EAAQ,aAAa,QAAQ,OAAO,EAUtC,GATAA,GAEKD,EAAA,QAAQ,cAAgBC,EAAM,WAAW,SAAS,EAAIA,EAAQ,UAAUA,CAAK,GAC5E,QAAA,IAAI,8CAA+CD,EAAO,QAAQ,cAAc,UAAU,EAAG,EAAE,EAAI,KAAK,GAEhH,QAAQ,KAAK,iEAAiE,EAI5EA,EAAO,SAAW,MAAO,CAC3B,MAAM0E,EAAYhB,GAAa,EAC3BgB,EACK1E,EAAA,QAAQ,aAAa,EAAI0E,EAEhC,QAAQ,KAAK,kDAAkD,CACjE,CAGK,OAAA1E,CACT,CAAC,EAGDyE,GAAU,aAAa,SAAS,IAC7BtE,GAAaA,EACd,MAAOD,GAAoB,OACzB,MAAME,EAAkBF,EAAM,OAE9B,KAAII,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,UAAW,KAAO,CAACF,EAAgB,OAAQ,CAC7DA,EAAgB,OAAS,GACnB,MAAAuE,EAAkB,aAAa,QAAQ,eAAe,EAE5D,GAAIA,EACE,GAAA,CAEI,MAAAnE,EAAkB,MAAMT,EAAM,KAClC,GAAGiE,CAAY,uBACf,CAAE,QAASW,CAAgB,EAC3B,CACE,gBAAiB,GACjB,QAAS,CACP,eAAgB,mBAChB,cAAejB,MAAkB,EAAA,CACnC,CAEJ,EAEA,GAAIlD,EAAgB,MAAQA,EAAgB,KAAK,OAAQ,CACjD,MAAAoE,EAAWpE,EAAgB,KAAK,OAEzB,oBAAA,QAAQ,QAASoE,CAAQ,EAEtBxE,EAAA,QAAQ,cAAgB,UAAUwE,CAAQ,GACnDH,GAAUrE,CAAe,CAAA,QAE3BK,EAAc,CACb,eAAA,MAAM,wBAAyBA,CAAY,EAEnD,aAAa,WAAW,OAAO,EAC/B,aAAa,WAAW,eAAe,EACjCoE,GAAA,SAAShD,IAAQ,EAChB,QAAQ,OAAOpB,CAAY,CAAA,MAI9BoE,GAAA,SAAShD,IAAQ,CACzB,CAEK,OAAA,QAAQ,OAAO3B,CAAK,CAAA,CAE/B,EAUO,MAAM4E,EAAa,CAExB,IAAK,MAAUC,IACI,MAAMN,GAAU,IAAOM,CAAG,GAC3B,KAGlB,KAAM,MAAaA,EAAaC,KACb,MAAMP,GAAU,KAAQM,EAAKC,CAAI,GAClC,KAGlB,OAAQ,MAAUD,IACC,MAAMN,GAAU,OAAUM,CAAG,GAC9B,KAGlB,IAAK,MAAaA,EAAaC,KACZ,MAAMP,GAAU,IAAOM,EAAKC,CAAI,GACjC,KAGlB,MAAO,MAAaD,EAAaC,KACd,MAAMP,GAAU,MAASM,EAAKC,CAAI,GACnC,KAGlB,KAAM,MAAUD,IACG,MAAMN,GAAU,KAAQM,CAAG,GAC5B,KAGlB,QAAS,MAAUA,IACA,MAAMN,GAAU,QAAWM,CAAG,GAC/B,KAGlB,UAAW,CACT,MAAO,MAAOE,GAAuC,CAC/C,GAAA,CACF,OAAO,MAAMH,EAAW,IAAmB,cAAcG,CAAE,GAAG,QACvD/E,EAAO,CACd,cAAQ,MAAM,4BAA4B+E,CAAE,IAAK/E,CAAK,EAChDA,CAAA,CACR,CAEJ,EACA,QAAS,CAEP,MAAO,SAAY,CACjB,QAAQ,IAAI,iEAAiE,EAEzE,GAAA,CAEF,MAAMC,EAAW,MAAM2E,EAAW,IAAI,iBAAiB,EAC/C,eAAA,IAAI,0DAA2D3E,CAAQ,EACxEA,QACAD,EAAO,CACN,cAAA,MAAM,uDAAwDA,CAAK,EACrEA,CAAA,CAEV,EAGA,OAAQ,MAAOgF,GAAyC,CACtD,QAAQ,IAAI,oEAAoE,EAE5E,GAAA,CACF,MAAM/E,EAAW,MAAM2E,EAAW,KAAK,YAAaI,CAAU,EACtD,eAAA,IAAI,iCAAkC/E,CAAQ,EAC/CA,QACAD,EAAO,CACN,cAAA,MAAM,6BAA8BA,CAAK,EAC3CA,CAAA,CAEV,EAGA,OAAQ,MAAOiF,EAAkBD,IAAsC,CAC7D,QAAA,IAAI,wCAAwCC,CAAQ,2BAA2B,EAEnF,GAAA,CACF,MAAMhF,EAAW,MAAM2E,EAAW,IAAI,YAAYK,CAAQ,GAAID,CAAU,EAChE,eAAA,IAAI,iCAAkC/E,CAAQ,EAC/CA,QACAD,EAAO,CACN,cAAA,MAAM,2BAA4BA,CAAK,EACzCA,CAAA,CAEV,EAGA,OAAQ,MAAOiF,GAAqB,CAC1B,QAAA,IAAI,wCAAwCA,CAAQ,4BAA4B,EAEpF,GAAA,CACF,MAAMhF,EAAW,MAAM2E,EAAW,OAAO,YAAYK,CAAQ,EAAE,EACvD,eAAA,IAAI,iCAAkChF,CAAQ,EAC/CA,QACAD,EAAO,CACN,cAAA,MAAM,6BAA8BA,CAAK,EAC3CA,CAAA,CAEV,EAGA,UAAW,MAAOiF,GAAqB,CAC7B,QAAA,IAAI,0CAA0CA,CAAQ,4BAA4B,EAEtF,GAAA,CACF,MAAMhF,EAAW,MAAM2E,EAAW,IAAI,YAAYK,CAAQ,EAAE,EACpD,eAAA,IAAI,mCAAoChF,CAAQ,EACjDA,QACAD,EAAO,CACN,cAAA,MAAM,8BAA+BA,CAAK,EAC5CA,CAAA,CACR,CAEJ,EACA,KAAM,CAEJ,SAAU,MAAO0B,GAAkB,SACjC,QAAQ,IAAI,8EAA8E,EAEtF,GAAA,CAGF,MAAMzB,EAAW,MAAMJ,EAAM,KAAK,iBAAkB,CAClD,SAAU6B,EAAS,SACnB,MAAOA,EAAS,MAChB,SAAUA,EAAS,SACnB,QAASA,EAAS,OAAA,EACjB,CACD,QAAS,CACP,eAAgB,kBAAA,CAClB,CACD,EAEO,eAAA,IAAI,2BAA4BzB,EAAS,IAAI,EAGjDA,EAAS,KAAK,eAChB,aAAa,QAAQ,QAASA,EAAS,KAAK,YAAY,EACxD,aAAa,QAAQ,gBAAiBA,EAAS,KAAK,eAAiB,EAAE,GAGlEA,EAAS,WACTD,EAAO,CACN,cAAA,MAAM,yBAA0BA,CAAK,EACzCH,EAAM,aAAaG,CAAK,IAC1B,QAAQ,MAAM,kBAAkBI,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,IAAI,EACpD,QAAQ,MAAM,gBAAgBY,EAAAhB,EAAM,WAAN,YAAAgB,EAAgB,MAAM,GAEhDhB,CAAA,CAEV,EAGA,MAAO,MAAOkF,GAAwD,CACpE,QAAQ,IAAI,oEAAoE,EAE5E,GAAA,CACI,MAAAjF,EAAW,MAAMsE,GAAU,KAAK,eACpC,IAAI,gBAAgB,CAClB,SAAYW,EAAY,SACxB,SAAYA,EAAY,QAAA,CACzB,EACD,CACE,QAAS,CACP,eAAgB,mCAAA,CAClB,CAEJ,EAEQ,eAAA,IAAI,sBAAuBjF,EAAS,IAAI,EAG5CA,EAAS,KAAK,eAChB,aAAa,QAAQ,QAASA,EAAS,KAAK,YAAY,EACxD,aAAa,QAAQ,gBAAiBA,EAAS,KAAK,eAAiB,EAAE,GAGlEA,EAAS,WACTD,EAAO,CACN,cAAA,MAAM,mBAAoBA,CAAK,EACjCA,CAAA,CACR,CACF,CAEJ,EAGamF,GAAiB,SAA8B,CACtD,GAAA,CAGF,GAAI,CADgB,MAAMjB,GAAyB,EAAI,EAE/C,MAAA,IAAI,MAAM,wDAAwD,EAI1E,MAAMjE,EAAW,MAAMJ,EAAM,IAAI,GAAGiE,CAAY,oBAAqB,CACnE,gBAAiB,GACjB,QAAS,GAAA,CACV,EAGD,GAAI7D,EAAS,MAAQA,EAAS,KAAK,WAEjC,oBAAa,QAAQ,aAAcA,EAAS,KAAK,UAAU,EAC3D,QAAQ,IAAI,mDAAmD,EACxD,GAIZ,MAAMmF,EAAiB,MAAMvF,EAAM,IAAI,GAAGiE,CAAY,iBAAkB,CACvE,gBAAiB,GACjB,QAAS,GAAA,CACV,EAGD,GAAIsB,EAAe,MAAQA,EAAe,KAAK,WAC7C,oBAAa,QAAQ,aAAcA,EAAe,KAAK,UAAU,EACjE,QAAQ,IAAI,+DAA+D,EACpE,GAKT,GAAI,CADc5B,GAAa,EAE7B,cAAQ,KAAK,2EAA2E,EAClF,IAAI,MAAM,kDAAkD,EAGpE,eAAQ,IAAI,uCAAuC,EAC5C,SACExD,EAAO,CACR,eAAA,MAAM,mCACZA,aAAiB,MAAQA,EAAM,QAAU,eAAe,EACnD,EAAA,CAEP,ECrcMqF,GAAa,kBAwBbhE,GAAkC,CACtC,OAAQ,CAAC,EACT,QAAS,GACT,MAAO,KACP,MAAO,EACP,cAAe,CACjB,EASaiE,GAAoB/D,EAI/B,2BACA,MAAO,CAAE,KAAAgE,EAAO,EAAG,MAAAC,EAAQ,GAAI,QAAAC,GAAkE,CAAA,EAAI,CAAE,gBAAAjE,KAAsB,SACvH,GAAA,CACF,QAAQ,IAAI,gDAAgD,EAC5D,IAAIqD,EAAM,GAAGQ,EAAS,SAASE,CAAI,UAAUC,CAAK,GAC9CC,IAAY,SACdZ,GAAO,YAAYY,CAAO,IAEpB,QAAA,IAAI,wBAAyBZ,CAAG,EACxC,MAAM5E,EAAW,MAAM2E,EAAW,IAAoBC,CAAG,EACjD,eAAA,IAAI,0CAA2C5E,CAAQ,EACxDA,QACAD,EAAY,CACX,eAAA,MAAM,mDAAoDA,CAAK,EAChEwB,IACLR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SACtB,6DACF,CAAA,CACF,CAEJ,EAEa0E,GAAoBnE,EAI/B,2BACA,MAAOoE,EAAgF,CAAE,gBAAAnE,KAAsB,SACzG,GAAA,CACF,QAAQ,IAAI,qDAAqD,EACjE,MAAMvB,EAAW,MAAM2E,EAAW,KAAoC,GAAGS,EAAS,GAAIM,CAAS,EACvF,eAAA,IAAI,yCAA0C1F,CAAQ,EACvDA,QACAD,EAAY,CACX,eAAA,MAAM,qDAAsDA,CAAK,EAClEwB,IACLR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SACtB,6DACF,CAAA,CACF,CAEJ,EAEa4E,GAAkBrE,EAI7B,0BACA,MAAOwD,EAAY,CAAE,gBAAAvD,KAAsB,SACrC,GAAA,CACM,QAAA,IAAI,sCAAsCuD,CAAE,aAAa,EAC3D,MAAA9E,EAAW,MAAM2E,EAAW,KAAsB,GAAGS,EAAS,GAAGN,CAAE,gBAAiB,EAAE,EACpF,eAAA,IAAI,8CAA+C9E,CAAQ,EAC5DA,QACAD,EAAY,CACX,eAAA,MAAM,4DAA6DA,CAAK,EACzEwB,IACLR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SACtB,gEACF,CAAA,CACF,CAEJ,EAEa6E,GAAsBtE,EAIjC,6BACA,MAAOM,EAAG,CAAE,gBAAAL,KAAsB,SAC5B,GAAA,CACF,QAAQ,IAAI,oDAAoD,EAC1D,MAAAvB,EAAW,MAAM2E,EAAW,KAA6B,GAAGS,EAAS,mBAAoB,EAAE,EACjG,eAAQ,IAAI,6CAA6C,EAClDpF,EAAS,cACTD,EAAY,CACX,eAAA,MAAM,8DAA+DA,CAAK,EAC3EwB,IACLR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SACtB,kEACF,CAAA,CACF,CAEJ,EAEa8E,GAAoBvE,EAI/B,2BACA,MAAOwD,EAAY,CAAE,gBAAAvD,KAAsB,SACrC,GAAA,CACM,eAAA,IAAI,uCAAuCuD,CAAE,KAAK,EAC1D,MAAMH,EAAW,OAA2B,GAAGS,EAAS,GAAGN,CAAE,EAAE,EACvD,QAAA,IAAI,mCAAmCA,CAAE,EAAE,EAC5CA,QACA/E,EAAY,CACX,eAAA,MAAM,qDAAsDA,CAAK,EAClEwB,IACLR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SACtB,6DACF,CAAA,CACF,CAEJ,EAGM+E,GAAoB/D,GAAY,CACpC,KAAM,eAAA,aACNX,GACA,SAAU,CACR,SAAU,CAACY,EAAOE,IAAuC,CACjDF,EAAA,OAAO,QAAQE,EAAO,OAAO,EACnCF,EAAM,OAAS,CACjB,EACA,WAAY,CAACA,EAAOE,IAAkC,CAC9C,MAAA6D,EAAgB/D,EAAM,OAAO,QAAcgE,EAAM,KAAO9D,EAAO,OAAO,EACxE6D,GAAA,MAAAA,EAAe,WACjB/D,EAAM,eAAiB,GAEnBA,EAAA,OAASA,EAAM,OAAO,UAAgBgE,EAAM,KAAO9D,EAAO,OAAO,EACvEF,EAAM,OAAS,CACjB,EACA,uBAAyBA,GAAU,CACjCA,EAAM,MAAQ,IAChB,EACA,wBAAyB,CAACA,EAAOE,IAA0G,CACzI,KAAM,CAAE,GAAA4C,EAAI,OAAAmB,CAAO,EAAI/D,EAAO,QACxBgE,EAAalE,EAAM,OAAO,UAAmBgE,GAAAA,EAAM,KAAOlB,CAAE,EAC9DoB,IAAe,KACXlE,EAAA,OAAOkE,CAAU,EAAE,cAAgBD,EAE7C,EACA,qBAAsB,CAACjE,EAAOE,IAAkC,CACxD,MAAAgE,EAAalE,EAAM,OAAO,aAAmBgE,EAAM,KAAO9D,EAAO,OAAO,EAC9E,GAAIgE,IAAe,GAAI,CACrB,MAAMC,EAAkBnE,EAAM,OAAOkE,CAAU,EAAE,UAAY,GAC7DlE,EAAM,OAAOkE,CAAU,EAAE,SAAW,CAACC,EAC/BnE,EAAA,eAAiBmE,EAAkB,GAAK,CAAA,CAElD,EACA,gBAAkBnE,GAAU,CACpBA,EAAA,OAAO,QAAiBgE,GAAA,CACvBA,EAAM,WACTA,EAAM,SAAW,GACjBhE,EAAM,eAAiB,EACzB,CACD,CACH,EACA,kBAAoBA,GAAU,CACtBA,EAAA,OAAO,QAAiBgE,GAAA,CACxBA,EAAM,WACRA,EAAM,SAAW,GACnB,CACD,EACDhE,EAAM,cAAgB,CACxB,EACA,qBAAuBA,GAAU,CAC/BA,EAAM,OAASA,EAAM,OAAO,OAAgBgE,GAAA,CAACA,EAAM,QAAQ,EAC3DhE,EAAM,OAASA,EAAM,cACrBA,EAAM,cAAgB,CACxB,EACA,iCAAkC,CAACA,EAAOE,IAAoF,CACtHF,EAAA,OAAO,QAAiBgE,GAAA,CACxBA,EAAM,WACRA,EAAM,cAAgB9D,EAAO,QAC/B,CACD,CACH,EACA,yBAA2BF,GAAU,CAC7BA,EAAA,OAAO,QAAiBgE,GAAA,CACxBA,EAAM,UAAY,CAACA,EAAM,UAC3BA,EAAM,QAAU,GAClB,CACD,CAAA,CAEL,EACA,cAAgB/D,GAAY,CAC1BA,EAEG,QAAQoD,GAAkB,QAAUrD,GAAU,CAC7CA,EAAM,QAAU,GAChBA,EAAM,MAAQ,IAAA,CACf,EACA,QAAQqD,GAAkB,UAAW,CAACrD,EAAOE,IAAW,CACvDF,EAAM,QAAU,GACVA,EAAA,OAASE,EAAO,QAAQ,OACxBF,EAAA,MAAQE,EAAO,QAAQ,KAAA,CAC9B,EACA,QAAQmD,GAAkB,SAAU,CAACrD,EAAOE,IAAW,CACtDF,EAAM,QAAU,GAChBA,EAAM,MAAQE,EAAO,OACtB,CAAA,EAGA,QAAQuD,GAAkB,QAAUzD,GAAU,CAC7CA,EAAM,QAAU,GAChBA,EAAM,MAAQ,IAAA,CACf,EACA,QAAQyD,GAAkB,UAAW,CAACzD,EAAOE,IAAW,CACvDF,EAAM,QAAU,GACVA,EAAA,OAAO,QAAQE,EAAO,OAAO,EACnCF,EAAM,OAAS,CAAA,CAChB,EACA,QAAQyD,GAAkB,SAAU,CAACzD,EAAOE,IAAW,CACtDF,EAAM,QAAU,GAChBA,EAAM,MAAQE,EAAO,OAAA,CACtB,EAGA,QAAQyD,GAAgB,UAAW,CAAC3D,EAAOE,IAAW,CAC/C,MAAAkE,EAAQpE,EAAM,OAAO,aAAmBgE,EAAM,KAAO9D,EAAO,QAAQ,EAAE,EACxEkE,IAAU,KACNpE,EAAA,OAAOoE,CAAK,EAAIlE,EAAO,QAEhC,CAAA,EAGA,QAAQ0D,GAAoB,UAAY5D,GAAU,CAC3CA,EAAA,OAASA,EAAM,OAAO,IAAIgE,IAAU,CAAE,GAAGA,EAAO,QAAS,EAAO,EAAA,CAAA,CACvE,EAGA,QAAQH,GAAkB,UAAW,CAAC7D,EAAOE,IAAW,CACjDF,EAAA,OAASA,EAAM,OAAO,UAAgBgE,EAAM,KAAO9D,EAAO,OAAO,EACvEF,EAAM,OAAS,CAAA,CAChB,CAAA,CAEP,CAAC,EAEY,CACX,SAAAqE,GACA,WAAAC,GACA,uBAAAC,GACA,wBAAAC,GACA,qBAAAC,GACA,gBAAAC,GACA,kBAAAC,GACA,qBAAAC,GACA,iCAAAC,GACA,yBAAAC,EACF,EAAIhB,GAAkB,QAEPiB,GAAAjB,GAAkB,QC5R3BkB,GAAc,wBAMPC,GAAuB,CAClCC,EACAC,EACAC,EACAC,IACG,CAEH,MAAM3B,EAAY,CAChB,MAAAwB,EACA,QAAAC,EACA,SAAAC,EACA,QAAS,GACT,gBAAiBC,GAAkB,CAAA,CACrC,EAGA,eAAQ,IAAI,8CAA8CL,EAAW,0BAA0BnD,CAAY,iBAAiB,EAGrH6B,CACT,EAMa4B,GAAiCC,GAAwB,CAEpE,KAAM,CAAE,UAAAC,EAAW,cAAAC,EAAe,kBAAAC,EAAmB,WAAAC,EAAY,aAAAC,EAAc,OAAAC,GAAWN,EAGtF,IAAAH,EACJ,MAAMU,EAAgBH,EAAaC,EAE/BE,EAAgB,GACPV,EAAA,WACFU,EAAgB,GACdV,EAAA,OACFU,EAAgB,GACdV,EAAA,SAEAA,EAAA,MAIP,MAAAF,EAAQ,8BAA8BM,CAAS,GAC/CL,EAAU,GAAGU,CAAM,oBAAoBJ,CAAa,wBAAwBC,CAAiB,kBAAkBC,EAAa,KAAK,QAAQ,CAAC,CAAC,eAAeC,EAAe,KAAK,QAAQ,CAAC,CAAC,KAGvL,OAAAX,GAAqBC,EAAOC,EAASC,EAAU,CACpD,UAAAI,EACA,cAAAC,EACA,kBAAAC,EACA,WAAAC,EACA,aAAAC,EACA,WAAY,GACZ,YAAa,uBACb,oBAAqBL,CAAA,CACtB,CACH,EAMaQ,GAA0BC,GAAiB,CAEtD,KAAM,CAAE,KAAAC,EAAM,QAASC,EAAa,WAAAP,EAAY,QAAAQ,GAAYH,EAGxD,IAAAZ,EAEAO,EAAa,GACJP,EAAA,WACFO,EAAa,GACXP,EAAA,OACFO,EAAa,GACXP,EAAA,SAEAA,EAAA,MAIP,MAAAF,EAAQ,4BAA4Be,CAAI,GACxCd,EAAU,GAAGe,CAAW,mBAAmBP,EAAa,KAAK,QAAQ,CAAC,CAAC,KAGtE,OAAAV,GAAqBC,EAAOC,EAASC,EAAU,CACpD,GAAGe,EACH,aAAcF,EACd,WAAAN,EACA,YAAYQ,GAAA,YAAAA,EAAS,aAAc,GACnC,aAAaA,GAAA,YAAAA,EAAS,cAAe,IAAA,CACtC,CACH,EAMaC,GAAiC,CAACC,EAAgBzE,EAAe0E,IAAsB,CAE9F,IAAAlB,EACJ,MAAMmB,EAAc3E,EAAQ0E,EAExBC,EAAc,IACLnB,EAAA,WACFmB,EAAc,IACZnB,EAAA,OACFmB,EAAc,IACZnB,EAAA,SAEAA,EAAA,MAIP,MAAAoB,EAAkBH,EACrB,QAAQ,KAAM,GAAG,EACjB,MAAM,GAAG,EACT,IAAII,GAAQA,EAAK,OAAO,CAAC,EAAE,cAAgBA,EAAK,MAAM,CAAC,CAAC,EACxD,KAAK,GAAG,EAGLvB,EAAQ,GAAGsB,CAAe,sBAC1BrB,EAAU,GAAGqB,CAAe,gBAAgB5E,EAAM,QAAQ,CAAC,CAAC,iCAAiC0E,CAAS,KAGrG,OAAArB,GAAqBC,EAAOC,EAASC,EAAU,CACpD,OAAAiB,EACA,cAAezE,EACf,UAAA0E,EACA,WAAY,GACZ,YAAa,cAAA,CACd,CACH,EAMaI,GAA8B,CAACC,EAAmBC,IAAqB,CAClF,KAAM,CAAE,UAAApB,EAAW,UAAAqB,EAAW,UAAAC,EAAW,OAAAjB,CAAW,EAAAc,EAG9CvB,EAAWwB,EAAU,SAAW,OAGhC1B,EAAQ0B,EACV,0BAA0BpB,CAAS,GACnC,yBAAyBA,CAAS,GAEhCL,EAAUyB,EACZ,wBAAwBpB,CAAS,SAASqB,CAAS,OAAOC,CAAS,KAAKjB,GAAU,EAAE,GACpF,oBAAoBL,CAAS,SAASqB,CAAS,OAAOC,CAAS,KAAKjB,GAAU,EAAE,GAG7E,OAAAZ,GAAqBC,EAAOC,EAASC,EAAU,CACpD,UAAAI,EACA,UAAAqB,EACA,UAAAC,EACA,QAAAF,EACA,UAAW,IAAI,KAAK,EAAE,YAAY,EAClC,WAAY,EAAA,CACb,CACH,EAEeG,GAAA,CACb,qBAAA9B,GACA,8BAAAK,GACA,uBAAAS,GACA,+BAAAK,GACA,4BAAAM,EACF,EC9KMtH,GAA+B,CACnC,eAAgB,KAChB,gBAAiB,CAAC,EAClB,SAAU,CAAC,EACX,cAAe,CAAC,EAChB,cAAe,KACf,OAAQ,OACR,MAAO,KACP,YAAa,IACf,EAIa4H,GAA2B,CAACC,EAAiBC,IAAkB,CACtED,GAAYA,EAAS,OAAS,GAEhCA,EACG,OAAkBjB,GAAAA,EAAQ,WAAa,EAAG,EAC1C,QAAmBA,GAAA,CACZ,MAAAtC,EAAYqD,GAAW,uBAAuBf,CAAO,EAClDkB,EAAAzD,GAAkBC,CAAS,CAAC,CAAA,CACtC,CAEP,EAEayD,GAAkC,CAACC,EAAwBF,IAAkB,CACpFE,GAAmBA,EAAgB,OAAS,GAG3CA,EAAA,UAAeC,EAAI,WAAaA,EAAI,aAAgB,EAAG,EACvD,QAA0B9B,GAAA,CACnB,MAAA7B,EAAYqD,GAAW,8BAA8BxB,CAAc,EAChE2B,EAAAzD,GAAkBC,CAAS,CAAC,CAAA,CACtC,CAEP,EAGa4D,GAAsBhI,EACjC,gCACA,SAAY,WACN,GAAA,CACF,eAAQ,IAAI,oEAAoE,EAE/D,MAAMqD,EAAW,IAAS,6BAA6B,QAEjE5E,EAAY,CACnB,cAAQ,MAAM,+BAA8BI,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAQJ,EAAM,OAAO,EAC3E,IAAI,QAAMwJ,GAAAxI,EAAAhB,EAAM,WAAN,YAAAgB,EAAgB,OAAhB,YAAAwI,EAAsB,SAAU,iCAAiC,CAAA,CACnF,CAEJ,EAEaC,GAAuBlI,EAClC,iCACA,MAAOM,EAAG,CAAE,SAAAsH,KAAe,WACrB,GAAA,CACF,QAAQ,IAAI,oEAAoE,EAEhF,MAAMlJ,EAAW,MAAM2E,EAAW,IAAW,6BAA6B,EAG1E,OAAI3E,GAAY,MAAM,QAAQA,CAAQ,GACpCmJ,GAAgCnJ,EAAUkJ,CAAQ,EAG7ClJ,QACAD,EAAY,CACnB,cAAQ,MAAM,uCAAsCI,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAQJ,EAAM,OAAO,EACnF,IAAI,QAAMwJ,GAAAxI,EAAAhB,EAAM,WAAN,YAAAgB,EAAgB,OAAhB,YAAAwI,EAAsB,SAAU,iCAAiC,CAAA,CACnF,CAEJ,EAEaE,GAAgBnI,EAC3B,0BACA,MAAOM,EAAG,CAAE,SAAAsH,KAAe,CACrB,GAAA,CACF,QAAQ,IAAI,6DAA6D,EAEzE,MAAMlJ,EAAW,MAAM2E,EAAW,IAAS,sBAAsB,EAIjE,GAHQ,QAAA,IAAI,2BAA4B3E,CAAQ,EAG5C,CAACA,EACH,eAAQ,MAAM,qCAAqC,EAC5C,CAAE,kBAAmB,EAAG,EAIjC,IAAIiJ,EAAW,CAAC,EAChB,OAAIjJ,EAAS,kBACXiJ,EAAWjJ,EAAS,kBACX,MAAM,QAAQA,CAAQ,IACpBiJ,EAAAjJ,GAIbgJ,GAAyBC,EAAUC,CAAQ,EAEpClJ,QACAD,EAAY,CACX,cAAA,MAAM,8BAA+BA,CAAK,EAC5C,IAAI,MAAM,OAAOA,EAAM,SAAY,SAAWA,EAAM,QAAU,0BAA0B,CAAA,CAChG,CAEJ,EAEa2J,GAAqBpI,EAChC,+BACA,SAAY,WACN,GAAA,CACF,eAAQ,IAAI,mEAAmE,EAE9D,MAAMqD,EAAW,IAAsB,qBAAqB,QAEtE5E,EAAY,CACnB,cAAQ,MAAM,sCAAqCI,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAQJ,EAAM,OAAO,EAClF,IAAI,QAAMwJ,GAAAxI,EAAAhB,EAAM,WAAN,YAAAgB,EAAgB,OAAhB,YAAAwI,EAAsB,SAAU,gCAAgC,CAAA,CAClF,CAEJ,EAEaI,GAA2BrI,EACtC,qCACA,MAAOsI,GAAsB,WACvB,GAAA,CACM,eAAA,IAAI,oDAAoDA,CAAS,yBAAyB,EAEjF,MAAMjF,EAAW,KAAoC,wBAAwBiF,CAAS,SAAU,EAAE,QAE5G7J,EAAY,CACnB,cAAQ,MAAM,4CAA2CI,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAQJ,EAAM,OAAO,EACxF,IAAI,QAAMwJ,GAAAxI,EAAAhB,EAAM,WAAN,YAAAgB,EAAgB,OAAhB,YAAAwI,EAAsB,SAAU,sCAAsC,CAAA,CACxF,CAEJ,EAEaM,GAAsBvI,EACjC,gCACA,MAAOwI,GAA6B,WAC9B,GAAA,CACM,eAAA,IAAI,8CAA8CA,CAAgB,yBAAyB,EAGlF,MAAMnF,EAAW,KAA0C,uDAAuDmF,CAAgB,GAAI,EAAE,QAElJ/J,EAAY,CACnB,cAAQ,MAAM,sCAAqCI,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAQJ,EAAM,OAAO,EAClF,IAAI,QAAMwJ,GAAAxI,EAAAhB,EAAM,WAAN,YAAAgB,EAAgB,OAAhB,YAAAwI,EAAsB,SAAU,gCAAgC,CAAA,CAClF,CAEJ,EAEMQ,GAAiBhI,GAAY,CACjC,KAAM,YAAA,aACNX,GACA,SAAU,CACR,iBAAiBY,EAAOE,EAAmD,CACzEF,EAAM,cAAgBE,EAAO,OAC/B,EACA,eAAiBF,GAAU,CACzBA,EAAM,eAAiB,KACvBA,EAAM,gBAAkB,CAAC,EACzBA,EAAM,SAAW,CAAC,EAClBA,EAAM,cAAgB,CAAC,EACvBA,EAAM,cAAgB,KACtBA,EAAM,OAAS,OACfA,EAAM,MAAQ,KACdA,EAAM,YAAc,IAAA,CAExB,EACA,cAAgBC,GAAY,CAE1BA,EACG,QAAQqH,GAAoB,QAAUtH,GAAU,CAC/CA,EAAM,OAAS,SAAA,CAChB,EACA,QAAQsH,GAAoB,UAAW,CAACtH,EAAOE,IAAW,CACzDF,EAAM,OAAS,YACfA,EAAM,eAAiBE,EAAO,QAC9BF,EAAM,YAAc,IAAI,KAAK,EAAE,YAAY,CAAA,CAC5C,EACA,QAAQsH,GAAoB,SAAU,CAACtH,EAAOE,IAAW,CACxDF,EAAM,OAAS,SACTA,EAAA,MAAQE,EAAO,MAAM,SAAW,yBAAA,CACvC,EAGHD,EACG,QAAQuH,GAAqB,QAAUxH,GAAU,CAChDA,EAAM,OAAS,SAAA,CAChB,EACA,QAAQwH,GAAqB,UAAW,CAACxH,EAAOE,IAAW,CAC1DF,EAAM,OAAS,YACfA,EAAM,gBAAkBE,EAAO,QAC/BF,EAAM,YAAc,IAAI,KAAK,EAAE,YAAY,CAAA,CAC5C,EACA,QAAQwH,GAAqB,SAAU,CAACxH,EAAOE,IAAW,CACzDF,EAAM,OAAS,SACTA,EAAA,MAAQE,EAAO,MAAM,SAAW,iCAAA,CACvC,EAGHD,EACG,QAAQwH,GAAc,QAAUzH,GAAU,CACzCA,EAAM,OAAS,SAAA,CAChB,EACA,QAAQyH,GAAc,UAAW,CAACzH,EAAOE,IAAW,CAsB/C,GArBJF,EAAM,OAAS,YAGP,QAAA,IAAI,sBAAuBE,EAAO,OAAO,EAG7CA,EAAO,SAAWA,EAAO,QAAQ,mBAE7BF,EAAA,SAAWE,EAAO,QAAQ,kBAChC,QAAQ,IAAI,uDAAwDA,EAAO,QAAQ,iBAAiB,GAC3F,MAAM,QAAQA,EAAO,OAAO,GAErCF,EAAM,SAAWE,EAAO,QAChB,QAAA,IAAI,sCAAuCA,EAAO,OAAO,IAGzD,QAAA,KAAK,iEAAkEA,EAAO,OAAO,EAC7FF,EAAM,SAAW,CAAC,GAIhBA,EAAM,SAAS,OAAS,EAAG,CAE7B,MAAMgI,EAAgBhI,EAAM,SAAS,OAAQgG,GACpCA,GACA,OAAOA,GAAY,UACnB,SAAUA,GACV,YAAaA,GACb,eAAgBA,GAChB,YAAaA,CACrB,EAEGgC,EAAc,SAAWhI,EAAM,SAAS,SAC1C,QAAQ,KAAK,mBAAmBA,EAAM,SAAS,OAASgI,EAAc,MAAM,mBAAmB,EAC/FhI,EAAM,SAAWgI,EACnB,CAGFhI,EAAM,YAAc,IAAI,KAAK,EAAE,YAAY,CAAA,CAI5C,EACA,QAAQyH,GAAc,SAAU,CAACzH,EAAOE,IAAW,CAClDF,EAAM,OAAS,SACTA,EAAA,MAAQE,EAAO,MAAM,SAAW,2BAC9B,QAAA,MAAM,+BAAgCA,EAAO,KAAK,CAAA,CAC3D,EAGHD,EACG,QAAQyH,GAAmB,QAAU1H,GAAU,CAC9CA,EAAM,OAAS,SAAA,CAChB,EACA,QAAQ0H,GAAmB,UAAW,CAAC1H,EAAOE,IAAW,CACxDF,EAAM,OAAS,YACXE,EAAO,SAAWA,EAAO,QAAQ,QAC7BF,EAAA,cAAgBE,EAAO,QAAQ,QAErCF,EAAM,cAAgB,CAAC,EAEzBA,EAAM,YAAc,IAAI,KAAK,EAAE,YAAY,CAAA,CAC5C,EACA,QAAQ0H,GAAmB,SAAU,CAAC1H,EAAOE,IAAW,CACvDF,EAAM,OAAS,SACTA,EAAA,MAAQE,EAAO,MAAM,SAAW,gCAAA,CACvC,EAGHD,EACG,QAAQ0H,GAAyB,QAAU3H,GAAU,CACpDA,EAAM,OAAS,SAAA,CAChB,EACA,QAAQ2H,GAAyB,UAAW,CAAC3H,EAAOE,IAAW,CAC9DF,EAAM,OAAS,YAEXE,EAAO,SAAWA,EAAO,QAAQ,mBAC7BF,EAAA,cAAgB,CAAC,GAAGA,EAAM,cAAe,GAAGE,EAAO,QAAQ,gBAAgB,GAEnFF,EAAM,YAAc,IAAI,KAAK,EAAE,YAAY,CAAA,CAC5C,EACA,QAAQ2H,GAAyB,SAAU,CAAC3H,EAAOE,IAAW,CAC7DF,EAAM,OAAS,SACTA,EAAA,MAAQE,EAAO,MAAM,SAAW,yBAAA,CACvC,EAGHD,EACG,QAAQ4H,GAAoB,QAAU7H,GAAU,CAC/CA,EAAM,OAAS,SAAA,CAChB,EACA,QAAQ6H,GAAoB,UAAW,CAAC7H,EAAOE,IAAW,CACzDF,EAAM,OAAS,YACXE,EAAO,SAAWA,EAAO,QAAQ,SAAWA,EAAO,QAAQ,SAC7DF,EAAM,cAAgB,CAAC,GAAGA,EAAM,cAAeE,EAAO,QAAQ,MAAM,GAEtEF,EAAM,YAAc,IAAI,KAAK,EAAE,YAAY,CAAA,CAC5C,EACA,QAAQ6H,GAAoB,SAAU,CAAC7H,EAAOE,IAAW,CACxDF,EAAM,OAAS,SACTA,EAAA,MAAQE,EAAO,MAAM,SAAW,gCAAA,CACvC,CAAA,CAEP,CAAC,EAEY,CAAE,iBAAA+H,GAAkB,eAAAC,IAAmBH,GAAe,QACpDI,GAAAJ,GAAe,QCxRxB3I,GAAkC,CACtC,SAAU,CAAC,EACX,QAAS,GACT,MAAO,KACP,eAAgB,IAClB,EAGagJ,GAA4B9I,EACvC,6BACA,MAAOM,EAAG,CAAE,gBAAAL,KAAsB,SAC5B,GAAA,CACF,QAAQ,IAAI,wDAAwD,EAG9D,MAAAzB,EAAQ,aAAa,QAAQ,OAAO,EAC1C,GAAI,CAACA,EACH,OAAOyB,EAAgB,yCAAyC,EAGlE,MAAMvB,EAAW,MAAMJ,EAAM,IAAI,GAAGiE,CAAY,0BAA2B,CACzE,QAAS,CACP,cAAiB,UAAU/D,CAAK,EAAA,CAClC,CACD,EAEO,eAAA,IAAI,4CAA6CE,EAAS,IAAI,EAC/DA,EAAS,KAAK,eACdD,EAAY,CACX,eAAA,MAAM,qDAAsDA,CAAK,EAClEwB,IACLR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SACtB,+EACF,CAAA,CACF,CAEJ,EAEasJ,GAA4B/I,EACvC,6BACA,MAAON,EAAkB,CAAE,gBAAAO,KAAsB,SAC3C,GAAA,CACF,QAAQ,IAAI,6DAA6D,EAGnE,MAAAzB,EAAQ,aAAa,QAAQ,OAAO,EAC1C,GAAI,CAACA,EACH,OAAOyB,EAAgB,yCAAyC,EAI1D,QAAA,IAAI,8BAA+BP,CAAW,EAEtD,MAAMhB,EAAW,MAAMJ,EAAM,KAAK,GAAGiE,CAAY,0BAA2B7C,EAAa,CACvF,QAAS,CACP,cAAiB,UAAUlB,CAAK,GAChC,eAAgB,kBAAA,CAClB,CACD,EAEO,eAAA,IAAI,2CAA4CE,EAAS,IAAI,EAC9DA,EAAS,WACTD,EAAY,CACX,eAAA,MAAM,sDAAuDA,CAAK,EACnEwB,IACLR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SACtB,2EACF,CAAA,CACF,CAEJ,EAEauJ,GAA4BhJ,EACvC,6BACA,MAAON,EAAkB,CAAE,gBAAAO,KAAsB,SAC3C,GAAA,CACF,KAAM,CAAE,GAAAuD,EAAI,GAAGD,CAAA,EAAS7D,EAChB,QAAA,IAAI,sDAAsD8D,CAAE,KAAK,EAGnE,MAAAhF,EAAQ,aAAa,QAAQ,OAAO,EAC1C,GAAI,CAACA,EACH,OAAOyB,EAAgB,yCAAyC,EAKlE,GAAI,CADc,6EACH,KAAKuD,CAAE,EACZ,eAAA,MAAM,qCAAqCA,CAAE,uBAAuB,EACrEvD,EAAgB,uDAAuDuD,CAAE,EAAE,EAG5E,QAAA,IAAI,iCAAkCD,CAAI,EAE5C,MAAA7E,EAAW,MAAMJ,EAAM,IAAI,GAAGiE,CAAY,0BAA0BiB,CAAE,GAAID,EAAM,CACpF,QAAS,CACP,cAAiB,UAAU/E,CAAK,GAChC,eAAgB,kBAAA,CAClB,CACD,EAEO,eAAA,IAAI,yCAA0CE,EAAS,IAAI,EAC5DA,EAAS,WACTD,EAAY,CACX,eAAA,MAAM,sDAAuDA,CAAK,EACnEwB,IACLR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SACtB,yFACF,CAAA,CACF,CAEJ,EAEawJ,GAA4BjJ,EACvC,6BACA,MAAOwD,EAAY,CAAE,gBAAAvD,KAAsB,SACrC,GAAA,CACM,QAAA,IAAI,sDAAsDuD,CAAE,KAAK,EAGnE,MAAAhF,EAAQ,aAAa,QAAQ,OAAO,EAC1C,OAAKA,EAKa,6EACH,KAAKgF,CAAE,GAKtB,MAAMlF,EAAM,OAAO,GAAGiE,CAAY,0BAA0BiB,CAAE,GAAI,CAChE,QAAS,CACP,cAAiB,UAAUhF,CAAK,EAAA,CAClC,CACD,EAED,QAAQ,IAAI,oDAAoD,EACzDgF,IAXG,QAAA,MAAM,qCAAqCA,CAAE,uBAAuB,EACrEvD,EAAgB,uDAAuDuD,CAAE,EAAE,GAP3EvD,EAAgB,yCAAyC,QAkB3DxB,EAAY,CACX,eAAA,MAAM,sDAAuDA,CAAK,EACnEwB,IACLR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SACtB,uFACF,CAAA,CACF,CAEJ,EAEayJ,GAA8BlJ,EACzC,+BACA,MAAOwD,EAAY,CAAE,gBAAAvD,KAAsB,SACrC,GAAA,CACM,QAAA,IAAI,wDAAwDuD,CAAE,KAAK,EAGrE,MAAAhF,EAAQ,aAAa,QAAQ,OAAO,EAC1C,GAAI,CAACA,EACH,OAAOyB,EAAgB,yCAAyC,EAKlE,GAAI,CADc,6EACH,KAAKuD,CAAE,EACZ,eAAA,MAAM,qCAAqCA,CAAE,uBAAuB,EACrEvD,EAAgB,uDAAuDuD,CAAE,EAAE,EAG9E,MAAA9E,EAAW,MAAMJ,EAAM,KAAK,GAAGiE,CAAY,0BAA0BiB,CAAE,YAAa,GAAI,CAC5F,QAAS,CACP,cAAiB,UAAUhF,CAAK,GAChC,eAAgB,kBAAA,CAClB,CACD,EAEO,eAAA,IAAI,2CAA4CE,EAAS,IAAI,EAC9DA,EAAS,WACTD,EAAY,CACX,eAAA,MAAM,wDAAyDA,CAAK,EACrEwB,IACLR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SACtB,yFACF,CAAA,CACF,CAEJ,EAGM0J,GAAoB1I,GAAY,CACpC,KAAM,eAAA,aACNX,GACA,SAAU,CACR,kBAAmB,CAACY,EAAOE,IAAsD,CAC/EF,EAAM,eAAiBE,EAAO,OAChC,EACA,uBAAyBF,GAAU,CACjCA,EAAM,MAAQ,IAAA,CAElB,EACA,cAAgBC,GAAY,CAC1BA,EAEG,QAAQmI,GAA0B,QAAUpI,GAAU,CACrDA,EAAM,QAAU,GAChBA,EAAM,MAAQ,IAAA,CACf,EACA,QAAQoI,GAA0B,UAAW,CAACpI,EAAOE,IAAW,CAC/DF,EAAM,QAAU,GAChBA,EAAM,SAAWE,EAAO,OAAA,CACzB,EACA,QAAQkI,GAA0B,SAAU,CAACpI,EAAOE,IAAW,CAC9DF,EAAM,QAAU,GAChBA,EAAM,MAAQE,EAAO,OACtB,CAAA,EAGA,QAAQmI,GAA0B,QAAUrI,GAAU,CACrDA,EAAM,QAAU,GAChBA,EAAM,MAAQ,IAAA,CACf,EACA,QAAQqI,GAA0B,UAAW,CAACrI,EAAOE,IAAW,CAC/DF,EAAM,QAAU,GACVA,EAAA,SAAS,KAAKE,EAAO,OAAO,CAAA,CACnC,EACA,QAAQmI,GAA0B,SAAU,CAACrI,EAAOE,IAAW,CAC9DF,EAAM,QAAU,GAChBA,EAAM,MAAQE,EAAO,OACtB,CAAA,EAGA,QAAQoI,GAA0B,QAAUtI,GAAU,CACrDA,EAAM,QAAU,GAChBA,EAAM,MAAQ,IAAA,CACf,EACA,QAAQsI,GAA0B,UAAW,CAACtI,EAAOE,IAAW,CAC/DF,EAAM,QAAU,GACV,MAAAoE,EAAQpE,EAAM,SAAS,aAAqB0I,EAAQ,KAAOxI,EAAO,QAAQ,EAAE,EAC9EkE,IAAU,KACNpE,EAAA,SAASoE,CAAK,EAAIlE,EAAO,QACjC,CACD,EACA,QAAQoI,GAA0B,SAAU,CAACtI,EAAOE,IAAW,CAC9DF,EAAM,QAAU,GAChBA,EAAM,MAAQE,EAAO,OACtB,CAAA,EAGA,QAAQqI,GAA0B,QAAUvI,GAAU,CACrDA,EAAM,QAAU,GAChBA,EAAM,MAAQ,IAAA,CACf,EACA,QAAQuI,GAA0B,UAAW,CAACvI,EAAOE,IAAW,CAC/DF,EAAM,QAAU,GACVA,EAAA,SAAWA,EAAM,SAAS,UAAkB0I,EAAQ,KAAOxI,EAAO,OAAO,CAAA,CAChF,EACA,QAAQqI,GAA0B,SAAU,CAACvI,EAAOE,IAAW,CAC9DF,EAAM,QAAU,GAChBA,EAAM,MAAQE,EAAO,OACtB,CAAA,EAGA,QAAQsI,GAA4B,QAAUxI,GAAU,CACvDA,EAAM,QAAU,GAChBA,EAAM,MAAQ,IAAA,CACf,EACA,QAAQwI,GAA4B,UAAW,CAACxI,EAAOE,IAAW,CACjEF,EAAM,QAAU,GAEhBA,EAAM,SAAWA,EAAM,SAAS,IAAgB0I,IAAA,CAC9C,GAAGA,EACH,UAAWA,EAAQ,KAAOxI,EAAO,QAAQ,EAAA,EACzC,CAAA,CACH,EACA,QAAQsI,GAA4B,SAAU,CAACxI,EAAOE,IAAW,CAChEF,EAAM,QAAU,GAChBA,EAAM,MAAQE,EAAO,OAAA,CACtB,CAAA,CAEP,CAAC,EAEY,CAAE,kBAAAyI,GAAmB,uBAAAC,IAA2BH,GAAkB,QAChEI,GAAAJ,GAAkB,QCpS3BrJ,GAAmC,CACvC,eAAgB,CAAC,EACjB,QAAS,GACT,MAAO,KACP,oBAAqB,KACrB,QAAS,CAAC,EACV,YAAa,IACf,EAGa0J,GAA4BxJ,EACvC,oCACA,MAAOyJ,EAA+B,CAAA,EAAI,CAAE,gBAAAxJ,KAAsB,SAC5D,GAAA,CACF,QAAQ,IAAI,oFAAoF,EAC5F,IAAAqD,EAAM,GAAGf,CAAY,0BAGnB,MAAAmH,EAAc,IAAI,gBACpBD,EAAQ,aACEC,EAAA,OAAO,cAAeD,EAAQ,WAAW,EAEnDA,EAAQ,QACEC,EAAA,OAAO,SAAUD,EAAQ,MAAM,EAEzCA,EAAQ,YAAc,QACxBC,EAAY,OAAO,YAAa,OAAOD,EAAQ,SAAS,CAAC,EAGrD,MAAAE,EAAcD,EAAY,SAAS,EACrCC,IACFrG,GAAO,IAAIqG,CAAW,IAIlB,MAAAnL,EAAQ,aAAa,QAAQ,OAAO,EAC1C,GAAI,CAACA,EACH,OAAOyB,EAAgB,yCAAyC,EAGlE,MAAMvB,EAAW,MAAMJ,EAAM,IAAIgF,EAAK,CACpC,QAAS,CACP,cAAiB,UAAU9E,CAAK,EAAA,CAClC,CACD,EAEO,eAAA,IAAI,kDAAmDE,EAAS,IAAI,EACrEA,EAAS,KAAK,qBACdD,EAAY,CACX,eAAA,MAAM,0DAA2DA,CAAK,EACvEwB,IACLR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SACtB,wGACF,CAAA,CACF,CAEJ,EAEamK,GAAyB5J,EACpC,uCACA,MAAOwD,EAAY,CAAE,gBAAAvD,KAAsB,SACrC,GAAA,CACM,QAAA,IAAI,+CAA+CuD,CAAE,2BAA2B,EAGlF,MAAAhF,EAAQ,aAAa,QAAQ,OAAO,EAC1C,GAAI,CAACA,EACH,OAAOyB,EAAgB,yCAAyC,EAG5D,MAAAvB,EAAW,MAAMJ,EAAM,IAAI,GAAGiE,CAAY,0BAA0BiB,CAAE,GAAI,CAC9E,QAAS,CACP,cAAiB,UAAUhF,CAAK,EAAA,CAClC,CACD,EAEO,eAAA,IAAI,uDAAwDE,EAAS,IAAI,EAC1EA,EAAS,WACTD,EAAY,CACX,eAAA,MAAM,gEAAiEA,CAAK,EAC7EwB,IACLR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SACtB,2GACF,CAAA,CACF,CAEJ,EAEaoK,GAA4B7J,EACvC,oCACA,MAAO8J,EAAiB,CAAE,gBAAA7J,KAAsB,SAC1C,GAAA,CACF,QAAQ,IAAI,0FAA0F,EAGhG,MAAAzB,EAAQ,aAAa,QAAQ,OAAO,EAC1C,GAAI,CAACA,EACH,OAAOyB,EAAgB,yCAAyC,EAIlE,GAAI,CAAC6J,EAAW,MAAQA,EAAW,KAAK,SAAW,GACjD,OAAO7J,EAAgB,wDAAwD,EAG7E,GAAA,CAAC6J,EAAW,YACd,OAAO7J,EAAgB,8DAA8D,EAGvF,MAAMvB,EAAW,MAAMJ,EAAM,KAAK,GAAGiE,CAAY,0BAA2BuH,EAAY,CACtF,QAAS,CACP,cAAiB,UAAUtL,CAAK,GAChC,eAAgB,kBAAA,CAClB,CACD,EAEO,eAAA,IAAI,iDAAkDE,EAAS,IAAI,EACpEA,EAAS,WACTD,EAAY,CACX,eAAA,MAAM,yFAA0FA,CAAK,EACtGwB,IACLR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SACtB,qGACF,CAAA,CACF,CAEJ,EAEasK,GAA4B/J,EACvC,oCACA,MAAO8J,EAAiB,CAAE,gBAAA7J,KAAsB,SAC1C,GAAA,CACF,KAAM,CAAE,GAAAuD,EAAI,GAAGD,CAAA,EAASuG,EAChB,QAAA,IAAI,sDAAsDtG,CAAE,6BAA6B,EAG3F,MAAAhF,EAAQ,aAAa,QAAQ,OAAO,EAC1C,GAAI,CAACA,EACH,OAAOyB,EAAgB,yCAAyC,EAIlE,GAAI,CAACuD,EACH,OAAOvD,EAAgB,2CAA2C,EAIpE,GAAIsD,EAAK,MAAQA,EAAK,KAAK,SAAW,GACpC,OAAOtD,EAAgB,wDAAwD,EAG3E,MAAAvB,EAAW,MAAMJ,EAAM,IAAI,GAAGiE,CAAY,0BAA0BiB,CAAE,GAAID,EAAM,CACpF,QAAS,CACP,cAAiB,UAAU/E,CAAK,GAChC,eAAgB,kBAAA,CAClB,CACD,EAEO,eAAA,IAAI,+CAAgDE,EAAS,IAAI,EAClEA,EAAS,WACTD,EAAY,CACX,eAAA,MAAM,yFAA0FA,CAAK,EACtGwB,IACLR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SACtB,mGACF,CAAA,CACF,CAEJ,EAEauK,GAA4BhK,EACvC,oCACA,MAAOwD,EAAY,CAAE,gBAAAvD,KAAsB,SACrC,GAAA,CACM,QAAA,IAAI,sDAAsDuD,CAAE,wBAAwB,EAGtF,MAAAhF,EAAQ,aAAa,QAAQ,OAAO,EAC1C,OAAKA,EAKAgF,GAIL,MAAMlF,EAAM,OAAO,GAAGiE,CAAY,0BAA0BiB,CAAE,GAAI,CAChE,QAAS,CACP,cAAiB,UAAUhF,CAAK,EAAA,CAClC,CACD,EAED,QAAQ,IAAI,0DAA0D,EAC/DgF,GAVEvD,EAAgB,4CAA4C,EAL5DA,EAAgB,yCAAyC,QAgB3DxB,EAAY,CACX,eAAA,MAAM,yFAA0FA,CAAK,EACtGwB,IACLR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SACtB,gGACF,CAAA,CACF,CAEJ,EAEawK,GAA2BjK,EACtC,mCACA,MAAOwD,EAAY,CAAE,gBAAAvD,KAAsB,SACrC,GAAA,CACM,QAAA,IAAI,sDAAsDuD,CAAE,mCAAmC,EAGjG,MAAAhF,EAAQ,aAAa,QAAQ,OAAO,EAC1C,GAAI,CAACA,EACH,OAAOyB,EAAgB,yCAAyC,EAIlE,GAAI,CAACuD,EACH,OAAOvD,EAAgB,+CAA+C,EAGlE,MAAAvB,EAAW,MAAMJ,EAAM,KAAK,GAAGiE,CAAY,0BAA0BiB,CAAE,YAAa,GAAI,CAC5F,QAAS,CACP,cAAiB,UAAUhF,CAAK,GAChC,eAAgB,kBAAA,CAClB,CACD,EAEO,eAAA,IAAI,+CAAgDE,EAAS,IAAI,EAClEA,EAAS,WACTD,EAAY,CACX,eAAA,MAAM,yFAA0FA,CAAK,EACtGwB,IACLR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SACtB,uGACF,CAAA,CACF,CAEJ,EAEayK,GAAsBlK,EACjC,oCACA,MAAOwD,EAAY,CAAE,gBAAAvD,KAAsB,SACrC,GAAA,CACM,QAAA,IAAI,0DAA0DuD,CAAE,yCAAyC,EAG3G,MAAAhF,EAAQ,aAAa,QAAQ,OAAO,EAC1C,GAAI,CAACA,EACH,OAAOyB,EAAgB,yCAAyC,EAG5D,MAAAvB,EAAW,MAAMJ,EAAM,IAAI,GAAGiE,CAAY,0BAA0BiB,CAAE,UAAW,CACrF,QAAS,CACP,cAAiB,UAAUhF,CAAK,EAClC,EACA,aAAc,MAAA,CACf,EAGK8E,EAAM,OAAO,IAAI,gBAAgB,IAAI,KAAK,CAAC5E,EAAS,IAAI,CAAC,CAAC,EAC1DyL,EAAO,SAAS,cAAc,GAAG,EACvC,OAAAA,EAAK,KAAO7G,EACZ6G,EAAK,aAAa,WAAY,iBAAiB3G,CAAE,OAAO,EAC/C,SAAA,KAAK,YAAY2G,CAAI,EAC9BA,EAAK,MAAM,EACXA,EAAK,OAAO,EAEZ,QAAQ,IAAI,2DAA2D,EAChE3G,QACA/E,EAAY,CACX,eAAA,MAAM,wEAAyEA,CAAK,EACrFwB,IACLR,GAAAZ,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,OAAhB,YAAAY,EAAsB,SACtB,sGACF,CAAA,CACF,CAEJ,EAGM2K,GAAqB3J,GAAY,CACrC,KAAM,gBACN,aAAAX,GACA,SAAU,CACR,uBAAwB,CAACY,EAAOE,IAAsD,CACpFF,EAAM,oBAAsBE,EAAO,OACrC,EACA,wBAA0BF,GAAU,CAClCA,EAAM,MAAQ,IAChB,EACA,wBAAyB,CAACA,EAAOE,IAA+C,CAC9EF,EAAM,QAAUE,EAAO,OACzB,EACA,0BAA4BF,GAAU,CACpCA,EAAM,QAAU,CAAC,CAAA,CAErB,EACA,cAAgBC,GAAY,CAC1BA,EAEG,QAAQ6I,GAA0B,QAAU9I,GAAU,CACrDA,EAAM,QAAU,GAChBA,EAAM,MAAQ,IAAA,CACf,EACA,QAAQ8I,GAA0B,UAAW,CAAC9I,EAAOE,IAAW,CAC/DF,EAAM,QAAU,GAChBA,EAAM,eAAiBE,EAAO,QAC9BF,EAAM,YAAc,IAAI,KAAK,EAAE,YAAY,EAC3C,MAAM2J,EAAezJ,EAAO,QAAQ,KAAMrC,GAAgCA,EAAO,SAAS,EACtF8L,IACF3J,EAAM,oBAAsB2J,EAC9B,CACD,EACA,QAAQb,GAA0B,SAAU,CAAC9I,EAAOE,IAAW,CAC9DF,EAAM,QAAU,GAChBA,EAAM,MAAQE,EAAO,OACtB,CAAA,EAGA,QAAQgJ,GAAuB,QAAUlJ,GAAU,CAClDA,EAAM,QAAU,GAChBA,EAAM,MAAQ,IAAA,CACf,EACA,QAAQkJ,GAAuB,UAAW,CAAClJ,EAAOE,IAAW,CAC5DF,EAAM,QAAU,GAEV,MAAAoE,EAAQpE,EAAM,eAAe,aAAoBnC,EAAO,KAAOqC,EAAO,QAAQ,EAAE,EAClFkE,IAAU,GACNpE,EAAA,eAAeoE,CAAK,EAAIlE,EAAO,QAE/BF,EAAA,eAAe,KAAKE,EAAO,OAAO,EAEtCA,EAAO,QAAQ,YACjBF,EAAM,oBAAsBE,EAAO,QACrC,CACD,EACA,QAAQgJ,GAAuB,SAAU,CAAClJ,EAAOE,IAAW,CAC3DF,EAAM,QAAU,GAChBA,EAAM,MAAQE,EAAO,OACtB,CAAA,EAGA,QAAQiJ,GAA0B,QAAUnJ,GAAU,CACrDA,EAAM,QAAU,GAChBA,EAAM,MAAQ,IAAA,CACf,EACA,QAAQmJ,GAA0B,UAAW,CAACnJ,EAAOE,IAAW,CAC/DF,EAAM,QAAU,GACVA,EAAA,eAAe,KAAKE,EAAO,OAAO,EACxCF,EAAM,YAAc,IAAI,KAAK,EAAE,YAAY,CAAA,CAC5C,EACA,QAAQmJ,GAA0B,SAAU,CAACnJ,EAAOE,IAAW,CAC9DF,EAAM,QAAU,GAChBA,EAAM,MAAQE,EAAO,OACtB,CAAA,EAGA,QAAQmJ,GAA0B,QAAUrJ,GAAU,CACrDA,EAAM,QAAU,GAChBA,EAAM,MAAQ,IAAA,CACf,EACA,QAAQqJ,GAA0B,UAAW,CAACrJ,EAAOE,IAAW,CAC/DF,EAAM,QAAU,GACV,MAAAoE,EAAQpE,EAAM,eAAe,aAAoBnC,EAAO,KAAOqC,EAAO,QAAQ,EAAE,EAClFkE,IAAU,KACNpE,EAAA,eAAeoE,CAAK,EAAIlE,EAAO,QACjCF,EAAM,qBAAuBA,EAAM,oBAAoB,KAAOE,EAAO,QAAQ,KAC/EF,EAAM,oBAAsBE,EAAO,UAGvCF,EAAM,YAAc,IAAI,KAAK,EAAE,YAAY,CAAA,CAC5C,EACA,QAAQqJ,GAA0B,SAAU,CAACrJ,EAAOE,IAAW,CAC9DF,EAAM,QAAU,GAChBA,EAAM,MAAQE,EAAO,OACtB,CAAA,EAGA,QAAQoJ,GAA0B,QAAUtJ,GAAU,CACrDA,EAAM,QAAU,GAChBA,EAAM,MAAQ,IAAA,CACf,EACA,QAAQsJ,GAA0B,UAAW,CAACtJ,EAAOE,IAAW,CAC/DF,EAAM,QAAU,GACVA,EAAA,eAAiBA,EAAM,eAAe,UAAiBnC,EAAO,KAAOqC,EAAO,OAAO,EACrFF,EAAM,qBAAuBA,EAAM,oBAAoB,KAAOE,EAAO,UACvEF,EAAM,oBAAsB,MAE9BA,EAAM,YAAc,IAAI,KAAK,EAAE,YAAY,CAAA,CAC5C,EACA,QAAQsJ,GAA0B,SAAU,CAACtJ,EAAOE,IAAW,CAC9DF,EAAM,QAAU,GAChBA,EAAM,MAAQE,EAAO,OACtB,CAAA,EAGA,QAAQqJ,GAAyB,QAAUvJ,GAAU,CACpDA,EAAM,QAAU,GAChBA,EAAM,MAAQ,IAAA,CACf,EACA,QAAQuJ,GAAyB,UAAW,CAACvJ,EAAOE,IAAW,CAC9DF,EAAM,QAAU,GAEhBA,EAAM,eAAiBA,EAAM,eAAe,IAAenC,IAAA,CACzD,GAAGA,EACH,UAAWA,EAAO,KAAOqC,EAAO,QAAQ,EAAA,EACxC,EACFF,EAAM,oBAAsBE,EAAO,QACnCF,EAAM,YAAc,IAAI,KAAK,EAAE,YAAY,CAAA,CAC5C,EACA,QAAQuJ,GAAyB,SAAU,CAACvJ,EAAOE,IAAW,CAC7DF,EAAM,QAAU,GAChBA,EAAM,MAAQE,EAAO,OACtB,CAAA,EAGA,QAAQsJ,GAAoB,QAAUxJ,GAAU,CAC/CA,EAAM,QAAU,GAChBA,EAAM,MAAQ,IACf,CAAA,EACA,QAAQwJ,GAAoB,UAAYxJ,GAAU,CACjDA,EAAM,QAAU,EAAA,CACjB,EACA,QAAQwJ,GAAoB,SAAU,CAACxJ,EAAOE,IAAW,CACxDF,EAAM,QAAU,GAChBA,EAAM,MAAQE,EAAO,OAAA,CACtB,CAAA,CAEP,CAAC,EAEY,CACX,uBAAA0J,GACA,wBAAAC,GACA,wBAAAC,GACA,0BAAAC,EACF,EAAIL,GAAmB,QAERM,GAAAN,GAAmB,QCra5BO,GAA6B,IAAcC,GAAChK,GAAgB,CAChE,GAAIA,EAAO,KAAK,WAAW,OAAO,EAAG,CAC7B,MAAAqC,EAAY4H,GAAQ,IAAI,YAAY,EAEtC5H,GAAarC,EAAO,SAAW,OAAOA,EAAO,SAAY,WAC3DA,EAAO,QAAQ,QAAU,CACvB,GAAGA,EAAO,QAAQ,QAClB,cAAeqC,CACjB,EACF,CAEF,OAAO2H,EAAKhK,CAAM,CACpB,ECrDawC,GAAQ0H,GAAe,CAClC,QAAS,CACP,KAAMhK,GACN,QAASc,GACT,YAAaI,GACb,aAAcyD,GACd,UAAWoD,GACX,aAAcU,GACd,cAAemB,EAEjB,EACA,WAAaK,GACXA,EAAqB,EAAE,OAAOJ,EAAc,CAChD,CAAC,ECFKK,GAAeC,gBAA4C,MAAS,EAE7DC,GAAgB,CAAC,CAAE,SAAAC,KAAwC,CACtE,KAAM,CAACC,EAAQC,CAAS,EAAIC,EAAAA,SAAyB,CAAA,CAAE,EACjD,CAACC,EAAWC,CAAY,EAAIF,EAAAA,SAAS,EAAK,EAGhDG,EAAAA,UAAU,KACRD,EAAa,EAAI,EACV,IAAMA,EAAa,EAAK,GAC9B,EAAE,EAEC,MAAAE,EAAcC,cAAanI,GAAe,CACzC+H,GACKF,EAACO,GAAkBA,EAAc,OAAQC,GAAUA,EAAM,KAAOrI,CAAE,CAAC,CAAA,EAC5E,CAAC+H,CAAS,CAAC,EAERO,EAAYH,EAAAA,YAAY,CAAC9F,EAAiBc,EAAkB,OAAQoF,EAAW,MAAS,CACxF,GAAA,CAACR,EAAkB,MAAA,GACjB,MAAA/H,EAAK,KAAK,SAAS,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,EAEvC6H,EAACO,GAAkB,CAAC,GAAGA,EAAe,CAAE,GAAApI,EAAI,KAAAmD,EAAM,QAAAd,EAAS,SAAAkG,CAAS,CAAC,CAAC,EAE5EA,EAAW,GACb,WAAW,IAAM,CACfL,EAAYlI,CAAE,GACbuI,CAAQ,CACb,EACC,CAACL,EAAaH,CAAS,CAAC,EAErBS,EAAiB,CACrB,QAAS,CAACnG,EAAiBkG,IAAsBD,EAAUjG,EAAS,UAAWkG,CAAQ,EACvF,MAAO,CAAClG,EAAiBkG,IAAsBD,EAAUjG,EAAS,QAASkG,CAAQ,EACnF,QAAS,CAAClG,EAAiBkG,IAAsBD,EAAUjG,EAAS,UAAWkG,CAAQ,EACvF,KAAM,CAAClG,EAAiBkG,IAAsBD,EAAUjG,EAAS,OAAQkG,CAAQ,CACnF,EAGE,OAAAE,OAACjB,GAAa,SAAb,CAAsB,MAAO,CAAE,UAAAc,EAAW,GAAGE,EAAgB,YAAAN,EAAa,OAAAN,CAAA,EACxE,SAAA,CAAAD,EACAe,EAAA,IAAA,MAAA,CAAI,UAAU,kBACZ,WAAO,IAAKL,GACXI,EAAAA,KAAC,MAAmB,CAAA,UAAW,eAAeJ,EAAM,IAAI,GACtD,SAAA,CAAAK,EAAA,IAAC,MAAI,CAAA,UAAU,gBAAiB,SAAAL,EAAM,QAAQ,EAC9CK,EAAA,IAAC,SAAA,CACC,UAAU,cACV,QAAS,IAAMR,EAAYG,EAAM,EAAE,EACnC,aAAW,QACZ,SAAA,GAAA,CAAA,CAED,GARQA,EAAM,EAShB,CACD,CACH,CAAA,CAAA,EACF,CAEJ,EAGMM,GAAW,IAAM,CACf,MAAAC,EAAUC,aAAWrB,EAAY,EACvC,GAAI,CAACoB,EACG,MAAA,IAAI,MAAM,8CAA8C,EAEzD,OAAAA,CACT,EClFaE,GAAiB,IAAMC,GAAyB,EAChDC,EAAkDC,ECSzDC,GAAoC,CAAC,CAAE,OAAAC,EAAQ,QAAAC,KAAc,CACjE,MAAMhF,EAAW2E,GAAyB,EACpCM,EAAWC,GAAY,EAGvB,CAACxN,EAAUyN,CAAW,EAAIzB,WAAS,CACvC,UAAW,GACX,SAAU,GACV,MAAO,GACP,SAAU,GACV,SAAU,GACV,gBAAiB,EAAA,CAClB,EAGK,CAAC0B,EAAcC,CAAe,EAAI3B,EAAAA,SAAS,EAAK,EAChD,CAAC7M,EAAOyO,CAAQ,EAAI5B,EAAAA,SAAwB,IAAI,EAChD,CAAC6B,EAAiBC,CAAkB,EAAI9B,EAAAA,SAAS,2DAA2D,EAE9G,GAAA,CAACqB,EAAe,OAAA,KAGd,MAAAU,EAAgBC,GAA2C,CAC/D,KAAM,CAAE,KAAAjL,EAAM,MAAAC,CAAM,EAAIgL,EAAE,OAC1BP,EAAqBQ,IAAA,CACnB,GAAGA,EACH,CAAClL,CAAI,EAAGC,CAAA,EACR,CACJ,EAGMkL,EAAe,MAAOF,GAAwC,CAM9D,GALJA,EAAE,eAAe,EACjBL,EAAgB,EAAI,EACpBC,EAAS,IAAI,EAGT5N,EAAS,WAAaA,EAAS,gBAAiB,CAClD4N,EAAS,oFAAoF,EAC7FE,EAAmB,sEAAsE,EACzFH,EAAgB,EAAK,EACrB,MAAA,CAGF,GAAI,CAAC3N,EAAS,WAAa,CAACA,EAAS,UAAY,CAACA,EAAS,OAAS,CAACA,EAAS,UAAY,CAACA,EAAS,SAAU,CAC5G4N,EAAS,sFAAsF,EAC/FE,EAAmB,2EAA2E,EAC9FH,EAAgB,EAAK,EACrB,MAAA,CAKF,GAAI,CADe,6BACH,KAAK3N,EAAS,KAAK,EAAG,CACpC4N,EAAS,mHAAmH,EAC5HE,EAAmB,uEAAuE,EAC1FH,EAAgB,EAAK,EACrB,MAAA,CAKF,GAAI,CADkB,wBACH,KAAK3N,EAAS,QAAQ,EAAG,CAC1C4N,EAAS,mGAAmG,EAC5GE,EAAmB,uEAAuE,EAC1FH,EAAgB,EAAK,EACrB,MAAA,CAIE,GAAA3N,EAAS,SAAS,OAAS,EAAG,CAChC4N,EAAS,wFAAwF,EACjGE,EAAmB,qEAAqE,EACxFH,EAAgB,EAAK,EACrB,MAAA,CAGE,GAAA,CAEF,MAAMQ,EAAmB,CACvB,SAAUnO,EAAS,SAAS,KAAK,EACjC,MAAOA,EAAS,MAAM,KAAK,EAC3B,SAAUA,EAAS,QAErB,EAEA,QAAQ,IAAI,gCAAiC,CAC3C,GAAGmO,EACH,SAAU,KAAA,CACX,EAGK,MAAA7F,EAAS1H,GAASuN,CAAgB,CAAC,EAG5B,aAAA,QAAQ,sBAAuBnO,EAAS,QAAQ,EAG7D8N,EAAmB,2EAA2E,EAC9FH,EAAgB,EAAK,EAGrB,WAAW,IAAM,CAGfJ,EAAS,aAAa,EACdD,EAAA,GACP,GAAI,QAEAc,EAAU,CACT,QAAA,MAAM,yBAA0BA,CAAG,EAG3C,IAAIC,EAAW,sBAEXD,EAAI,UAAYA,EAAI,SAAS,KAC3B,OAAOA,EAAI,SAAS,MAAS,SAC/BC,EAAWD,EAAI,SAAS,KACfA,EAAI,SAAS,KAAK,SAC3BC,EAAW,OAAOD,EAAI,SAAS,KAAK,QAAW,SAC3CA,EAAI,SAAS,KAAK,OAClB,KAAK,UAAUA,EAAI,SAAS,KAAK,MAAM,GAEpCA,EAAI,UACbC,EAAWD,EAAI,SAGT,QAAA,MAAM,sBAAuBC,CAAQ,EAGzCA,EAAS,SAAS,gBAAgB,GACpCT,EAAS,kGAAkG,EAC3GE,EAAmB,8EAA8E,IAExFF,EAAA,wBAAwBS,CAAQ,EAAE,EAC3CP,EAAmB,6DAA6D,GAGlFH,EAAgB,EAAK,CAAA,CAEzB,EAGE,OAAAf,EAAA,IAAC,OAAI,MAAO,CACV,SAAU,QACV,IAAK,EACL,KAAM,EACN,MAAO,EACP,OAAQ,EACR,gBAAiB,qBACjB,QAAS,OACT,eAAgB,SAChB,WAAY,SACZ,OAAQ,GACV,EACE,SAACD,EAAAA,KAAA,MAAA,CAAI,MAAO,CACV,gBAAiB,UACjB,aAAc,OACd,UAAW,kCACX,MAAO,MACP,SAAU,QACV,QAAS,OACT,SAAU,WACV,MAAO,UACP,OAAQ,mCACR,UAAW,OACX,UAAW,MAEX,EAAA,SAAA,CAAAA,OAAC,OAAI,MAAO,CACV,aAAc,SACd,UAAW,SACX,SAAU,UAEV,EAAA,SAAA,CAAAC,MAAC,MAAG,MAAO,CACT,SAAU,SACV,MAAO,UACP,aAAc,QAAA,EACb,SAAyB,4BAAA,EAC5BA,MAAC,UAAO,MAAO,CACb,SAAU,WACV,IAAK,IACL,MAAO,IACP,WAAY,cACZ,OAAQ,OACR,MAAO,UACP,SAAU,OACV,OAAQ,UACR,OAAQ,EACV,EAAG,QAASU,EAAS,SAAC,GAAA,CAAA,CAAA,EACxB,QAEC,MAAI,CAAA,UAAU,mBACb,SAACV,MAAA,IAAA,CAAG,WAAgB,CACtB,CAAA,EAECzN,SACE,MAAI,CAAA,UAAU,gBACb,SAACyN,EAAA,IAAA,IAAA,CAAG,WAAM,CACZ,CAAA,EAGDD,EAAA,KAAA,OAAA,CAAK,SAAUuB,EAAc,UAAU,cACtC,SAAA,CAACvB,EAAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAoB,sBAAA,CAAA,EACxBD,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,YAAY,SAAU,aAAA,EACrCA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,YACH,KAAK,YACL,MAAO5M,EAAS,UAChB,SAAU+N,EACV,SAAUL,EACV,UAAWA,EAAe,mBAAqB,EAAA,CAAA,CACjD,EACF,EAEAf,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,WAAW,SAAS,YAAA,EACnCA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,WACH,KAAK,WACL,MAAO5M,EAAS,SAChB,SAAU+N,EACV,SAAUL,EACV,UAAWA,EAAe,mBAAqB,EAAA,CAAA,CACjD,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAf,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAe,iBAAA,CAAA,EACnBD,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,QAAQ,SAAa,gBAAA,EACpCA,EAAA,IAAC,QAAA,CACC,KAAK,QACL,GAAG,QACH,KAAK,QACL,MAAO5M,EAAS,MAChB,SAAU+N,EACV,SAAUL,EACV,UAAWA,EAAe,mBAAqB,EAAA,CAAA,CACjD,EACF,EAEAf,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,WAAW,SAAQ,WAAA,EAClCA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,WACH,KAAK,WACL,MAAO5M,EAAS,SAChB,SAAU+N,EACV,SAAUL,EACV,UAAWA,EAAe,mBAAqB,EAAA,CAAA,CACjD,CACF,CAAA,CAAA,EACF,EAEAf,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAQ,UAAA,CAAA,EACZD,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,WAAW,SAAQ,WAAA,EAClCA,EAAA,IAAC,QAAA,CACC,KAAK,WACL,GAAG,WACH,KAAK,WACL,MAAO5M,EAAS,SAChB,SAAU+N,EACV,SAAUL,EACV,UAAWA,EAAe,mBAAqB,EAAA,CAAA,CACjD,EACF,EAEAf,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,kBAAkB,SAAgB,mBAAA,EACjDA,EAAA,IAAC,QAAA,CACC,KAAK,WACL,GAAG,kBACH,KAAK,kBACL,MAAO5M,EAAS,gBAChB,SAAU+N,EACV,SAAUL,EACV,UAAWA,EAAe,mBAAqB,EAAA,CAAA,CACjD,CACF,CAAA,CAAA,EACF,EAEAf,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAAAC,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,gBACV,QAASU,EACT,SAAUI,EACX,SAAA,QAAA,CAED,EACAd,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,gBACV,SAAUc,EAET,WAAe,iBAAmB,UAAA,CAAA,CACrC,CACF,CAAA,CAAA,EACF,EAECd,MAAA,MAAA,CAAI,UAAU,eACb,gBAAC,IAAE,CAAA,SAAA,CAAA,4BAA0BA,EAAA,IAAA,IAAA,CAAE,KAAK,SAAS,SAAK,OAAA,CAAA,CAAA,CAAA,CAAI,CACxD,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EC5TM0B,GAA8B,CAAC,CAAE,QAAAhB,EAAS,OAAAD,KAAa,CAC3D,MAAM/E,EAAW0E,GAAe,EAC1BO,EAAWC,GAAY,EACvB,CAAC5N,EAAU2O,CAAW,EAAIvC,EAAAA,SAAS,EAAE,EACrC,CAACnM,EAAU2O,CAAW,EAAIxC,EAAAA,SAAS,EAAE,EACrC,CAAC7M,EAAOyO,CAAQ,EAAI5B,EAAAA,SAAS,EAAE,EAC/B,CAACyC,EAAiBC,CAAkB,EAAI1C,EAAAA,SAAS,EAAK,EACtD,CAAC9I,EAAkByL,CAAmB,EAAI3C,EAAAA,SAAS,EAAI,EACvD,CAAC4C,EAAmBC,CAAoB,EAAI7C,EAAAA,SAAS,EAAI,EACzD,CAAC8C,EAAmBC,CAAoB,EAAI/C,EAAAA,SAAS,EAAK,EAC1D,CAAC6B,EAAiBC,CAAkB,EAAI9B,EAAAA,SAAS,sEAAsE,EAEvHgD,EAAY9B,EAAgB9L,GAAUA,EAAM,KAAK,SAAS,EAC1D6N,EAAkB/B,EAAgB9L,GAAUA,EAAM,KAAK,eAAe,EACtE8N,EAAYhC,EAAgB9L,GAAUA,EAAM,KAAK,KAAK,EAEtD+N,EAAyBC,GAA0D,CAOpEtB,EANJ,CACb,QAAS,uEACT,MAAO,gEACP,QAAS,0DACT,QAAS,kDACX,EAC0BsB,CAAQ,CAAC,CACrC,EAEAjD,EAAAA,UAAU,IAAM,EACQ,SAAY,CAChC,GAAKkB,EAEL,CAAAwB,EAAqB,EAAI,EACzBjB,EAAS,EAAE,EAEP,GAAA,CACF,QAAQ,IAAI,qDAAqD,EAC3D,MAAAyB,EAAY,MAAMhM,GAAyB,EAGjD,GAFAsL,EAAoBU,CAAS,EAEzBA,EAAW,CACb,QAAQ,IAAI,+DAA+D,EAEvE,GAAA,CACI,MAAAC,EAAc,MAAMhL,GAAe,EACzCoK,EAAmBY,CAAW,EAEzBA,EAIH,QAAQ,IAAI,0DAA0D,GAHtE,QAAQ,MAAM,mDAAmD,EACjE1B,EAAS,yDAAyD,SAI7D2B,EAAW,CACV,QAAA,MAAM,mDAAoDA,CAAS,EAC3E3B,EAAS,qDAAqD,EAC9Dc,EAAmB,EAAK,CAAA,CAC1B,MAEA,QAAQ,MAAM,4CAA4C,EAC1Dd,EAAS,6DAA6D,QAEjEQ,EAAK,CACJ,QAAA,MAAM,gCAAiCA,CAAG,EAClDO,EAAoB,EAAK,EACzBf,EAAS,0DAA0D,CAAA,QACnE,CACAiB,EAAqB,EAAK,CAAA,EAE9B,GAEc,CAAA,EACb,CAACxB,CAAM,CAAC,EAEXlB,EAAAA,UAAU,IAAM,CACV8C,IACF,QAAQ,IAAI,oEAAoE,EAEhF1B,EAAS,aAAc,CAAE,QAAS,EAAA,CAAM,EACpCD,GACMA,EAAA,EAGX,EAAA,CAAC2B,EAAiB1B,EAAUD,CAAO,CAAC,EAGvC,MAAMkC,EAAoB,SAAY,SAChC,GAAA,CACF,QAAQ,IAAI,+CAA+C,EAC3DL,EAAsB,SAAS,EAGzB,MAAAM,EAAe,MAAMzQ,EAAM,IAAI,gEAAuD,CAC1F,gBAAiB,EAAA,CAClB,EAED,QAAQ,IAAI,yCAAyC,EAC/C,MAAA2E,EAAY8L,EAAa,KAAK,WAG9BC,EAAgB,MAAM1Q,EAAM,KAChC,2DACA,IAAI,gBAAgB,CAClB,SAAY,WACZ,SAAY,aAAA,CACb,EACD,CACE,QAAS,CACP,eAAgB,oCAChB,cAAe2E,CACjB,EACA,gBAAiB,EAAA,CAErB,EAEQ,QAAA,IAAI,8CAA+C+L,EAAc,IAAI,EAG7E,aAAa,QAAQ,QAASA,EAAc,KAAK,YAAY,EAC7D,aAAa,QAAQ,gBAAiBA,EAAc,KAAK,aAAa,EAEtEP,EAAsB,SAAS,EAG/B5B,EAAS,aAAc,CAAE,QAAS,EAAA,CAAM,EACpCD,GACMA,EAAA,QAEHnO,EAAY,CACX,QAAA,MAAM,6CAA8CA,CAAK,EACjEgQ,EAAsB,OAAO,EAE7B,IAAIlP,EAAe,8DAEfd,GAAAA,EAAAA,EAAM,WAANA,YAAAA,EAAgB,OAAhBA,MAAAA,EAAsB,OACxBc,EAAe,iBAAiBd,EAAM,SAAS,KAAK,MAAM,GACjDA,EAAM,UACAc,EAAA,iBAAiBd,EAAM,OAAO,IAG/CyO,EAAS3N,CAAY,CAAA,CAEzB,EAEMiO,EAAe,MAAOF,GAAuB,SAK7C,GAJJA,EAAE,eAAe,EACjBJ,EAAS,EAAE,EAGP,CAAChO,GAAY,CAACC,EAAU,CAC1B+N,EAAS,oCAAoC,EAC7CuB,EAAsB,OAAO,EAC7B,MAAA,CAMF,GAHA,QAAQ,IAAI,yCAA0C,CAAE,SAAAvP,EAAU,SAAU,MAAO,EAG/E,CAACsD,EACC,GAAA,CAGF,GAFA,QAAQ,IAAI,6CAA6C,EAErD,CADc,MAAMG,GAAyB,EACjC,CACd,QAAQ,MAAM,4CAA4C,EAC1DuK,EAAS,+CAA+C,EACxDuB,EAAsB,OAAO,EAC7B,MAAA,CAEFR,EAAoB,EAAI,QACjBP,EAAK,CACJ,QAAA,MAAM,2CAA4CA,CAAG,EAC7DR,EAAS,mDAAmD,EAC5DuB,EAAsB,OAAO,EAC7B,MAAA,CAKJ,GAAI,CAACV,EACC,GAAA,CACF,QAAQ,IAAI,oDAAoD,EAC1D,MAAAa,EAAc,MAAMhL,GAAe,EAGzC,GAFAoK,EAAmBY,CAAW,EAE1B,CAACA,EAAa,CAChB,QAAQ,MAAM,mDAAmD,EACjE1B,EAAS,gEAAgE,EACzE,MAAA,QAEKQ,EAAK,CACJ,QAAA,MAAM,mDAAoDA,CAAG,EACrER,EAAS,sDAAsD,EAC/D,MAAA,CAIA,GAAA,CACF,QAAQ,IAAI,gDAAgD,EAC5DuB,EAAsB,SAAS,EAG/B,MAAMQ,EAAY,CAChB,SAAU/P,EAAS,KAAK,EACxB,SAAAC,CACF,EAGA,aAAa,WAAW,OAAO,EAC/B,aAAa,WAAW,eAAe,EAGvC,aAAa,QAAQ,WAAYD,EAAS,KAAA,CAAM,EAChD,QAAQ,IAAI,sDAAuDA,EAAS,KAAA,CAAM,EAElF,MAAMgQ,EAAS,MAAMtH,EAAS7H,GAAMkP,CAAS,CAAC,EAAE,OAAO,EAGvD,GAFQ,QAAA,IAAI,6CAA8CC,CAAM,EAE5D,CAACA,EACG,MAAA,IAAI,MAAM,uCAAuC,EAGzDT,EAAsB,SAAS,EAG/B,QAAQ,IAAI,iEAAiE,QAGtEf,EAAU,CACT,QAAA,MAAM,qCAAsCA,CAAG,EAGvD,IAAInO,EAAe,8DAEfE,GAAAZ,EAAA6O,EAAI,WAAJ,YAAA7O,EAAc,OAAd,MAAAY,EAAoB,OACtBF,EAAe,iBAAiBmO,EAAI,SAAS,KAAK,MAAM,GAC/CA,EAAI,UACEnO,EAAA,iBAAiBmO,EAAI,OAAO,IAG7CR,EAAS3N,CAAY,EACrBkP,EAAsB,OAAO,CAAA,CAEjC,EAEMU,EAAmB,IAAM,CAC7Bd,EAAqB,EAAI,EACzB,QAAQ,IAAI,yEAAyE,EACrF,QAAQ,IAAI,+CAA+C,CAC7D,EAEMe,EAAoB,IAAM,CAC9Bf,EAAqB,EAAK,EAC1B,QAAQ,IAAI,oEAAoE,CAClF,EAEI,OAAC1B,EAIDV,EAAA,KAAAoD,WAAA,CAAA,SAAA,CAACnD,EAAAA,IAAA,MAAA,CAAI,UAAU,uBAAuB,MAAO,CAC3C,SAAU,QACV,IAAK,EACL,KAAM,EACN,MAAO,EACP,OAAQ,EACR,gBAAiB,qBACjB,QAAS,OACT,eAAgB,SAChB,WAAY,SACZ,OAAQ,GAAA,EAER,SAAAD,EAAAA,KAAC,MAAI,CAAA,UAAU,qBAAqB,MAAO,CACzC,gBAAiB,UACjB,aAAc,OACd,UAAW,kCACX,MAAO,MACP,SAAU,QACV,QAAS,OACT,SAAU,WACV,MAAO,UACP,OAAQ,oCAER,SAAA,CAAAC,MAAC,UAAO,MAAO,CACb,SAAU,WACV,IAAK,OACL,MAAO,OACP,WAAY,cACZ,OAAQ,OACR,MAAO,UACP,SAAU,OACV,OAAQ,UACR,OAAQ,EACP,EAAA,QAASU,EAAS,SAAC,IAAA,EACtBV,MAAC,OAAI,MAAO,CACV,aAAc,SACd,UAAW,QAEX,EAAA,SAACA,EAAAA,IAAA,KAAA,CAAG,MAAO,CACT,SAAU,SACV,MAAO,UACP,aAAc,QAAA,EACb,iCAAsB,CAAA,EAC3B,EACCD,EAAAA,KAAA,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,qBACb,SAAA,OAAC,MAAA,CAAI,UAAU,kBAAkB,SAAE,KAAA,QAClC,IAAA,CAAE,UAAU,mBAAoB,SAAgBkB,CAAA,CAAA,CAAA,EACnD,SAEC,OAAA,CAAK,SAAUK,EAAc,UAAU,wBACrC,SAAA,CAAAc,SAAc,MAAA,CAAI,UAAU,qBAAqB,SAAa,gBAAA,EAC9DJ,SAAsB,MAAI,CAAA,UAAU,qBAAqB,SAA6B,gCAAA,EACtFzP,SAAU,MAAI,CAAA,UAAU,2BAA4B,SAAMA,EAAA,EAC1D+P,SAAc,MAAI,CAAA,UAAU,2BAA4B,SAAUA,EAAA,EAElEvC,EAAAA,KAAA,MAAI,CAAA,UAAU,wBACb,SAAA,OAAC,QAAA,CAAM,QAAQ,WAAW,SAAQ,WAAA,EAClCC,EAAA,IAAC,QAAA,CACC,GAAG,WACH,KAAK,OACL,MAAOhN,EACP,SAAWoO,GAAMO,EAAYP,EAAE,OAAO,KAAK,EAC3C,SAAUgB,GAAaJ,EACvB,SAAQ,EAAA,CAAA,CACV,EACF,EAECjC,EAAAA,KAAA,MAAI,CAAA,UAAU,wBACb,SAAA,OAAC,QAAA,CAAM,QAAQ,WAAW,SAAQ,WAAA,EAClCC,EAAA,IAAC,QAAA,CACC,GAAG,WACH,KAAK,WACL,MAAO/M,EACP,SAAWmO,GAAMQ,EAAYR,EAAE,OAAO,KAAK,EAC3C,SAAUgB,GAAaJ,EACvB,SAAQ,EAAA,CAAA,CACV,EACF,EAEAhC,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,oBACV,SAAUoC,GAAa,CAACP,GAAmBG,GAAqB,CAAC1L,EAEhE,WAAY,iCAAmC,4BAAA,CAClD,EAEA0J,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS4C,EACT,MAAO,CACL,UAAW,OACX,WAAY,yBACZ,OAAQ,mCACR,aAAc,MACd,QAAS,WACT,MAAO,UACP,OAAQ,UACR,MAAO,MACT,EACD,SAAA,4CAAA,CAED,EAEC7C,EAAAA,KAAA,MAAI,CAAA,UAAU,2BACb,SAAA,CAACC,EAAAA,IAAA,KAAE,SAAyC,4CAAA,EAC5CA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,yCACV,QAASiD,EACT,SAAUb,GAAaJ,EACxB,SAAA,2BAAA,CAAA,CAED,EACF,EAECjC,EAAAA,KAAA,MAAI,CAAA,UAAU,+BAA+B,MAAO,CAAE,UAAW,OAAQ,UAAW,QAAS,EAC5F,SAAA,CAACC,EAAAA,IAAA,IAAA,CAAE,MAAO,CAAE,SAAU,QAAS,MAAO,SAAU,EAAG,SAAkD,oDAAA,CAAA,EACrGA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,MAAO,CACL,WAAY,yBACZ,OAAQ,oBACR,aAAc,MACd,QAAS,WACT,MAAO,UACP,OAAQ,UACR,SAAU,QACV,UAAW,KACb,EACA,QAAS,IAAM,CACb2B,EAAY,UAAU,EACtBC,EAAY,aAAa,EACzBW,EAAsB,SAAS,CACjC,EACA,SAAUH,GAAaJ,EACxB,SAAA,sBAAA,CAAA,CAED,EACF,EAGC,EAAA,CAeH,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EAECE,GACClC,EAAA,IAACQ,GAAA,CACC,OAAQ0B,EACR,QAASgB,CAAA,CAAA,CACX,EAEJ,EA7KkB,IA+KtB,EC1bA,MAAME,EAAiB,CAWrB,aAAc,CAVNC,GAAA,cAA2B,MAC3BA,GAAA,yBAAoB,GACXA,GAAA,oBAAe,GACxBA,GAAA,iBAAkE,CAAC,GACnEA,GAAA,WAAc,IACdA,GAAA,2BAAqC,MACrCA,GAAA,qBAAyB,IACzBA,GAAA,qBAAyB,IAK/B,KAAK,UAAU,EACf,QAAQ,IAAI,iCAAiC,CAAA,CAIvC,WAAkB,CACxB,MAAMC,EAAW,OAAO,SAAS,WAAa,SAAW,OAAS,MAC5DC,EAAO,OAAO,SAAS,KAC7B,KAAK,IAAM,GAAGD,CAAQ,KAAKC,CAAI,qBACvB,QAAA,IAAI,2BAA4B,KAAK,GAAG,CAAA,CAGlD,WAAmB,QAAiB,CAC3B,MACH,SAAS,OAAO,SAAS,IAAI,SAC7B,CAIC,QAAQC,EAA6B,CAI1C,GAHIA,OAAgB,IAAMA,EACrB,KAAK,IAAMJ,GAAiB,OAE7B,KAAK,OAAQ,CACf,GAAI,KAAK,OAAO,aAAe,UAAU,KACvC,eAAQ,IAAI,+BAA+B,EACpC,GACE,GAAA,KAAK,OAAO,aAAe,UAAU,WAC9C,eAAQ,IAAI,4CAA4C,EACjD,EACT,CAII,MAAA9Q,EAAQ,aAAa,QAAQ,OAAO,EACpCmR,EAAU,CAAC,CAACnR,EAGlB,IAAIoR,EAAQ,KAAK,IACbD,GACQC,IAAAA,EAAM,SAAS,GAAG,EAAI,IAAM,KAAO,SAAS,mBAAmBpR,CAAM,CAAC,GAChF,KAAK,cAAgB,KAErB,QAAQ,KAAK,uEAAuE,EACpF,KAAK,cAAgB,IAGf,QAAA,IAAI,8BAA+B,KAAK,GAAG,EAC/C,GAAA,CACG,YAAA,OAAS,IAAI,UAAUoR,CAAK,EAG5B,KAAA,oBAAsB,OAAO,WAAW,IAAM,CAC7C,KAAK,QAAU,KAAK,OAAO,aAAe,UAAU,aACtD,QAAQ,MAAM,mCAAmC,EACjD,KAAK,OAAO,MAAM,EAElB,QAAQ,IAAI,qDAAqD,IAElE,GAAI,EAEF,KAAA,OAAO,OAAS,IAAM,CACzB,QAAQ,IAAI,uBAAuB,EAC/B,KAAK,sBACP,aAAa,KAAK,mBAAmB,EACrC,KAAK,oBAAsB,MAE7B,KAAK,kBAAoB,EACzB,KAAK,KAAK,MAAM,EAChB,KAAK,KAAK,WAAW,EAGjBD,GACF,KAAK,YAAY,CACf,KAAM,eACN,MAAAnR,CAAA,CACD,CAEL,EAEK,KAAA,OAAO,QAAWqR,GAAU,CACvB,QAAA,IAAI,uBAAwBA,CAAK,EAIzC,KAAK,KAAK,cAAc,EAGhB,QAAA,IAAI,8BAA8BA,EAAM,IAAI,KAAKA,EAAM,QAAU,WAAW,EAAE,EAGtF,KAAK,gBAAgB,CACvB,EAEK,KAAA,OAAO,QAAWA,GAAU,CACvB,QAAA,MAAM,qBAAsBA,CAAK,EAGrC,KAAK,cACP,QAAQ,IAAI,kDAAkD,EAEzD,KAAA,KAAK,QAASA,CAAK,CAE5B,EAEK,KAAA,OAAO,UAAaA,GAAU,CAC7B,GAAA,CACF,MAAMtM,EAAO,KAAK,MAAMsM,EAAM,IAAI,EAG9B,GAAAtM,EAAK,OAAS,gBAChB,KAAK,cAAgBA,EAAK,QACrBA,EAAK,SAUR,QAAQ,IAAI,wCAAwC,EACpD,KAAK,KAAK,cAAc,IAVhB,QAAA,MAAM,sCAAuCA,EAAK,OAAO,EAG5D,KAAK,cAGR,QAAQ,IAAI,+CAA+C,EAFtD,KAAA,KAAK,cAAeA,EAAK,OAAO,OAQpC,CAEL,GAAIA,EAAK,OAAS,OAAOA,EAAK,OAAU,UACpCA,EAAK,MAAM,YAAY,EAAE,SAAS,SAAS,EAAG,CACxC,QAAA,KAAK,4CAA6CA,EAAK,KAAK,EACpE,MAAA,CAIG,KAAA,KAAK,UAAWA,CAAI,CAAA,QAEpBmK,EAAK,CACJ,QAAA,MAAM,2BAA4BA,CAAG,CAAA,CAEjD,EAEO,SACAjP,EAAO,CACN,eAAA,MAAM,mCAAoCA,CAAK,EAGlD,KAAK,cAGR,QAAQ,IAAI,mDAAmD,EAF1D,KAAA,KAAK,QAASA,CAAK,EAInB,EAAA,CACT,CAIK,YAAmB,CACpB,KAAK,SACP,KAAK,OAAO,MAAM,EAClB,KAAK,OAAS,MAEZ,KAAK,sBACP,aAAa,KAAK,mBAAmB,EACrC,KAAK,oBAAsB,MAE7B,QAAQ,IAAI,2BAA2B,CAAA,CAIlC,aAAuB,OACrB,QAAAI,EAAA,KAAK,SAAL,YAAAA,EAAa,cAAe,UAAU,IAAA,CAIxC,iBAA2B,CACzB,OAAA,KAAK,eAAiB,KAAK,aAAA,CAI7B,YAAYgH,EAAoB,OACrC,KAAIhH,EAAA,KAAK,SAAL,YAAAA,EAAa,cAAe,UAAU,KAAM,CAC9C,MAAMiR,EAAa,OAAOjK,GAAY,SAAWA,EAAU,KAAK,UAAUA,CAAO,EAC5E,KAAA,OAAO,KAAKiK,CAAU,EACnB,QAAA,IAAI,6BAA8B,OAAOjK,GAAY,SAAW,CAAC,GAAGA,EAAS,MAAO,YAAY,EAAIA,CAAO,CAAA,MAEnH,QAAQ,MAAM,gDAAgD,GAE1D,CAAC,KAAK,QAAU,KAAK,OAAO,aAAe,UAAU,UACvD,QAAQ,IAAI,mCAAmC,EAC7B,KAAK,QAAQ,GAGxB,KAAA,KAAK,OAAQ,IAAM,CACtB,KAAK,YAAYA,CAAO,CAAA,CACzB,EAGP,CAIK,GAAGgK,EAAeE,EAA0C,CAC5D,KAAK,UAAUF,CAAK,IAClB,KAAA,UAAUA,CAAK,EAAI,CAAC,GAE3B,KAAK,UAAUA,CAAK,EAAE,KAAKE,CAAQ,CAAA,CAI9B,KAAKF,EAAeE,EAA0C,CAC7D,MAAAC,EAAc,IAAIC,IAAgB,CACjC,KAAA,IAAIJ,EAAOG,CAAW,EAC3BD,EAAS,GAAGE,CAAI,CAClB,EACK,KAAA,GAAGJ,EAAOG,CAAW,CAAA,CAIrB,IAAIH,EAAeE,EAA0C,CAC7D,KAAK,UAAUF,CAAK,IACpB,KAAA,UAAUA,CAAK,EAAI,KAAK,UAAUA,CAAK,EAAE,OAAaK,GAAAA,IAAOH,CAAQ,EAAA,CAIpE,KAAKF,KAAkBI,EAAmB,CAEhD,GAAI,KAAK,gBAAkBJ,IAAU,eAAiBA,IAAU,SAAU,CAChE,QAAA,IAAI,0BAA0BA,CAAK,wBAAwB,EACnE,MAAA,CAGF,GAAK,KAAK,UAAUA,CAAK,EACzB,UAAWE,KAAY,KAAK,UAAUF,CAAK,EACrC,GAAA,CACFE,EAAS,GAAGE,CAAI,QACT3C,EAAG,CACV,QAAQ,MAAM,cAAcuC,CAAK,aAAcvC,CAAC,CAAA,CAEpD,CAIK,OAAc,CACnB,KAAK,WAAW,EAChB,KAAK,kBAAoB,EACzB,KAAK,cAAgB,EAAA,CAIhB,WAAkB,CACvB,KAAK,MAAM,EACX,KAAK,QAAQ,CAAA,CAIP,iBAAwB,CAC1B,GAAA,KAAK,mBAAqB,KAAK,aAAc,CAC/C,QAAQ,MAAM,qCAAqC,EAG9C,KAAK,cAGR,QAAQ,IAAI,oDAAoD,EAFhE,KAAK,KAAK,QAAS,IAAI,MAAM,4CAA4C,CAAC,EAK5E,KAAK,KAAK,aAAa,EACvB,MAAA,CAGG,KAAA,oBACC,MAAA6C,EAAQ,KAAK,IAAI,IAAO,KAAK,IAAI,EAAG,KAAK,iBAAiB,EAAG,GAAK,EAEhE,QAAA,IAAI,iCAAiCA,CAAK,eAAe,KAAK,iBAAiB,IAAI,KAAK,YAAY,MAAM,EAE9G,KAAK,qBACP,aAAa,KAAK,mBAAmB,EAGlC,KAAA,oBAAsB,OAAO,WAAW,IAAM,CACjD,KAAK,QAAQ,GACZA,CAAK,CAAA,CAIH,iBAAiB7N,EAAsB,CAC5C,KAAK,cAAgBA,EACrB,QAAQ,IAAI,+BAA+BA,EAAQ,UAAY,UAAU,EAAE,CAAA,CAE/E,CAGA,MAAM8N,EAAmB,IAAId,GAG7Bc,EAAiB,iBAAiB,EAAI,EC9S/B,MAAMC,GAAsB,IAAM,CACvC,MAAMzI,EAAW0E,GAAe,EAC1B,CAAE,aAAAgE,CAAa,EAAI9D,EAAgB9L,GAAUA,EAAM,OAAO,EAC1D,CAAE,gBAAA6N,CAAgB,EAAI/B,EAAgB9L,GAAUA,EAAM,IAAI,EAC1DmL,EAAQM,GAAS,EACjBoE,EAAmBC,SAAO,EAAK,EAG/BC,EAAgB9E,cAAa9F,GAAiB,CAC9C,GAAA,CACEA,GAAWA,EAAQ,OAAS,kBAAoBA,EAAQ,KACjD+B,EAAApG,GAAcqE,EAAQ,IAAI,CAAC,EAC3BA,GAAWA,EAAQ,OAAS,kBACrC,QAAQ,KAAK,sCAAsC,EAEnDuK,EAAiB,UAAU,SAEtB3R,EAAO,CACN,QAAA,MAAM,wCAAyCA,CAAK,CAAA,CAC9D,EACC,CAACmJ,CAAQ,CAAC,EAGP8I,EAAY/E,EAAAA,YAAY,IAAM,CAClC,QAAQ,IAAI,oDAAoD,EACvD/D,EAAAjG,GAAoB,YAAY,CAAC,EAC1CyO,EAAiB,UAAU,CAAA,EAC1B,CAACxI,CAAQ,CAAC,EAGb6D,EAAAA,UAAU,IAAM,CAEd,GAAI8E,EAAiB,QACnB,OAGF,GAAI,CAACD,EAAc,CACjB,QAAQ,IAAI,wDAAwD,EACpE,MAAA,CAGF,QAAQ,IAAI,sCAAsC,EAClDC,EAAiB,QAAU,GAClB3I,EAAAjG,GAAoB,YAAY,CAAC,EAG1C,MAAMgP,EAAS,IAAM,CACnB,QAAQ,IAAI,uBAAuB,EAC1B/I,EAAAjG,GAAoB,WAAW,CAAC,EAChCiG,EAAArG,GAAkB,IAAI,CAAC,EAChCsK,EAAM,QAAQ,sCAAsC,CACtD,EAEMe,EAAU,CAACgE,EAAerK,IAAoB,CAClD,QAAQ,IAAI,8BAA8BqK,CAAI,MAAMrK,GAAU,oBAAoB,EAAE,EAC3EqB,EAAAjG,GAAoB,cAAc,CAAC,EAIxCiP,IAAS,MAAQrK,GAAUA,EAAO,cAAc,SAAS,MAAM,GACjE,QAAQ,KAAK,qDAAqD,EACzDqB,EAAArG,GAAkB,sBAAsB,CAAC,EAClDsK,EAAM,MAAM,0CAA0C,IAI7CjE,EAAArG,GAAkB,IAAI,CAAC,EAChC,QAAQ,IAAI,gEAAgE,EAEhF,EAEMsP,EAAWhB,GAAe,CAE9B,IAAItQ,EAAe,mBAEfsQ,aAAiB,MACnBtQ,EAAesQ,EAAM,QACZ,OAAOA,GAAU,UAAYA,IAAU,MAAQ,SAAUA,IACnDtQ,EAAA,oBAAoBsQ,EAAM,IAAI,IAGvC,QAAA,MAAM,qBAAsBtQ,CAAY,EAGvCqI,EAAAjG,GAAoB,OAAO,CAAC,EAGrCkK,EAAM,MAAM,6CAA6C,CAC3D,EAEMiF,EAAgBjL,GAAoB,CAChC,QAAA,MAAM,sCAAuCA,CAAO,EAE5D+B,EAASrG,GAAkB,0BAA0BsE,CAAO,EAAE,CAAC,EACzDgG,EAAA,MAAM,0BAA0BhG,CAAO,EAAE,CACjD,EAEMkL,EAAgB,IAAM,CAC1B,QAAQ,IAAI,wCAAwC,EACpDlF,EAAM,QAAQ,4CAA4C,CAC5D,EAGiB,OAAAuE,EAAA,GAAG,OAAQO,CAAM,EACjBP,EAAA,GAAG,QAASxD,CAAO,EACnBwD,EAAA,GAAG,QAASS,CAAO,EACnBT,EAAA,GAAG,UAAWK,CAAa,EAC3BL,EAAA,GAAG,cAAeU,CAAY,EAC9BV,EAAA,GAAG,eAAgBW,CAAa,EAG7CxC,EACF6B,EAAiB,QAAQ,GAEzB,QAAQ,IAAI,qDAAqD,EACxDxI,EAAAjG,GAAoB,cAAc,CAAC,GAIvC,IAAM,CACX,QAAQ,IAAI,wCAAwC,EACnCyO,EAAA,IAAI,OAAQO,CAAM,EAClBP,EAAA,IAAI,QAASxD,CAAO,EACpBwD,EAAA,IAAI,QAASS,CAAO,EACpBT,EAAA,IAAI,UAAWK,CAAa,EAC5BL,EAAA,IAAI,cAAeU,CAAY,EAC/BV,EAAA,IAAI,eAAgBW,CAAa,EAG7CT,GACHF,EAAiB,WAAW,CAEhC,CAAA,EACC,CAACE,EAAc/B,EAAiB3G,EAAUiE,EAAO4E,CAAa,CAAC,EAGlEhF,EAAAA,UAAU,IAAM,CAEV8C,GAAmB+B,IACrB,QAAQ,IAAI,4DAA4D,EACxEF,EAAiB,UAAU,EAC7B,EACC,CAAC7B,EAAiB+B,CAAY,CAAC,EAGlC,MAAMU,EAAcxE,EAAe9L,GAASA,EAAM,QAAQ,mBAAqB,WAAW,EACpFuQ,EAAkBzE,EAAwB9L,GAAAA,EAAM,QAAQ,KAAK,EAE5D,MAAA,CACL,YAAAsQ,EACA,MAAOC,EACP,UAAAP,EACA,WAAY,IAAMN,EAAiB,WAAW,CAChD,CACF,ECxJac,GAA4C,CAAC,CAAE,QAAAC,EAAS,MAAA1S,KAAY,CAC7E,KAAM,CAAC2S,EAAcC,CAAe,EAAI/F,EAAAA,SAAS,CAAC,EAG5CgG,EAAiB,CACnB,0EACA,oEACA,qEACA,iEACA,kGACA,8HACA,kFACA,+DACA,mFACA,0DACA,sGACA,8EACA,wFACA,8EACA,+EACA,0DACA,qFACA,4DACA,0FACA,wEACA,yEACA,yEACA,uFACA,mEACA,8EACA,gEACA,yDACA,wEACA,6EACA,8DACJ,EAEA7F,EAAAA,UAAU,IAAM,CAEN,MAAA8F,EAAa,YAAY,IAAM,CACjCF,EAAiBG,IAAeA,EAAY,GAAKF,EAAe,MAAM,GACvE,GAAI,EAEA,MAAA,IAAM,cAAcC,CAAU,CACzC,EAAG,EAAE,EAGL9F,EAAAA,UAAU,IAAM,CACZ4F,EAAgB,KAAK,MAAM,KAAK,SAAWC,EAAe,MAAM,CAAC,CACrE,EAAG,EAAE,EAEL,MAAMG,EAAiB,IACfN,EAAgB,iBAChB1S,EAAc,eACX,gBAGLiT,EAAmB,IAAM,CAC3B,GAAIP,EAEI,OAAAlF,EAAA,KAAC,OAAK,CAAA,UAAU,yBACZ,SAAA,CAACC,EAAAA,IAAA,IAAA,CAAE,UAAU,iBAAkB,CAAA,EAAI,0BAAA,EACvC,EAGR,GAAIzN,EAEI,OAAAwN,EAAA,KAAC,OAAK,CAAA,UAAU,uBACZ,SAAA,CAACC,EAAAA,IAAA,IAAA,CAAE,UAAU,6BAA8B,CAAA,EAAI,IAAEzN,CAAA,EACrD,EAKF,MAAAkT,EAAiBL,EAAeF,CAAY,EAC5CQ,EAAaD,EAAe,MAAM,oGAAoG,EACtIE,EAAsBD,EAAaD,EAAe,UAAUC,EAAW,CAAC,EAAE,MAAM,EAAID,EAGtF,OAAA1F,EAAA,KAAC,OAAK,CAAA,UAAU,uCACZ,SAAA,CAACC,EAAAA,IAAA,IAAA,CAAE,UAAU,qBAAsB,CAAA,EAClC0F,GAAe1F,EAAAA,IAAA,OAAA,CAAK,UAAU,kBAAmB,SAAA0F,EAAW,CAAC,EAAE,EAC/DC,CAAA,EACL,CAER,EAEA,aACK,MAAI,CAAA,UAAU,gBACX,SAAC5F,EAAA,KAAA,OAAA,CAAK,UAAU,mBACZ,SAAA,CAAAC,EAAA,IAAC,OAAK,CAAA,UAAW,cAAcuF,EAAA,CAAgB,GAAI,EAClDvF,EAAA,IAAA,OAAA,CAAK,UAAU,cACX,YACL,CAAA,CAAA,CAAA,CACJ,CACJ,CAAA,CAER,EClEa4F,EAA4B,CAAC,CACxC,QAAAC,EAAU,UACV,UAAAC,EAAY,MACZ,SAAAC,EAAW,GACX,eAAAC,EAAiB,GACjB,KAAAC,EAAO,GACP,MAAAC,EAAQ,GACR,YAAAC,EAAc,GACd,OAAAC,EACA,OAAAC,EACA,UAAAC,EAAY,GACZ,SAAArH,EACA,GAAGsH,CACL,IAAM,CAEJ,MAAMC,EAAc,CAClB,UACA,WAAWX,CAAO,GAClB,qBAAqBC,CAAS,GAC9BC,EAAW,mBAAqB,GAChCC,EAAiB,0BAA4B,GAC7CC,EAAO,eAAiB,GACxBC,EAAQ,gBAAkB,GAC1BC,EAAc,sBAAwB,GACtCG,CACA,EAAA,OAAO,OAAO,EAAE,KAAK,GAAG,EAE1B,OACGvG,EAAAA,KAAA,MAAA,CAAI,UAAWyG,EAAc,GAAGD,EAC9B,SAAA,CAAAH,GAAWpG,EAAA,IAAA,MAAA,CAAI,UAAU,iBAAkB,SAAOoG,EAAA,EAClDpG,EAAAA,IAAA,MAAA,CAAI,UAAU,eAAgB,SAAAf,CAAS,CAAA,EACvCoH,GAAUrG,EAAA,IAAC,MAAI,CAAA,UAAU,iBAAkB,SAAOqG,CAAA,CAAA,CAAA,EACrD,CAEJ,ECxCaI,EAA8B,CAAC,CAC1C,QAAAZ,EAAU,UACV,KAAAa,EAAO,KACP,SAAAC,EAAW,GACX,QAAAC,EAAU,GACV,KAAAX,EAAO,GACP,MAAAY,EAAQ,GACR,UAAAP,EAAY,GACZ,SAAArH,EACA,GAAGsH,CACL,IAAM,CAEJ,MAAMO,EAAe,CACnB,WACA,YAAYjB,CAAO,GACnB,YAAYa,CAAI,GAChBC,EAAW,oBAAsB,GACjCC,EAAU,mBAAqB,GAC/BX,EAAO,gBAAkB,GACzBY,EAAQ,iBAAmB,GAC3BP,CACA,EAAA,OAAO,OAAO,EAAE,KAAK,GAAG,EAE1B,aACG,OAAK,CAAA,UAAWQ,EAAe,GAAGP,EAChC,SAAAtH,EACH,CAEJ,ECfa8H,GAA0C,CAAC,CACtD,MAAArN,EACA,MAAAtD,EACA,KAAA4Q,EAAO,GACP,cAAAC,EACA,iBAAAC,EACA,OAAAzO,EAAS,SACT,MAAA0O,EAAQ,SACR,SAAAC,EAAW,GACX,YAAAC,EACA,cAAAC,EAAgB,GAChB,cAAAC,EAAgB,CAAC,EACjB,KAAAC,EACA,UAAAlB,EAAY,GACZ,GAAGC,CACL,IAAM,CAEJ,MAAMkB,EAAmB,IAAM,CAC7B,OAAQhP,EAAQ,CACd,IAAK,SACI,MAAA,OACT,IAAK,UACI,MAAA,UACT,IAAK,WACI,MAAA,SACT,IAAK,YACI,MAAA,UACT,QACS,MAAA,MAAA,CAEb,EAGMiP,EAAe,IAAM,CACzB,OAAQP,EAAO,CACb,IAAK,KACI,MAAA,IACT,IAAK,OACI,MAAA,IACT,IAAK,SACI,MAAA,IACT,QACS,MAAA,GAAA,CAEb,EAGMQ,EAAgB,IAIhBR,IAAU,SAAiB,0BAE3B1O,IAAW,WACN,4BACEA,IAAW,YACb,4BAEA0O,IAAU,KAAO,sBAAwB,wBAK9CS,EAAiB,CACrB,kBACA,qBAAqBnP,CAAM,GAC3B2O,EAAW,sBAAwB,GACnCd,CACA,EAAA,OAAO,OAAO,EAAE,KAAK,GAAG,EAGxB,OAAAvG,EAAA,KAAC6F,EAAA,CACC,QAAQ,UACR,UAAU,MACV,MAAK,GACL,UAAWgC,EACV,GAAGrB,EAEJ,SAAA,CAACxG,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACZ,SAAA,CAAAyH,GAASxH,EAAA,IAAA,OAAA,CAAK,UAAU,kBAAmB,SAAKwH,EAAA,EACjDxH,EAAAA,IAAC,QAAM,SAAMtG,CAAA,CAAA,CAAA,EACf,EACAsG,EAAA,IAACyG,EAAA,CACC,QAASgB,EAAiB,EAC1B,KAAK,KACL,QAAO,GACP,KAAMhP,IAAW,WACjB,MAAOA,IAAW,WAEjB,SAAAA,CAAA,CAAA,CACH,EACF,EAEAsH,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACZ,SAAA,CAAA3J,EACA4Q,GAAQhH,EAAA,IAAC,OAAK,CAAA,UAAU,kBAAmB,SAAKgH,CAAA,CAAA,CAAA,EACnD,GAEEC,IAAkB,QAAaC,IAAqB,SACpDnH,EAAAA,KAAC,OAAI,UAAW,oBAAoB4H,EAAc,CAAC,GACjD,SAAA,CAAA3H,EAAA,IAAC,OAAK,CAAA,UAAU,wBAAyB,SAAA0H,EAAA,EAAe,EACvDR,IAAqB,QACnBnH,OAAA,OAAA,CAAK,UAAU,+BACb,SAAA,CAAA,KAAK,IAAImH,CAAgB,EAAE,GAAA,CAC9B,CAAA,CAAA,CAEJ,CAAA,CAAA,EAEJ,EAECI,GAAiBC,EAAc,OAAS,GACvCvH,EAAA,IAAC,OAAI,UAAU,uBAEb,SAACA,EAAA,IAAA,MAAA,CAAI,UAAU,8BACZ,SAAAuH,EAAc,IAAI,CAACM,EAAOjP,IACzBoH,EAAA,IAAC,MAAA,CAEC,UAAU,6BACV,MAAO,CAAE,OAAQ,GAAG6H,CAAK,GAAI,CAAA,EAFxBjP,CAAA,CAIR,EACH,CACF,CAAA,EAGDyO,GACCtH,EAAA,KAAC,MAAI,CAAA,UAAU,0BAA0B,SAAA,CAAA,YAC7BsH,CAAA,CACZ,CAAA,CAAA,CAAA,CAEJ,CAEJ,EChKaS,GAA0B,CAAC,CAAE,SAAA7I,uBAC9B,SAAAA,EAAS,EAGR8I,GAAoC,CAAC,CAAE,OAAAC,EAAQ,SAAA/I,KACrD+I,EACGhI,EAAAA,IAAA,MAAA,CAAI,UAAU,eAAgB,SAAAf,CAAS,CAAA,EAD3B,KAITgJ,GAA4B,CAAC,CAAE,UAAWC,EAAmB,SAAAC,EAAU,SAAAlJ,KAAe,CAEjG,MAAMmJ,EAAOC,GAAM,SAAS,QAAQpJ,CAAQ,EAAE,OAC3CqJ,GAAUD,GAAM,eAAeC,CAAK,GAAKA,EAAM,OAASR,EAC3D,EAGM,CAACS,EAAmBC,CAAoB,EAAIpJ,EAAA,SAChD8I,IAAsBE,EAAK,OAAS,EAAIA,EAAK,CAAC,EAAE,MAAM,GAAK,GAC7D,EAGA7I,EAAAA,UAAU,IAAM,CACV2I,IAAsB,QACxBM,EAAqBN,CAAiB,CACxC,EACC,CAACA,CAAiB,CAAC,EAGhB,MAAAO,EAAkBC,GAAkB,CACpCP,EACFA,EAASO,CAAK,EAEdF,EAAqBE,CAAK,CAE9B,EAGMC,EAAcT,IAAsB,OAAYA,EAAoBK,EAGxE,OAAAxI,EAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAC,MAAC,OAAI,UAAU,iBACZ,SAAKoI,EAAA,IAAKQ,GACT5I,EAAA,IAAC,SAAA,CAEC,UAAW,UAAU2I,IAAgBC,EAAI,MAAM,GAAK,SAAW,EAAE,GACjE,QAAS,IAAMH,EAAeG,EAAI,MAAM,EAAE,EAC1C,KAAK,MACL,gBAAeD,IAAgBC,EAAI,MAAM,GACzC,gBAAe,SAASA,EAAI,MAAM,EAAE,GACpC,GAAI,OAAOA,EAAI,MAAM,EAAE,GAEtB,WAAI,MAAM,KAAA,EARNA,EAAI,MAAM,EAUlB,CAAA,EACH,QACC,MAAI,CAAA,UAAU,kBACZ,SAAKR,EAAA,IAAKQ,GACT5I,EAAA,IAAC,MAAA,CAEC,KAAK,WACL,GAAI,SAAS4I,EAAI,MAAM,EAAE,GACzB,kBAAiB,OAAOA,EAAI,MAAM,EAAE,GACpC,OAAQD,IAAgBC,EAAI,MAAM,GAEjC,SAAgBD,IAAAC,EAAI,MAAM,IAAMA,EAAI,MAAM,QAAA,EANtCA,EAAI,MAAM,EAAA,CAQlB,CACH,CAAA,CAAA,EACF,CAEJ,EC5DaC,GAAsB,IAAM,aAErC,MAAMC,EAAgBxI,EAAgB9L,GAAqBA,EAAM,QAAQ,OAAO,EAC1EuU,EAAoBzI,EAAgB9L,GAAqBA,EAAM,QAAQ,YAAc,EAAE,EACvF4N,EAAY9B,EAAgB9L,GAAqBA,EAAM,QAAQ,OAAO,EAGtE,CAACwU,EAAWC,CAAY,EAAI7J,EAAAA,SAAiB,UAAU,EAGvD8J,GAAWJ,GAAA,YAAAA,EAAe,YAAa,EACvCK,EAAaL,GAAA,YAAAA,EAAe,UAC5BM,GAAeN,GAAA,YAAAA,EAAe,YAAwC,CAAC,EACvEO,GAAUF,GAAA,YAAAA,EAAY,cAAe,KACrCG,EAAU,CACZ,UAAS3W,EAAAwW,GAAA,YAAAA,EAAY,YAAZ,YAAAxW,EAAuB,UAAW,KAC3C,MAAKY,EAAA4V,GAAA,YAAAA,EAAY,YAAZ,YAAA5V,EAAuB,MAAO,KACnC,MAAKwI,EAAAoN,GAAA,YAAAA,EAAY,YAAZ,YAAApN,EAAuB,MAAO,IACvC,EAGMwN,GAAaR,GAAqB,CAAC,GAAG,IAAelO,IAAA,CACvD,UAAWA,EAAO,UAClB,MAAOA,EAAO,WAAa,CAAA,EAC7B,EAGI2O,IAAWC,EAAAN,GAAA,YAAAA,EAAY,iBAAZ,YAAAM,EAA4B,IAAI,CAACC,EAAe9Q,KAAmB,CAChF,KAAM,QAAQA,EAAQ,CAAC,GACtB,MAAA8Q,CACL,MAAO,CAAC,EAKFC,EAAaD,GACXA,GAAS,GAAW,WACpBA,GAAS,GAAW,UACjB,SAILE,EAAW,CAACC,EAAiBC,IAC3BD,EAAUC,EAAW,EAAU,KAC/BD,EAAUC,EAAW,EAAU,OAC5B,SAIL7C,EAAgB8B,EAAkB,OAAS,EAC7CA,EAAkBA,EAAkB,OAAS,CAAC,EAAE,WAAaG,EAC7DA,EAGEhC,EAAmBD,IAAkB,GACrCiC,EAAWjC,GAAiBA,EAAiB,IAC/C,EAEJ,GAAI7E,EACO,OAAApC,MAAC+G,IAAY,MAAM,YAAY,MAAM,KAAK,KAAK,IAAI,SAAU,EAAM,CAAA,EAI9E,MAAMgD,EAAoB,IACtB/J,MAAC,OAAI,UAAU,mBACX,eAAC,MAAI,CAAA,UAAU,kBACX,SAACA,EAAA,IAAAgK,GAAA,CAAoB,MAAM,OAAO,OAAQ,IACtC,SAACjK,EAAAA,KAAAkK,GAAA,CAAU,KAAMV,EACb,SAAA,CAACvJ,EAAAA,IAAA,OAAA,CACG,eAAC,iBAAe,CAAA,GAAG,cAAc,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IACrD,SAAAA,EAAA,IAAC,QAAK,OAAO,KAAK,UAAU,UAAU,YAAa,EAAI,CAAA,CAAA,CAC3D,CACJ,CAAA,EACCA,EAAA,IAAAkK,GAAA,CAAc,gBAAgB,MAAM,OAAO,gBAAgB,EAC5DlK,EAAA,IAACmK,GAAA,CACG,QAAQ,YACR,cAAgBC,GAAiB,IAAI,KAAKA,CAAI,EAAE,mBAAmB,EACnE,OAAO,uBAAA,CACX,EACApK,EAAA,IAACqK,GAAA,CACG,OAAQ,CAAC,EAAG,GAAG,EACf,cAAgBjU,GAAkB,GAAGA,CAAK,IAC1C,OAAO,uBAAA,CACX,EACA4J,EAAA,IAACsK,GAAA,CACG,UAAYlU,GAAkB,CAAC,GAAG,OAAOA,CAAK,EAAE,QAAQ,CAAC,CAAC,IAAK,WAAW,EAC1E,eAAiBmU,GAAkB,IAAI,KAAKA,CAAK,EAAE,eAAe,EAClE,aAAc,CAAE,WAAY,oBAAqB,OAAQ,OAAQ,aAAc,KAAM,EACrF,UAAW,CAAE,MAAO,gBAAiB,EACrC,WAAY,CAAE,MAAO,qBAAsB,CAAA,CAC/C,EACAvK,EAAA,IAACwK,GAAA,CACG,KAAK,WACL,QAAQ,QACR,OAAO,iBACP,YAAa,EACb,YAAa,EACb,KAAK,oBACL,UAAW,CAAE,EAAG,EAAG,YAAa,EAAG,KAAM,gBAAiB,EAC1D,kBAAmB,EAAA,CAAA,CACvB,EACJ,CAAA,CACJ,CACJ,CAAA,EACJ,EAKJ,SAASC,GAAkC,CAEnC,OAAA1K,EAAA,KAAC,MAAI,CAAA,UAAU,gBACX,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAU,YAAA,CAAA,EACdA,EAAAA,IAACgK,IAAoB,MAAM,OAAO,OAAQ,IACtC,SAAAjK,EAAA,KAAC2K,GAAS,CAAA,KAAMlB,EACZ,SAAA,CAAAxJ,EAAA,IAACkK,GAAc,CAAA,gBAAgB,MAAM,OAAO,gBAAgB,EAC3DlK,EAAA,IAAAmK,GAAA,CAAM,QAAQ,OAAO,OAAO,wBAAwB,EACpDnK,EAAA,IAAAqK,GAAA,CAAM,OAAQ,CAAC,EAAG,GAAG,EAAG,cAAgBjU,GAAkB,GAAGA,CAAK,IAAK,OAAO,wBAAwB,QACtGkU,GAAQ,EAAA,EACRtK,EAAAA,IAAA2K,GAAA,CAAI,QAAQ,QAAQ,KAAK,iBAAiB,OAAQ,CAAC,EAAG,EAAG,EAAG,CAAC,CAAG,CAAA,CAAA,CAAA,CACrE,CACJ,CAAA,CAAA,EACJ,CAAA,CAIR,SAASC,GAAsC,CAEvC,OAAA7K,EAAA,KAAC,MAAI,CAAA,UAAU,oBACX,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAiB,mBAAA,CAAA,EACpBA,MAAA,MAAA,CAAI,UAAU,eACV,WAAa,OAAS,EACnBoJ,EAAa,IAAI,CAACyB,EAAqBjS,IAClCmH,EAAA,KAAA6F,EAAA,CAAiB,UAAU,eACxB,SAAA,CAAA5F,EAAA,IAAC,MAAI,CAAA,UAAU,eAAgB,SAAA6K,EAAQ,KAAK,EAC5C9K,EAAAA,KAAC,MAAI,CAAA,UAAU,gBAAiB,SAAA,CAAQ8K,EAAA,YAAY,QAAQ,CAAC,EAAE,GAAA,EAAC,EAChE9K,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACX,SAAA,CAAAA,OAAC,OAAK,CAAA,SAAA,CAAA,QAAM8K,EAAQ,GAAA,EAAI,SACvB,OAAK,CAAA,SAAA,CAAA,WAASA,EAAQ,eAAe,QAAQ,CAAC,EAAE,GAAA,CAAC,CAAA,CAAA,CACtD,CAAA,CANO,CAAA,EAAAjS,CAOX,CACH,EAEDoH,EAAAA,IAAC,OAAI,UAAU,UAAU,qCAAyB,CAE1D,CAAA,CAAA,EACJ,CAAA,CAIR,SAAS8K,GAAoC,CAErC,OAAA/K,EAAA,KAAC,MAAI,CAAA,UAAU,kBACX,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAW,aAAA,CAAA,SACd,MACG,CAAA,SAAA,CAAAD,OAAC,MAAI,CAAA,SAAA,CAAA,gBAAcsJ,IAAY,KAAO,GAAGA,EAAQ,QAAQ,CAAC,CAAC,KAAO,KAAA,EAAM,SACvE,MAAI,CAAA,SAAA,CAAA,cAAYC,EAAQ,QAAU,IAAIA,EAAQ,QAAU,KAAM,QAAQ,CAAC,CAAC,OAAS,KAAA,CAAM,CAAA,CAAA,CAC5F,CAAA,CAAA,EACJ,CAAA,CAKJ,OAAAtJ,EAAAA,IAAC,MAAI,CAAA,UAAU,aACX,SAAAA,EAAA,IAAC+G,GAAA,CACG,MAAM,YACN,MAAO,GAAGmC,EAAS,QAAQ,CAAC,CAAC,GAC7B,KAAK,IACL,OAAQS,EAAUT,CAAQ,EAC1B,MAAOU,EAASV,EAAUjC,CAAa,EACvC,iBAAAC,EACA,cAAe,GACf,eAAgBqC,GAAa,IAAI,IAAIwB,GAAKA,EAAE,KAAK,EAEjD,SAAChL,EAAA,KAAAkI,GAAA,CAAK,UAAAe,EAAsB,SAAUC,EAClC,SAAA,CAAAjJ,MAAC8H,IAAI,GAAG,WAAW,MAAM,WAAY,aAAoB,QACxDA,GAAI,CAAA,GAAG,QAAQ,MAAM,QAAS,aAAiB,QAC/CA,GAAI,CAAA,GAAG,YAAY,MAAM,YAAa,aAAqB,QAC3DA,GAAI,CAAA,GAAG,UAAU,MAAM,UAAW,YAAmB,CAAA,CAAA,CAC1D,CAAA,CAAA,CAAA,EAER,CAER,EC/MakD,GAAyB,IAAM,CACxC,MAAMlC,EAAgBxI,EAAgB9L,GAAqBA,EAAM,QAAQ,OAAO,EAC1EuU,EAAoBzI,EAAgB9L,GAAqBA,EAAM,QAAQ,UAAU,EACjF4N,EAAY9B,EAAgB9L,GAAqBA,EAAM,QAAQ,OAAO,EAEtEyW,GAAcnC,GAAA,YAAAA,EAAe,eAAgB,EAC7CS,EAAYR,EAGZ9B,EAAgB8B,EAAkB,OAAS,EAC7CA,EAAkBA,EAAkB,OAAS,CAAC,EAAE,aAChDkC,EAGE/D,EAAmBD,GAAiBA,IAAkB,GACtDgE,EAAchE,GAAiBA,EAAiB,IAClD,EAGE0C,EAAaD,GACXA,EAAQ,GAAW,WACnBA,EAAQ,GAAW,UAChB,SAILE,EAAW,CAACC,EAAiBC,IAC3BD,EAAUC,EAAW,EAAU,KAC/BD,EAAUC,EAAW,EAAU,OAC5B,SAGX,OAAI1H,EACOpC,MAAC+G,IAAY,MAAM,eAAe,MAAM,KAAK,KAAK,IAAI,SAAU,EAAM,CAAA,EAI7E/G,EAAA,IAAC+G,GAAA,CACG,MAAM,eACN,MAAOkE,EAAY,QAAQ,CAAC,EAC5B,KAAK,IACL,OAAQtB,EAAUsB,CAAW,EAC7B,MAAOrB,EAASqB,EAAahE,CAAa,EAC1C,iBAAAC,EACA,cAAe,GACf,cAAe6B,EAAkB,IAAImC,GAAKA,EAAE,YAAY,EAExD,SAAAlL,EAAAA,IAACgK,IAAoB,MAAM,OAAO,OAAQ,IACtC,SAAAjK,EAAA,KAACkK,GAAU,CAAA,KAAMV,EACb,SAAA,CAAAvJ,EAAA,IAAC,OACG,CAAA,SAAAD,EAAA,KAAC,iBAAe,CAAA,GAAG,iBAAiB,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IACxD,SAAA,CAAAC,MAAC,QAAK,OAAO,KAAK,UAAU,iBAAiB,YAAa,GAAI,QAC7D,OAAK,CAAA,OAAO,MAAM,UAAU,iBAAiB,YAAa,EAAI,CAAA,CAAA,CAAA,CACnE,CACJ,CAAA,EACCA,EAAA,IAAAkK,GAAA,CAAc,gBAAgB,MAAM,OAAO,gBAAgB,EAC5DlK,EAAA,IAACmK,GAAA,CACG,QAAQ,YACR,cAAgBC,GAAiB,IAAI,KAAKA,CAAI,EAAE,mBAAmB,EACnE,OAAO,uBAAA,CACX,EACApK,EAAA,IAACqK,GAAA,CACG,OAAQ,CAAC,EAAG,GAAG,EACf,cAAgBjU,GAAkB,GAAGA,CAAK,IAC1C,OAAO,uBAAA,CACX,EACA4J,EAAA,IAACsK,GAAA,CACG,UAAYlU,GAAkB,CAAC,GAAG,OAAOA,CAAK,EAAE,QAAQ,CAAC,CAAC,IAAK,cAAc,EAC7E,eAAiBmU,GAAkB,IAAI,KAAKA,CAAK,EAAE,eAAe,EAClE,aAAc,CAAE,WAAY,oBAAqB,OAAQ,OAAQ,aAAc,KAAM,EACrF,UAAW,CAAE,MAAO,gBAAiB,EACrC,WAAY,CAAE,MAAO,qBAAsB,CAAA,CAC/C,EACAvK,EAAA,IAACwK,GAAA,CACG,KAAK,WACL,QAAQ,eACR,OAAO,iBACP,YAAa,EACb,YAAa,EACb,KAAK,uBACL,UAAW,CAAE,EAAG,EAAG,YAAa,EAAG,KAAM,gBAAiB,EAC1D,kBAAmB,EAAA,CAAA,CACvB,CAAA,CACJ,CACJ,CAAA,CAAA,CACJ,CAER,ECvFaW,GAAuB,IAAM,CACtC,MAAMrC,EAAgBxI,EAAgB9L,GAAqBA,EAAM,QAAQ,OAAO,EAC1EuU,EAAoBzI,EAAgB9L,GAAqBA,EAAM,QAAQ,UAAU,EACjF4N,EAAY9B,EAAgB9L,GAAqBA,EAAM,QAAQ,OAAO,EAEtE4W,GAAYtC,GAAA,YAAAA,EAAe,aAAc,EACzCS,EAAYR,EAGZ9B,EAAgB8B,EAAkB,OAAS,EAC7CA,EAAkBA,EAAkB,OAAS,CAAC,EAAE,WAChDqC,EAGElE,EAAmBD,GAAiBA,IAAkB,GACtDmE,EAAYnE,GAAiBA,EAAiB,IAChD,EAGE0C,EAAaD,GACXA,EAAQ,GAAW,WACnBA,EAAQ,GAAW,UAChB,SAILE,EAAW,CAACC,EAAiBC,IAC3BD,EAAUC,EAAW,EAAU,KAC/BD,EAAUC,EAAW,EAAU,OAC5B,SAGX,OAAI1H,EACOpC,MAAC+G,IAAY,MAAM,aAAa,MAAM,KAAK,KAAK,IAAI,SAAU,EAAM,CAAA,EAI3E/G,EAAA,IAAC+G,GAAA,CACG,MAAM,aACN,MAAOqE,EAAU,QAAQ,CAAC,EAC1B,KAAK,IACL,OAAQzB,EAAUyB,CAAS,EAC3B,MAAOxB,EAASwB,EAAWnE,CAAa,EACxC,iBAAAC,EACA,cAAe,GACf,cAAe6B,EAAkB,IAAImC,GAAKA,EAAE,UAAU,EAEtD,SAAAlL,EAAAA,IAACgK,IAAoB,MAAM,OAAO,OAAQ,IACtC,SAAAjK,EAAA,KAACkK,GAAU,CAAA,KAAMV,EACb,SAAA,CAAAvJ,EAAA,IAAC,OACG,CAAA,SAAAD,EAAA,KAAC,iBAAe,CAAA,GAAG,eAAe,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IACtD,SAAA,CAAAC,MAAC,QAAK,OAAO,KAAK,UAAU,iBAAiB,YAAa,GAAI,QAC7D,OAAK,CAAA,OAAO,MAAM,UAAU,iBAAiB,YAAa,EAAI,CAAA,CAAA,CAAA,CACnE,CACJ,CAAA,EACCA,EAAA,IAAAkK,GAAA,CAAc,gBAAgB,MAAM,OAAO,gBAAgB,EAC5DlK,EAAA,IAACmK,GAAA,CACG,QAAQ,YACR,cAAgBC,GAAiB,IAAI,KAAKA,CAAI,EAAE,mBAAmB,EACnE,OAAO,uBAAA,CACX,EACApK,EAAA,IAACqK,GAAA,CACG,OAAQ,CAAC,EAAG,GAAG,EACf,cAAgBjU,GAAkB,GAAGA,CAAK,IAC1C,OAAO,uBAAA,CACX,EACA4J,EAAA,IAACsK,GAAA,CACG,UAAYlU,GAAkB,CAAC,GAAG,OAAOA,CAAK,EAAE,QAAQ,CAAC,CAAC,IAAK,YAAY,EAC3E,eAAiBmU,GAAkB,IAAI,KAAKA,CAAK,EAAE,eAAe,EAClE,aAAc,CAAE,WAAY,oBAAqB,OAAQ,OAAQ,aAAc,KAAM,EACrF,UAAW,CAAE,MAAO,gBAAiB,EACrC,WAAY,CAAE,MAAO,qBAAsB,CAAA,CAC/C,EACAvK,EAAA,IAACwK,GAAA,CACG,KAAK,WACL,QAAQ,aACR,OAAO,iBACP,YAAa,EACb,YAAa,EACb,KAAK,qBACL,UAAW,CAAE,EAAG,EAAG,YAAa,EAAG,KAAM,gBAAiB,EAC1D,kBAAmB,EAAA,CAAA,CACvB,CAAA,CACJ,CACJ,CAAA,CAAA,CACJ,CAER,ECvDO,SAASa,GAAmBvC,EAGjC,iCACA,GAAI,CAACA,EACH,MAAO,CAAE,YAAa,KAAM,MAAO,2BAA4B,EAIjE,MAAMwC,EAAiBxC,EAAc,WAAWnW,EAAAmW,EAAc,aAAd,YAAAnW,EAA0B,iBAE1E,GAAI,CAAC2Y,EACH,MAAO,CAAE,YAAa,KAAM,MAAO,kCAAmC,EAGpE,GAAA,CAEE,GAAA,CAACA,EAAe,UAChB,EAAEA,EAAe,aAAe,QAC9BA,EAAe,aAAe,QAC5B,MAAA,IAAI,MAAM,gCAAgC,EAiDlD,MAAO,CAAE,YA1C0B,CACjC,WAJiBC,GAAsBD,EAAe,UAAU,EAKhE,UAAW,IAAI,KAAK,EAAE,YAAY,EAClC,SAAU,CACR,aAAY/X,EAAA+X,EAAe,WAAf,YAAA/X,EAAyB,aAAc+X,EAAe,YAAc,EAChF,aAAYvP,EAAAuP,EAAe,WAAf,YAAAvP,EAAyB,aAAcuP,EAAe,YAAc,EAChF,YAAW7B,EAAA6B,EAAe,WAAf,YAAA7B,EAAyB,YAAa6B,EAAe,eAAiB,EACjF,YAAWE,EAAAF,EAAe,WAAf,YAAAE,EAAyB,YAAaF,EAAe,eAAiB,CACnF,EACA,mBAAoB,CAClB,uBAAsBG,EAAAH,EAAe,qBAAf,YAAAG,EAAmC,uBAAwB,EACjF,kBAAiBC,EAAAJ,EAAe,qBAAf,YAAAI,EAAmC,kBAAmB,EACvE,sBAAqBC,EAAAL,EAAe,qBAAf,YAAAK,EAAmC,sBAAuB,EAC/E,SAAQC,EAAAN,EAAe,qBAAf,YAAAM,EAAmC,SAAU,EACrD,kBAAiBC,EAAAP,EAAe,qBAAf,YAAAO,EAAmC,kBAAmB,EACvE,cAAaC,EAAAR,EAAe,qBAAf,YAAAQ,EAAmC,gBAClCC,EAAAT,EAAe,cAAf,YAAAS,EAA4B,gBAAiB,EAC3D,mBAAkBC,EAAAV,EAAe,qBAAf,YAAAU,EAAmC,qBAClCC,EAAAX,EAAe,mBAAf,YAAAW,EAAiC,cAAe,CACrE,EACA,eAAgBX,EAAe,gBAAkB,CAC/C,IAAK,CAAE,OAAQ,EAAG,YAAa,CAAE,EACjC,IAAK,CAAE,OAAQ,CAAE,EACjB,KAAM,CAAE,YAAa,CAAE,EACvB,MAAO,CAAE,YAAa,CAAE,EACxB,IAAK,CAAE,QAAS,CAAE,CACpB,EACA,mBAAoBA,EAAe,oBAAsB,CACvD,IAAK,EACL,MAAO,EACP,UAAW,EACX,OAAQ,EACR,cAAe,EACf,MAAO,CACT,EACA,wBAAyBA,EAAe,yBACdA,EAAuB,WAAa,CAAC,EAE/D,YAAaA,EAAe,YAC5B,iBAAkBA,EAAe,gBACnC,EAEqC,MAAO,IAAK,QAC1C9J,EAAK,CACJ,eAAA,MAAM,iCAAkCA,CAAG,EAC5C,CACL,YAAa,KACb,MAAO,mCAAmCA,aAAe,MAAQA,EAAI,QAAU,eAAe,EAChG,CAAA,CAEJ,CAKA,SAAS+J,GAAsBW,EAAqC,CAC9D,OAACA,EAED,MAAM,QAAQA,CAAU,EACnBA,EAAW,IAAcC,IAAA,CAC9B,KAAMA,EAAM,MAAQ,UACpB,KAAMA,EAAM,MAAQ,GACpB,WAAYA,EAAM,YAAc,EAChC,WAAYA,EAAM,YAAc,EAChC,QAASA,EAAM,QACf,YAAaA,EAAM,YACnB,MAAOA,EAAM,MACb,IAAKA,EAAM,GAAA,EACX,EAGA,OAAOD,GAAe,SACjB,OAAO,QAAQA,CAAU,EAAE,IAAI,CAAC,CAAC/V,EAAMwE,CAAO,KAAO,CAC1D,KAAAxE,EACA,KAAOwE,EAAgB,MAAQ,GAC/B,WAAaA,EAAgB,YAAc,EAC3C,WAAaA,EAAgB,YAAc,EAC3C,QAAUA,EAAgB,QAC1B,YAAcA,EAAgB,YAC9B,MAAQA,EAAgB,MACxB,IAAMA,EAAgB,GAAA,EACtB,EAGG,CAAC,EA5BgB,CAAC,CA6B3B,CChJgB,SAAAyR,EAAYC,EAAeC,EAAW,EAAW,CACzD,GAAAD,IAAU,EAAU,MAAA,UAExB,MAAME,EAAI,KACJC,EAAKF,EAAW,EAAI,EAAIA,EACxBG,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAI,EAEhEC,EAAI,KAAK,MAAM,KAAK,IAAIL,CAAK,EAAI,KAAK,IAAIE,CAAC,CAAC,EAElD,OAAO,YAAYF,EAAQ,KAAK,IAAIE,EAAGG,CAAC,GAAG,QAAQF,CAAE,CAAC,EAAI,IAAMC,EAAMC,CAAC,CACzE,CAOO,SAASC,GAAcC,EAAoB,CAC5C,OAAAA,EAAK,EAAU,QAEfA,GAAM,KACAA,EAAK,KAAM,QAAQ,CAAC,EAAI,KAG3BA,EAAG,QAAQ,CAAC,EAAI,KACzB,CAOO,SAASC,GAAgBC,EAAuB,CACjD,OAAAA,GAAS,GAAW,YACpBA,GAAS,GAAW,OACpBA,GAAS,GAAW,OACpBA,GAAS,GAAW,OACjB,UACT,CAOO,SAASC,GAAgBH,EAAoB,CAC9C,OAAAA,EAAK,GAAW,OAChBA,EAAK,GAAW,OAChBA,EAAK,IAAY,OACd,UACT,CCnCF,MAAMI,GAAwD,CAAC,CAC7D,KAAA3V,EACA,kBAAA0R,EACA,QAAAkE,EAAU,EACZ,IAAM,CAEE,KAAA,CAAE,SAAAC,EAAU,mBAAAC,CAAA,EAAuB9V,EAGnCkS,EAAY6D,EAAAA,QAAQ,IACpB,CAACrE,GAAqBA,EAAkB,SAAW,EAAU,CAAC,EAE3DA,EAAkB,IAAKlO,GAAgB,OAC5C,IAAIwS,EAAY,EACZC,EAAgB,EAGpB,MAAMC,EAAc1S,EAAO,WAAWlI,EAAAkI,EAAO,aAAP,YAAAlI,EAAmB,iBACzD,OAAI4a,IACEA,EAAY,UACFF,EAAAE,EAAY,SAAS,YAAc,EAC/BD,EAAAC,EAAY,SAAS,YAAc,IAEnDF,EAAYE,EAAY,YAAc,EACtCD,EAAgBC,EAAY,YAAc,IAIvC,CACL,UAAW1S,EAAO,UAClB,WAAYwS,EACZ,WAAYC,CACd,CAAA,CACD,EACA,CAACvE,CAAiB,CAAC,EAEtB,OAEIhJ,EAAA,KAAAoD,WAAA,CAAA,SAAA,CAACpD,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAO,UAAA,EACtCD,EAAAA,KAAC,MAAI,CAAA,UAAU,eAAgB,SAAA,CAAAqM,EAAYc,EAAS,SAAS,EAAE,IAAA,EAAE,EACjEnN,EAAAA,KAAC,MAAI,CAAA,UAAU,gBAAgB,SAAA,CAAA,UAAQqM,EAAYc,EAAS,UAAU,CAAA,CAAE,CAAA,CAAA,EAC1E,EACAnN,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAS,YAAA,EACxCD,EAAAA,KAAC,MAAI,CAAA,UAAU,eAAgB,SAAA,CAAAqM,EAAYc,EAAS,SAAS,EAAE,IAAA,EAAE,EACjEnN,EAAAA,KAAC,MAAI,CAAA,UAAU,gBAAgB,SAAA,CAAA,UAAQqM,EAAYc,EAAS,UAAU,CAAA,CAAE,CAAA,CAAA,CAC1E,CAAA,CAAA,EACF,EAEC,CAACD,GAAW1D,EAAU,OAAS,GAC9BvJ,EAAAA,IAAC,OAAI,UAAU,kBACb,SAACA,EAAA,IAAAgK,GAAA,CAAoB,MAAM,OAAO,OAAQ,IACxC,SAACjK,EAAA,KAAAkK,GAAA,CAAU,KAAMV,EACf,SAAA,CAAAxJ,OAAC,OACC,CAAA,SAAA,CAACA,EAAAA,KAAA,iBAAA,CAAe,GAAG,eAAe,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IACxD,SAAA,CAAAC,MAAC,QAAK,OAAO,KAAK,UAAU,UAAU,YAAa,GAAI,QACtD,OAAK,CAAA,OAAO,MAAM,UAAU,UAAU,YAAa,EAAI,CAAA,CAAA,EAC1D,EACAD,EAAAA,KAAC,iBAAe,CAAA,GAAG,mBAAmB,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAC5D,SAAA,CAAAC,MAAC,QAAK,OAAO,KAAK,UAAU,UAAU,YAAa,GAAI,QACtD,OAAK,CAAA,OAAO,MAAM,UAAU,UAAU,YAAa,EAAI,CAAA,CAAA,CAC1D,CAAA,CAAA,EACF,EACCA,EAAA,IAAAkK,GAAA,CAAc,gBAAgB,MAAM,OAAO,2BAA2B,EACvElK,EAAA,IAACmK,GAAA,CACC,QAAQ,YACR,cAAgBC,GAAiB,IAAI,KAAKA,CAAI,EAAE,mBAAmB,EACnE,OAAO,0BAAA,CACT,EACApK,EAAA,IAACqK,GAAA,CACC,cAAgBjU,GAAkBgW,EAAYhW,CAAK,EACnD,OAAO,0BAAA,CACT,EACA4J,EAAA,IAACwN,GAAA,CACC,UAAW,CAACpX,EAAeD,IACrBA,IAAS,aAAqB,CAACiW,EAAYhW,CAAK,EAAG,MAAM,EACzDD,IAAS,aAAqB,CAACiW,EAAYhW,CAAK,EAAG,UAAU,EAC1D,CAACgW,EAAYhW,CAAK,EAAGD,CAAI,EAElC,eAAiBoU,GAAkB,IAAI,KAAKA,CAAK,EAAE,eAAe,EAClE,aAAc,CAAE,WAAY,qBAAsB,OAAQ,OAAQ,aAAc,KAAM,EACtF,UAAW,CAAE,MAAO,OAAQ,EAC5B,WAAY,CAAE,MAAO,OAAQ,CAAA,CAC/B,EACAvK,EAAA,IAACwK,GAAA,CACC,KAAK,WACL,QAAQ,aACR,KAAK,OACL,OAAO,UACP,YAAa,EACb,YAAa,GACb,KAAK,qBACL,UAAW,CAAE,EAAG,EAAG,YAAa,EAAG,KAAM,SAAU,EACnD,kBAAmB,EAAA,CACrB,EACAxK,EAAA,IAACwK,GAAA,CACC,KAAK,WACL,QAAQ,aACR,KAAK,WACL,OAAO,UACP,YAAa,EACb,YAAa,GACb,KAAK,yBACL,UAAW,CAAE,EAAG,EAAG,YAAa,EAAG,KAAM,SAAU,EACnD,kBAAmB,EAAA,CAAA,CACrB,CACF,CAAA,CACF,CAAA,EACF,EAGFzK,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAkB,qBAAA,EACzDD,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gBACZ,SAAA,CAAmBoN,EAAA,qBAAqB,QAAQ,CAAC,EAAE,MAAA,EACtD,EACAnN,EAAAA,IAAC,MAAI,CAAA,UAAU,gBACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAW,sBAAsB6M,GAAgBM,EAAmB,oBAAoB,CAAC,GACzF,MAAO,CAAE,MAAO,GAAGA,EAAmB,oBAAoB,GAAI,CAAA,CAAA,EAElE,EACApN,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAA,OAAC,OAAK,CAAA,SAAA,CAAA,YAAU4M,GAAcQ,EAAmB,eAAe,CAAA,EAAE,SACjE,OAAK,CAAA,SAAA,CAAA,gBAAcA,EAAmB,oBAAoB,QAAQ,CAAC,EAAE,GAAA,EAAC,SACtE,OAAK,CAAA,SAAA,CAAA,WAASR,GAAcQ,EAAmB,MAAM,CAAA,CAAE,CAAA,CAAA,CAC1D,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,ECjJMM,GAA8D,CAAC,CAAE,KAAApW,KAEnE0I,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAwB,2BAAA,EAC/DD,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gBACZ,SAAA,CAAK1I,EAAA,qBAAqB,QAAQ,CAAC,EAAE,MAAA,EACxC,EACA2I,EAAAA,IAAC,MAAI,CAAA,UAAU,gBACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAW,sBAAsB6M,GAAgBxV,EAAK,oBAAoB,CAAC,GAC3E,MAAO,CAAE,MAAO,GAAGA,EAAK,oBAAoB,GAAI,CAAA,CAAA,EAEpD,EACC2I,EAAA,IAAA,MAAA,CAAI,UAAU,sBAAsB,SAA0B,4BAAA,CAAA,CAAA,EACjE,EAECA,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAe,kBAAA,EACtDD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAO,UAAA,EACpCA,EAAAA,IAAA,MAAA,CAAI,UAAW,iBAAiB+M,GAAgB1V,EAAK,eAAe,CAAC,GACnE,SAAAsV,GAActV,EAAK,eAAe,CACrC,CAAA,CAAA,EACF,EACA0I,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAG,MAAA,EAChCA,EAAAA,IAAA,MAAA,CAAI,UAAW,iBAAiB+M,GAAgB1V,EAAK,WAAW,CAAC,GAC/D,SAAAsV,GAActV,EAAK,WAAW,CACjC,CAAA,CAAA,EACF,EACA0I,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAQ,WAAA,EACrCA,EAAAA,IAAA,MAAA,CAAI,UAAW,iBAAiB+M,GAAgB1V,EAAK,gBAAgB,CAAC,GACpE,SAAAsV,GAActV,EAAK,gBAAgB,CACtC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEC2I,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAA4B,+BAAA,EACnED,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAgB,mBAAA,QAC7C,MAAI,CAAA,UAAU,eAAgB,SAAc2M,GAAAtV,EAAK,eAAe,CAAE,CAAA,CAAA,EACrE,EACA0I,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAY,eAAA,EAC1CD,EAAAA,KAAC,MAAI,CAAA,UAAU,eAAgB,SAAA,CAAK1I,EAAA,oBAAoB,QAAQ,CAAC,EAAE,GAAA,CAAC,CAAA,CAAA,EACtE,EACA0I,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAO,UAAA,QACpC,MAAI,CAAA,UAAU,eAAgB,SAAc2M,GAAAtV,EAAK,MAAM,CAAE,CAAA,CAAA,CAC5D,CAAA,CAAA,CACF,CAAA,CAAA,EACF,ECtDEqW,GAAkE,CAAC,CAAE,UAAAC,EAAW,QAASvZ,EAAI,MAE7F,CAACuZ,GAAaA,EAAU,SAAW,EAEnC5N,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAuB,0BAAA,EAC7DA,EAAA,IAAA,MAAA,CAAI,UAAU,kBAAkB,SAAyB,2BAAA,CAAA,CAAA,EAC5D,EAKFD,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAuB,0BAAA,EAC9DD,EAAAA,KAAC,QAAM,CAAA,UAAU,gBACf,SAAA,CAACC,EAAA,IAAA,QAAA,CACC,gBAAC,KACC,CAAA,SAAA,CAAAA,EAAAA,IAAC,MAAG,SAAO,SAAA,CAAA,EACXA,EAAAA,IAAC,MAAG,SAAG,KAAA,CAAA,EACPA,EAAAA,IAAC,MAAG,SAAM,QAAA,CAAA,EACVA,EAAAA,IAAC,MAAG,SAAQ,UAAA,CAAA,EACZA,EAAAA,IAAC,MAAG,SAAK,OAAA,CAAA,EACTA,EAAAA,IAAC,MAAG,SAAW,aAAA,CAAA,CAAA,CAAA,CACjB,CACF,CAAA,EACAA,EAAAA,IAAC,SACE,SAAU2N,EAAA,IAAI,CAAC9C,EAASjS,WACtB,KACC,CAAA,SAAA,CAACoH,EAAAA,IAAA,KAAA,CAAI,WAAQ,IAAK,CAAA,EAClBA,EAAAA,IAAC,KAAI,CAAA,SAAA6K,EAAQ,GAAI,CAAA,SAChB,KAAI,CAAA,SAAA,CAAYuB,EAAAvB,EAAQ,YAAc,CAAC,EAAE,IAAA,EAAE,SAC3C,KAAI,CAAA,SAAA,CAAYuB,EAAAvB,EAAQ,WAAa,CAAC,EAAE,IAAA,EAAE,SAC1C,KAAI,CAAA,SAAA,CAAAuB,GAAavB,EAAQ,YAAc,IAAMA,EAAQ,WAAa,EAAE,EAAE,IAAA,EAAE,EACxE7K,EAAA,IAAA,KAAA,CAAI,SAAQ6K,EAAA,kBAAoB,CAAE,CAAA,CAAA,CAN5B,EAAAjS,CAOT,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EACF,ECtCEgV,GAAkE,CAAC,CAAE,WAAA1B,EAAY,QAAS2B,EAAW,MAErG,CAAC3B,GAAcA,EAAW,SAAW,EAErCnM,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAkB,qBAAA,EACxDA,EAAA,IAAA,MAAA,CAAI,UAAU,kBAAkB,SAA2B,6BAAA,CAAA,CAAA,EAC9D,EAKFD,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAkB,qBAAA,EACxDA,EAAA,IAAA,MAAA,CAAI,UAAU,kBACZ,SAAWkM,EAAA,IAAI,CAACC,EAAOvT,IACtBmH,EAAAA,KAAC,MAAgB,CAAA,UAAU,iBACzB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAC,EAAA,IAAC,MAAI,CAAA,UAAU,iBAAkB,SAAAmM,EAAM,KAAK,EAC3CnM,EAAA,IAAA,MAAA,CAAI,UAAW,oBAAoBmM,EAAM,KAAO,GAAK,MAAM,GACzD,SAAAA,EAAM,KAAO,KAAO,MACvB,CAAA,CAAA,EACF,EACApM,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAW,cAAA,QACxC,MAAI,CAAA,UAAU,eAAgB,SAAAmM,EAAM,SAAW,KAAM,CAAA,CAAA,EACxD,EACApM,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAY,eAAA,QACzC,MAAI,CAAA,UAAU,eAAgB,SAAAmM,EAAM,aAAe,KAAM,CAAA,CAAA,EAC5D,EACApM,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAM,SAAA,EACpCA,EAAAA,IAAC,MAAI,CAAA,UAAU,eAAgB,SAAAmM,EAAM,MAAQ,GAAGA,EAAM,KAAK,QAAU,KAAM,CAAA,CAAA,EAC7E,EACApM,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAI,OAAA,QACjC,MAAI,CAAA,UAAU,eAAgB,SAAAmM,EAAM,KAAO,KAAM,CAAA,CAAA,EACpD,EACApM,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAK,QAAA,EACnCA,MAAC,OAAI,UAAU,eAAgB,WAAYmM,EAAM,YAAc,CAAC,CAAE,CAAA,CAAA,EACpE,EACApM,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAS,YAAA,EACvCA,MAAC,OAAI,UAAU,eAAgB,WAAYmM,EAAM,YAAc,CAAC,CAAE,CAAA,CAAA,CACpE,CAAA,CAAA,CACF,CAAA,CAAA,CAhCQ,EAAAvT,CAiCV,CACD,CACH,CAAA,CAAA,EACF,ECxDEkV,GAAkB,CACtB,IAAK,UACL,MAAO,UACP,UAAW,UACX,OAAQ,UACR,cAAe,UACf,MAAO,SACT,EAQMC,GAA4D,CAAC,CAAE,KAAA1W,EAAM,MAAA2W,EAAO,QAAAf,EAAU,MAAY,CAEhG,MAAA1D,EAAY,OAAO,QAAQlS,CAAI,EAClC,IAAI,CAAC,CAAClB,EAAMC,CAAK,KAAO,CACvB,KAAAD,EACA,MAAOC,GAAS,CAClB,EAAE,EACD,OAAe6X,GAAA,OAAOA,EAAK,OAAU,UAAYA,EAAK,MAAQ,CAAC,EAGlE,MAAI,CAAC1E,GAAaA,EAAU,SAAW,EAEnCxJ,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAkB,qBAAA,EACxDA,EAAA,IAAA,MAAA,CAAI,UAAU,kBAAkB,SAA0B,4BAAA,CAAA,CAAA,EAC7D,EAMAD,EAAA,KAAAoD,WAAA,CAAA,SAAA,CAACpD,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAkB,qBAAA,QACxD,MAAI,CAAA,MAAO,CAAE,OAAQiN,EAAU,IAAM,GACpC,EAAA,SAAAjN,EAAAA,IAACgK,IAAoB,MAAM,OAAO,OAAO,OACvC,gBAACkE,GACC,CAAA,SAAA,CAAAlO,EAAA,IAACmO,GAAA,CACC,KAAM5E,EACN,GAAG,MACH,GAAG,MACH,UAAW,GACX,YAAa0D,EAAU,GAAK,GAC5B,KAAK,UACL,QAAQ,QACR,MAAO,CAAC,CAAE,KAAA9W,EAAM,QAAAiY,CAAQ,IAAM,GAAGjY,CAAI,MAAMiY,EAAU,KAAK,QAAQ,CAAC,CAAC,IAEnE,SAAU7E,EAAA,IAAI,CAAC8E,EAAOzV,IACrBoH,EAAA,IAACsO,GAAA,CAEC,KAAMR,GAAgBO,EAAM,IAAoC,GAAK,SAAA,EADhE,QAAQzV,CAAK,EAGrB,CAAA,CAAA,CACH,QACC2V,GAAO,CAAA,CAAA,CAAA,CACV,CAAA,CACF,CAAA,CACF,CAAA,CAAA,EACF,EAEAxO,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAmB,sBAAA,EAC1DD,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAe,kBAAA,QAC7C,MAAI,CAAA,UAAU,iBAAkB,SAAAgO,EAAM,IAAI,MAAO,CAAA,CAAA,EACpD,EACAjO,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAe,kBAAA,QAC7C,MAAI,CAAA,UAAU,iBAAkB,SAAAgO,EAAM,IAAI,WAAY,CAAA,CAAA,EACzD,EACAjO,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAU,aAAA,QACxC,MAAI,CAAA,UAAU,iBAAkB,SAAAgO,EAAM,IAAI,MAAO,CAAA,CAAA,EACpD,EACAjO,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAgB,mBAAA,QAC9C,MAAI,CAAA,UAAU,iBAAkB,SAAAgO,EAAM,KAAK,WAAY,CAAA,CAAA,EAC1D,EACAjO,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAiB,oBAAA,QAC/C,MAAI,CAAA,UAAU,iBAAkB,SAAAgO,EAAM,MAAM,WAAY,CAAA,CAAA,EAC3D,EACAjO,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAW,cAAA,QACzC,MAAI,CAAA,UAAU,iBAAkB,SAAAgO,EAAM,IAAI,OAAQ,CAAA,CAAA,CACrD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EC1FMQ,GAA8D,CAAC,CACnE,UAAAb,EACA,QAASE,EAAW,GACpB,MAAA9V,EAAQ,CACV,IAAM,CAEE,MAAA0W,EAAkB,CAAC,GAAGd,CAAS,EAAE,KAAK,CAACe,EAAGC,IAAM,CACpD,MAAMC,GAAUF,EAAE,WAAa,IAAMA,EAAE,YAAc,GAErD,OADgBC,EAAE,WAAa,IAAMA,EAAE,YAAc,GACrCC,CAAA,CACjB,EAGKxF,EAAerR,EAAQ0W,EAAgB,MAAM,EAAG1W,CAAK,EAAI0W,EAG/D,MAAI,CAACrF,GAAgBA,EAAa,SAAW,EAEzCrJ,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAuB,0BAAA,EAC7DA,EAAA,IAAA,MAAA,CAAI,UAAU,kBAAkB,SAAyB,2BAAA,CAAA,CAAA,EAC5D,EAKFD,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAuB,0BAAA,EAC9DA,MAAC,OAAI,UAAU,sBACZ,WAAa,IAAI,CAAC6K,EAASjS,IAAU,CACpC,MAAMiW,GAAkBhE,EAAQ,WAAa,IAAMA,EAAQ,YAAc,GACnEiE,EAAkBD,GAAkBhE,EAAQ,WAAa,GAAKgE,EAAiB,IAAM,EACrFE,EAAgBF,GAAkBhE,EAAQ,YAAc,GAAKgE,EAAiB,IAAM,EAGxF,OAAA9O,EAAA,KAAC,MAAgB,CAAA,UAAU,oBACzB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAC,EAAA,IAAC,MAAI,CAAA,UAAU,eAAgB,SAAA6K,EAAQ,KAAK,EAC5C9K,EAAAA,KAAC,MAAI,CAAA,UAAU,cAAc,SAAA,CAAA,QAAM8K,EAAQ,GAAA,EAAI,EAC/C9K,EAAAA,KAAC,MAAI,CAAA,UAAU,oBAAqB,SAAA,CAAAqM,EAAYyC,CAAc,EAAE,IAAA,CAAE,CAAA,CAAA,EACpE,EAEA9O,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAQ,UAAA,CAAA,SACb,OAAM,CAAA,SAAA,CAAYoM,EAAAvB,EAAQ,WAAa,CAAC,EAAE,IAAA,CAAE,CAAA,CAAA,EAC/C,EACA7K,EAAAA,IAAC,MAAI,CAAA,UAAU,gBACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAU,8BACV,MAAO,CAAE,MAAO,GAAG8O,CAAe,GAAI,CAAA,CAAA,CAE1C,CAAA,CAAA,EACF,EAEA/O,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAM,QAAA,CAAA,SACX,OAAM,CAAA,SAAA,CAAYoM,EAAAvB,EAAQ,YAAc,CAAC,EAAE,IAAA,CAAE,CAAA,CAAA,EAChD,EACA7K,EAAAA,IAAC,MAAI,CAAA,UAAU,gBACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAU,4BACV,MAAO,CAAE,MAAO,GAAG+O,CAAa,GAAI,CAAA,CAAA,CAExC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAhP,EAAAA,KAAC,MAAI,CAAA,UAAU,sBAAsB,SAAA,CAAA,gBACrB8K,EAAQ,kBAAoB,CAAA,CAC5C,CAAA,CAAA,CAAA,EArCQjS,CAsCV,CAAA,CAEH,CACH,CAAA,CAAA,EACF,CAEJ,ECjEMoW,GAA8C,CAAC,CACnD,QAAA/B,EAAU,GACV,SAAAgC,EAAW,GACX,WAAAC,EAAa,WACb,OAAAC,CACF,IAAM,CAEJ,MAAMrG,EAAgBxI,EAAgB9L,GAAqBA,EAAM,QAAQ,OAAO,EAC1EuU,EAAoBzI,EAAgB9L,GAAqBA,EAAM,QAAQ,UAAU,EACjF4N,EAAY9B,EAAgB9L,GAAqBA,EAAM,QAAQ,OAAO,EAGtE,CAACwU,EAAWC,CAAY,EAAI7J,EAAAA,SAAyB8P,CAAU,EAC/D,CAAC3c,EAAOyO,CAAQ,EAAI5B,EAAAA,SAAwB,IAAI,EAIhD,CAAE,YAAAmO,EAAa,MAAO6B,CAAU,EAAI/D,GAAmBvC,CAAa,EAY1E,GATAvJ,EAAAA,UAAU,IAAM,CAEZyB,EADEoO,GAGO,IAFS,CAGpB,EACC,CAACA,CAAS,CAAC,EAGVhN,EAEA,OAAArC,EAAA,KAAC,MAAI,CAAA,UAAW,eAAekN,EAAU,UAAY,EAAE,GAAI,MAAO,CAAE,OAAAkC,CAAA,EAClE,SAAA,CAAAnP,EAAAA,IAAC,MAAG,SAAgB,kBAAA,CAAA,EACnBA,EAAA,IAAA,MAAA,CAAI,UAAU,kBAAkB,SAA0B,4BAAA,CAAA,CAAA,EAC7D,EAKA,GAAAzN,GAAS,CAACgb,EAEV,OAAAxN,EAAA,KAAC,MAAI,CAAA,UAAW,eAAekN,EAAU,UAAY,EAAE,GAAI,MAAO,CAAE,OAAAkC,CAAA,EAClE,SAAA,CAAAnP,EAAAA,IAAC,MAAG,SAAgB,kBAAA,CAAA,EACpBD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAE,KAAA,EAC7BA,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAiB,YAAS,2BAA4B,CAAA,CAAA,CACvE,CAAA,CAAA,EACF,EAKJ,MAAMqP,EAAmB,IAAM,CAC7B,OAAQrG,EAAW,CACjB,IAAK,WACI,OAAAhJ,EAAA,IAACgN,GAAA,CACA,KAAMO,EACN,kBAAAxE,EACA,QAAAkE,CAAA,CACF,EACR,IAAK,UACI,OAAAjN,EAAA,IAACyN,GAAA,CACA,KAAMF,EAAY,mBAClB,QAAAN,CAAA,CACF,EACR,IAAK,YACI,OAAAjN,EAAA,IAAC+N,GAAA,CACA,KAAMR,EAAY,mBAClB,MAAOA,EAAY,eACnB,QAAAN,CAAA,CACF,EACR,IAAK,YAEH,OAEIlN,EAAA,KAAAoD,WAAA,CAAA,SAAA,CAAAnD,EAAA,IAACwO,GAAA,CACC,UAAWjB,EAAY,wBAAwB,IAAK+B,IAAY,CAC5E,GAAGA,EACH,WAAYA,EAAE,YAAc,EAC5B,UAAWA,EAAE,WAAa,EAC1B,iBAAkBA,EAAE,kBAAoB,CAAA,EACxC,EAEY,QAAArC,EACA,MAAOA,EAAU,EAAI,CAAA,CACvB,EACAjN,EAAA,IAAC0N,GAAA,CACC,UAAWH,EAAY,wBAAwB,IAAK+B,IAAY,CAC5E,GAAGA,EACH,WAAYA,EAAE,YAAc,EAC5B,UAAWA,EAAE,WAAa,EAC1B,iBAAkBA,EAAE,kBAAoB,CAAA,EACxC,EAAE,IAAKA,IAAY,CACnB,GAAGA,EACH,WAAYA,EAAE,YAAc,EAC5B,UAAWA,EAAE,WAAa,EAC1B,iBAAkBA,EAAE,kBAAoB,CAAA,EACxC,EAEY,QAAArC,CAAA,CAAA,CACF,EACF,EAEJ,IAAK,aACI,OAAAjN,EAAA,IAAC4N,GAAA,CACA,WAAYL,EAAY,WACxB,QAAAN,CAAA,CACF,EACR,QACS,OAAAjN,EAAA,IAACgN,GAAA,CACA,KAAMO,EACN,kBAAAxE,EACA,QAAAkE,CAAA,CACF,CAAA,CAEZ,EAGE,OAAAlN,EAAA,KAAC,MAAI,CAAA,UAAW,eAAekN,EAAU,UAAY,EAAE,GAAI,MAAO,CAAE,OAAAkC,CAAA,EAClE,SAAA,CAAAnP,EAAAA,IAAC,MAAG,SAAgB,kBAAA,CAAA,EAEnBiP,GACClP,EAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAAAC,EAAA,IAAC,MAAA,CACC,UAAW,eAAegJ,IAAc,WAAa,SAAW,EAAE,GAClE,QAAS,IAAMC,EAAa,UAAU,EACvC,SAAA,UAAA,CAED,EACAjJ,EAAA,IAAC,MAAA,CACC,UAAW,eAAegJ,IAAc,UAAY,SAAW,EAAE,GACjE,QAAS,IAAMC,EAAa,SAAS,EACtC,SAAA,oBAAA,CAED,EACAjJ,EAAA,IAAC,MAAA,CACC,UAAW,eAAegJ,IAAc,YAAc,SAAW,EAAE,GACnE,QAAS,IAAMC,EAAa,WAAW,EACxC,SAAA,WAAA,CAED,EACAjJ,EAAA,IAAC,MAAA,CACC,UAAW,eAAegJ,IAAc,YAAc,SAAW,EAAE,GACnE,QAAS,IAAMC,EAAa,WAAW,EACxC,SAAA,WAAA,CAED,EACAjJ,EAAA,IAAC,MAAA,CACC,UAAW,eAAegJ,IAAc,aAAe,SAAW,EAAE,GACpE,QAAS,IAAMC,EAAa,YAAY,EACzC,SAAA,YAAA,CAAA,CAED,EACF,EAGDjJ,EAAA,IAAA,MAAA,CAAI,UAAU,kBACZ,YACH,CAAA,CAAA,EACF,CAEJ,ECvLMuP,GAAmC,IAErCvP,EAAA,IAACgP,GAAA,CACC,QAAS,GACT,SAAU,GACV,WAAW,UAAA,CACb,ECPSQ,GAAkD,CAAC,CAAE,UAAAlJ,KAC/DvG,EAAA,KAAA,MAAA,CAAI,UAAW,kBAAkBuG,GAAa,EAAE,GAAI,QAAQ,cAAc,MAAM,6BAC/E,SAAA,CAACtG,EAAAA,IAAA,SAAA,CAAO,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,KAAK,SAAU,CAAA,EAC9CA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,KAAK,SAAU,CAAA,EAC9CA,EAAAA,IAAC,UAAQ,CAAA,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,KAAK,SAAU,CAAA,EACxDA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,SAAU,CAAA,EAC7CA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,SAAU,CAAA,EAC7CA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,MAAO,CAAA,EAC1CA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,MAAO,CAAA,EAC1CA,EAAAA,IAAC,QAAK,EAAE,sBAAsB,OAAO,UAAU,YAAY,IAAI,KAAK,MAAO,CAAA,EAC1EA,EAAA,IAAA,SAAA,CAAO,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,KAAK,OAAO,OAAO,UAAU,YAAY,IAAI,QAC3E,OAAK,CAAA,EAAE,gBAAgB,OAAO,UAAU,YAAY,IAAI,EACzDA,EAAAA,IAAC,QAAK,EAAE,sBAAsB,OAAO,UAAU,YAAY,IAAI,KAAK,MAAO,CAAA,CAAA,EAC7E,EAGWyP,GAA8C,CAAC,CAAE,UAAAnJ,KAC3DvG,EAAA,KAAA,MAAA,CAAI,UAAW,kBAAkBuG,GAAa,EAAE,GAAI,QAAQ,cAAc,MAAM,6BAC/E,SAAA,CAAAtG,EAAA,IAAC,OAAK,CAAA,EAAE,+DAA+D,KAAK,UAAU,EACtFA,EAAAA,IAAC,QAAK,EAAE,mCAAmC,KAAK,OAAO,OAAO,UAAU,YAAY,GAAI,CAAA,EACxFA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,SAAU,CAAA,EAC7CA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,MAAO,CAAA,EAC1CA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,SAAU,CAAA,EAC7CA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,MAAO,CAAA,EAC1CA,EAAAA,IAAC,QAAK,EAAE,sBAAsB,OAAO,UAAU,YAAY,IAAI,KAAK,MAAO,CAAA,QAC1E,OAAK,CAAA,EAAE,8BAA8B,OAAO,UAAU,YAAY,IAAI,EACvEA,EAAAA,IAAC,QAAK,EAAE,mCAAmC,KAAK,OAAO,OAAO,UAAU,YAAY,GAAI,CAAA,CAAA,EAC1F,EAGW0P,GAA4C,CAAC,CAAE,UAAApJ,KACzDvG,EAAA,KAAA,MAAA,CAAI,UAAW,kBAAkBuG,GAAa,EAAE,GAAI,QAAQ,cAAc,MAAM,6BAC/E,SAAA,CAACtG,EAAAA,IAAA,SAAA,CAAO,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,KAAK,SAAU,CAAA,EAC9CA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,SAAU,CAAA,EAC7CA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,SAAU,CAAA,EAC7CA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,MAAO,CAAA,EAC1CA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,MAAO,CAAA,EAC1CA,EAAAA,IAAC,UAAQ,CAAA,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,KAAK,SAAU,CAAA,QACrD,OAAK,CAAA,EAAE,8BAA8B,OAAO,UAAU,YAAY,IAAI,EACvEA,EAAAA,IAAC,QAAK,EAAE,sBAAsB,KAAK,OAAO,OAAO,UAAU,YAAY,GAAI,CAAA,EAC3EA,EAAAA,IAAC,OAAK,CAAA,EAAE,mCAAmC,KAAK,OAAO,OAAO,UAAU,YAAY,IAAI,gBAAgB,KAAM,CAAA,EAC9GA,EAAAA,IAAC,OAAK,CAAA,EAAE,mCAAmC,KAAK,OAAO,OAAO,UAAU,YAAY,IAAI,gBAAgB,KAAM,CAAA,CAAA,EAChH,EAGW2P,GAA6C,CAAC,CAAE,UAAArJ,KAC1DvG,EAAA,KAAA,MAAA,CAAI,UAAW,kBAAkBuG,GAAa,EAAE,GAAI,QAAQ,cAAc,MAAM,6BAC/E,SAAA,CAAAtG,EAAA,IAAC,OAAK,CAAA,EAAE,gCAAgC,KAAK,UAAU,EACvDA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,SAAU,CAAA,EAC7CA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,SAAU,CAAA,EAC7CA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,SAAU,CAAA,EAC7CA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,SAAU,CAAA,EAC7CA,EAAAA,IAAC,QAAK,EAAE,sBAAsB,OAAO,UAAU,YAAY,IAAI,KAAK,MAAO,CAAA,EAC3EA,EAAAA,IAAC,QAAK,EAAE,mCAAmC,KAAK,OAAO,OAAO,UAAU,YAAY,GAAI,CAAA,EACxFA,EAAAA,IAAC,QAAK,EAAE,mCAAmC,KAAK,OAAO,OAAO,UAAU,YAAY,GAAI,CAAA,CAAA,EAC1F,EAGW4P,GAAwD,CAAC,CAAE,UAAAtJ,KACrEvG,EAAA,KAAA,MAAA,CAAI,UAAW,kBAAkBuG,GAAa,EAAE,GAAI,QAAQ,cAAc,MAAM,6BAC/E,SAAA,CAAAtG,MAAC,QAAK,EAAE,gCAAgC,KAAK,UAAU,YAAY,MAAM,EACzEA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,SAAU,CAAA,EAC7CA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,SAAU,CAAA,EAC7CA,EAAAA,IAAC,OAAK,CAAA,EAAE,sBAAsB,KAAK,OAAO,OAAO,UAAU,YAAY,IAAI,gBAAgB,KAAM,CAAA,EACjGA,EAAAA,IAAC,OAAK,CAAA,EAAE,sBAAsB,OAAO,UAAU,YAAY,IAAI,KAAK,OAAO,gBAAgB,KAAM,CAAA,EACjGA,EAAAA,IAAC,QAAK,EAAE,8BAA8B,OAAO,UAAU,YAAY,IAAI,gBAAgB,KAAM,CAAA,CAAA,EAC/F,EAGW6P,GAA0C,CAAC,CAAE,UAAAvJ,KACvDvG,EAAA,KAAA,MAAA,CAAI,UAAW,kBAAkBuG,GAAa,EAAE,GAAI,QAAQ,cAAc,MAAM,6BAC/E,SAAA,CAAAtG,EAAA,IAAC,OAAK,CAAA,EAAE,KAAK,EAAE,KAAK,MAAM,KAAK,OAAO,KAAK,GAAG,IAAI,KAAK,UAAU,EAChEA,EAAA,IAAA,OAAA,CAAK,EAAE,KAAK,EAAE,KAAK,MAAM,KAAK,OAAO,KAAK,GAAG,IAAI,KAAK,UAAU,EAChEA,EAAA,IAAA,OAAA,CAAK,EAAE,KAAK,EAAE,KAAK,MAAM,KAAK,OAAO,KAAK,GAAG,IAAI,KAAK,UAAU,EAChEA,EAAA,IAAA,OAAA,CAAK,EAAE,KAAK,EAAE,KAAK,MAAM,KAAK,OAAO,KAAK,GAAG,IAAI,KAAK,UAAU,EAChEA,EAAA,IAAA,OAAA,CAAK,EAAE,KAAK,EAAE,KAAK,MAAM,KAAK,OAAO,KAAK,GAAG,IAAI,KAAK,UAAU,EAChEA,EAAA,IAAA,OAAA,CAAK,EAAE,gCAAgC,KAAK,UAAU,EACtDA,EAAA,IAAA,OAAA,CAAK,EAAE,gCAAgC,KAAK,UAAU,EACtDA,EAAA,IAAA,OAAA,CAAK,EAAE,gCAAgC,KAAK,UAAU,EACvDA,EAAAA,IAAC,OAAK,CAAA,EAAE,KAAK,EAAE,KAAK,SAAS,IAAI,KAAK,UAAU,SAAM,QAAA,CAAA,CAAA,EACxD,EASW8P,GAAkE,CAAC,CAC9E,eAAAC,EACA,SAAAC,CACF,IAAM,CACJ,MAAMC,EAAa,CACjB,CAAE,GAAI,iBAAkB,KAAM,iBAAkB,UAAWjQ,EAAA,IAACwP,KAAc,CAAG,EAC7E,CAAE,GAAI,aAAc,KAAM,iBAAkB,UAAWxP,EAAA,IAACyP,KAAU,CAAG,EACrE,CAAE,GAAI,UAAW,KAAM,UAAW,UAAWzP,EAAA,IAAC0P,KAAQ,CAAG,EACzD,CAAE,GAAI,YAAa,KAAM,YAAa,UAAW1P,EAAA,IAAC2P,KAAS,CAAG,EAC9D,CAAE,GAAI,iBAAkB,KAAM,wBAAyB,UAAW3P,EAAA,IAAC4P,KAAoB,CAAG,EAC1F,CAAE,GAAI,SAAU,KAAM,SAAU,UAAW5P,EAAA,IAAC6P,KAAM,CAAG,CACvD,EAGE,OAAA9P,EAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAkB,oBAAA,CAAA,QACrB,MAAI,CAAA,UAAU,cACZ,SAAWiQ,EAAA,IAAKC,GACfnQ,EAAA,KAAC,MAAA,CAEC,UAAW,iBAAiBgQ,IAAmBG,EAAU,GAAK,WAAa,EAAE,GAC7E,QAAS,IAAMF,EAASE,EAAU,EAAE,EAEnC,SAAA,CAAUA,EAAA,UACVlQ,EAAA,IAAA,OAAA,CAAK,UAAU,cAAe,WAAU,IAAK,CAAA,CAAA,CAAA,EALzCkQ,EAAU,EAAA,CAOlB,CACH,CAAA,CAAA,EACF,CAEJ,EAGaC,GAAoB7Y,GAAgC,CAC/D,OAAQA,EAAI,CACV,IAAK,iBACH,aAAQkY,GAAc,EAAA,EACxB,IAAK,aACH,aAAQC,GAAU,EAAA,EACpB,IAAK,kBACH,aAAQC,GAAQ,EAAA,EAClB,IAAK,YACH,aAAQC,GAAS,EAAA,EACnB,IAAK,iBACH,aAAQC,GAAoB,EAAA,EAC9B,IAAK,SACH,aAAQC,GAAM,EAAA,EAChB,QACE,aAAQL,GAAc,EAAA,CAAA,CAE5B,EClIaY,GAA4C,CAAC,CACxD,WAAAC,EAAa,EACf,IAAM,CACJ,MAAMtb,EAAUuL,EAAgB9L,GAAUA,EAAM,QAAQ,OAAO,EACzD,CAAE,iBAAA8b,CAAiB,EAAIhQ,EAAgB9L,GAAUA,EAAM,OAAO,EAC9D,CAAC+b,EAAYC,CAAa,EAAIpR,EAAAA,SAAS,EAAK,EAC5CqR,EAAiBpI,GAAM,OAAOtT,CAAO,EAG3CwK,EAAAA,UAAU,IAAM,CACV,GAAAxK,GAAW0b,EAAe,SAAW,KAAK,UAAU1b,CAAO,IAAM,KAAK,UAAU0b,EAAe,OAAO,EAAG,CAC3GD,EAAc,EAAI,EAClB,MAAME,EAAQ,WAAW,IAAMF,EAAc,EAAK,EAAG,GAAI,EAClD,MAAA,IAAM,aAAaE,CAAK,CAAA,CAEjCD,EAAe,QAAU1b,CAAA,EACxB,CAACA,CAAO,CAAC,EAGN,MAAA4b,EAAkBlY,GAAmB,CACzC,OAAQA,EAAQ,CACd,IAAK,YACI,MAAA,mBACT,IAAK,aACI,MAAA,oBACT,IAAK,eACL,IAAK,QACI,MAAA,sBACT,QACS,MAAA,qBAAA,CAEb,EAGE,OAAAsH,EAAA,KAAC,MAAI,CAAA,UAAU,gBACZ,SAAA,CACCsQ,GAAAtQ,EAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAc,gBAAA,CAAA,EAClBD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAACC,EAAAA,IAAAwP,GAAA,CAAc,UAAU,WAAY,CAAA,QACpC,MAAI,CAAA,UAAU,oBACb,SAACxP,MAAA,IAAA,CAAE,4GAAiG,CAAA,CACtG,CAAA,CAAA,EACF,EAGAD,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAC,MAAC,QAAK,UAAW,kBAAkB2Q,EAAeL,CAAgB,CAAC,GAAI,EACtEtQ,EAAA,IAAA,OAAA,CAAK,UAAU,kBAAmB,SAAiBsQ,CAAA,CAAA,CAAA,CACtD,CAAA,CAAA,EACF,SAGD,MAAI,CAAA,UAAW,eAAeC,EAAa,gBAAkB,EAAE,GAC9D,SAAA,CAAAvQ,EAAA,IAAC6I,GAAU,EAAA,QACVmC,GAAa,EAAA,QACbG,GAAW,EAAA,QACXoE,GAAuB,CAAA,CAAA,CAAA,CAC1B,CAAA,CAAA,EACF,CAEJ,ECrCaqB,EAAgC,CAAC,CAC5C,QAAA/K,EAAU,UACV,KAAAa,EAAO,KACP,SAAAC,EAAW,GACX,OAAAkK,EAAS,GACT,KAAA5K,EAAO,GACP,UAAA6K,EAAY,GACZ,SAAAC,EACA,UAAAC,EACA,QAAA/L,EAAU,GACV,SAAAgM,EAAW,GACX,UAAA3K,EAAY,GACZ,SAAArH,EACA,GAAGsH,CACL,IAAM,CAEJ,MAAM2K,EAAgB,CACpB,YACA,aAAarL,CAAO,GACpB,aAAaa,CAAI,GACjBC,EAAW,qBAAuB,GAClCkK,EAAS,mBAAqB,GAC9B5K,EAAO,iBAAmB,GAC1B6K,EAAY,uBAAyB,GACrC7L,EAAU,oBAAsB,GAChCgM,EAAW,qBAAuB,GAClC3K,CACA,EAAA,OAAO,OAAO,EAAE,KAAK,GAAG,EAGxB,OAAAvG,EAAA,KAAC,SAAA,CACC,UAAWmR,EACX,SAAUD,GAAYhM,EACrB,GAAGsB,EAEH,SAAA,CAAWtB,GAAAjF,EAAAA,IAAC,OAAK,CAAA,UAAU,mBAAoB,CAAA,EAC/C+Q,GAAY/Q,EAAA,IAAC,OAAK,CAAA,UAAU,qCAAsC,SAAS+Q,EAAA,EAC3E9R,GAAYe,EAAA,IAAC,OAAK,CAAA,UAAU,iBAAkB,SAAAf,EAAS,EACvD+R,GAAahR,EAAA,IAAC,OAAK,CAAA,UAAU,sCAAuC,SAAUgR,CAAA,CAAA,CAAA,CAAA,CACjF,CAEJ,EClCaG,GAA8B,CAAC,CAC1C,QAAAtL,EAAU,OACV,KAAAa,EAAO,KACP,MAAAhN,EACA,YAAA0X,EAAc,GACd,UAAAC,EACA,KAAApL,EAAO,GACP,QAAAqL,EAAU,GACV,KAAA9J,EACA,SAAAzB,EAAW,GACX,WAAAwL,EAAa,GACb,WAAAC,EAAa,SACb,SAAAC,EACA,UAAAnL,EAAY,GACZ,SAAArH,CACF,IAAM,CAEJ,MAAMyS,EAAiB,IAAM,CAC3B,OAAQ7L,EAAS,CACf,IAAK,OACI,MAAA,KACT,IAAK,UACI,MAAA,IACT,IAAK,UACI,MAAA,KACT,IAAK,SACI,MAAA,KACT,IAAK,QACI,MAAA,IACT,QACS,MAAA,IAAA,CAEb,EAGM8L,EAAe,CACnB,WACA,YAAY9L,CAAO,GACnB,YAAYa,CAAI,GAChBT,EAAO,gBAAkB,GACzBF,EAAW,oBAAsB,GACjCwL,EAAa,sBAAwB,GACrCjL,CACA,EAAA,OAAO,OAAO,EAAE,KAAK,GAAG,EAE1B,OACGvG,EAAAA,KAAA,MAAA,CAAI,UAAW4R,EAAc,KAAK,QAChC,SAAA,CAAAL,SACE,MAAI,CAAA,UAAU,gBACZ,SAAA9J,GAAQkK,IACX,EAEF3R,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACZ,SAAA,CAAArG,GAAUsG,EAAA,IAAA,MAAA,CAAI,UAAU,iBAAkB,SAAMtG,EAAA,EAChDsG,EAAAA,IAAA,MAAA,CAAI,UAAU,mBAAoB,SAAAf,CAAS,CAAA,EAC3CsS,GACEvR,EAAAA,IAAA,SAAA,CAAO,UAAU,kBAAkB,QAASyR,EAC1C,SACHD,CAAA,CAAA,CAAA,EAEJ,EACCJ,GACEpR,EAAAA,IAAA,SAAA,CAAO,UAAU,mBAAmB,QAASqR,EAAW,SAEzD,GAAA,CAAA,CAAA,EAEJ,CAEJ,ECzEaO,GAAgC,CAAC,CAC5C,QAAAC,EACA,SAAA1J,EACA,QAAAtC,EAAU,UACV,KAAAa,EAAO,KACP,KAAAT,EAAO,GACP,SAAAgL,EAAW,GACX,MAAA1G,EACA,WAAAuH,EAAa,GACb,UAAAxL,EAAY,GACZ,GAAAhP,EACA,KAAAnB,EACA,GAAGoQ,CACL,IAAM,CAEJ,MAAMwL,EAAWza,GAAM,aAAa,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,EAAG,CAAC,CAAC,GAGxE0a,EAAgB,CACpB,YACA,aAAanM,CAAO,GACpB,aAAaa,CAAI,GACjBT,EAAO,iBAAmB,GAC1BgL,EAAW,qBAAuB,GAClC3K,CACA,EAAA,OAAO,OAAO,EAAE,KAAK,GAAG,EAGpBnF,EAAgBC,GAA2C,CAC1D6P,GACM9I,EAAA/G,EAAE,OAAO,OAAO,CAE7B,EAGE,OAAArB,EAAA,KAAC,MAAI,CAAA,UAAWiS,EACb,SAAA,CAASzH,GAAA,CAACuH,GACR9R,EAAA,IAAA,QAAA,CAAM,QAAS+R,EAAU,UAAU,uCACjC,SACHxH,CAAA,CAAA,EAGFxK,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,KAAK,WACL,GAAI+R,EACJ,KAAA5b,EACA,QAAA0b,EACA,SAAU1Q,EACV,SAAA8P,EACA,UAAU,kBACT,GAAG1K,CAAA,CACN,EACAvG,EAAAA,IAAC,QAAK,UAAU,mBACd,eAAC,OAAK,CAAA,UAAU,kBAAmB,CAAA,CACrC,CAAA,CAAA,EACF,EAECuK,GAASuH,GACP9R,MAAA,QAAA,CAAM,QAAS+R,EAAU,UAAU,wCACjC,SACHxH,CAAA,CAAA,CAAA,EAEJ,CAEJ,EC9Da0H,EAAQC,aAAyC,CAAC,CAC7D,QAAArM,EAAU,UACV,KAAAa,EAAO,KACP,KAAAT,EAAO,GACP,MAAAC,EAAQ,GACR,YAAAiM,EAAc,GACd,MAAA5H,EACA,WAAA6H,EACA,MAAA7f,EACA,UAAA8f,EACA,QAAAC,EACA,UAAAhM,EAAY,GACZ,KAAA7L,EAAO,OACP,UAAAqW,EAAY,GACZ,SAAAG,EAAW,GACX,GAAA3Z,EACA,GAAGiP,CACL,EAAGgM,IAAQ,CAET,MAAMC,EAAUlb,GAAM,YAAY,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,EAAG,CAAC,CAAC,GAGtEmb,EAAsB,CAC1B,mBACA,YAAY5M,CAAO,GACnB,YAAYa,CAAI,GAChBT,EAAO,gBAAkB,GACzBC,EAAQ,iBAAmB,GAC3BiM,EAAc,wBAA0B,GACxCrB,EAAY,sBAAwB,GACpCG,EAAW,oBAAsB,GACjC1e,EAAQ,iBAAmB,GAC3B+T,CACA,EAAA,OAAO,OAAO,EAAE,KAAK,GAAG,EAGxB,OAAAvG,EAAA,KAAC,MAAI,CAAA,UAAW0S,EACb,SAAA,CAAAlI,SACE,QAAM,CAAA,QAASiI,EAAS,UAAU,iBAChC,SACHjI,EAAA,EAGFxK,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACZ,SAAA,CAAAsS,GACErS,EAAA,IAAA,MAAA,CAAI,UAAU,oCACZ,SACHqS,EAAA,EAGFrS,EAAA,IAAC,QAAA,CACC,IAAAuS,EACA,GAAIC,EACJ,KAAA/X,EACA,SAAAwW,EACA,UAAW,YAAYoB,EAAY,0BAA4B,EAAE,IAAIC,EAAU,wBAA0B,EAAE,GAC1G,GAAG/L,CAAA,CACN,EAEC+L,GACCtS,EAAA,IAAC,MAAI,CAAA,UAAU,kCACZ,SACHsS,CAAA,CAAA,CAAA,EAEJ,GAEEF,GAAc7f,IACdyN,EAAAA,IAAC,MAAI,CAAA,UAAW,wBAAwBzN,EAAQ,6BAA+B,EAAE,GAC9E,SAAAA,GAAS6f,CACZ,CAAA,CAAA,EAEJ,CAEJ,CAAC,EAEDH,EAAM,YAAc,QC5Fb,MAAMS,GAAsD,CAAC,CAClE,UAAAC,EAAY,EACZ,YAAAC,EAAc,GACd,mBAAAC,CACF,IAAM,CACJ,MAAMnX,EAAW0E,GAAe,EAC1BO,EAAWC,GAAY,EACvB,CAAE,OAAA3L,EAAQ,QAAS6d,EAAe,MAAOC,EAAa,cAAAC,CAAc,EAAI1S,EAAgB9L,GAAUA,EAAM,YAAY,EAEpH,CAACye,EAAiBC,CAAkB,EAAI9T,EAAAA,SAAwB,IAAI,EACpE,CAAC+T,EAAgBC,CAAiB,EAAIhU,EAAAA,SAAS,EAAK,EAGpDiU,EAAmB,CAAC/b,EAAY8J,IAAwB,CAC5DA,EAAE,gBAAgB,EACT1F,EAAAvD,GAAgBb,CAAE,CAAC,CAC9B,EAEMgc,EAAe,CAAChc,EAAY8J,IAAwB,CACxDA,EAAE,gBAAgB,EACT1F,EAAArD,GAAkBf,CAAE,CAAC,CAChC,EAEMic,EAAwB,CAACjc,EAAY8J,IAAwB,CACjEA,EAAE,gBAAgB,EACT1F,EAAAzC,GAAqB3B,CAAE,CAAC,CACnC,EAEMkc,EAAkB,IAAM,CAC5B9X,EAASxC,IAAiB,CAC5B,EAEMua,EAAoB,IAAM,CAC9B/X,EAASvC,IAAmB,CAC9B,EAEMua,EAAuB,IAAM,CAC7B,OAAO,QAAQ,iFAAkF,GACnGhY,EAAStC,IAAsB,CAEnC,EAEMua,EAA4Blb,GAAqE,CAC5FiD,EAAArC,GAAiCZ,CAAM,CAAC,EACjD2a,EAAkB,EAAK,CACzB,EAEMQ,EAA2B,IAAM,CACrClY,EAASpC,IAA0B,CACrC,EAEMua,EAAoBvc,GAAe,CAErC4b,EADED,IAAoB3b,EACH,KAEAA,CAFI,CAI3B,EAEMwc,EAAsB,IAAM,CAC5BjB,EACiBA,EAAA,EAEnBlS,EAAS,SAAS,CAEtB,EAEMoT,EAAoBna,GAAqB,CACrC,OAAAA,EAAS,YAAe,EAAA,CAC9B,IAAK,WACI,MAAA,WACT,IAAK,OACI,MAAA,OACT,IAAK,SACI,MAAA,SACT,IAAK,MACI,MAAA,MACT,QACS,MAAA,EAAA,CAEb,EAEMoa,EAAwBvb,GAAoB,CAChD,OAAQA,EAAQ,CACd,IAAK,WACI,MAAA,WACT,IAAK,eACI,MAAA,eACT,IAAK,kBACI,MAAA,eACT,QACS,MAAA,WAAA,CAEb,EAEMwb,EAAcC,GACX,IAAI,KAAKA,CAAU,EAAE,eAAe,EAI3C,OAAAnU,EAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAa,eAAA,CAAA,EACjBA,EAAAA,IAAC,OAAI,UAAU,sBACb,eAAC4P,GAAoB,CAAA,UAAU,aAAc,CAAA,CAC/C,CAAA,CAAA,EACF,EAECkD,EACC9S,EAAAA,IAAC,MAAI,CAAA,UAAU,iBAAiB,SAAiB,oBAAA,EAC/C+S,EACF/S,EAAAA,IAAC,MAAI,CAAA,UAAU,eAAgB,SAAA+S,CAAY,CAAA,EAGxChT,EAAA,KAAAoD,WAAA,CAAA,SAAA,CAAA6P,EAAgB,GACfjT,OAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,iBAAkB,SAAA,CAAAiT,EAAc,WAAA,EAAS,EACzDjT,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC4Q,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAASgD,EACV,SAAA,WAAA,CAED,EACA5T,EAAA,IAAC4Q,EAAA,CACC,QAAQ,SACR,KAAK,KACL,QAAS8C,EACV,SAAA,QAAA,CAED,EACA3T,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAC,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,KAAK,KACL,QAAS,IAAMwC,EAAkB,CAACD,CAAc,EACjD,SAAA,YAAA,CAED,EACCA,GACCpT,EAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAAAC,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,KAAK,KACL,QAAS,IAAM+C,EAAyB,UAAU,EACnD,SAAA,UAAA,CAED,EACA3T,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,KAAK,KACL,QAAS,IAAM+C,EAAyB,cAAc,EACvD,SAAA,cAAA,CAED,EACA3T,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,KAAK,KACL,QAAS,IAAM+C,EAAyB,iBAAiB,EAC1D,SAAA,cAAA,CAED,EACA3T,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,KAAK,KACL,QAAS,IAAM+C,EAAyB,MAAM,EAC/C,SAAA,WAAA,CAAA,CAED,CACF,CAAA,CAAA,EAEJ,EACA3T,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,KAAK,KACL,QAAS6C,EACV,SAAA,cAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EAGDzT,MAAA,MAAA,CAAI,UAAU,wBACZ,WAAO,OAAOxH,GAAS,CAACA,EAAM,OAAO,EAAE,SAAW,EACjDwH,EAAA,IAAC,OAAI,UAAU,YACb,SAACA,EAAAA,IAAA,IAAA,CAAE,SAA2B,6BAAA,CAAA,CAAA,CAChC,EAEA/K,EAAO,OAAgBuD,GAAA,CAACA,EAAM,OAAO,EAAE,MAAM,EAAGma,CAAS,EAAE,IACzDna,GAAAuH,EAAA,KAAC,MAAA,CAEC,UAAW,wBAAwBvH,EAAM,QAAU,OAAS,QAAQ,IAAIA,EAAM,SAAW,WAAa,EAAE,IAAIya,IAAoBza,EAAM,GAAK,WAAa,EAAE,GAC1J,QAAS,IAAMqb,EAAiBrb,EAAM,EAAE,EAExC,SAAA,CAACwH,EAAAA,IAAA,MAAA,CAAI,UAAU,kBACb,SAAAA,EAAA,IAAC,QAAA,CACC,KAAK,WACL,QAASxH,EAAM,UAAY,GAC3B,SAAW4I,GAAMmS,EAAsB/a,EAAM,GAAI4I,EAAE,WAA0C,EAC7F,QAAUA,GAAMA,EAAE,gBAAgB,CAAA,CAAA,EAEtC,EAEArB,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAW,sBAAsB+T,EAAiBvb,EAAM,QAAQ,CAAC,GACnE,SAAAA,EAAM,QACT,CAAA,EACAwH,EAAAA,IAAC,KAAI,CAAA,SAAAxH,EAAM,KAAM,CAAA,EAChB,CAACA,EAAM,eAAY,OAAK,CAAA,UAAU,eAAe,SAAG,MAAA,EACpDA,EAAM,eACJwH,EAAA,IAAA,OAAA,CAAK,UAAW,uBAAuBxH,EAAM,aAAa,GACxD,SAAAwb,EAAqBxb,EAAM,aAAa,CAC3C,CAAA,CAAA,EAEJ,EAECya,IAAoBza,EAAM,IAEvBuH,EAAA,KAAAoD,EAAA,SAAA,CAAA,SAAA,CAAAnD,MAAC,OAAI,UAAU,kBACZ,SAAWiU,EAAAzb,EAAM,SAAS,EAC7B,EAECwH,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAiB,WAAM,QAAQ,EAE5CD,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAO,SAAA,CAAA,EACbD,EAAA,KAAC,SAAA,CACC,MAAOvH,EAAM,eAAiB,OAC9B,SAAW4I,GAAM,CACf1F,EAAS1C,GAAwB,CAC/B,GAAIR,EAAM,GACV,OAAQ4I,EAAE,OAAO,KAAA,CAClB,CAAC,EACFA,EAAE,gBAAgB,CACpB,EACA,QAAUA,GAAMA,EAAE,gBAAgB,EAElC,SAAA,CAACpB,EAAA,IAAA,SAAA,CAAO,MAAM,OAAO,SAAS,YAAA,EAC7BA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAQ,WAAA,EAChCA,EAAA,IAAA,SAAA,CAAO,MAAM,eAAe,SAAY,eAAA,EACxCA,EAAA,IAAA,SAAA,CAAO,MAAM,kBAAkB,SAAY,cAAA,CAAA,CAAA,CAAA,CAAA,CAC9C,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACZ,SAAA,CAAA,CAACvH,EAAM,SACNwH,EAAA,IAAC4Q,EAAA,CACC,QAAQ,UACR,KAAK,KACL,OAAM,GACN,QAAUxP,GAAMiS,EAAiB7a,EAAM,GAAI4I,CAAC,EAC5C,MAAM,eACP,SAAA,GAAA,CAED,EAEFpB,EAAA,IAAC4Q,EAAA,CACC,QAAQ,SACR,KAAK,KACL,OAAM,GACN,QAAUxP,GAAMkS,EAAa9a,EAAM,GAAI4I,CAAC,EACxC,MAAM,SACP,SAAA,GAAA,CAAA,CAED,CACF,CAAA,CAAA,CAAA,EA/EK5I,EAAM,EAiFd,CAAA,EAEL,EAEAuH,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAAAC,EAAA,IAAC4Q,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS4C,EACV,SAAA,YAAA,CAED,EACCZ,GACC5S,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,KAAK,KACL,QAASkD,EACV,SAAA,iBAAA,CAAA,CAED,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,CAEJ,ECzTaK,GAA0D,CAAC,CACtE,YAAAC,CACF,IAAM,CACJ,MAAM1Y,EAAW0E,GAAe,EAC1B3E,EAAW6E,EAAgB9L,GAAUA,EAAM,UAAU,QAAQ,EAC7D6f,EAAiB/T,EAAgB9L,GAAUA,EAAM,UAAU,MAAM,EACjEjC,EAAQ+N,EAAgB9L,GAAUA,EAAM,UAAU,KAAK,EAG7D6T,GAAM,UAAU,IAAM,CACpB,QAAQ,IAAI,2CAA2C,EACvD3M,EAASO,IAAe,EAGlB,MAAAoJ,EAAa,YAAY,IAAM,CACnC,QAAQ,IAAI,8CAA8C,EAC1D3J,EAASO,IAAe,GACvB,GAAK,EAED,MAAA,IAAM,cAAcoJ,CAAU,CAAA,EACpC,CAAC3J,CAAQ,CAAC,EAGb2M,GAAM,UAAU,IAAM,CACZ,QAAA,IAAI,yCAA0C5M,CAAQ,EACtD,QAAA,IAAI,wCAAyC4Y,CAAc,EAC3D,QAAA,IAAI,8BAA+B9hB,CAAK,CAC/C,EAAA,CAACkJ,EAAU4Y,EAAgB9hB,CAAK,CAAC,EAGpC,MAAM+hB,EAAuB,IAAM,CACjC,QAAQ,IAAI,qDAAqD,EACjE5Y,EAASO,IAAe,CAC1B,EAGMsY,EAAkBH,EAAc3Y,EAAS,MAAM,EAAG2Y,CAAW,EAAI3Y,EAGrE,OAAAsE,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAwB,0BAAA,CAAA,EAC5BD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAAA,IAAAyP,GAAA,CAAU,UAAU,YAAa,CAAA,QACjC,MAAI,CAAA,UAAU,oBACb,SAACzP,EAAA,IAAA,IAAA,CAAE,uFAA4E,CAAA,CACjF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECqU,IAAmB,UACjBtU,OAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAAiD,mDAAA,CAAA,EACpDA,EAAAA,IAAC,MAAI,CAAA,UAAU,mBAAoB,CAAA,CACrC,CAAA,CAAA,EACE,CAACvE,GAAYA,EAAS,SAAW,EACnCsE,EAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAAwB,0BAAA,CAAA,EAC3BA,EAAA,IAAC4Q,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAAS0D,EACT,KAAI,GACL,SAAA,gBAAA,CAAA,CAED,CACF,CAAA,EAEAvU,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACZ,SAAA,CAAAwU,EAAgB,IAAI,CAAC/Z,EAAS5B,IAC5BmH,OAAA,MAAA,CAAgB,UAAU,eACzB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAACC,EAAAA,IAAA,KAAA,CAAI,WAAQ,IAAK,CAAA,EAClBD,EAAAA,KAAC,MAAI,CAAA,UAAU,qBAAqB,SAAA,CAAA,gBACpBvF,EAAQ,WAAa,KAAK,QAAQ,CAAC,EAAE,GAAA,CACrD,CAAA,CAAA,EACF,EACAuF,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAC,EAAA,IAAC,MAAI,CAAA,UAAU,sBAAuB,SAAAxF,EAAQ,QAAQ,QACrD,MAAI,CAAA,UAAU,eACZ,SAAO,OAAA,QAAQA,EAAQ,OAAO,EAAE,IAAI,CAAC,CAACga,EAAKpe,CAAK,IAC9C2J,EAAAA,KAAA,MAAA,CAAc,UAAU,sBACvB,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,aAAc,SAAA,CAAAyU,EAAI,GAAA,EAAC,EAAO,IAAE,KAAK,UAAUpe,CAAK,CAAA,CADxD,EAAAoe,CAEV,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,EAhBQ5b,CAiBV,CACD,EAEA6C,EAAS,OAAS8Y,EAAgB,QAChCxU,EAAAA,KAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAA,OAAC,IAAG,CAAA,SAAA,CAAAtE,EAAS,OAAS8Y,EAAgB,OAAO,0BAAA,EAAwB,EACrEvU,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,KAAK,KACL,QAAS0D,EACV,SAAA,mBAAA,CAAA,CAED,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EAEJ,CAEJ,ECvGaG,GAAsC,IAAM,CACvD,MAAM/Y,EAAW0E,GAAe,EAC1B,CAAE,KAAAsU,CAAK,EAAIpU,EAAgB9L,GAAUA,EAAM,IAAI,EAC/C,CAAE,QAAAyQ,EAAS,MAAA1S,CAAA,EAAU+N,EACxB9L,GAAqBA,EAAM,OAC9B,EAGoB2P,GAAA,EAGpB5E,EAAAA,UAAU,KACR,QAAQ,IAAI,8BAA8B,EAG1C7D,EAASO,IAAsB,EAC/BP,EAAS7D,GAAkB,CAAE,KAAM,EAAG,MAAO,EAAA,CAAI,CAAC,EAE3C,IAAM,CACX,QAAQ,IAAI,uCAAuC,CACrD,GACC,CAAC6D,CAAQ,CAAC,EAGb,MAAMiZ,EAAoB,IAAM,CAC9B,GAAID,GAAA,MAAAA,EAAM,SAAU,CAClB,MAAME,EAAO,IAAI,KAAK,EAAE,SAAS,EAEjC,MAAO,GADUA,EAAO,GAAK,eAAiBA,EAAO,GAAK,iBAAmB,cAC3D,KAAKF,EAAK,QAAQ,GAAA,CAE/B,MAAA,kBACT,EAGA,OAAIzP,EAEAlF,EAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,iBAAkB,CAAA,EACjCA,EAAAA,IAAC,KAAE,SAAoB,sBAAA,CAAA,CAAA,EACzB,EAKAzN,EAEAwN,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAmB,qBAAA,CAAA,EACvBA,EAAAA,IAAC,KAAG,SAAMzN,CAAA,CAAA,EACVyN,EAAA,IAAC,SAAA,CACC,UAAU,eACV,QAAS,IAAM,OAAO,SAAS,OAAO,EACvC,SAAA,kBAAA,CAAA,CAED,EACF,EAKFD,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACC,EAAAA,IAAA,KAAA,CAAI,WAAoB,CAAA,CAAA,EAEzBA,EAAAA,IAAC,OAAI,UAAU,mBACb,eAACgF,GAAa,CAAA,QAAAC,EAAkB,MAAA1S,CAAc,CAAA,CAChD,CAAA,CAAA,EACF,EAEAwN,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAC,MAAC,MAAI,CAAA,UAAU,iBACb,SAAAA,MAACoQ,IAAa,CAAA,EAChB,EACArQ,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAC,EAAA,IAAC0S,GAAkB,CAAA,UAAW,EAAG,YAAa,GAAM,EACpD1S,EAAAA,IAACmU,GAAoB,CAAA,YAAa,CAAG,CAAA,CAAA,CACvC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,ECzDaU,GAA0C,CAAC,CAAE,OAAApU,EAAQ,QAAAC,KAAc,6FAC9E,MAAMhF,EAAW0E,GAAe,EAC1B,CAAE,KAAAsU,EAAM,gBAAArS,EAAiB,UAAAD,EAAW,MAAA7P,GAAU+N,EAAwB9L,GAAAA,EAAM,IAKjF,EAEK,CAACsgB,EAAYC,CAAa,EAAI3V,EAAAA,SAAwB,IAAI,EAC1D,CAAC4V,EAAWC,CAAY,EAAI7V,EAAAA,SAAS,EAAK,EAC1C,CAAC2Q,EAAgBmF,CAAiB,EAAI9V,EAAAA,SAAiB,gBAAgB,EACvE,CAAC4J,EAAWC,CAAY,EAAI7J,EAAAA,SAA+C,SAAS,EAGpF+V,EAAS7Q,SAA4B,IAAI,EACzC8Q,EAAW9Q,SAAyB,IAAI,EACxC+Q,EAAQ/Q,SAAyB,IAAI,EACrCgR,EAAYhR,SAAyB,IAAI,EACzCiR,EAAcjR,SAAyB,IAAI,EAC3CkR,EAAYlR,SAAyB,IAAI,EACzCmR,EAAuBnR,SAA0B,IAAI,EACrDoR,EAAiBpR,SAAyB,IAAI,EAC9CqR,EAAkBrR,SAAyB,IAAI,EAGrD/E,EAAAA,UAAU,IAAM,CACV,CAACmV,GAAQrS,GACX3G,EAASvH,IAAiB,CAE3B,EAAA,CAACugB,EAAMrS,EAAiB3G,CAAQ,CAAC,EAGpC6D,EAAAA,UAAU,IAAM,QACV5M,EAAA+hB,GAAA,YAAAA,EAAM,UAAN,MAAA/hB,EAAe,QACCuiB,EAAAR,EAAK,QAAQ,MAAM,CACvC,EACC,CAACA,CAAI,CAAC,EAGTnV,EAAAA,UAAU,IAAM,CACVhN,GACFwiB,EAAcxiB,CAAK,CACrB,EACC,CAACA,CAAK,CAAC,EAGVgN,EAAAA,UAAU,IAAM,CACR,MAAAqW,EAAmBjS,IAAyB,CAC5CA,GAAM,MAAQ,UAAYjD,GACpBA,EAAA,CAEZ,EAEA,GAAID,EACO,gBAAA,iBAAiB,UAAWmV,CAAe,EAC7C,IAAM,CACF,SAAA,oBAAoB,UAAWA,CAAe,CACzD,CAEK,EACN,CAACnV,EAAQC,CAAO,CAAC,EAGd,MAAAmV,EAAsBC,GAAqB,CAC/CZ,EAAkBY,CAAQ,EAClB,QAAA,IAAI,+CAA+CA,CAAQ,6CAA6C,CAClH,EAGMC,EAAkB,SAAY,+BAClC,GAAI,CAAC1T,EAAiB,CACpB,QAAQ,IAAI,mDAAmD,EAC/D0S,EAAc,4CAA4C,EAC1D,MAAA,CAGF,GAAIC,EAAW,CACb,QAAQ,IAAI,2BAA2B,EACnC,GAAA,CAEF,IAAIxhB,GAAmC,CAAC,EACpCwiB,GAAuC,CAAC,EAexC,GAZJxiB,GAAY,OAASuc,EAGjBoF,EAAO,UACG3hB,GAAA,IAAM2hB,EAAO,QAAQ,MAAM,OAAO,UAAU,EAAG,GAAG,GAG5DC,EAAS,UACC5hB,GAAA,MAAQ4hB,EAAS,QAAQ,OAInCpM,IAAc,UAAYA,IAAc,UAAW,CAC/C,MAAAiN,KAAUtjB,EAAA0iB,EAAM,UAAN,YAAA1iB,EAAe,QAAS,GAClCujB,KAAc3iB,GAAA+hB,EAAU,UAAV,YAAA/hB,GAAmB,QAAS,GAC1C4iB,GAAW,SAAOpa,GAAAwZ,EAAY,UAAZ,YAAAxZ,GAAqB,QAAS,CAAC,EACjDqa,GAAS,SAAO3M,GAAA+L,EAAU,UAAV,YAAA/L,GAAmB,QAAS,CAAC,EAAI,KAGjD4M,GAAUJ,GAAQ,MAAM,GAAG,EAC3BK,GAASD,GAAQ,CAAC,GAAK,GACvBE,GAAYF,GAAQ,MAAM,CAAC,EAAE,KAAK,GAAG,GAAK,GAE1CG,GAAcN,GAAY,MAAM,GAAG,EACnCO,GAAaD,GAAY,CAAC,GAAK,GAC/BE,GAAgBF,GAAY,MAAM,CAAC,EAAE,KAAK,GAAG,GAAK,GAGxDhjB,GAAY,iBAAmB8iB,GAC/B9iB,GAAY,WAAa+iB,GACzB/iB,GAAY,aAAeijB,GAC3BjjB,GAAY,qBAAuBkjB,GACnCljB,GAAY,UAAY2iB,GACxB3iB,GAAY,aAAe4iB,EAAA,CAIzB,GAAApN,IAAc,eAAiBA,IAAc,UAAW,CACpD,MAAA2N,KAAoBnL,GAAAiK,EAAqB,UAArB,YAAAjK,GAA8B,QAAS,WAC3DoL,KAAcnL,GAAAiK,EAAe,UAAf,YAAAjK,GAAwB,UAAW,GACjDoL,KAAenL,GAAAiK,EAAgB,UAAhB,YAAAjK,GAAyB,UAAW,GAGzDsK,GAAgB,mBAAqBW,GACrCX,GAAgB,kBAAoB,CAClC,gBAAepK,IAAAD,GAAA+I,GAAA,YAAAA,EAAM,cAAN,YAAA/I,GAAmB,oBAAnB,YAAAC,GAAsC,gBAAiB,EACxE,EACAoK,GAAgB,yBAA2B,CACzC,aAAcY,GACd,cAAeC,EACjB,CAAA,CAIF,MAAM5iB,GAAW,CACf,QAAST,GACT,YAAawiB,EACf,EAEQ,QAAA,IAAI,8BAA+B/hB,EAAQ,EACnD,MAAMyH,EAASrH,GAAcJ,EAAQ,CAAC,EAAE,OAAO,EAC/CghB,EAAa,EAAK,EAClB,QAAQ,IAAI,iFAAiF,QACtFzT,GAAU,CACT,QAAA,MAAM,0BAA2BA,EAAG,EAC9BuT,EAAAvT,GAAI,SAAW,0BAA0B,EACvD,QAAQ,IAAI,8FAA8F,CAAA,CAC5G,MAEAyT,EAAa,EAAI,EACjB,QAAQ,IAAI,mFAAmF,CAEnG,EAGA,OAAI7S,EAECpC,EAAA,IAAA,MAAA,CAAI,UAAU,6BACb,eAAC,MAAI,CAAA,UAAU,oBACb,SAAAA,EAAA,IAAC,MAAI,CAAA,UAAU,kBAAkB,SAAA,oBAAA,CAAkB,CACrD,CAAA,EACF,EAKCqC,EAuBHrC,EAAAA,IAAC,MAAI,CAAA,UAAW,sBAAsBS,EAAS,UAAY,EAAE,GAC3D,SAAAV,OAAC,MAAI,CAAA,UAAU,oBACZ,SAAA,CAAAW,SACE,SAAO,CAAA,UAAU,eAAe,QAASA,EAAS,SAEnD,IAAA,EAEDV,EAAA,IAAA,KAAA,CAAG,UAAU,gBAAgB,SAAY,eAAA,EAEzC8U,GACC/U,EAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAC,KAAG,SAAW8U,CAAA,CAAA,QACd,SAAO,CAAA,QAAS,IAAMC,EAAc,IAAI,EAAG,SAAO,SAAA,CAAA,CAAA,EACrD,EAGFhV,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,iBACZ,SAAAmQ,KAAiBxd,EAAA+hB,GAAA,YAAAA,EAAM,UAAN,YAAA/hB,EAAe,SAAU,gBAAgB,CAC7D,CAAA,EACAoN,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAAAC,MAAC,KAAG,CAAA,UAAU,mBAAoB,UAAA0U,GAAA,YAAAA,EAAM,WAAY,iBAAiB,EACrE3U,EAAAA,KAAC,MAAI,CAAA,UAAU,iBAAiB,SAAA,CAAA,YACrBxM,EAAAmhB,GAAA,YAAAA,EAAM,UAAN,MAAAnhB,EAAe,YAAc,IAAI,MAAKwI,EAAA2Y,GAAA,YAAAA,EAAM,UAAN,YAAA3Y,EAAe,WAAW,EAAE,qBAAuB,SAAA,EACpG,QACC,MAAI,CAAA,UAAU,gBAAiB,UAAA2Y,GAAA,YAAAA,EAAM,QAAS,EAAG,CAAA,CAAA,CACpD,CAAA,CAAA,EACF,EAEA3U,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAAAC,EAAA,IAAC,SAAA,CACC,UAAW,cAAcgJ,IAAc,UAAY,SAAW,EAAE,GAChE,QAAS,IAAMC,EAAa,SAAS,EACtC,SAAA,SAAA,CAED,EACAjJ,EAAA,IAAC,SAAA,CACC,UAAW,cAAcgJ,IAAc,SAAW,SAAW,EAAE,GAC/D,QAAS,IAAMC,EAAa,QAAQ,EACrC,SAAA,aAAA,CAED,EACAjJ,EAAA,IAAC,SAAA,CACC,UAAW,cAAcgJ,IAAc,cAAgB,SAAW,EAAE,GACpE,QAAS,IAAMC,EAAa,aAAa,EAC1C,SAAA,aAAA,CAAA,CAED,EACF,EAEAlJ,EAAAA,KAAC,MAAI,CAAA,UAAU,cAEZ,SAAA,CAAAiJ,IAAc,WACbjJ,OAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAoB,sBAAA,CAAA,EAExBD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC,SAAM,SAAS,WAAA,CAAA,EAChBA,EAAAA,IAAC,OAAM,CAAA,SAAA0U,GAAA,YAAAA,EAAM,QAAS,CAAA,CAAA,EACxB,EAEA3U,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC,SAAM,SAAM,QAAA,CAAA,EACZgV,EACChV,EAAA,IAAC,QAAA,CACC,KAAK,QACL,cAAc0U,GAAA,YAAAA,EAAM,QAAS,GAC7B,UAAU,aACV,IAAKU,CAAA,CAAA,EAGPpV,EAAAA,IAAC,OAAM,CAAA,UAAA0U,GAAA,YAAAA,EAAM,QAAS,cAAe,CAAA,CAAA,EAEzC,EAEA3U,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAAAC,EAAAA,IAAC,SAAM,SAAI,MAAA,CAAA,EACVgV,EAEGjV,EAAA,KAAAoD,WAAA,CAAA,SAAA,CAAAnD,EAAA,IAAC,WAAA,CACC,eAAcyJ,EAAAiL,GAAA,YAAAA,EAAM,UAAN,YAAAjL,EAAe,MAAO,GACpC,UAAU,uBACV,IAAK0L,EACL,UAAW,IACX,YAAY,6CAAA,CACd,EACApV,EAAAA,KAAC,MAAI,CAAA,UAAU,cACZ,SAAA,GAAO0L,GAAAD,EAAA2J,EAAA,UAAA,YAAA3J,EAAS,QAAT,YAAAC,EAAgB,SAAU,EAAE,MAAA,CACtC,CAAA,CACF,CAAA,CAAA,QAEC,OAAK,CAAA,UAAU,WAAY,WAAMC,EAAAgJ,GAAA,YAAAA,EAAA,UAAA,YAAAhJ,EAAS,MAAO,iBAAkB,CAAA,CAAA,CAExE,CAAA,CAAA,EACF,EAEA3L,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAgB,kBAAA,CAAA,EACpBD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAC,EAAAA,IAAC,SAAM,SAAe,iBAAA,CAAA,EACtBD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACZ,SAAA,CAAiBoQ,KAAAxE,GAAA+I,GAAA,YAAAA,EAAM,UAAN,YAAA/I,GAAe,SAAU,gBAAgB,EAC1D3L,EAAAA,IAAA,OAAA,CAAK,UAAU,cACb,UAAM4L,GAAA8I,GAAA,YAAAA,EAAA,UAAA,MAAA9I,GAAS,QAASC,GAAA6I,GAAA,YAAAA,EAAM,UAAN,YAAA7I,GAAe,OAAO,MAAM,KAAK,IAAK5Q,GAAiBA,EAAK,OAAO,CAAC,EAAE,YAAgB,EAAAA,EAAK,MAAM,CAAC,GAAG,KAAK,KAAO,gBAC5I,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEC+Z,GACChV,EAAA,IAAC8P,GAAA,CACC,eAAAC,EACA,SAAU8F,CAAA,CAAA,CACZ,CAEJ,CAAA,CAAA,EACF,EAID7M,IAAc,UACZhJ,EAAAA,IAAA,MAAA,CAAI,UAAU,qBACb,SAAAD,EAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAkB,oBAAA,CAAA,EACtBD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC,SAAM,SAAiB,mBAAA,CAAA,EACvBgV,EACChV,EAAA,IAAC,QAAA,CACC,KAAK,OACL,aAAc,KAAG8L,GAAA4I,GAAA,YAAAA,EAAM,UAAN,YAAA5I,GAAe,mBAAoB,EAAE,MAAIC,GAAA2I,GAAA,YAAAA,EAAM,UAAN,YAAA3I,GAAe,aAAc,EAAE,GACzF,UAAU,aACV,IAAKsJ,CAAA,CAAA,SAGN,OAAM,CAAA,SAAA,EAAArJ,GAAA0I,GAAA,YAAAA,EAAM,UAAN,YAAA1I,GAAe,iBAAiB,KAAEC,GAAAyI,GAAA,YAAAA,EAAM,UAAN,YAAAzI,GAAe,UAAA,CAAW,CAAA,CAAA,EAEvE,IACC6K,GAAApC,GAAA,YAAAA,EAAM,UAAN,YAAAoC,GAAe,eACb/W,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC,SAAM,SAAa,eAAA,CAAA,EACnBgV,EACChV,EAAA,IAAC,QAAA,CACC,KAAK,OACL,aAAc,KAAG+W,GAAArC,GAAA,YAAAA,EAAM,UAAN,YAAAqC,GAAe,eAAgB,EAAE,MAAIC,GAAAtC,GAAA,YAAAA,EAAM,UAAN,YAAAsC,GAAe,uBAAwB,EAAE,GAC/F,UAAU,aACV,IAAK1B,CAAA,CAAA,SAGN,OAAM,CAAA,SAAA,EAAA2B,GAAAvC,GAAA,YAAAA,EAAM,UAAN,YAAAuC,GAAe,aAAa,KAAEC,GAAAxC,GAAA,YAAAA,EAAM,UAAN,YAAAwC,GAAe,oBAAA,CAAqB,CAAA,CAAA,EAE7E,EAEFnX,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC,SAAM,SAAU,YAAA,CAAA,EAChBgV,EACChV,EAAA,IAAC,QAAA,CACC,KAAK,SACL,eAAcmX,GAAAzC,GAAA,YAAAA,EAAM,UAAN,YAAAyC,GAAe,YAAa,EAC1C,UAAU,aACV,IAAK5B,CAAA,CAAA,EAGPvV,EAAAA,IAAC,OAAM,CAAA,UAAAoX,GAAA1C,GAAA,YAAAA,EAAM,UAAN,YAAA0C,GAAe,SAAU,CAAA,CAAA,EAEpC,EACArX,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC,SAAM,SAAa,eAAA,CAAA,EACnBgV,EACChV,EAAA,IAAC,QAAA,CACC,KAAK,SACL,gBAAeqX,GAAA3C,GAAA,YAAAA,EAAM,UAAN,YAAA2C,GAAe,eAAgB,GAAK,KACnD,UAAU,aACV,KAAK,MACL,IAAK7B,CAAA,CAAA,SAGN,OAAO,CAAA,SAAA,IAAM8B,GAAA5C,GAAA,YAAAA,EAAA,UAAA,YAAA4C,GAAS,eAAgB,GAAK,KAAK,KAAA,CAAG,CAAA,CAAA,CAExD,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAIDtO,IAAc,eACZhJ,EAAAA,IAAA,MAAA,CAAI,UAAU,0BACb,SAAAD,EAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAwB,0BAAA,CAAA,EAC5BD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC,SAAM,SAAmB,qBAAA,CAAA,EACzBgV,EACCjV,EAAA,KAAC,SAAA,CACC,eAAcwX,GAAA7C,GAAA,YAAAA,EAAM,cAAN,YAAA6C,GAAmB,qBAAsB,WACvD,UAAU,aACV,IAAK9B,EAEL,SAAA,CAACzV,EAAA,IAAA,SAAA,CAAO,MAAM,eAAe,SAAY,eAAA,EACxCA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAQ,WAAA,EAChCA,EAAA,IAAA,SAAA,CAAO,MAAM,aAAa,SAAU,aAAA,EACpCA,EAAA,IAAA,SAAA,CAAO,MAAM,uBAAuB,SAAoB,sBAAA,CAAA,CAAA,CAAA,CAAA,EAG3DA,EAAAA,IAAC,OAAM,CAAA,UAAAwX,GAAA9C,GAAA,YAAAA,EAAM,cAAN,YAAA8C,GAAmB,kBAAmB,CAAA,CAAA,EAEjD,EAEAxX,EAAAA,IAAC,MAAG,SAAwB,0BAAA,CAAA,EAC5BD,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAC,EAAAA,IAAC,SAAM,SAAa,eAAA,CAAA,EACnBgV,EACChV,EAAA,IAAC,QAAA,CACC,KAAK,WACL,iBAAgByX,IAAAC,GAAAhD,GAAA,YAAAA,EAAM,cAAN,YAAAgD,GAAmB,2BAAnB,YAAAD,GAA6C,eAAgB,GAC7E,UAAU,iBACV,IAAK/B,CAAA,CAAA,QAGN,OAAM,CAAA,UAAAiC,IAAAC,GAAAlD,GAAA,YAAAA,EAAM,cAAN,YAAAkD,GAAmB,2BAAnB,MAAAD,GAA6C,aAAe,UAAY,UAAW,CAAA,CAAA,EAE9F,EACA5X,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAC,EAAAA,IAAC,SAAM,SAAc,gBAAA,CAAA,EACpBgV,EACChV,EAAA,IAAC,QAAA,CACC,KAAK,WACL,iBAAgB6X,GAAAC,EAAApD,GAAA,YAAAA,EAAM,cAAN,YAAAoD,EAAmB,2BAAnB,YAAAD,EAA6C,gBAAiB,GAC9E,UAAU,iBACV,IAAKlC,CAAA,CAAA,QAGN,OAAM,CAAA,UAAAoC,GAAAC,EAAAtD,GAAA,YAAAA,EAAM,cAAN,YAAAsD,EAAmB,2BAAnB,MAAAD,EAA6C,cAAgB,UAAY,UAAW,CAAA,CAAA,CAE/F,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EAEJ,EAEA/X,EAAAA,IAAC,MAAI,CAAA,UAAU,kBACb,SAAAA,EAAA,IAAC,SAAA,CACC,UAAW,eAAegV,EAAY,YAAc,EAAE,GACtD,QAASe,EACT,SAAU3T,EAET,SAAAA,EAAY,gBAAkB4S,EAAY,eAAiB,cAAA,CAAA,CAEhE,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QA7QG,MAAI,CAAA,UAAU,6BACb,SAACjV,EAAA,KAAA,MAAA,CAAI,UAAU,oBACZ,SAAA,CAAAW,SACE,SAAO,CAAA,UAAU,eAAe,QAASA,EAAS,SAEnD,IAAA,EAEDV,EAAA,IAAA,KAAA,CAAG,UAAU,gBAAgB,SAAa,gBAAA,EAC1C8U,GACC/U,EAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAC,KAAG,SAAW8U,CAAA,CAAA,QACd,SAAO,CAAA,QAAS,IAAMC,EAAc,IAAI,EAAG,SAAO,SAAA,CAAA,CAAA,CACrD,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAgQN,ECvdMkD,GAAmB,IAAM,CAC7B,KAAM,CAACC,EAAgBC,CAAiB,EAAI/Y,EAAAA,SAAS,EAAK,EACpD,CAACgZ,EAAkBC,CAAmB,EAAIjZ,EAAAA,SAAS,EAAK,EACxD,CAACkZ,EAAkBC,CAAmB,EAAInZ,EAAAA,SAAS,EAAK,EACxD,CAACoZ,EAAgBC,CAAiB,EAAIrZ,EAAAA,SAAS,EAAK,EACpD,CAACsZ,EAAiBC,CAAkB,EAAIvZ,EAAAA,SAAS,EAAK,EAEtD1D,EAAW0E,GAAe,EAC1BO,EAAWC,GAAY,EACvBgY,EAActU,SAAuB,IAAI,EAEzC,CAAE,gBAAAjC,EAAiB,KAAAqS,GAASpU,EAAe9L,GAASA,EAAM,IAAI,EAGpE+K,EAAAA,UAAU,IAAM,CACd7D,EAASvH,IAAiB,CAAA,EACzB,CAACuH,CAAQ,CAAC,EAGb6D,EAAAA,UAAU,IAAM,CACR,MAAAsZ,EAAsBlV,GAAsB,CAC5CiV,EAAY,SAAW,CAACA,EAAY,QAAQ,SAASjV,EAAM,MAAc,GAC3EwU,EAAkB,EAAK,CAE3B,EAES,gBAAA,iBAAiB,YAAaU,CAAkB,EAClD,IAAM,CACF,SAAA,oBAAoB,YAAaA,CAAkB,CAC9D,CACF,EAAG,EAAE,EAEL,MAAMC,EAAe,IAAM,CACzB,QAAQ,IAAI,yDAAyD,EACrEpd,EAASxH,IAAQ,EACjByM,EAAS,QAAQ,EACjBwX,EAAkB,EAAK,EACvB,QAAQ,IAAI,kFAAkF,CAChG,EAEMY,EAAiB,IAAM,CAC3BZ,EAAkB,CAACD,CAAc,CACnC,EAEMc,EAAmB,IAAM,CAC7BX,EAAoB,CAACD,CAAgB,CACvC,EAEMa,EAAmB,IAAM,CAC7BV,EAAoB,EAAI,EACxBJ,EAAkB,EAAK,CACzB,EAEMe,EAAiB,IAAM,CAC3BT,EAAkB,EAAI,EACtBN,EAAkB,EAAK,CACzB,EAEMgB,EAAkB,IAAM,CAC5BR,EAAmB,EAAI,EACvBR,EAAkB,EAAK,CACzB,EAGMiB,EAAgB,IAChB1E,IACKA,EAAK,QAAWA,EAAK,SAAWA,EAAK,QAAQ,SAAW,iBAMjE,OAAA3U,EAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,cACb,SAAAA,EAAA,IAACqZ,IAAK,GAAG,aAAa,+BAAmB,CAC3C,CAAA,EAEAtZ,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,EAAA,KAAC,SAAO,CAAA,UAAU,qBAAqB,QAASiZ,EAC9C,SAAA,CAAAhZ,EAAA,IAAC,OAAK,EAAA,QACL,OAAK,EAAA,QACL,OAAK,CAAA,CAAA,CAAA,EACR,SAEC,KAAG,CAAA,UAAW,gBAAgBoY,EAAmB,SAAW,EAAE,GAC7D,SAAA,CAACpY,EAAA,IAAA,KAAA,CACC,SAACA,EAAAA,IAAAqZ,GAAA,CAAK,GAAG,aAAa,QAAS,IAAMhB,EAAoB,EAAK,EAAG,SAAA,WAAS,CAAA,EAC5E,EACCrY,EAAA,IAAA,KAAA,CACC,SAACA,EAAAA,IAAAqZ,GAAA,CAAK,GAAG,cAAc,QAAS,IAAMhB,EAAoB,EAAK,EAAG,SAAA,YAAU,CAAA,EAC9E,EACCrY,EAAA,IAAA,KAAA,CACC,SAACA,EAAAA,IAAAqZ,GAAA,CAAK,GAAG,WAAW,QAAS,IAAMhB,EAAoB,EAAK,EAAG,SAAA,gBAAc,CAAA,EAC/E,EACCrY,EAAA,IAAA,KAAA,CACC,SAACA,EAAAA,IAAAqZ,GAAA,CAAK,GAAG,gBAAgB,QAAS,IAAMhB,EAAoB,EAAK,EAAG,SAAA,uBAAqB,CAAA,EAC3F,EACCrY,EAAA,IAAA,KAAA,CACC,SAACA,EAAAA,IAAAqZ,GAAA,CAAK,GAAG,UAAU,QAAS,IAAMhB,EAAoB,EAAK,EAAG,SAAA,eAAa,CAAA,EAC7E,EACCrY,EAAA,IAAA,KAAA,CACC,SAACA,EAAAA,IAAAqZ,GAAA,CAAK,GAAG,iBAAiB,QAAS,IAAMhB,EAAoB,EAAK,EAAG,SAAA,sBAAA,CAAoB,CAC3F,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECtY,EAAA,KAAA,MAAA,CAAI,UAAU,iBAAiB,IAAK6Y,EACnC,SAAA,CAAC5Y,EAAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,QAAS+Y,EACrC,SAAiB5I,GAAAiJ,EAAA,CAAe,CACnC,CAAA,EAEClB,GACElY,EAAA,IAAA,MAAA,CAAI,UAAU,mBACZ,WAEGD,EAAAA,KAAAoD,EAAA,SAAA,CAAA,SAAA,CAACpD,EAAAA,KAAA,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAC,MAAC,OAAI,UAAU,kBACZ,SAAiBmQ,GAAAiJ,EAAe,CAAA,EACnC,EACArZ,EAAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAAAC,EAAA,IAAC,OAAK,CAAA,UAAU,oBAAqB,SAAA0U,GAAA,YAAAA,EAAM,SAAS,EACnD1U,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAgB,kBAAA,CAAA,CAAA,CAClD,CAAA,CAAA,EACF,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,kBAAmB,CAAA,EAClCD,EAAAA,KAAC,KAAG,CAAA,UAAU,gBACZ,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,QAASkZ,EACX,SAAA,CAACjZ,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAE,KAAA,EAAO,kBAAA,EAE3C,EACAD,EAAAA,KAAC,KAAG,CAAA,QAAS+Y,EACX,SAAA,CAAC9Y,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAE,KAAA,EAAO,QAAA,CAE3C,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EAEAD,EAAAA,KAAC,KAAG,CAAA,UAAU,gBACZ,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,QAASmZ,EACX,SAAA,CAAClZ,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAE,KAAA,EAAO,OAAA,EAE3C,EACAD,EAAAA,KAAC,KAAG,CAAA,QAASoZ,EACX,SAAA,CAACnZ,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAC,IAAA,EAAO,SAAA,CAE1C,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EAGCsY,SACEzD,GAAY,CAAA,OAAQyD,EAAkB,QAAS,IAAMC,EAAoB,EAAK,EAAG,EAGnFC,GACCxY,EAAA,IAAC0B,GAAA,CACC,OAAQ8W,EACR,QAAS,IAAMC,EAAkB,EAAK,CAAA,CACxC,EAGDC,GACC1Y,EAAA,IAACQ,GAAA,CACC,OAAQkY,EACR,QAAS,IAAMC,EAAmB,EAAK,CAAA,CAAA,CACzC,EAEJ,CAEJ,EC9KMW,GAAgC,CAAC,CAAE,SAAAra,KAAe,CACtD,MAAMqR,EAAmBhQ,EAAgB9L,GAAUA,EAAM,QAAQ,gBAAgB,EAGjF+K,EAAAA,UAAU,IAAM,CACR,MAAAga,EAAQ,SAAS,cAAc,OAAO,EAC5C,OAAAA,EAAM,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUT,SAAA,KAAK,YAAYA,CAAK,EAExB,IAAM,CACF,SAAA,KAAK,YAAYA,CAAK,CACjC,CACF,EAAG,EAAE,EAIL,MAAMC,EAAyB,IAAM,CACnC,MAAMjU,EAAiB,IAAM,CAC3B,OAAQ+K,EAAkB,CACxB,IAAK,YAAoB,MAAA,YACzB,IAAK,aAAqB,MAAA,aAC1B,IAAK,QAAgB,MAAA,QACrB,QAAgB,MAAA,cAAA,CAEpB,EAGE,OAAAvQ,EAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAAAC,EAAA,IAAC,OAAK,CAAA,UAAW,iBAAiBuF,EAAA,CAAgB,GAAI,QACrD,QAAO,CAAA,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAkCN,CAAA,CAAA,EACJ,CAEJ,EAGE,OAAAxF,EAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAC,EAAA,IAACiY,GAAO,EAAA,EAIPjY,EAAAA,IAAA,OAAA,CAAK,UAAU,eACb,SAAAf,CACH,CAAA,EAGCua,EAAuB,QAEvB,SAAO,CAAA,UAAU,SAChB,SAACzZ,EAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,IAAA,CAAE,UAAU,cACX,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,mBAAmB,SAAmB,sBAAA,EAAO,iBAAeA,EAAA,IAAA,OAAA,CAAK,UAAU,mBAAmB,SAAc,iBAAA,EAAO,cAAA,EACrI,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,oBAAoB,SAEjC,oHAAA,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAEJ,ECnGMyZ,GAAQ,CAAC,CACb,OAAAhZ,EACA,QAAAC,EACA,MAAAhH,EACA,SAAAuF,EACA,KAAAyH,EAAO,SACP,UAAAgT,EAAY,EACd,IAAkB,CACV,MAAAC,EAAWrV,SAAuB,IAAI,EACtC,CAACsV,EAAYC,CAAa,EAAIza,EAAAA,SAAS,EAAK,EAC5C,CAAC0a,EAAUC,CAAW,EAAI3a,EAAA,SAAS,CAAE,EAAG,EAAG,EAAG,EAAG,EACjD,CAAC4a,EAAYC,CAAa,EAAI7a,EAAA,SAAS,CAAE,EAAG,EAAG,EAAG,EAAG,EAErD8a,EAAmB9Y,GAAwC,CAC3D,CAACsY,GAAa,CAACC,EAAS,UAC5BE,EAAc,EAAI,EACJI,EAAA,CACZ,EAAG7Y,EAAE,QAAU0Y,EAAS,EACxB,EAAG1Y,EAAE,QAAU0Y,EAAS,CAAA,CACzB,EACH,EAEMK,EAAmB/Y,GAAkB,CACzC,GAAI,CAACwY,GAAc,CAACD,EAAS,QAAS,OAChC,MAAAS,EAAOhZ,EAAE,QAAU4Y,EAAW,EAC9BK,EAAOjZ,EAAE,QAAU4Y,EAAW,EACpCD,EAAY,CAAE,EAAGK,EAAM,EAAGC,EAAM,CAClC,EAEMC,EAAgB,IAAM,CAC1BT,EAAc,EAAK,CACrB,EAiBI,GAfJta,EAAAA,UAAU,KACJqa,GACO,SAAA,iBAAiB,YAAaO,CAAe,EAC7C,SAAA,iBAAiB,UAAWG,CAAa,IAEzC,SAAA,oBAAoB,YAAaH,CAAe,EAChD,SAAA,oBAAoB,UAAWG,CAAa,GAGhD,IAAM,CACF,SAAA,oBAAoB,YAAaH,CAAe,EAChD,SAAA,oBAAoB,UAAWG,CAAa,CACvD,GACC,CAACV,EAAYI,CAAU,CAAC,EAEvB,CAACvZ,EAAe,OAAA,KAIpB,MAAM8Z,EACHva,MAAA,MAAA,CAAI,UAAU,gBAAgB,QAASU,EACtC,SAAAX,EAAA,KAAC,MAAA,CACC,IAAK4Z,EACL,UAAW,iBAAiBjT,CAAI,IAAIgT,EAAY,YAAc,EAAE,GAChE,QAAUtY,GAAMA,EAAE,gBAAgB,EAClC,YAAa8Y,EAEb,SAAA,CAACna,EAAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAAAC,EAAAA,IAAC,MAAI,SAAMtG,CAAA,CAAA,QACV,SAAO,CAAA,UAAU,eAAe,QAASgH,EAAS,SAEnD,GAAA,CAAA,CAAA,EACF,EACCV,EAAAA,IAAA,MAAA,CAAI,UAAU,aACZ,SAAAf,CACH,CAAA,CAAA,CAAA,CAAA,EAEJ,EAIF,OAAOub,GAAS,aACdD,EACA,SAAS,IACX,CACF,ECnDME,GAA+C,CACnD,KAAM,GACN,YAAa,GACb,UAAW,SACX,SAAU,CACR,aAAc,GACd,gBAAiB,GACjB,cAAe,GACf,iBAAkB,GAClB,iBAAkB,GAElB,YAAa,SACb,uBAAwB,GACxB,iBAAkB,CAChB,aAAc,GACd,YAAa,EACf,EACA,gBAAiB,UACjB,oBAAqB,CACnB,oBAAqB,GACrB,oBAAqB,GACrB,eAAgB,EAClB,EACA,aAAc,UAAA,CAElB,EAEaC,GAAiC,IAAM,CAClD,MAAMhf,EAAW0E,GAAe,EAC1B,CAAE,SAAAua,EAAU,QAAA1V,EAAS,MAAA1S,CAAA,EAAU+N,EAAgB9L,GAAUA,EAAM,YAAY,EAC3E,CAAComB,EAAaC,CAAc,EAAIzb,EAAAA,SAAS,EAAK,EAC9C,CAAChM,EAAUyN,CAAW,EAAIzB,EAAAA,SAAsCqb,EAAe,EAC/E,CAACK,EAAWC,CAAY,EAAI3b,EAAAA,SAAwB,IAAI,EACxD,CAAC4b,EAAYC,CAAa,EAAI7b,EAAAA,SAAiB,EAAE,EACjD,CAAC4J,EAAWC,CAAY,EAAI7J,EAAAA,SAA+B,OAAO,EAElE8b,EAAc,CAClB,mEACA,kFACA,2FACA,qEACA,4HACA,iEACA,oFACA,gFACF,EAEA3b,EAAAA,UAAU,IAAM,CACd7D,EAASkB,IAA2B,EACtBqe,EAAAC,EAAY,KAAK,MAAM,KAAK,SAAWA,EAAY,MAAM,CAAC,CAAC,CAAA,EACxE,CAACxf,CAAQ,CAAC,EAEP,MAAAyf,EAA8BC,GAAmD,CACrF,MAAMC,EAAW,CAAE,GAAGZ,GAAiB,UAAAW,CAA4B,EAEnE,OAAOA,EAAW,CAChB,IAAK,SACI,MAAA,CACL,GAAGC,EACH,KAAM,iBACN,YAAa,2CACb,SAAU,CACR,GAAGA,EAAS,SACZ,aAAc,GACd,gBAAiB,GACjB,cAAe,GACf,iBAAkB,GAClB,YAAa,OACb,uBAAwB,GACxB,iBAAkB,CAChB,aAAc,GACd,YAAa,EACf,EACA,gBAAiB,QACjB,oBAAqB,CACnB,oBAAqB,GACrB,oBAAqB,GACrB,eAAgB,EAClB,EACA,aAAc,aAAA,CAElB,EAEF,IAAK,WACI,MAAA,CACL,GAAGA,EACH,KAAM,uBACN,YAAa,0EACb,SAAU,CACR,GAAGA,EAAS,SACZ,aAAc,GACd,gBAAiB,GACjB,cAAe,GACf,iBAAkB,GAClB,YAAa,OACb,uBAAwB,GACxB,iBAAkB,CAChB,aAAc,GACd,YAAa,EACf,EACA,gBAAiB,QACjB,oBAAqB,CACnB,oBAAqB,GACrB,oBAAqB,GACrB,eAAgB,EAClB,EACA,aAAc,aAAA,CAElB,EAEF,IAAK,cACI,MAAA,CACL,GAAGA,EACH,KAAM,0BACN,YAAa,+CACb,SAAU,CACR,GAAGA,EAAS,SACZ,aAAc,GACd,gBAAiB,GACjB,cAAe,GACf,iBAAkB,GAClB,YAAa,SACb,uBAAwB,GACxB,iBAAkB,CAChB,aAAc,GACd,YAAa,EACf,EACA,gBAAiB,UACjB,oBAAqB,CACnB,oBAAqB,GACrB,oBAAqB,GACrB,eAAgB,EAClB,EACA,aAAc,UAAA,CAElB,EAEF,IAAK,SACI,MAAA,CACL,GAAGA,EACH,KAAM,sBACN,YAAa,qDACb,SAAU,CACR,GAAGA,EAAS,SACZ,aAAc,GACd,gBAAiB,GACjB,cAAe,GACf,iBAAkB,GAClB,YAAa,SACb,uBAAwB,GACxB,iBAAkB,CAChB,aAAc,GACd,YAAa,EACf,EACA,gBAAiB,UACjB,oBAAqB,CACnB,oBAAqB,GACrB,oBAAqB,GACrB,eAAgB,EAClB,EACA,aAAc,UAAA,CAElB,EAEF,IAAK,WACI,MAAA,CACL,GAAGA,EACH,KAAM,eACN,YAAa,+CACb,SAAU,CACR,GAAGA,EAAS,SACZ,aAAc,GACd,gBAAiB,GACjB,cAAe,GACf,iBAAkB,GAClB,YAAa,MACb,uBAAwB,GACxB,iBAAkB,CAChB,aAAc,GACd,YAAa,EACf,EACA,gBAAiB,YACjB,oBAAqB,CACnB,oBAAqB,GACrB,oBAAqB,GACrB,eAAgB,EAClB,EACA,aAAc,WAAA,CAElB,EAEF,QACS,OAAAZ,EAAA,CAEb,EAEMa,EAAqBla,GAAqF,CAC9G,KAAM,CAAE,KAAAjL,EAAM,MAAAC,CAAM,EAAIgL,EAAE,OAE1B,GAAIjL,IAAS,YAAa,CAElB,MAAAolB,EAAcJ,EAA2B/kB,CAAK,EACpDyK,EAAY0a,CAAW,EACvB,MAAA,CAGF1a,EAAY,CAAE,GAAGzN,EAAU,CAAC+C,CAAI,EAAGC,EAAO,CAC5C,EAEMolB,EAAuBpa,GAA+D,CAC1F,KAAM,CAAE,KAAAjL,EAAM,MAAAC,EAAO,KAAAqE,GAAS2G,EAAE,OAC1ByQ,EAAUpX,IAAS,WAAc2G,EAAE,OAA4B,QAAU,OAG3E,GAAAjL,EAAK,SAAS,GAAG,EAAG,CACtB,KAAM,CAACslB,EAAUC,CAAO,EAAIvlB,EAAK,MAAM,GAAG,EACpCwlB,EAAgBvoB,EAAS,SAASqoB,CAA0C,EAC9EE,GAAiB,OAAOA,GAAkB,UAAY,CAAC,MAAM,QAAQA,CAAa,EACxE9a,EAAA,CACV,GAAGzN,EACH,SAAU,CACR,GAAGA,EAAS,SACZ,CAACqoB,CAAQ,EAAG,CACV,GAAGE,EACH,CAACD,CAAO,EAAGjhB,IAAS,WAAaoX,EACvBpX,IAAS,UAAYtE,EAAK,SAAS,WAAW,GAAKA,IAAS,yBACxD,OAAOC,CAAK,EACZA,CAAA,CAChB,CACF,CACD,EAGWyK,EAAA,CACV,GAAGzN,EACH,SAAU,CACR,GAAGA,EAAS,SACZ,CAAC+C,CAAI,EAAGsE,IAAS,WAAaoX,EACtBpX,IAAS,UAAYtE,EAAK,SAAS,WAAW,GAAKA,IAAS,yBACxD,OAAOC,CAAK,EACZA,CAAA,CACd,CACD,CACH,MAEYyK,EAAA,CACV,GAAGzN,EACH,SAAU,CACR,GAAGA,EAAS,SACZ,CAAC+C,CAAI,EAAGsE,IAAS,WAAaoX,EACtBpX,IAAS,UAAYtE,EAAK,SAAS,WAAW,GAAKA,IAAS,yBAC5D,OAAOC,CAAK,EAAIA,CAAA,CAC1B,CACD,CAEL,EAEMkL,EAAe,IAAM,CAEvB5F,EADEof,EACOhe,GAA0B,CAAE,GAAIge,EAAW,GAAG1nB,CAAA,CAAU,EAExDyJ,GAA0BzJ,CAAQ,CAFuB,EAIpEynB,EAAe,EAAK,EACpBha,EAAY4Z,EAAe,EAC3BM,EAAa,IAAI,EACHE,EAAAC,EAAY,KAAK,MAAM,KAAK,SAAWA,EAAY,MAAM,CAAC,CAAC,CAC3E,EAEMU,EAAc1e,GAAiB,CAEnC,MAAM2e,EAAmB,CACvB,KAAM3e,EAAQ,KACd,YAAaA,EAAQ,YACrB,UAAWA,EAAQ,WAAa,SAChC,SAAU,CACR,aAAcA,EAAQ,SAAS,cAAgB,GAC/C,gBAAiBA,EAAQ,SAAS,iBAAmB,GACrD,cAAeA,EAAQ,SAAS,eAAiB,GACjD,iBAAkBA,EAAQ,SAAS,kBAAoB,GACvD,iBAAkBA,EAAQ,SAAS,kBAAoB,GACvD,YAAaA,EAAQ,SAAS,aAAe,SAC7C,uBAAwBA,EAAQ,SAAS,wBAA0B,GACnE,iBAAkBA,EAAQ,SAAS,kBAAoB,CACrD,aAAc,GACd,YAAa,EACf,EACA,gBAAiBA,EAAQ,SAAS,iBAAmB,UACrD,oBAAqBA,EAAQ,SAAS,qBAAuB,CAC3D,oBAAqB,GACrB,oBAAqB,GACrB,eAAgB,EAClB,EACA,aAAcA,EAAQ,SAAS,cAAgB,UAAA,CAEnD,EAEA2D,EAAYgb,CAAgB,EAC5Bd,EAAa7d,EAAQ,EAAE,EACvB2d,EAAe,EAAI,EACnB5R,EAAa,OAAO,CACtB,EAEMqK,EAAgBhc,GAAe,CAC/B,OAAO,QAAQ,kKAAkK,IAC1KoE,EAAAqB,GAA0BzF,CAAE,CAAC,EACtC2jB,EAAc,8FAA8F,EAEhH,EAEMa,EAAkBxkB,GAAe,CAC5BoE,EAAAsB,GAA4B1F,CAAE,CAAC,EACxC2jB,EAAc,uEAAuE,CACvF,EAEMc,EAAkB,IAAM,CAC5Blb,EAAY4Z,EAAe,EAC3BM,EAAa,IAAI,EACjBF,EAAe,EAAI,EACnB5R,EAAa,OAAO,CACtB,EAEA,OAAIhE,EACMjF,EAAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAAqE,wEAAA,EAG7GzN,EAEAwN,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAmC,qCAAA,CAAA,EACvCA,EAAAA,IAAC,KAAG,SAAMzN,CAAA,CAAA,EACVyN,MAAC,UAAO,QAAS,IAAMtE,EAASkB,GAA2B,CAAA,EAAG,SAE9D,0CAAA,CAAA,CAAA,EACF,EAKFmD,EAAA,KAAC,MAAI,CAAA,UAAU,kCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAqB,uBAAA,CAAA,EACxBA,EAAA,IAAA,MAAA,CAAI,UAAU,cAAe,SAAWgb,EAAA,EACxCjb,EAAA,KAAA,SAAA,CAAO,UAAU,wBAAwB,QAASgc,EACjD,SAAA,CAAC/b,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAC,IAAA,EAC/BA,EAAAA,IAAC,QAAK,SAAwB,0BAAA,CAAA,CAAA,CAChC,CAAA,CAAA,EACF,EAECA,MAAA,MAAA,CAAI,UAAU,gBACZ,YAAY2a,EAAS,OAAS,EAC7BA,EAAS,IAAKzd,GACX6C,EAAA,KAAA,MAAA,CAAqB,UAAU,eAC9B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAACC,EAAAA,IAAA,KAAA,CAAI,WAAQ,IAAK,CAAA,EAClBD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACZ,SAAA,CAAA7C,EAAQ,WAAa8C,EAAAA,IAAC,OAAK,CAAA,UAAU,eAAe,SAAM,SAAA,EAC1D9C,EAAQ,WAAa8C,EAAAA,IAAC,OAAK,CAAA,UAAW,cAAc9C,EAAQ,SAAS,GAAK,SAAAA,EAAQ,SAAU,CAAA,CAAA,CAC/F,CAAA,CAAA,EACF,EACC8C,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAuB,WAAQ,YAAY,EAExDD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAa,gBAAA,EAC7CA,MAAC,QAAK,UAAU,gBACb,WAAQ,SAAS,YAChB9C,EAAQ,SAAS,YAAY,OAAO,CAAC,EAAE,cAAgBA,EAAQ,SAAS,YAAY,MAAM,CAAC,EAC3F,QACJ,CAAA,CAAA,EACF,EACA6C,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAc,iBAAA,EAC9CD,EAAAA,KAAC,OAAK,CAAA,UAAU,gBAAiB,SAAA,CAAA7C,EAAQ,SAAS,aAAa,GAAA,CAAC,CAAA,CAAA,EAClE,EACA6C,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAiB,oBAAA,EACjDD,EAAAA,KAAC,OAAK,CAAA,UAAU,gBAAiB,SAAA,CAAA7C,EAAQ,SAAS,gBAAgB,GAAA,CAAC,CAAA,CAAA,EACrE,EACA6C,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAiB,oBAAA,EACjDA,MAAC,QAAK,UAAU,gBACb,WAAQ,SAAS,gBAChB9C,EAAQ,SAAS,gBAAgB,OAAO,CAAC,EAAE,cAAgBA,EAAQ,SAAS,gBAAgB,MAAM,CAAC,EACnG,UACJ,CAAA,CAAA,EACF,EACA6C,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAc,iBAAA,EAC9CA,MAAC,QAAK,UAAU,gBACb,WAAQ,SAAS,aAChB9C,EAAQ,SAAS,aAAa,OAAO,CAAC,EAAE,cAAgBA,EAAQ,SAAS,aAAa,MAAM,CAAC,EAC7F,UACJ,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEA6C,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACZ,SAAA,CAAA,CAAC7C,EAAQ,WACP8C,EAAAA,IAAA,SAAA,CAAO,UAAU,kBAAkB,QAAS,IAAM8b,EAAe5e,EAAQ,EAAE,EAAG,SAE/E,UAAA,CAAA,EAEF8C,EAAAA,IAAC,UAAO,UAAU,cAAc,QAAS,IAAM4b,EAAW1e,CAAO,EAAG,SAEpE,MAAA,CAAA,EACA8C,EAAAA,IAAC,SAAO,CAAA,UAAU,gBAAgB,QAAS,IAAMsT,EAAapW,EAAQ,EAAE,EAAG,SAE3E,QAAA,CAAA,CAAA,CACF,CAAA,CAAA,GAzDQA,EAAQ,EA0DlB,CACD,EAEA6C,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAAqD,uDAAA,CAAA,EACxDA,EAAAA,IAAC,KAAE,SAAqE,uEAAA,CAAA,CAAA,CAAA,CAC1E,CAEJ,CAAA,EAEAA,EAAA,IAACyZ,GAAA,CACC,OAAQmB,EACR,QAAS,IAAMC,EAAe,EAAK,EACnC,MAAOC,EAAY,qBAAuB,uBAC1C,KAAK,SAEL,SAAA/a,EAAA,KAAC,MAAI,CAAA,UAAU,eAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAA,IAAC,SAAA,CACC,UAAW,cAAcgJ,IAAc,QAAU,SAAW,EAAE,GAC9D,QAAS,IAAMC,EAAa,OAAO,EACpC,SAAA,YAAA,CAED,EACAjJ,EAAA,IAAC,SAAA,CACC,UAAW,cAAcgJ,IAAc,WAAa,SAAW,EAAE,GACjE,QAAS,IAAMC,EAAa,UAAU,EACvC,SAAA,mBAAA,CAAA,CAED,EACF,EAECD,IAAc,SACZjJ,OAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,YAAY,SAAa,gBAAA,EACxCD,EAAA,KAAC,SAAA,CACC,GAAG,YACH,KAAK,YACL,MAAO3M,EAAS,UAChB,SAAUkoB,EAEV,SAAA,CAACtb,EAAA,IAAA,SAAA,CAAO,MAAM,SAAS,SAAM,SAAA,EAC5BA,EAAA,IAAA,SAAA,CAAO,MAAM,SAAS,SAAM,SAAA,EAC5BA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAa,gBAAA,EACrCA,EAAA,IAAA,SAAA,CAAO,MAAM,cAAc,SAAW,cAAA,EACtCA,EAAA,IAAA,SAAA,CAAO,MAAM,SAAS,SAAW,cAAA,EACjCA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAY,cAAA,CAAA,CAAA,CAAA,CACvC,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,YAAY,SAA6C,+CAAA,CAAA,CAAA,EACxE,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,OAAO,SAAa,gBAAA,EACnCA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,OACH,KAAK,OACL,MAAO5M,EAAS,KAChB,SAAUkoB,EACV,YAAY,oCAAA,CAAA,CACd,EACF,EAEAvb,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,cAAc,SAAY,eAAA,EACzCA,EAAA,IAAC,WAAA,CACC,GAAG,cACH,KAAK,cACL,MAAO5M,EAAS,YAChB,SAAUkoB,EACV,YAAY,mDAAA,CAAA,CACd,EACF,EAEAvb,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAkB,oBAAA,CAAA,EACtBD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,QAAQ,eAAe,SAAA,CAAA,kBAAgB3M,EAAS,SAAS,aAAa,GAAA,EAAC,EAC9E4M,EAAA,IAAC,QAAA,CACC,KAAK,QACL,GAAG,eACH,KAAK,eACL,IAAI,KACJ,IAAI,KACJ,MAAO5M,EAAS,SAAS,aACzB,SAAUooB,CAAA,CACZ,EACCxb,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAAiE,mEAAA,CAAA,CAAA,EACtG,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,QAAQ,kBAAkB,SAAA,CAAA,qBAAmB3M,EAAS,SAAS,gBAAgB,GAAA,EAAC,EACvF4M,EAAA,IAAC,QAAA,CACC,KAAK,QACL,GAAG,kBACH,KAAK,kBACL,IAAI,KACJ,IAAI,KACJ,MAAO5M,EAAS,SAAS,gBACzB,SAAUooB,CAAA,CACZ,EACbxb,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAAqD,uDAAA,CAAA,CAAA,EAC5E,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,QAAQ,gBAAgB,SAAA,CAAA,mBAAiB3M,EAAS,SAAS,cAAc,GAAA,EAAC,EACjF4M,EAAA,IAAC,QAAA,CACC,KAAK,QACL,GAAG,gBACH,KAAK,gBACL,IAAI,KACJ,IAAI,KACJ,MAAO5M,EAAS,SAAS,cACzB,SAAUooB,CAAA,CACZ,EACCxb,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAAyD,2DAAA,CAAA,CAAA,EAC9F,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,QAAQ,mBAAmB,SAAA,CAAA,sBAAoB3M,EAAS,SAAS,iBAAiB,GAAA,EAAC,EAC1F4M,EAAA,IAAC,QAAA,CACC,KAAK,QACL,GAAG,mBACH,KAAK,mBACL,IAAI,KACJ,IAAI,KACJ,MAAO5M,EAAS,SAAS,iBACzB,SAAUooB,CAAA,CACZ,EACCxb,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAAqD,uDAAA,CAAA,CAAA,CAC1F,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAA,OAAC,QACC,CAAA,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,KAAK,WACL,KAAK,mBACL,QAAS5M,EAAS,SAAS,iBAC3B,SAAUooB,CAAA,CACZ,EAAE,iEAAA,EAEJ,EACCxb,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAAiF,mFAAA,CAAA,CAAA,CACtH,CAAA,CAAA,EACF,EAGDgJ,IAAc,YACZjJ,OAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAY,cAAA,CAAA,EAChBD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,cAAc,SAAa,gBAAA,EAC1CD,EAAA,KAAC,SAAA,CACC,GAAG,cACH,KAAK,cACL,MAAO3M,EAAS,SAAS,YACzB,SAAUooB,EAEV,SAAA,CAACxb,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAkB,qBAAA,EACrCA,EAAA,IAAA,SAAA,CAAO,MAAM,SAAS,SAAiB,oBAAA,EACvCA,EAAA,IAAA,SAAA,CAAO,MAAM,OAAO,SAAkB,oBAAA,CAAA,CAAA,CAAA,CAAA,CACzC,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,QAAQ,yBAAyB,SAAA,CAAA,6BAA2B3M,EAAS,SAAS,sBAAA,EAAuB,EAC5G4M,EAAA,IAAC,QAAA,CACC,KAAK,QACL,GAAG,yBACH,KAAK,yBACL,IAAI,IACJ,IAAI,KACJ,MAAO5M,EAAS,SAAS,uBACzB,SAAUooB,CAAA,CACZ,EACCxb,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAA8C,gDAAA,CAAA,CAAA,CACnF,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAiB,mBAAA,CAAA,EACrBD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,QAAQ,gCAAgC,SAAA,CAAA,iBAAe3M,EAAS,SAAS,iBAAiB,aAAa,GAAA,EAAC,EAC/G4M,EAAA,IAAC,QAAA,CACC,KAAK,QACL,GAAG,gCACH,KAAK,gCACL,IAAI,KACJ,IAAI,KACJ,MAAO5M,EAAS,SAAS,iBAAiB,aAC1C,SAAUooB,CAAA,CACZ,EACCxb,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAAiD,mDAAA,CAAA,CAAA,EACtF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,QAAQ,+BAA+B,SAAA,CAAA,iBAAe3M,EAAS,SAAS,iBAAiB,YAAY,GAAA,EAAC,EAC7G4M,EAAA,IAAC,QAAA,CACC,KAAK,QACL,SAAQ,GACR,GAAG,+BACH,KAAK,+BACL,IAAI,KACJ,IAAI,KACJ,MAAO5M,EAAS,SAAS,iBAAiB,WAAA,CAC5C,EACC4M,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAA8C,gDAAA,CAAA,CAAA,CACnF,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAgB,kBAAA,CAAA,EACpBD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,kBAAkB,SAAsB,yBAAA,EACvDD,EAAA,KAAC,SAAA,CACC,GAAG,kBACH,KAAK,kBACL,MAAO3M,EAAS,SAAS,gBACzB,SAAUooB,EAEV,SAAA,CAACxb,EAAA,IAAA,SAAA,CAAO,MAAM,QAAQ,SAA2B,8BAAA,EAChDA,EAAA,IAAA,SAAA,CAAO,MAAM,UAAU,SAAiB,oBAAA,EACxCA,EAAA,IAAA,SAAA,CAAO,MAAM,YAAY,SAAkC,oCAAA,CAAA,CAAA,CAAA,CAAA,CAC9D,CACF,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAoB,sBAAA,CAAA,EACxBD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAA,OAAC,QACC,CAAA,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,KAAK,WACL,KAAK,0CACL,QAAS5M,EAAS,SAAS,oBAAoB,oBAC/C,SAAUooB,CAAA,CACZ,EAAE,8BAAA,EAEJ,EACCxb,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAA4C,8CAAA,CAAA,CAAA,EACjF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAA,OAAC,QACC,CAAA,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,KAAK,WACL,KAAK,0CACL,QAAS5M,EAAS,SAAS,oBAAoB,oBAC/C,SAAUooB,CAAA,CACZ,EAAE,sBAAA,EAEJ,EACCxb,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAA0C,4CAAA,CAAA,CAAA,EAC/E,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAA,OAAC,QACC,CAAA,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,KAAK,WACL,KAAK,qCACL,QAAS5M,EAAS,SAAS,oBAAoB,eAC/C,SAAUooB,CAAA,CACZ,EAAE,kBAAA,EAEJ,EACCxb,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAA+C,iDAAA,CAAA,CAAA,CACpF,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAgB,kBAAA,CAAA,EACpBD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,eAAe,SAAc,iBAAA,EAC5CD,EAAA,KAAC,SAAA,CACC,GAAG,eACH,KAAK,eACL,MAAO3M,EAAS,SAAS,aACzB,SAAUooB,EAEV,SAAA,CAACxb,EAAA,IAAA,SAAA,CAAO,MAAM,cAAc,SAA2B,8BAAA,EACtDA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAkB,qBAAA,EAC1CA,EAAA,IAAA,SAAA,CAAO,MAAM,YAAY,SAA8B,gCAAA,CAAA,CAAA,CAAA,CAAA,CAC1D,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGFD,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAAAC,EAAA,IAAC,SAAA,CACC,UAAU,gBACV,QAAS,IAAM6a,EAAe,EAAK,EACnC,KAAK,SACN,SAAA,QAAA,CAED,EACA7a,EAAA,IAAC,SAAA,CACC,UAAU,gBACV,QAASsB,EACT,KAAK,SAEJ,WAAY,iBAAmB,gBAAA,CAAA,CAClC,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EACF,CAEJ,ECjuBM9H,GAAc,wBAEdwiB,GAAW,iBAYXvB,GAAuC,CAC3C,MAAO,GACP,QAAS,GACT,SAAU,SACV,QAAS,GACT,gBAAiB,CAAC,EAClB,WAAY,GACZ,WAAY,EACd,EAEawB,GAAyB,IAAM,CAC1C,MAAMvgB,EAAW0E,GAAe,EAC1BO,EAAWC,GAAY,EACvB,CAAE,OAAA3L,EAAQ,QAAAgQ,EAAS,MAAA1S,EAAO,cAAAygB,GAAkB1S,EAAgB9L,IACxD,QAAA,IAAI,wBAAyBA,EAAM,YAAY,EAChDA,EAAM,aACd,EACK,CAAComB,EAAaC,CAAc,EAAIzb,EAAAA,SAAS,EAAK,EAC9C,CAAC8c,EAAmBC,CAAoB,EAAI/c,EAAAA,SAAS,EAAK,EAC1D,CAACgd,EAAoBC,CAAqB,EAAIjd,EAAAA,SAAS,EAAK,EAC5D,CAACkd,EAAwBC,CAAyB,EAAInd,EAAAA,SAAc,IAAI,EACxE,CAACod,EAAqBC,CAAsB,EAAIrd,EAAAA,SAAc,IAAI,EAClE,CAAChM,EAAUyN,CAAW,EAAIzB,EAAAA,SAA8Bqb,EAAe,EACvE,CAACiC,EAAaC,CAAc,EAAIvd,EAAAA,SAAiB,EAAE,EACnD,CAACwd,EAAWC,CAAY,EAAIzd,EAAAA,SAAiB,EAAE,EAC/C,CAAC0d,EAAcC,CAAe,EAAI3d,EAAAA,SAAc,IAAI,EACpD,CAAC+T,EAAgBC,CAAiB,EAAIhU,EAAAA,SAAS,EAAK,EACpD,CAAC6T,EAAiBC,CAAkB,EAAI9T,EAAAA,SAAwB,IAAI,EACpE,CAAC4d,EAAeC,CAAgB,EAAI7d,WAAS,CACjD,SAAU,MACV,YAAa,MACb,cAAe,MACf,WAAY,KAAA,CACb,EAEK8d,EAAe,CACnB,yEACA,oFACA,sEACA,iFACA,kFACF,EAEA3d,EAAAA,UAAU,IAAM,CACd,QAAQ,IAAI,mEAAmE,EAC/E7D,EAAS7D,GAAkB,CAAE,KAAM,EAAG,MAAO,GAAI,QAAS,MAAA,CAAW,CAAC,EACnE,KAAMmL,GAAW,CACR,QAAA,IAAI,8BAA+BA,CAAM,CAAA,CAClD,EACA,MAAOzQ,GAAU,CACR,QAAA,MAAM,6BAA8BA,CAAK,EACjDsqB,EAAa,gBAAgB,KAAK,UAAUtqB,CAAK,CAAC,EAAE,CAAA,CACrD,EACYoqB,EAAAO,EAAa,KAAK,MAAM,KAAK,SAAWA,EAAa,MAAM,CAAC,CAAC,EAGnDC,GAAA,CAAA,EACxB,CAACzhB,CAAQ,CAAC,EAEP,MAAA4f,EAAqBla,GAAqF,CAC9G,KAAM,CAAE,KAAAjL,EAAM,MAAAC,CAAM,EAAIgL,EAAE,OAC1BP,EAAY,CAAE,GAAGzN,EAAU,CAAC+C,CAAI,EAAGC,EAAO,CAC5C,EAEMkL,EAAe,IAAM,CACzB5F,EAASzD,GAAkB7E,CAAQ,CAAC,EACjC,KAAe4P,GAAA,CACN,QAAA,IAAI,8BAA+BA,CAAM,EACjD6X,EAAe,EAAK,EACpBha,EAAY4Z,EAAe,EACZkC,EAAAO,EAAa,KAAK,MAAM,KAAK,SAAWA,EAAa,MAAM,CAAC,CAAC,CAAA,CAC7E,EACA,MAAM3qB,GAAS,CACN,QAAA,MAAM,wBAAyBA,CAAK,EAC5CsqB,EAAa,iBAAiB,KAAK,UAAUtqB,CAAK,CAAC,EAAE,CAAA,CACtD,CACL,EAEM8gB,GAAmB,CAAC/b,EAAY8J,IAAyB,CACzDA,KAAK,gBAAgB,EACzB1F,EAASvD,GAAgBb,CAAE,CAAC,EACzB,KAAe0L,GAAA,CACN,QAAA,IAAI,wBAAyBA,CAAM,CAAA,CAC5C,EACA,MAAMzQ,GAAS,CACN,QAAA,MAAM,+BAAgCA,CAAK,CAAA,CACpD,CACL,EAEM+gB,GAAe,CAAChc,EAAY8J,IAAyB,CACrDA,KAAK,gBAAgB,EACrB,OAAO,QAAQ,0IAA0I,GAC3J1F,EAASrD,GAAkBf,CAAE,CAAC,EAC3B,KAAe0L,GAAA,CACN,QAAA,IAAI,8BAA+BA,CAAM,EACjD2Z,EAAe,iEAAiE,CAAA,CACjF,EACA,MAAMpqB,GAAS,CACN,QAAA,MAAM,wBAAyBA,CAAK,CAAA,CAC7C,CAEP,EAEQ6qB,GAAqB5kB,GAAe,CAKxC,GAJQ,QAAA,IAAI,6BAA8BA,CAAK,EAC/C+jB,EAA0B/jB,CAAK,EAG3BA,EAAM,iBAAmBA,EAAM,gBAAgB,WAAY,CACvD,MAAA6kB,EAAa7kB,EAAM,gBAAgB,YAEzC,OAAQ6kB,EAAY,CAClB,IAAK,uBACHlB,EAAqB,EAAI,EACzB,MACF,IAAK,eAEHxb,EAAS,YAAY,EACrB,MACF,QACU,QAAA,IAAI,uBAAwB0c,CAAU,CAAA,CAClD,CAEJ,EAGMC,GAA8B9kB,GAAe,CAC7CA,EAAM,iBAAmBA,EAAM,gBAAgB,eACjDikB,EAAuBjkB,CAAK,EAC5B6jB,EAAsB,EAAI,EAE9B,EAGMhgB,GAAsB,SAAY,CACtC,GAAI,CAACigB,GAA0B,CAACA,EAAuB,gBAAiB,OAElE,MAAAiB,EAAqBjB,EAAuB,gBAAgB,oBAClE,GAAI,CAACiB,EAAoB,CACvB,QAAQ,MAAM,uCAAuC,EACrD,MAAA,CAGE,GAAA,CAMI,MAAA/qB,EAAW,MAAMJ,EAAM,KAC3B,GAAGoH,EAAW,wCACd,CAAE,kBAAmB,CAAoB,CAC3C,EAMI,GAJI,QAAA,IAAI,0BAA2BhH,EAAS,IAAI,EACpDuqB,EAAgBvqB,EAAS,IAAI,EAGzBA,EAAS,KAAK,QAAS,CACzB,MAAM2I,EAAe,CACnB,UAAWoiB,EAAmB,UAC9B,UAAWA,EAAmB,cAC9B,UAAWA,EAAmB,kBAC9B,OAAQA,EAAmB,MAC7B,EAEWhiB,GAAA,4BAA4BJ,EAAc,EAAI,CAAA,KACpD,CACL,MAAMA,EAAe,CACnB,UAAWoiB,EAAmB,UAC9B,UAAWA,EAAmB,cAC9B,UAAWA,EAAmB,kBAC9B,OAAQ,gCACV,EAEWhiB,GAAA,4BAA4BJ,EAAc,EAAK,CAAA,CAInDO,EAAAvD,GAAgBmkB,EAAuB,EAAE,CAAC,EAGnDH,EAAqB,EAAK,QAEnB5pB,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,EACrDwqB,EAAgB,CAAE,QAAS,GAAO,MAAO,iCAAkC,CAAA,CAE/E,EAGMI,GAA2B,SAAY,CACvC,GAAA,CAGF,MAAMpoB,GADkB,MAAM3C,EAAM,IAAI,GAAGoH,EAAW,iCAAiC,GACvD,KAG5BzE,EAAQ,UAAY,IACtBwG,GAAW,+BAA+B,YAAaxG,EAAQ,UAAW,EAAE,EAG1EA,EAAQ,aAAe,IACzBwG,GAAW,+BAA+B,eAAgBxG,EAAQ,aAAc,EAAE,EAKpF,MAAM6G,GAD0B,MAAMxJ,EAAM,IAAI,GAAGoH,EAAW,iCAAiC,GAC/C,KAG5CoC,GAAmBA,EAAgB,OAAS,GACnCL,GAAA,8BAA8BK,EAAgB,CAAC,CAAC,EAK7D,MAAMH,IADmB,MAAMrJ,EAAM,IAAI,GAAGoH,EAAW,0BAA0B,GAC/C,KAG9BiC,IAAYA,GAAS,mBAAqBA,GAAS,kBAAkB,OAAS,GAChFF,GAAW,uBAAuBE,GAAS,kBAAkB,CAAC,CAAC,QAG1DlJ,EAAO,CACN,QAAA,MAAM,uCAAwCA,CAAK,CAAA,CAE/D,EAEMirB,GAAsB,IAAM,CAC5B,OAAO,QAAQ,kFAAkF,GACnG9hB,EAAStD,GAAqB,CAAA,EAC3B,KAAe4K,GAAA,CACN,QAAA,IAAI,6BAA8BA,CAAM,EAChD2Z,EAAe,8DAA8D,CAAA,CAC9E,EACA,MAAMpqB,GAAS,CACN,QAAA,MAAM,oCAAqCA,CAAK,CAAA,CACzD,CAEP,EAGMghB,GAAwB,CAACjc,EAAY8J,IAAwB,CACjEA,EAAE,gBAAgB,EACT1F,EAAAzC,GAAqB3B,CAAE,CAAC,CACnC,EAEMkc,GAAkB,IAAM,CAC5B9X,EAASxC,IAAiB,CAC5B,EAEMua,GAAoB,IAAM,CAC9B/X,EAASvC,IAAmB,CAC9B,EAEMua,GAAuB,IAAM,CAC7B,OAAO,QAAQ,kEAAkEV,CAAa,iFAAiF,IACjLtX,EAAStC,IAAsB,EAC/BujB,EAAe,0EAA0E,EAE7F,EAEMhJ,GAA4Blb,GAAqE,CAC5FiD,EAAArC,GAAiCZ,CAAM,CAAC,EACjD2a,EAAkB,EAAK,EACvBuJ,EAAe,+EAA+ElkB,EAAO,QAAQ,IAAK,GAAG,CAAC,GAAG,CAC3H,EAEMmb,GAA2B,IAAM,CACrClY,EAASpC,IAA0B,EACnCqjB,EAAe,kEAAkE,CACnF,EAEM9I,GAAoBvc,GAAe,CAErC4b,EADED,IAAoB3b,EACH,KAEAA,CAFI,CAI3B,EAGMmmB,GAAqB,CAACC,EAAoBtnB,IAAkB,CAC/C6mB,EAAA,CACf,GAAGD,EACH,CAACU,CAAU,EAAGtnB,CAAA,CACf,CACH,EAEMunB,GAAoB,IACnB1oB,EAEEA,EAAO,OAAQuD,GAAe,CAenC,GAbIwkB,EAAc,WAAa,OAASxkB,EAAM,WAAawkB,EAAc,UAKrEA,EAAc,cAAgB,QAAU,CAACxkB,EAAM,SAG/CwkB,EAAc,cAAgB,UAAYxkB,EAAM,SAKhDwkB,EAAc,gBAAkB,OAChCxkB,EAAM,gBAAkBwkB,EAAc,eACtC,EAAEA,EAAc,gBAAkB,QAAU,CAACxkB,EAAM,eAC9C,MAAA,GAIL,GAAAwkB,EAAc,aAAe,MAAO,CACtC,MAAMY,EAAY,IAAI,KAAKplB,EAAM,SAAS,EACpCtD,MAAU,KAEZ,GAAA8nB,EAAc,aAAe,QAAS,CAClC,MAAAa,EAAQ,IAAI,KAAK3oB,EAAI,YAAA,EAAeA,EAAI,SAAS,EAAGA,EAAI,SAAS,EACnE,GAAA0oB,EAAYC,EAAc,MAAA,EAAA,SACrBb,EAAc,aAAe,YAAa,CACnD,MAAMc,EAAY,IAAI,KAAK5oB,EAAI,YAAY,EAAGA,EAAI,WAAYA,EAAI,QAAQ,EAAI,CAAC,EACzE6oB,EAAY,IAAI,KAAK7oB,EAAI,YAAY,EAAGA,EAAI,WAAYA,EAAI,QAAQ,EAAI,CAAC,EAC/E,GAAI0oB,EAAYG,GAAaH,GAAaE,EAAkB,MAAA,EAAA,SACnDd,EAAc,aAAe,YAAa,CACnD,MAAMgB,EAAc,IAAI,KAAK9oB,EAAI,cAAeA,EAAI,SAAS,EAAGA,EAAI,QAAY,EAAAA,EAAI,QAAQ,EACxF,GAAA0oB,EAAYI,EAAoB,MAAA,EAAA,SAC3BhB,EAAc,aAAe,aAAc,CAC9C,MAAAiB,EAAe,IAAI,KAAK/oB,EAAI,cAAeA,EAAI,SAAS,EAAG,CAAC,EAC9D,GAAA0oB,EAAYK,EAAqB,MAAA,EAAA,CACvC,CAGK,MAAA,EAAA,CACR,EA7CmB,CAAC,EA+CjBjK,GAAwBvb,GAAoB,CAChD,OAAQA,EAAQ,CACd,IAAK,WACI,MAAA,WACT,IAAK,eACI,MAAA,eACT,IAAK,kBACI,MAAA,kBACT,QACS,MAAA,WAAA,CAEb,EAEMwb,GAAcC,GACX,IAAI,KAAKA,CAAU,EAAE,eAAe,EAGvCH,GAAoBna,GAAqB,CACrC,OAAAA,EAAS,YAAe,EAAA,CAC9B,IAAK,WACI,MAAA,WACT,IAAK,OACI,MAAA,OACT,IAAK,SACI,MAAA,SACT,IAAK,MACI,MAAA,MACT,QACS,MAAA,EAAA,CAEb,EAGMskB,GAAoB,SAAY,CAChC,GAAA,CACF,MAAM1rB,EAAW,MAAMJ,EAAM,IAAI,GAAGoH,EAAW,mBAAmB,EAClEqjB,EAAa,8BAA8B,KAAK,UAAUrqB,EAAS,IAAI,CAAC,EAAE,QACnED,EAAY,CACNsqB,EAAA,0BAA0BtqB,EAAM,OAAO,EAAE,CAAA,CAE1D,EAGM4rB,GAAqB,SAAY,CACjC,GAAA,CACF,MAAM3rB,EAAW,MAAMJ,EAAM,KAAK,GAAGoH,EAAW,kBAAmB,CACjE,SAAU,WACV,SAAU,cAAA,CACX,EACG,OAAAhH,EAAS,KAAK,cAChB,aAAa,QAAQ,QAASA,EAAS,KAAK,YAAY,EACxDqqB,EAAa,sCAAsC,EAC5C,IAEF,SACAtqB,EAAY,CACN,OAAAsqB,EAAA,iBAAiBtqB,EAAM,OAAO,EAAE,EACtC,EAAA,CAEX,EAEMwpB,GAAkB,IAAM,CAC5Blb,EAAY4Z,EAAe,EAC3BI,EAAe,EAAI,CACrB,EAEA,OAAI5V,EACMjF,EAAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAA+D,kEAAA,EAGvGzN,EAEAwN,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAqE,uEAAA,CAAA,EACzEA,EAAAA,IAAC,KAAG,SAAMzN,CAAA,CAAA,EACVwN,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAAgB,kBAAA,CAAA,SAClB,KACC,CAAA,SAAA,CAAAA,EAAAA,IAAC,MAAG,SAA8C,gDAAA,CAAA,EAClDA,EAAAA,IAAC,MAAG,SAAiC,mCAAA,CAAA,EACrCA,EAAAA,IAAC,MAAG,SAA2C,6CAAA,CAAA,CAAA,CACjD,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAAW,aAAA,CAAA,SACb,IAAE,CAAA,SAAA,CAAA,iBAAe,aAAa,QAAQ,OAAO,EAAI,MAAQ,IAAA,EAAK,SAC9D,IAAE,CAAA,SAAA,CAAA,gBAAcxG,EAAA,EAAY,SAC5B,IAAE,CAAA,SAAA,CAAA,aAAWwiB,EAAA,EAAS,SACtB,IAAE,CAAA,SAAA,CAAA,yBAAuB,GAAGxiB,EAAW,OAAOwiB,EAAQ,EAAA,EAAG,SACzD,IAAE,CAAA,SAAA,CAAA,wBAAsB,OAAOA,EAAQ,EAAA,EAAG,EAC3Chc,EAAAA,IAAC,KAAG,SAAU4c,CAAA,CAAA,EACd5c,EAAAA,IAAC4Q,GAAO,QAAQ,QAAQ,KAAK,KAAK,QAASsN,GAAmB,SAAmB,qBAAA,CAAA,CAAA,EACnF,EACAne,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAC,EAAA,IAAC4Q,EAAA,CACC,QAAQ,UACR,QAAS,IAAMlV,EAAS7D,GAAkB,CAAE,KAAM,EAAG,MAAO,GAAI,QAAS,MAAW,CAAA,CAAC,EACtF,SAAA,6CAAA,CAED,EACAmI,EAAA,IAAC4Q,EAAA,CACC,QAAQ,SACR,QAAS,SAAY,CACH,MAAMuN,GAAmB,GACnBziB,EAAA7D,GAAkB,CAAE,KAAM,EAAG,MAAO,GAAI,QAAS,MAAW,CAAA,CAAC,CACrF,EACD,SAAA,6BAAA,CAED,EACAmI,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,QAAS,IAAMjQ,EAAS,QAAQ,EACjC,SAAA,wBAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EAKFZ,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAa,eAAA,CAAA,EACjBA,EAAAA,IAAC,OAAI,UAAU,sBACb,eAAC4P,GAAoB,CAAA,UAAU,aAAc,CAAA,CAC/C,CAAA,CAAA,EACF,EACC5P,EAAA,IAAA,MAAA,CAAI,UAAU,eAAgB,SAAY0c,EAAA,EAC3C3c,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAC,EAAA,IAAC4Q,EAAA,CACC,QAAQ,SACR,QAASmL,GACT,SAAS,KACT,KAAI,GACL,SAAA,kBAAA,CAED,EACC9mB,GAAUA,EAAO,OAAS,GAAKA,EAAO,KAAMuD,GAAe,CAACA,EAAM,OAAO,GACxEwH,EAAA,IAAC4Q,EAAA,CACC,QAAQ,UACR,QAAS4M,GACT,SAAS,IACT,KAAI,GACL,SAAA,kBAAA,CAAA,CAED,CAEJ,CAAA,CAAA,EACF,EAGAzd,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAY,eAAA,QACvC,MAAI,CAAA,UAAU,aAAc,UAAA/K,GAAA,YAAAA,EAAQ,SAAU,CAAE,CAAA,CAAA,EACnD,EACA8K,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAM,SAAA,EACjCA,EAAAA,IAAA,MAAA,CAAI,UAAU,aAAc,UAAQ/K,GAAA,YAAAA,EAAA,OAAQuD,GAAe,CAACA,EAAM,SAAS,SAAU,CAAE,CAAA,CAAA,EAC1F,EACAuH,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAQ,WAAA,EACnCA,EAAA,IAAA,MAAA,CAAI,UAAU,aAAc,UAAQ/K,GAAA,YAAAA,EAAA,OAAQuD,GAAeA,EAAM,WAAa,YAAY,SAAU,CAAE,CAAA,CAAA,EACzG,EACAuH,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAU,aAAA,EACrCA,EAAA,IAAA,MAAA,CAAI,UAAU,aAAc,2BAAQ,OAAQxH,GAAeA,EAAM,iBAAmBA,EAAM,gBAAgB,YAAY,SAAU,CAAE,CAAA,CAAA,CACrI,CAAA,CAAA,EACF,EAGAuH,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAAAC,EAAAA,IAAC,SAAM,SAAS,WAAA,CAAA,EAChBD,EAAA,KAAC,SAAA,CACC,MAAOid,EAAc,SACrB,SAAW5b,GAAMqc,GAAmB,WAAYrc,EAAE,OAAO,KAAK,EAE9D,SAAA,CAACpB,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAG,MAAA,EACtBA,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAG,MAAA,EACtBA,EAAA,IAAA,SAAA,CAAO,MAAM,SAAS,SAAM,SAAA,EAC5BA,EAAA,IAAA,SAAA,CAAO,MAAM,OAAO,SAAI,OAAA,EACxBA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAQ,UAAA,CAAA,CAAA,CAAA,CAAA,CACnC,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAAAC,EAAAA,IAAC,SAAM,SAAO,SAAA,CAAA,EACdD,EAAA,KAAC,SAAA,CACC,MAAOid,EAAc,YACrB,SAAW5b,GAAMqc,GAAmB,cAAerc,EAAE,OAAO,KAAK,EAEjE,SAAA,CAACpB,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAG,MAAA,EACtBA,EAAA,IAAA,SAAA,CAAO,MAAM,OAAO,SAAI,OAAA,EACxBA,EAAA,IAAA,SAAA,CAAO,MAAM,SAAS,SAAM,QAAA,CAAA,CAAA,CAAA,CAAA,CAC/B,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAAAC,EAAAA,IAAC,SAAM,SAAc,gBAAA,CAAA,EACrBD,EAAA,KAAC,SAAA,CACC,MAAOid,EAAc,cACrB,SAAW5b,GAAMqc,GAAmB,gBAAiBrc,EAAE,OAAO,KAAK,EAEnE,SAAA,CAACpB,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAG,MAAA,EACtBA,EAAA,IAAA,SAAA,CAAO,MAAM,OAAO,SAAS,YAAA,EAC7BA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAQ,WAAA,EAChCA,EAAA,IAAA,SAAA,CAAO,MAAM,eAAe,SAAY,eAAA,EACxCA,EAAA,IAAA,SAAA,CAAO,MAAM,kBAAkB,SAAY,cAAA,CAAA,CAAA,CAAA,CAAA,CAC9C,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAAAC,EAAAA,IAAC,SAAM,SAAK,OAAA,CAAA,EACZD,EAAA,KAAC,SAAA,CACC,MAAOid,EAAc,WACrB,SAAW5b,GAAMqc,GAAmB,aAAcrc,EAAE,OAAO,KAAK,EAEhE,SAAA,CAACpB,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAQ,WAAA,EAC3BA,EAAA,IAAA,SAAA,CAAO,MAAM,QAAQ,SAAK,QAAA,EAC1BA,EAAA,IAAA,SAAA,CAAO,MAAM,YAAY,SAAS,YAAA,EAClCA,EAAA,IAAA,SAAA,CAAO,MAAM,YAAY,SAAS,YAAA,EAClCA,EAAA,IAAA,SAAA,CAAO,MAAM,aAAa,SAAU,YAAA,CAAA,CAAA,CAAA,CAAA,CACvC,EACF,EACAA,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,KAAK,KACL,QAAS,IAAMqM,EAAiB,CAC9B,SAAU,MACV,YAAa,MACb,cAAe,MACf,WAAY,KAAA,CACb,EACD,SAAS,KACV,SAAA,eAAA,CAAA,CAED,EACF,EAGCjK,EAAgB,GACdjT,OAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,iBAAkB,SAAA,CAAAiT,EAAc,WAAA,EAAS,EACzDjT,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC4Q,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAASgD,GACT,SAAS,IACV,SAAA,uBAAA,CAED,EACA5T,EAAA,IAAC4Q,EAAA,CACC,QAAQ,SACR,KAAK,KACL,QAAS8C,GACT,SAAS,MACV,SAAA,iBAAA,CAED,EACA3T,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAC,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,KAAK,KACL,QAAS,IAAMwC,EAAkB,CAACD,CAAc,EAChD,SAAS,KACV,SAAA,YAAA,CAED,EACCA,GACCpT,EAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAAAC,EAAA,IAAC4Q,EAAO,CAAA,QAAQ,UAAU,KAAK,KAAK,QAAS,IAAM+C,GAAyB,UAAU,EAAG,UAAS,GAAC,SAAQ,WAAA,EAC1G3T,EAAA,IAAA4Q,EAAA,CAAO,QAAQ,SAAS,KAAK,KAAK,QAAS,IAAM+C,GAAyB,cAAc,EAAG,UAAS,GAAC,SAAY,eAAA,EACjH3T,EAAA,IAAA4Q,EAAA,CAAO,QAAQ,UAAU,KAAK,KAAK,QAAS,IAAM+C,GAAyB,iBAAiB,EAAG,UAAS,GAAC,SAAY,eAAA,EACrH3T,EAAA,IAAA4Q,EAAA,CAAO,QAAQ,YAAY,KAAK,KAAK,QAAS,IAAM+C,GAAyB,MAAM,EAAG,UAAS,GAAC,SAAS,WAAA,CAAA,CAAA,CAC5G,CAAA,CAAA,EAEJ,EACA3T,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,KAAK,KACL,QAAS6C,GACT,SAAS,IACV,SAAA,cAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EAGFzT,EAAAA,IAAC,MAAI,CAAA,UAAU,cACZ,SAAA2d,GAAA,EAAoB,OAAS,EAC5BA,GAAA,EAAoB,IAClBnlB,GAAAuH,EAAA,KAAC,MAAA,CAEC,UAAW,cAAevH,EAAM,QAAqB,OAAX,QAAiB,IAAIA,EAAM,SAAW,WAAa,EAAE,IAAIya,IAAoBza,EAAM,GAAK,WAAa,EAAE,GACjJ,QAAS,IAAMqb,GAAiBrb,EAAM,EAAE,EAExC,SAAA,CAACwH,EAAAA,IAAA,MAAA,CAAI,UAAU,kBACb,SAAAA,EAAA,IAAC,QAAA,CACC,KAAK,WACL,QAASxH,EAAM,UAAY,GAC3B,SAAW4I,GAAMmS,GAAsB/a,EAAM,GAAI4I,EAAE,WAA0C,EAC7F,QAAUA,GAAMA,EAAE,gBAAgB,CAAA,CAAA,EAEtC,EAEArB,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAW,sBAAsB+T,GAAiBvb,EAAM,QAAQ,CAAC,GACnE,SAAAA,EAAM,QACT,CAAA,EACAwH,EAAAA,IAAC,KAAI,CAAA,SAAAxH,EAAM,KAAM,CAAA,EAChB,CAACA,EAAM,eAAY,OAAK,CAAA,UAAU,eAAe,SAAG,MAAA,EACpDA,EAAM,eACJwH,EAAA,IAAA,OAAA,CAAK,UAAW,uBAAuBxH,EAAM,aAAa,GACxD,SAAAwb,GAAqBxb,EAAM,aAAa,CAC3C,CAAA,CAAA,EAEJ,QAEC,MAAI,CAAA,UAAU,kBACZ,SAAWyb,GAAAzb,EAAM,SAAS,EAC7B,EAECwH,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAiB,WAAM,QAAQ,EAE3CiT,IAAoBza,EAAM,IACxBuH,EAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAO,SAAA,CAAA,EACbD,EAAA,KAAC,SAAA,CACC,MAAOvH,EAAM,eAAiB,OAC9B,SAAW4I,GAAM,CACf1F,EAAS1C,GAAwB,CAC/B,GAAIR,EAAM,GACV,OAAQ4I,EAAE,OAAO,KAAA,CAClB,CAAC,EACFA,EAAE,gBAAgB,CACpB,EACA,QAAUA,GAAMA,EAAE,gBAAgB,EAElC,SAAA,CAACpB,EAAA,IAAA,SAAA,CAAO,MAAM,OAAO,SAAS,YAAA,EAC7BA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAQ,WAAA,EAChCA,EAAA,IAAA,SAAA,CAAO,MAAM,eAAe,SAAY,eAAA,EACxCA,EAAA,IAAA,SAAA,CAAO,MAAM,kBAAkB,SAAY,cAAA,CAAA,CAAA,CAAA,CAAA,CAC9C,CACF,CAAA,CAAA,EAEJ,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACZ,SAAA,CAAA,CAACvH,EAAM,SACNwH,EAAA,IAAC4Q,EAAA,CACC,QAAQ,UACR,KAAK,KACL,OAAM,GACN,QAAUxP,GAAMiS,GAAiB7a,EAAM,GAAI4I,CAAC,EAC5C,MAAM,eACP,SAAA,GAAA,CAED,EAED5I,EAAM,iBAAmBA,EAAM,gBAAgB,YAC9CwH,EAAA,IAAC4Q,EAAA,CACC,QAAQ,QACR,KAAK,KACL,OAAM,GACN,QAAUxP,GAAM,CAAEA,EAAE,gBAAgB,EAAGgc,GAAkB5kB,CAAK,CAAG,EACjE,MAAOA,EAAM,gBAAgB,cAAgB,uBAAyB,QAAU,OACjF,SAAA,GAAA,CAED,EAEDA,EAAM,iBAAmBA,EAAM,gBAAgB,cAC9CwH,EAAA,IAAC4Q,EAAA,CACC,QAAQ,UACR,KAAK,KACL,OAAM,GACN,QAAUxP,GAAM,CAAEA,EAAE,gBAAgB,EAAGkc,GAA2B9kB,CAAK,CAAG,EAC1E,MAAM,eACP,SAAA,IAAA,CAED,EAEFwH,EAAA,IAAC4Q,EAAA,CACC,QAAQ,SACR,KAAK,KACL,OAAM,GACN,QAAUxP,GAAMkS,GAAa9a,EAAM,GAAI4I,CAAC,EACxC,MAAM,SACP,SAAA,GAAA,CAAA,CAED,CACF,CAAA,CAAA,CAAA,EAnGK5I,EAAM,EAAA,CAqGd,EAEAuH,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAAqC,uCAAA,CAAA,EACxCA,EAAAA,IAAC,KAAE,SAAuD,yDAAA,CAAA,CAAA,CAAA,CAC5D,CAEJ,CAAA,EAEAA,EAAAA,IAAC,MAAI,CAAA,UAAU,gBACb,SAAAA,EAAA,IAAC4Q,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS4C,GACV,SAAA,YAAA,CAAA,EAGH,EAGAxT,EAAA,IAACyZ,GAAA,CACC,OAAQmB,EACR,QAAS,IAAMC,EAAe,EAAK,EACnC,MAAM,sBACN,KAAK,SAEL,SAAA9a,EAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,aACb,eAAC4P,GAAoB,CAAA,UAAU,oBAAoB,CACrD,CAAA,EACC5P,EAAA,IAAA,IAAA,CAAE,UAAU,oBAAoB,SAEjC,sGAAA,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,QAAQ,SAAY,eAAA,EACnCA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,QACH,KAAK,QACL,MAAO5M,EAAS,MAChB,SAAUkoB,EACV,YAAY,uBACZ,SAAQ,EAAA,CAAA,CACV,EACF,EAEAvb,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,UAAU,SAAc,iBAAA,EACvCA,EAAA,IAAC,WAAA,CACC,GAAG,UACH,KAAK,UACL,MAAO5M,EAAS,QAChB,SAAUkoB,EACV,YAAY,gCACZ,SAAQ,EAAA,CAAA,CACV,EACF,EAEAvb,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,WAAW,SAAe,kBAAA,EACzCD,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,GAAG,WACH,KAAK,WACL,MAAO3M,EAAS,SAChB,SAAUkoB,EAEV,SAAA,CAACtb,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAwB,2BAAA,EAC3CA,EAAA,IAAA,SAAA,CAAO,MAAM,SAAS,SAA2B,8BAAA,EACjDA,EAAA,IAAA,SAAA,CAAO,MAAM,OAAO,SAA2B,8BAAA,EAC/CA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAyB,2BAAA,CAAA,CAAA,CAAA,CACpD,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAW,oBAAoB+T,GAAiB3gB,EAAS,QAAQ,CAAC,GACpE,SAAAA,EAAS,QACZ,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEA2M,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAAAC,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,QAAS,IAAMiK,EAAe,EAAK,EACnC,SAAS,IACV,SAAA,QAAA,CAED,EACA7a,EAAA,IAAC4Q,EAAA,CACC,QAAQ,SACR,QAAStP,EACT,SAAU,CAAClO,EAAS,OAAS,CAACA,EAAS,QACvC,SAAS,KACT,KAAI,GACL,SAAA,cAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EAGA4M,EAAA,IAACyZ,GAAA,CACC,OAAQyC,EACR,QAAS,IAAMC,EAAqB,EAAK,EACzC,MAAM,8BACN,KAAK,SAEJ,SACCG,GAAAvc,OAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,aACb,eAAC4P,GAAoB,CAAA,UAAU,oBAAoB,CACrD,CAAA,EACC5P,EAAA,IAAA,IAAA,CAAE,UAAU,oBAAoB,SAEjC,sFAAA,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACC,EAAAA,IAAA,KAAA,CAAI,WAAuB,KAAM,CAAA,EAClCA,EAAAA,IAAC,IAAG,CAAA,SAAAsc,EAAuB,OAAQ,CAAA,EAElCA,EAAuB,iBACrBvc,OAAA,MAAA,CAAI,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAU,aAAA,QACvC,OAAK,CAAA,UAAU,cAAe,SAAAsc,EAAuB,gBAAgB,SAAU,CAAA,CAAA,EAClF,EAEAvc,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAc,iBAAA,QAC3C,OAAK,CAAA,UAAU,cAAe,SAAAsc,EAAuB,gBAAgB,aAAc,CAAA,CAAA,EACtF,EAEAvc,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAkB,qBAAA,QAC/C,OAAK,CAAA,UAAU,cAAe,SAAAsc,EAAuB,gBAAgB,iBAAkB,CAAA,CAAA,EAC1F,EAEAvc,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAW,cAAA,EACzCD,EAAAA,KAAC,OAAK,CAAA,UAAU,cACZ,SAAA,EAAAuc,EAAuB,gBAAgB,WAAa,KAAK,QAAQ,CAAC,EAAE,GAAA,CACxE,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGDQ,UACE,MAAI,CAAA,UAAW,iBAAiBA,EAAa,QAAU,UAAY,OAAO,GACzE,SAAA,CAAA9c,EAAA,IAAC,KAAI,CAAA,SAAA8c,EAAa,QAAU,WAAa,UAAU,EACnD9c,EAAAA,IAAC,KAAG,SAAa8c,EAAA,QACb,+CACA,UAAUA,EAAa,OAAS,eAAe,EAAG,CAAA,CAAA,CACxD,CAAA,CAAA,EAEJ,EAEA/c,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAAAC,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,QAAS,IAAMuL,EAAqB,EAAK,EACzC,SAAS,IACV,SAAA,QAAA,CAED,EACAnc,EAAA,IAAC4Q,EAAA,CACC,QAAQ,QACR,QAASvU,GACT,SAAU,CAAC,CAACygB,EACZ,SAAS,IACT,KAAI,GACL,SAAA,sBAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,EAGA9c,EAAA,IAACyZ,GAAA,CACC,OAAQ2C,EACR,QAAS,IAAMC,EAAsB,EAAK,EAC1C,MAAM,0BACN,KAAK,QAEJ,SACCG,GAAAzc,OAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,aACb,eAAC4P,GAAoB,CAAA,UAAU,oBAAoB,CACrD,CAAA,EACC5P,EAAA,IAAA,IAAA,CAAE,UAAU,oBAAoB,SAEjC,qFAAA,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACf,SAAA,CAACC,EAAAA,IAAA,KAAA,CAAI,WAAoB,KAAM,CAAA,EAC/BA,EAAAA,IAAC,IAAG,CAAA,SAAAwc,EAAoB,OAAQ,CAAA,EAE/BA,EAAoB,iBAAmBA,EAAoB,gBAAgB,cACzEzc,OAAA,MAAA,CAAI,UAAU,wBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAqB,uBAAA,CAAA,EACzBD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAI,MAAA,CAAA,EACVA,EAAAA,IAAC,QAAK,SAAG,KAAA,CAAA,EACTA,EAAAA,IAAC,QAAK,SAAG,KAAA,CAAA,EACTA,EAAAA,IAAC,QAAK,SAAG,KAAA,CAAA,EACTA,EAAAA,IAAC,QAAK,SAAE,IAAA,CAAA,CAAA,EACV,EACCA,EAAA,IAAA,MAAA,CAAI,UAAU,gBACZ,WAAoB,gBAAgB,aAAa,QAChDwc,EAAoB,gBAAgB,aAAa,OAAO,IAAI,CAAC3U,EAAejP,IAC1EoH,EAAA,IAAC,MAAA,CAEC,UAAU,YACV,MAAO,CAAE,OAAQ,GAAG6H,CAAK,GAAI,EAC7B,MAAO,UAAUA,CAAK,GAAA,EAHjBjP,CAKR,CAAA,EAEL,QACC,MAAI,CAAA,UAAU,eACb,SAACoH,EAAA,IAAA,OAAA,CAAK,eAAI,CAAA,CACZ,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAW,cAAA,EACxCD,EAAAA,KAAC,OAAK,CAAA,UAAU,aACZ,SAAA,EAAAyc,EAAoB,gBAAgB,aAAa,WAAa,KAAK,QAAQ,CAAC,EAAE,GAAA,CAClF,CAAA,CAAA,EACF,EACAzc,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAY,eAAA,EACzCD,EAAAA,KAAC,OAAK,CAAA,UAAU,aACb,SAAA,CAAAyc,EAAoB,gBAAgB,aAAa,YAAY,UAAA,CAChE,CAAA,CAAA,EACF,EACAzc,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAe,kBAAA,EAC5CA,EAAAA,IAAC,QAAK,UAAU,aACb,YAAWwc,EAAoB,gBAAgB,aAAa,cAAc,CAC7E,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,EAEAzc,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAAAC,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,QAAS,IAAMyL,EAAsB,EAAK,EAC1C,SAAS,IACV,SAAA,OAAA,CAED,EACArc,EAAA,IAAC4Q,EAAA,CACC,QAAQ,QACR,QAAS,IAAM,CACbjQ,EAAS,UAAU,EACnB0b,EAAsB,EAAK,CAC7B,EACA,SAAS,KACT,KAAI,GACL,SAAA,mBAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAEJ,EACF,CAEJ,ECzgCM5B,GAA+C,CACnD,KAAM,GACN,YAAa,GACb,YAAa,SACb,SAAU,CAAA,CACZ,EAEM2D,GAA6B3jB,GAAiB,CAClD,OAAQA,EAAM,CACZ,IAAK,UACI,MAAA,CACL,YAAa,CAAC,UAAW,SAAS,EAClC,SAAU,GACV,iBAAkB,GAClB,oBAAqB,WACrB,gBAAiB,OACjB,0BAA2B,GAC3B,gBAAiB,OACjB,qBAAsB,CACpB,UAAW,GACX,UAAW,GACX,SAAU,GACV,MAAO,EAAA,CAEX,EACF,IAAK,SACI,MAAA,CACL,cAAe,WACf,yBAA0B,GAC1B,gBAAiB,SACjB,kBAAmB,QACnB,sBAAuB,SACvB,sBAAuB,SACvB,sBAAuB,GACvB,mBAAoB,QACtB,EACF,IAAK,WACI,MAAA,CACL,eAAgB,OAChB,aAAc,GACd,yBAA0B,GAC1B,iBAAkB,QAClB,8BAA+B,GAC/B,sBAAuB,MACvB,oBAAqB,OACrB,oBAAqB,QACvB,EACF,IAAK,cACI,MAAA,CACL,aAAc,cACd,mBAAoB,GACpB,iBAAkB,GAClB,qBAAsB,WACtB,uBAAwB,GACxB,4BAA6B,WAC7B,sBAAuB,GACvB,iBAAkB,EACpB,EACF,QACE,MAAO,CAAC,CAAA,CAEd,EAEa4jB,GAAgC,IAAM,CACjD,MAAM3iB,EAAW0E,GAAe,EAC1B,CAAE,eAAAke,EAAgB,QAAArZ,EAAS,MAAA1S,CAAA,EAAU+N,EAAgB9L,GAAUA,EAAM,aAAa,EAClF,CAAComB,EAAaC,CAAc,EAAIzb,EAAAA,SAAS,EAAK,EAC9C,CAAChM,EAAUyN,CAAW,EAAIzB,EAAAA,SAAsCqb,EAAe,EAC/E,CAACK,EAAWC,CAAY,EAAI3b,EAAAA,SAAwB,IAAI,EACxD,CAAC6B,EAAiBC,CAAkB,EAAI9B,EAAAA,SAAiB,EAAE,EAC3D,CAACmf,EAAcC,CAAe,EAAIpf,EAAAA,SAAiB,KAAK,EAExDqf,EAAmB,CACvB,gFACA,oEACA,+EACA,+EACA,kFACA,2FACA,uFACA,4FACA,iFACF,EACAlf,EAAAA,UAAU,IAAM,CACd,QAAQ,IAAI,uCAAuC,EACnD7D,EAAS4B,GAA0B,CAAE,CAAA,CAAC,EACnC,KAAM0F,GAAW,CACR,QAAA,IAAI,mCAAoCA,CAAM,CAAA,CACvD,EACA,MAAOzQ,GAAU,CACR,QAAA,MAAM,iCAAkCA,CAAK,CAAA,CACtD,CAAA,EACF,CAACmJ,CAAQ,CAAC,EAEb6D,EAAAA,UAAU,IAAM,CACL7D,EAAA4B,GAA0B,CAAA,CAAE,CAAC,EACnB4D,EAAAud,EAAiB,KAAK,MAAM,KAAK,SAAWA,EAAiB,MAAM,CAAC,CAAC,CAAA,EACvF,CAAC/iB,EAAU+iB,CAAgB,CAAC,EAEzB,MAAAnD,EAAqBla,GAAqF,CAC9G,KAAM,CAAE,KAAAjL,EAAM,MAAAC,CAAM,EAAIgL,EAAE,OAGZP,EADV1K,IAAS,cACC,CACV,GAAG/C,EACH,YAAagD,EACb,SAAUgoB,GAA0BhoB,CAAK,CAAA,EAG/B,CAAE,GAAGhD,EAAU,CAAC+C,CAAI,EAAGC,EAFlC,CAIL,EAEMolB,EAAsB,CAAChH,EAAape,IAAe,CACnD,GAAAoe,EAAI,SAAS,GAAG,EAAG,CACrB,KAAM,CAACiH,EAAUC,CAAO,EAAIlH,EAAI,MAAM,GAAG,EAC7B3T,EAAA,CACV,GAAGzN,EACH,SAAU,CACR,GAAGA,EAAS,SACZ,CAACqoB,CAAQ,EAAG,CACV,GAAGroB,EAAS,SAASqoB,CAAQ,EAC7B,CAACC,CAAO,EAAG,OAAOtlB,GAAU,UAAY,CAAC,MAAM,OAAOA,CAAK,CAAC,EAAI,OAAOA,CAAK,EAAIA,CAAA,CAClF,CACF,CACD,CAAA,MAEWyK,EAAA,CACV,GAAGzN,EACH,SAAU,CACR,GAAGA,EAAS,SACZ,CAACohB,CAAG,EAAgCpe,CAAQ,CAC9C,CACD,CAEL,EAEMkL,EAAe,IAAM,CAEvB5F,EADEof,EACOjd,GAA0B,CAAE,GAAIid,EAAW,GAAG1nB,CAAA,CAAU,EAExDuK,GAA0BvK,CAAQ,CAFuB,EAIpEynB,EAAe,EAAK,EACpBha,EAAY4Z,EAAe,EAC3BM,EAAa,IAAI,EACE7Z,EAAAud,EAAiB,KAAK,MAAM,KAAK,SAAWA,EAAiB,MAAM,CAAC,CAAC,CAC1F,EAEM7C,EAAcvpB,GAAgB,CACtBwO,EAAA,CACV,KAAMxO,EAAO,KACb,YAAaA,EAAO,YACpB,YAAaA,EAAO,YACpB,SAAUA,EAAO,QAAA,CAClB,EACD0oB,EAAa1oB,EAAO,EAAE,EACtBwoB,EAAe,EAAI,CACrB,EAEMvH,EAAgBhc,GAAe,CAC/B,OAAO,QAAQ,sKAAsK,IAC9KoE,EAAAoC,GAA0BxG,CAAE,CAAC,EACtC4J,EAAmB,qFAAqF,EAE5G,EAEMwd,EAAepnB,GAAe,CACzBoE,EAAAqC,GAAyBzG,CAAE,CAAC,EACrC4J,EAAmB,uFAAuF,CAC5G,EAEM6a,EAAkB,IAAM,CAChBlb,EAAA,CACV,GAAG4Z,GACH,SAAU2D,GAA0B,QAAQ,CAAA,CAC7C,EACDrD,EAAa,IAAI,EACjBF,EAAe,EAAI,CACrB,EAEM8D,EAAqBlkB,GAAiB,CAC1C,OAAQA,EAAM,CACZ,IAAK,UAAkB,MAAA,KACvB,IAAK,SAAiB,MAAA,KACtB,IAAK,WAAmB,MAAA,KACxB,IAAK,cAAsB,MAAA,IAC3B,QAAgB,MAAA,IAAA,CAEpB,EAUMmkB,GARuB,CAACN,EAAuBO,IAC/CA,IAAW,MACNP,EAEAA,EAAe,OAAiBjsB,GAAAA,EAAO,cAAgBwsB,CAAM,GAIpBP,GAAkB,CAAA,EAAIC,CAAY,EAEhFd,EAAsBoB,GAAmB,CAC7CL,EAAgBK,CAAM,CACxB,EAEMC,EAAsBrkB,GAAiB,CAC3C,OAAQA,EAAM,CACZ,IAAK,UAAkB,MAAA,UACvB,IAAK,SAAiB,MAAA,SACtB,IAAK,WAAmB,MAAA,WACxB,IAAK,cAAsB,MAAA,cAC3B,QAAgB,OAAAA,CAAA,CAEpB,EAEA,OAAIwK,EACMjF,EAAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAA8E,iFAAA,EAGtHzN,EAEAwN,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAwD,0DAAA,CAAA,EAC5DA,EAAAA,IAAC,KAAG,SAAMzN,CAAA,CAAA,EACTyN,EAAAA,IAAA,SAAA,CAAO,QAAS,IAAMtE,EAAS4B,GAA0B,CAAE,CAAA,CAAC,EAAG,KAAK,SAAS,SAE9E,uCAAA,CAAA,CAAA,EACF,EAKFyC,EAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAqB,uBAAA,CAAA,EACxBA,EAAA,IAAA,MAAA,CAAI,UAAU,mBAAoB,SAAgBiB,CAAA,CAAA,CAAA,EACrD,EACAlB,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,kBAAkB,SAAE,KAAA,EAClCA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,SAAE,IAAA,CAAA,CAAA,EAC7B,SACC,SAAO,CAAA,UAAU,8BAA8B,QAAS+b,EAAiB,KAAK,SAC7E,SAAA,CAAC/b,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAE,KAAA,EAChCA,EAAAA,IAAC,QAAK,SAAwB,0BAAA,CAAA,CAAA,CAChC,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAC,EAAA,IAAC,SAAA,CACC,UAAW,cAAcue,IAAiB,MAAQ,SAAW,EAAE,GAC/D,QAAS,IAAMd,EAAmB,KAAK,EACvC,KAAK,SACN,SAAA,KAAA,CAED,EACAzd,EAAA,IAAC,SAAA,CACC,UAAW,cAAcue,IAAiB,UAAY,SAAW,EAAE,GACnE,QAAS,IAAMd,EAAmB,SAAS,EAC3C,KAAK,SACN,SAAA,YAAA,CAED,EACAzd,EAAA,IAAC,SAAA,CACC,UAAW,cAAcue,IAAiB,SAAW,SAAW,EAAE,GAClE,QAAS,IAAMd,EAAmB,QAAQ,EAC1C,KAAK,SACN,SAAA,WAAA,CAED,EACAzd,EAAA,IAAC,SAAA,CACC,UAAW,cAAcue,IAAiB,WAAa,SAAW,EAAE,GACpE,QAAS,IAAMd,EAAmB,UAAU,EAC5C,KAAK,SACN,SAAA,aAAA,CAED,EACAzd,EAAA,IAAC,SAAA,CACC,UAAW,cAAcue,IAAiB,cAAgB,SAAW,EAAE,GACvE,QAAS,IAAMd,EAAmB,aAAa,EAC/C,KAAK,SACN,SAAA,eAAA,CAAA,CAED,EACF,EAEAzd,EAAAA,IAAC,MAAI,CAAA,UAAU,sBACZ,SAAA4e,GAA0BA,EAAuB,OAAS,EACzDA,EAAuB,IAAKvsB,UACzB,MAAoB,CAAA,UAAW,sBAAsBA,EAAO,YAAY,YAAa,CAAA,IAAIA,EAAO,UAAY,SAAW,EAAE,GACxH,SAAA,CAAA2N,MAAC,OAAI,UAAU,4BACZ,SAAmB8e,EAAAzsB,EAAO,WAAW,EACxC,EACA0N,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAC,MAAC,OAAI,UAAU,mBACZ,SAAkB2e,EAAAtsB,EAAO,WAAW,EACvC,EACA2N,EAAAA,IAAC,KAAI,CAAA,SAAA3N,EAAO,IAAK,CAAA,EAChBA,EAAO,WAAa2N,EAAAA,IAAC,OAAK,CAAA,UAAU,eAAe,SAAM,QAAA,CAAA,CAAA,EAC5D,EAECA,EAAA,IAAA,IAAA,CAAE,UAAU,4BAA6B,WAAO,YAAY,EAE7DD,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAQ,UAAA,CAAA,EACXA,EAAA,IAAA,MAAA,CAAI,UAAU,gBACZ,gBAAO,QAAQ3N,EAAO,QAAQ,EAAE,IAAI,CAAC,CAACmiB,EAAKpe,CAAK,IAE3C,OAAOA,GAAU,UAAYA,IAAU,MAAQ,CAAC,MAAM,QAAQA,CAAK,EAC9D,OAAO,QAAQA,CAA4B,EAAE,IAAI,CAAC,CAAC2oB,EAAWC,CAAW,IAC7Ejf,EAAA,KAAA,MAAA,CAAgC,UAAU,eACzC,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,gBAAiB,SAAA,CAAIyU,EAAA,QAAQ,KAAM,GAAG,EAAE,IAAEuK,EAAU,QAAQ,KAAM,GAAG,EAAE,GAAA,EAAC,EACxF/e,MAAC,QAAK,UAAU,gBACb,gBAAOgf,GAAgB,UACnBA,EAAc,UAAY,WAC3B,MAAM,QAAQA,CAAW,EACvBA,EAAY,KAAK,IAAI,EACrB,OAAOA,CAAW,CAC1B,CAAA,CAAA,CAAA,EARQ,GAAGxK,CAAG,IAAIuK,CAAS,EAS7B,CACD,EAIDhf,EAAA,KAAC,MAAc,CAAA,UAAU,eACvB,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,gBAAiB,SAAA,CAAIyU,EAAA,QAAQ,KAAM,GAAG,EAAE,GAAA,EAAC,EACzDxU,MAAC,QAAK,UAAU,gBACb,gBAAO5J,GAAU,UACbA,EAAQ,UAAY,WACrB,MAAM,QAAQA,CAAK,EACjBA,EAAM,KAAK,IAAI,EACf,OAAOA,CAAK,CACpB,CAAA,CAAA,CAAA,EARQoe,CASV,CAEH,CACH,CAAA,CAAA,EACF,EAEAzU,EAAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAACC,EAAAA,IAAA,SAAA,CAAO,UAAU,cAAc,QAAS,IAAM4b,EAAWvpB,CAAM,EAAG,KAAK,SAAS,SAEjF,MAAA,CAAA,EACC2N,EAAAA,IAAA,SAAA,CAAO,UAAU,eAAe,QAAS,IAAM0e,EAAYrsB,EAAO,EAAE,EAAG,KAAK,SAAS,SAEtF,OAAA,CAAA,EACC2N,EAAAA,IAAA,SAAA,CAAO,UAAU,gBAAgB,QAAS,IAAMsT,EAAajhB,EAAO,EAAE,EAAG,KAAK,SAAS,SAExF,QAAA,CAAA,CAAA,CACF,CAAA,CAAA,GA5DQA,EAAO,EA6DjB,CACD,EAEA0N,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAA0D,uDAAA,CAAA,EAC7DA,EAAAA,IAAC,KAAE,SAAoG,iGAAA,CAAA,CAAA,CAAA,CACzG,CAEJ,CAAA,EAEAA,EAAA,IAACyZ,GAAA,CACC,OAAQmB,EACR,QAAS,IAAMC,EAAe,EAAK,EACnC,MAAOC,EAAY,4BAA8B,8BACjD,KAAK,QAEL,SAAA/a,EAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,OAAO,SAAmB,sBAAA,EACzCA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,OACH,KAAK,OACL,MAAO5M,EAAS,KAChB,SAAUkoB,EACV,YAAY,8CAAA,CAAA,CACd,EACF,EAEAvb,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,cAAc,SAAY,eAAA,EACzCA,EAAA,IAAC,WAAA,CACC,GAAG,cACH,KAAK,cACL,MAAO5M,EAAS,YAChB,SAAUkoB,EACV,YAAY,4CAAA,CAAA,CACd,EACF,EAEAvb,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,cAAc,SAAmB,sBAAA,EAChDD,EAAA,KAAC,SAAA,CACC,GAAG,cACH,KAAK,cACL,MAAO3M,EAAS,YAChB,SAAUkoB,EAEV,SAAA,CAACtb,EAAA,IAAA,SAAA,CAAO,MAAM,UAAU,SAAO,UAAA,EAC9BA,EAAA,IAAA,SAAA,CAAO,MAAM,SAAS,SAAM,SAAA,EAC5BA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAQ,WAAA,EAChCA,EAAA,IAAA,SAAA,CAAO,MAAM,cAAc,SAAW,aAAA,CAAA,CAAA,CAAA,CAAA,CACzC,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAQ,UAAA,CAAA,EACXA,EAAA,IAAA,MAAA,CAAI,UAAU,gBACZ,gBAAO,QAAQ5M,EAAS,QAAQ,EAAE,IAAI,CAAC,CAACohB,EAAKpe,CAAK,IAE7C,OAAOA,GAAU,UAAYA,IAAU,MAAQ,CAAC,MAAM,QAAQA,CAAK,EAEnE2J,EAAA,KAAC,MAAc,CAAA,UAAU,kBACvB,SAAA,CAAAC,MAAC,KAAI,CAAA,SAAAwU,EAAI,QAAQ,KAAM,GAAG,EAAE,EAC3B,OAAO,QAAQpe,CAA4B,EAAE,IAAI,CAAC,CAAC2oB,EAAWC,CAAW,IACvEjf,EAAA,KAAA,MAAA,CAAgC,UAAU,kBACzC,SAAA,CAAAA,OAAC,SAAM,QAAS,GAAGyU,CAAG,IAAIuK,CAAS,GAChC,SAAA,CAAUA,EAAA,QAAQ,KAAM,GAAG,EAAE,GAAA,EAChC,EAEC,OAAOC,GAAgB,UACrBjf,EAAA,KAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,KAAK,WACL,GAAI,GAAGwU,CAAG,IAAIuK,CAAS,GACvB,QAASC,EACT,SAAW5d,GAAMoa,EAAoB,GAAGhH,CAAG,IAAIuK,CAAS,GAAI3d,EAAE,OAAO,OAAO,CAAA,CAC9E,EACApB,EAAAA,IAAC,OAAK,CAAA,UAAU,eAAgB,CAAA,CAClC,CAAA,CAAA,EACE,OAAOgf,GAAgB,SACzBhf,EAAA,IAAC,QAAA,CACC,KAAK,SACL,GAAI,GAAGwU,CAAG,IAAIuK,CAAS,GACvB,MAAOC,EACP,SAAW5d,GAAMoa,EAAoB,GAAGhH,CAAG,IAAIuK,CAAS,GAAI3d,EAAE,OAAO,KAAK,CAAA,CAAA,EAG5EpB,EAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAI,GAAGwU,CAAG,IAAIuK,CAAS,GACvB,MAAOC,EACP,SAAW5d,GAAMoa,EAAoB,GAAGhH,CAAG,IAAIuK,CAAS,GAAI3d,EAAE,OAAO,KAAK,CAAA,CAAA,CAC5E,CAAA,EA5BM,GAAGoT,CAAG,IAAIuK,CAAS,EA8B7B,CACD,CAAA,CAAA,EAlCOvK,CAmCV,EAKFzU,EAAA,KAAC,MAAc,CAAA,UAAU,kBACvB,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,QAASyU,EACb,SAAA,CAAIA,EAAA,QAAQ,KAAM,GAAG,EAAE,GAAA,EAC1B,EAEC,OAAOpe,GAAU,UACf2J,EAAA,KAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,KAAK,WACL,GAAIwU,EACJ,QAASpe,EACT,SAAWgL,GAAMoa,EAAoBhH,EAAKpT,EAAE,OAAO,OAAO,CAAA,CAC5D,EACApB,EAAAA,IAAC,OAAK,CAAA,UAAU,eAAgB,CAAA,CAAA,CAAA,CAClC,EACE,MAAM,QAAQ5J,CAAK,EACrB4J,EAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAIwU,EACJ,MAAOpe,EAAM,KAAK,IAAI,EACtB,SAAWgL,GAAMoa,EAAoBhH,EAAKpT,EAAE,OAAO,MAAM,MAAM,IAAI,CAAC,CAAA,CAAA,EAEpE,OAAOhL,GAAU,SACnB4J,EAAA,IAAC,QAAA,CACC,KAAK,SACL,GAAIwU,EACJ,MAAApe,EACA,SAAWgL,GAAMoa,EAAoBhH,EAAK,OAAOpT,EAAE,OAAO,KAAK,CAAC,CAAA,CAAA,EAGlEpB,EAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAIwU,EACJ,MAAApe,EACA,SAAWgL,GAAMoa,EAAoBhH,EAAKpT,EAAE,OAAO,KAAK,CAAA,CAC1D,EAEDoT,IAAQ,kBACPxU,EAAAA,IAAC,IAAE,CAAA,UAAU,sBAAsB,SAAmD,sDAAA,EAEvFwU,IAAQ,gBACPxU,EAAAA,IAAC,IAAE,CAAA,UAAU,sBAAsB,SAA4C,+CAAA,EAEhFwU,IAAQ,iBACPxU,EAAAA,IAAC,IAAE,CAAA,UAAU,sBAAsB,SAA2C,8CAAA,EAE/EwU,IAAQ,eACPxU,EAAAA,IAAC,IAAE,CAAA,UAAU,sBAAsB,SAA+C,iDAAA,CAAA,CAAA,CAAA,EA/C5EwU,CAiDV,CAEH,CACH,CAAA,CAAA,EACF,EAEAzU,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACC,EAAAA,IAAA,SAAA,CAAO,UAAU,gBAAgB,QAAS,IAAM6a,EAAe,EAAK,EAAG,KAAK,SAAS,SAEtF,QAAA,CAAA,EACA7a,EAAAA,IAAC,SAAO,CAAA,UAAU,gBAAgB,QAASsB,EAAc,KAAK,SAC3D,SAAYwZ,EAAA,uBAAyB,sBACxC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EACF,CAEJ,ECrhBO,SAASmE,GAAenW,EAG7B,OACA,GAAI,CAACA,EACH,MAAO,CAAE,QAAS,KAAM,MAAO,2BAA4B,EAI7D,MAAMoW,EAAapW,EAAc,OAAOnW,EAAAmW,EAAc,aAAd,YAAAnW,EAA0B,aAElE,GAAI,CAACusB,EACH,MAAO,CAAE,QAAS,KAAM,MAAO,8BAA+B,EAG5D,GAAA,CAEE,GAAAA,EAAW,gBAAkB,OACzB,MAAA,IAAI,MAAM,wBAAwB,EAwB1C,MAAO,CAAE,QApBsB,CAC3B,cAAeA,EAAW,cAC1B,cAAeA,EAAW,eAAiB,EAC3C,aAAcA,EAAW,cAAgB,EACzC,eAAgBA,EAAW,gBAAkBA,EAAW,YAAc,EACtE,cAAeA,EAAW,eAAiBA,EAAW,YAAc,EACpE,WAAYA,EAAW,YAAcA,EAAW,MAAQ,cACxD,cAAeA,EAAW,eAAiBA,EAAW,WAAa,EACnE,YAAaC,GAAsBD,EAAW,aAAeA,EAAW,IAAI,EAC5E,cAAeE,GAAoBF,EAAW,eAAiBA,EAAW,SAAS,EACnF,MAAOG,GAAgBH,EAAW,KAAK,EACvC,gBAAiBA,EAAW,iBAAmB,CAAC,EAChD,cAAe,OACf,WAAY,EACZ,KAAM,GACN,UAAW,EACX,KAAMC,GAAsBD,EAAW,aAAeA,EAAW,IAAI,EACrE,UAAW,CAAA,CACf,EAEiC,MAAO,IAAK,QACtC1d,EAAK,CACJ,eAAA,MAAM,6BAA8BA,CAAG,EACxC,CACL,QAAS,KACT,MAAO,+BAA+BA,aAAe,MAAQA,EAAI,QAAU,eAAe,EAC5F,CAAA,CAEJ,CAKA,SAAS2d,GAAsBG,EAA+B,CAC5D,OAAKA,EAYE,CACL,QAASA,EAAS,SAAWA,EAAS,OAAS,EAC/C,IAAKA,EAAS,KAAO,EACrB,IAAKA,EAAS,KAAO,IACrB,SAAUA,EAAS,UAAYA,EAAS,eAAiB,GACzD,mBAAoBA,EAAS,oBAAsBA,EAAS,UAAY,GACxE,KAAMA,EAAS,MAAQ,GACzB,EAjBS,CACL,QAAS,EACT,IAAK,EACL,IAAK,IACL,SAAU,GACV,mBAAoB,GACpB,KAAM,GACR,CAWJ,CAKA,SAASF,GAAoBG,EAAoC,CAC/D,MAAI,CAACA,GAAiB,CAAC,MAAM,QAAQA,CAAa,EACzC,CAAC,EAGHA,EAAc,IAAaC,IAAA,CAChC,IAAKA,EAAK,IACV,KAAMA,EAAK,KACX,YAAaA,EAAK,aAAeA,EAAK,WAAa,EACnD,KAAMA,EAAK,MAAQA,EAAK,UAAY,UACpC,eAAgBA,EAAK,gBAAkBA,EAAK,UAC5C,QAASA,EAAK,SAAWA,EAAK,IAC9B,OAAQA,EAAK,MAAA,EACb,CACJ,CAKA,SAASH,GAAgBI,EAA6B,CACpD,MAAI,CAACA,GAAa,CAAC,MAAM,QAAQA,CAAS,EACjC,CAAC,EAGHA,EAAU,IAAI,CAACC,EAAM9mB,KAAW,CACrC,GAAI8mB,EAAK,IAAM9mB,EACf,cAAe8mB,EAAK,eAAiBA,EAAK,OAAS,EACnD,cAAeA,EAAK,eAAiBA,EAAK,UAC1C,QAASC,GAAeD,EAAK,OAAO,CAAA,EACpC,CACJ,CAKA,SAASC,GAAeC,EAAoB,CAC1C,MAAI,CAACA,GAAe,CAAC,MAAM,QAAQA,CAAW,EACrC,CAAC,EAGHA,EAAY,IAAI,CAACC,EAAQjnB,KAAW,CACzC,GAAIinB,EAAO,IAAMjnB,EACjB,cAAeinB,EAAO,eAAiBA,EAAO,OAAS,EACvD,WAAYA,EAAO,YAAcA,EAAO,IACxC,aAAcA,EAAO,YAAA,EACrB,CACJ,CC/HgB,SAAAC,GAAkB1pB,EAAe4Q,EAAkB,IAAa,CAC5E,MAAO,GAAG5Q,EAAM,QAAQ,CAAC,CAAC,IAAI4Q,CAAI,EACpC,CASgB,SAAA+Y,GACdC,EACAC,EACAC,EACQ,CACJ,OAAAF,GAAQE,EAA0B,WAClCF,GAAQC,EAA0B,UAClCD,GAAQC,EAAoB,GAAY,WACrC,QACT,CASgB,SAAAE,GACdH,EACAC,EACAC,EACQ,CACJ,OAAAF,GAAQE,EAA0B,uCAClCF,GAAQC,EAA0B,8BAClCD,GAAQC,EAAoB,GAAY,6BACrC,sCACT,CClCF,MAAMG,GAAgD,CAAC,CAAE,KAAA/oB,EAAM,QAAA4V,EAAU,MAErElN,EAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,kBAEb,SAAAD,EAAAA,KAAC,OAAI,QAAQ,cAAc,UAAU,QAEnC,SAAA,CAAAC,EAAA,IAAC,OAAA,CACC,EAAE,8BACF,UAAU,kBAAA,CACZ,EAGAA,EAAA,IAAC,OAAA,CACC,EAAG,oBAAoB3I,EAAK,cAAgB,GAAK,EAAI,CAAC,MAAM,GAAK,KAAOA,EAAK,cAAgB,IAAI,IAAI,GAAK,KAAK,IAAI,KAAK,GAAKA,EAAK,cAAgB,GAAG,EAAI,EAAE,GAC3J,UAAW,eACTA,EAAK,cAAgB,GAAK,WAC1BA,EAAK,cAAgB,GAAK,OAC1BA,EAAK,cAAgB,GAAK,SAAW,KACvC,EAAA,CACF,SAGC,OAAK,CAAA,EAAE,MAAM,EAAE,KAAK,UAAU,mBAC5B,SAAA,CAAKA,EAAA,cAAc,QAAQ,CAAC,EAAE,GAAA,EACjC,EAEA2I,EAAAA,IAAC,QAAK,EAAE,MAAM,EAAE,KAAK,UAAU,cAAc,SAAS,WAAA,CAAA,CAAA,CAAA,CACxD,CACF,CAAA,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAM,SAAA,EACjCA,EAAA,IAAA,MAAA,CAAI,UAAU,aAAc,WAAK,UAAW,CAAA,CAAA,EAC/C,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAM,SAAA,EAClCA,EAAAA,IAAC,MAAI,CAAA,UAAU,YAAa,CAAA,CAAA,EAC9B,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAU,aAAA,EACtCD,EAAAA,KAAC,MAAI,CAAA,UAAU,aAAe,SAAA,EAAK1I,EAAA,cAAgB,KAAM,QAAQ,CAAC,EAAE,MAAA,CAAI,CAAA,CAAA,EAC1E,EACA0I,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAU,aAAA,EACrCA,EAAA,IAAA,MAAA,CAAI,UAAU,aAAc,WAAK,aAAc,CAAA,CAAA,EAClD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAQ,WAAA,EACnCA,EAAA,IAAA,MAAA,CAAI,UAAU,aAAc,WAAK,YAAa,CAAA,CAAA,EACjD,EACC3I,EAAK,aACH0I,OAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAY,eAAA,EACxCA,EAAAA,IAAC,MAAI,CAAA,UAAW,cAAc+f,GAC5B1oB,EAAK,YAAY,QACjBA,EAAK,YAAY,mBACjBA,EAAK,YAAY,QAAA,CAClB,GACE,SAAkByoB,GAAAzoB,EAAK,YAAY,QAASA,EAAK,YAAY,IAAI,CACpE,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EAGA0I,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAAiB,oBAAA,EAEnD3I,EAAK,eAAiBA,EAAK,cAAc,OAAS,EACjD2I,EAAA,IAAC,MAAI,CAAA,UAAU,yBACZ,SAAA3I,EAAK,cAAc,MAAM,EAAG,CAAC,EAAE,IAAI,CAACwT,EAASjS,IAC5CmH,EAAAA,KAAC,MAAsB,CAAA,UAAU,mBAC/B,SAAA,CAAAC,EAAA,IAAC,MAAI,CAAA,UAAU,eAAgB,SAAApH,EAAQ,EAAE,EACzCmH,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAC,EAAA,IAAC,MAAI,CAAA,UAAU,eAAgB,SAAA6K,EAAQ,KAAK,EAC5C9K,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,cAAc,SAAA,CAAA,QAAM8K,EAAQ,GAAA,EAAI,EAC/C7K,EAAA,IAAA,OAAA,CAAK,UAAU,eAAgB,WAAQ,IAAK,CAAA,CAAA,CAC/C,CAAA,CAAA,EACF,QACC,MAAI,CAAA,UAAU,gBACb,SAACD,EAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC,MAAA,CACC,UAAU,iBACV,MAAO,CAAE,MAAO,GAAG,KAAK,IAAI6K,EAAQ,YAAa,GAAG,CAAC,GAAI,CAAA,CAC3D,EACA9K,EAAAA,KAAC,OAAK,CAAA,UAAU,aAAc,SAAA,CAAQ8K,EAAA,YAAY,QAAQ,CAAC,EAAE,GAAA,CAAC,CAAA,CAAA,CAAA,CAChE,CACF,CAAA,CAjBQ,CAAA,EAAAA,EAAQ,GAkBlB,CACD,CACH,CAAA,EAEC7K,EAAAA,IAAA,MAAA,CAAI,UAAU,kBAAkB,SAAyB,2BAAA,CAAA,QAG3D,MAAI,CAAA,UAAU,gBACb,SAACA,MAAA,SAAA,CAAO,QAAS,IAAM,CAAA,EAAmC,8BAAkB,CAC9E,CAAA,CAAA,EACF,EAGC3I,EAAK,aACH0I,OAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAAkB,qBAAA,EAErDD,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAW,cAAc+f,GAC5B1oB,EAAK,YAAY,QACjBA,EAAK,YAAY,mBACjBA,EAAK,YAAY,QAClB,CAAA,GACE,SAAkByoB,GAAAzoB,EAAK,YAAY,QAASA,EAAK,YAAY,IAAI,EACpE,EAEA0I,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,iBACZ,SAAkB8f,GAAAzoB,EAAK,YAAY,IAAKA,EAAK,YAAY,IAAI,CAChE,CAAA,EACA0I,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,mBAAoB,CAAA,EACnCA,EAAAA,IAAC,MAAI,CAAA,UAAU,oBAAqB,CAAA,EACpCA,EAAAA,IAAC,MAAI,CAAA,UAAU,qBAAsB,CAAA,EACrCA,EAAA,IAAC,MAAA,CACC,UAAU,oBACV,MAAO,CACL,KAAM,GAAG,KAAK,IAAI,IAAK,KAAK,IAAI,GAC7B3I,EAAK,YAAY,QAAUA,EAAK,YAAY,MAC5CA,EAAK,YAAY,IAAMA,EAAK,YAAY,KACvC,GAAG,CAAC,CAAC,GAAA,CACX,CAAA,CACD,EACH,EACA2I,EAAAA,IAAC,MAAI,CAAA,UAAU,iBACZ,SAAA8f,GAAkBzoB,EAAK,YAAY,IAAKA,EAAK,YAAY,IAAI,CAChE,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECA,EAAK,YAAY,SAAWA,EAAK,YAAY,mBAAqB,IAChE0I,EAAA,KAAA,MAAA,CAAI,UAAW,cAAc1I,EAAK,YAAY,SAAWA,EAAK,YAAY,SACzE,WAAaA,EAAK,YAAY,SAAWA,EAAK,YAAY,mBAC1D,UAAY,QAAQ,GACpB,SAAA,CAAC2I,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAE,KAAA,QAC7B,MAAI,CAAA,UAAU,gBACZ,SAAK3I,EAAA,YAAY,SAAWA,EAAK,YAAY,SAC5C,wDACAA,EAAK,YAAY,SAAWA,EAAK,YAAY,mBAC7C,6DACA,sCACJ,CAAA,CAAA,EACF,QAGD,MAAI,CAAA,UAAU,oBACb,SAAC2I,MAAA,SAAA,CAAO,QAAS,IAAM,CAAA,EAAiC,0CAA8B,CACxF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAID3I,EAAK,OAASA,EAAK,MAAM,OAAS,GACjC0I,EAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAAY,eAAA,EAE/CD,EAAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACZ,SAAA,CAAA1I,EAAK,MAAM,MAAM,EAAG4V,EAAU,EAAI,CAAC,EAAE,IACpCyS,GAAA3f,EAAAA,KAAC,MAAkB,CAAA,UAAU,gBAC3B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBAAkB,SAAA,CAAA,QAAM2f,EAAK,EAAA,EAAG,EAC/C1f,EAAAA,IAAC,MAAI,CAAA,UAAU,0BACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAW,sBACT0f,EAAK,cAAgB,GAAK,WAC1BA,EAAK,cAAgB,GAAK,OAC1BA,EAAK,cAAgB,GAAK,SAAW,KACvC,GACA,MAAO,CAAE,OAAQ,GAAGA,EAAK,aAAa,GAAI,CAAA,CAAA,EAE9C,EACA3f,EAAAA,KAAC,MAAI,CAAA,UAAU,kBAAmB,SAAA,CAAK2f,EAAA,cAAc,QAAQ,CAAC,EAAE,GAAA,CAAC,CAAA,CAAA,GAZzDA,EAAK,EAaf,CACD,EAEAroB,EAAK,MAAM,QAAU4V,EAAU,EAAI,IAClClN,EAAAA,KAAC,MAAI,CAAA,UAAU,iBAAiB,SAAA,CAAA,IAAE1I,EAAK,MAAM,QAAU4V,EAAU,EAAI,GAAG,OAAA,CAAK,CAAA,CAAA,EAEjF,EAECjN,EAAA,IAAA,MAAA,CAAI,UAAU,wBACX,UAAM,IAAA,CAEN,MAAMqgB,EAAShpB,EAAK,MAAM,IAAIipB,GAAKA,EAAE,aAAa,EAC5CC,EAAW,KAAK,IAAI,GAAGF,CAAM,EAC7BG,EAAW,KAAK,IAAI,GAAGH,CAAM,EAC7BI,EAAYF,EAAWC,EAE7B,OAAIC,EAAY,GAEZ1gB,EAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAE,KAAA,EACjCD,EAAAA,KAAC,OAAK,CAAA,UAAU,eAAe,SAAA,CAAA,wCACS0gB,EAAU,QAAQ,CAAC,EAAE,eAAA,EAC7D,EACCzgB,EAAA,IAAA,SAAA,CAAO,UAAU,oBAAoB,SAAiB,mBAAA,CAAA,CAAA,EACzD,EAKFD,EAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAC,IAAA,EAC/BD,EAAAA,KAAC,OAAK,CAAA,UAAU,cAAc,SAAA,CAAA,yCACW0gB,EAAU,QAAQ,CAAC,EAAE,mBAAA,CAC9D,CAAA,CAAA,EACF,CAAA,IAGN,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,ECtOJ,eAAsBC,GAAYC,EAAyC,CACrE,GAAA,CAKI,MAAAtpB,EAAO,MAHI,MAAMupB,EAAI,KAAK,uBAAwB,CAAE,IAAAD,EAAK,GAGrB,KAAK,EACxC,MAAA,CACL,QAAStpB,EAAK,QACd,QAASA,EAAK,SAAW,kCACzB,IAAAspB,CACF,QACOpuB,EAAO,CACN,eAAA,MAAM,yBAA0BA,CAAK,EACtC,CACL,QAAS,GACT,QAASA,aAAiB,MAAQA,EAAM,QAAU,8BAClD,IAAAouB,CACF,CAAA,CAEJ,CClBA,MAAME,GAAkD,CAAC,CAAE,UAAAlT,EAAW,QAASE,EAAW,MAAY,CACpG,KAAM,CAACiT,EAAWC,CAAY,EAAI3hB,EAAAA,SAAmC,CAAA,CAAE,EACjE,CAAC4hB,EAAYC,CAAa,EAAI7hB,EAAAA,SAA+D,CAAA,CAAE,EAG/F8hB,EAAoB,MAAOP,GAAgB,CAC3C,GAAA,CAAAG,EAAUH,CAAG,EAEJ,CAAAI,EAAA1f,IAAS,CAAE,GAAGA,EAAM,CAACsf,CAAG,EAAG,IAAO,EAE3C,GAAA,CACI,MAAA3d,EAAS,MAAM0d,GAAYC,CAAG,EAEpCM,EAAuB5f,IAAA,CACrB,GAAGA,EACH,CAACsf,CAAG,EAAG,CACL,QAAS3d,EAAO,QAChB,QAASA,EAAO,OAAA,CAClB,EACA,EAGF,WAAW,IAAM,CACfie,EAAsB5f,GAAA,CACd,MAAA8f,EAAW,CAAE,GAAG9f,CAAK,EAC3B,cAAO8f,EAASR,CAAG,EACZQ,CAAA,CACR,GACA,GAAI,QACA3f,EAAK,CACZyf,EAAuB5f,IAAA,CACrB,GAAGA,EACH,CAACsf,CAAG,EAAG,CACL,QAAS,GACT,QAAS,UAAUnf,aAAe,MAAQA,EAAI,QAAU,eAAe,EAAA,CACzE,EACA,CAAA,QACF,CACauf,EAAA1f,IAAS,CAAE,GAAGA,EAAM,CAACsf,CAAG,EAAG,IAAQ,CAAA,EAEpD,EAGA,MAAI,CAAChT,GAAaA,EAAU,SAAW,EAEnC5N,EAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAAiB,oBAAA,EACnDA,EAAA,IAAA,MAAA,CAAI,UAAU,kBAAkB,SAAyB,2BAAA,CAAA,CAAA,EAC5D,EAKFD,EAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAAiB,oBAAA,EACpDD,EAAAA,KAAC,QAAM,CAAA,UAAU,gBACf,SAAA,CAACC,EAAA,IAAA,QAAA,CACC,gBAAC,KACC,CAAA,SAAA,CAAAA,EAAAA,IAAC,MAAG,SAAO,SAAA,CAAA,EACXA,EAAAA,IAAC,MAAG,SAAG,KAAA,CAAA,EACPA,EAAAA,IAAC,MAAG,SAAI,MAAA,CAAA,EACRA,EAAAA,IAAC,MAAG,SAAK,OAAA,CAAA,EACTA,EAAAA,IAAC,MAAG,SAAQ,UAAA,CAAA,EACZA,EAAAA,IAAC,MAAG,SAAM,QAAA,CAAA,CAAA,CAAA,CACZ,CACF,CAAA,QACC,QACE,CAAA,SAAA2N,EAAU,IAAK9C,UACb,KACC,CAAA,SAAA,CAAA9K,OAAC,KACC,CAAA,SAAA,CAAAC,EAAA,IAAC,MAAI,CAAA,UAAU,eAAgB,SAAA6K,EAAQ,KAAK,EAC3CA,EAAQ,SAAW7K,EAAA,IAAC,OAAI,UAAU,kBAAmB,WAAQ,OAAQ,CAAA,CAAA,EACxE,EACAA,EAAAA,IAAC,KAAI,CAAA,SAAA6K,EAAQ,GAAI,CAAA,EACjB7K,EAAAA,IAAC,KAAI,CAAA,SAAA6K,EAAQ,IAAK,CAAA,EACjB7K,MAAA,KAAA,CACC,SAACD,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC,MAAA,CACC,UAAU,iBACV,MAAO,CAAE,MAAO,GAAG,KAAK,IAAI6K,EAAQ,YAAa,GAAG,CAAC,GAAI,CAAA,CAC3D,EACA9K,EAAAA,KAAC,OAAK,CAAA,UAAU,aAAc,SAAA,CAAQ8K,EAAA,YAAY,QAAQ,CAAC,EAAE,GAAA,CAAC,CAAA,CAAA,CAAA,CAChE,CACF,CAAA,EACA7K,EAAAA,IAAC,MACE,SAAQ6K,EAAA,iBAAmB,QACzB9K,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC,MAAA,CACC,UAAU,wBACV,MAAO,CAAE,MAAO,GAAG,KAAK,IAAI6K,EAAQ,eAAgB,GAAG,CAAC,GAAI,CAAA,CAC9D,EACA9K,EAAAA,KAAC,OAAK,CAAA,UAAU,aAAc,SAAA,CAAQ8K,EAAA,eAAe,QAAQ,CAAC,EAAE,GAAA,CAAC,CAAA,CAAA,CAAA,CACnE,CAEJ,CAAA,EACC7K,MAAA,KAAA,CACC,SAACD,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAC,EAAA,IAAC,SAAA,CACC,UAAU,cACV,QAAS,IAAMkhB,EAAkBrW,EAAQ,GAAG,EAC5C,SAAUiW,EAAUjW,EAAQ,GAAG,EAE9B,SAAUiW,EAAAjW,EAAQ,GAAG,EAAI,aAAe,MAAA,CAC3C,EAECmW,EAAWnW,EAAQ,GAAG,SACpB,MAAI,CAAA,UAAW,eAAemW,EAAWnW,EAAQ,GAAG,EAAE,QAAU,UAAY,OAAO,GACjF,WAAWA,EAAQ,GAAG,EAAE,OAC3B,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,GA3COA,EAAQ,GA4CjB,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,ECvHMuW,GAA0C,CAAC,CAC/C,MAAAC,CAAK,IAAM,CAEL,MAAArT,EAAQZ,EAAAA,QAAQ,IAAM,CAC1B,GAAI,CAACiU,GAASA,EAAM,SAAW,EAAU,OAAA,KAGnC,MAAAC,EAAWD,EAAM,OAAO,CAACE,EAAK7B,IAAS6B,EAAM7B,EAAK,cAAe,CAAC,EAAI2B,EAAM,OAG5EG,EAAa,CAAC,GAAGH,CAAK,EAAE,KAAK,CAAC3S,EAAGC,IAAMA,EAAE,cAAgBD,EAAE,aAAa,EAAE,CAAC,EAC3E+S,EAAc,CAAC,GAAGJ,CAAK,EAAE,KAAK,CAAC3S,EAAGC,IAAMD,EAAE,cAAgBC,EAAE,aAAa,EAAE,CAAC,EAG5E+S,EAAmBF,EAAW,cAAgBC,EAAY,cAG1DE,EAAeD,EAAmB,GAGlCE,EAAWP,EAAM,OAAO,CAACE,EAAK7B,IAAS,CACrC,MAAAmC,EAAOnC,EAAK,cAAgB4B,EAClC,OAAOC,EAAOM,EAAOA,CAAA,EACpB,CAAC,EAAIR,EAAM,OACRS,EAAS,KAAK,KAAKF,CAAQ,EAG3BG,EAAmD,CAAC,EAC1D,OAAAV,EAAM,QAAgB3B,GAAA,CACpB,MAAMsC,EAAa,KAAK,MAAMtC,EAAK,GAAK,CAAC,EACpCqC,EAAmBC,CAAU,IACbD,EAAAC,CAAU,EAAI,CAAC,GAEjBD,EAAAC,CAAU,EAAE,KAAKtC,CAAI,CAAA,CACzC,EAEM,CACL,SAAA4B,EACA,WAAAE,EACA,YAAAC,EACA,iBAAAC,EACA,aAAAC,EACA,OAAAG,EACA,mBAAAC,CACF,CAAA,EACC,CAACV,CAAK,CAAC,EAGV,GAAI,CAACA,GAASA,EAAM,SAAW,GAAK,CAACrT,EAEjC,OAAAjO,EAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAAS,YAAA,EAC3CA,EAAA,IAAA,MAAA,CAAI,UAAU,kBAAkB,SAA+B,iCAAA,CAAA,CAAA,EAClE,EAKE,MAAAiiB,EAAiBvY,GACjBA,EAAQ,GAAW,WACnBA,EAAQ,GAAW,OACnBA,EAAQ,GAAW,SAChB,MAIHwY,EAAqBzB,GACrBA,EAAY,GAAW,WACvBA,EAAY,GAAW,cACvBA,EAAY,GAAW,WACpB,WAIP,OAAA1gB,EAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAAmB,sBAAA,EACtDD,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAY,eAAA,EACxCD,EAAAA,KAAC,OAAI,UAAW,cAAckiB,EAAcjU,EAAM,QAAQ,CAAC,GACxD,SAAA,CAAMA,EAAA,SAAS,QAAQ,CAAC,EAAE,GAAA,CAC7B,CAAA,CAAA,EACF,EACAjO,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAc,iBAAA,EAC1CD,EAAAA,KAAC,OAAI,UAAW,cAAcmiB,EAAkBlU,EAAM,gBAAgB,CAAC,GACpE,SAAA,CAAMA,EAAA,iBAAiB,QAAQ,CAAC,EAAE,GAAA,CACrC,CAAA,CAAA,EACF,EACAjO,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAgB,mBAAA,EAC5CD,EAAAA,KAAC,OAAI,UAAW,cAAckiB,EAAcjU,EAAM,WAAW,aAAa,CAAC,GAAI,SAAA,CAAA,QACvEA,EAAM,WAAW,GAAG,KAAGA,EAAM,WAAW,cAAc,QAAQ,CAAC,EAAE,GAAA,CACzE,CAAA,CAAA,EACF,EACAjO,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAc,iBAAA,EAC1CD,EAAAA,KAAC,OAAI,UAAW,cAAckiB,EAAcjU,EAAM,YAAY,aAAa,CAAC,GAAI,SAAA,CAAA,QACxEA,EAAM,YAAY,GAAG,KAAGA,EAAM,YAAY,cAAc,QAAQ,CAAC,EAAE,GAAA,CAC3E,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAjO,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAAgB,mBAAA,QAClD,MAAI,CAAA,UAAU,aACZ,SAAAqhB,EAAM,IAAY3B,GAAA,CACX,MAAAyC,EAAazC,EAAK,SAAW,CAAC,EAC9B0C,EAAgBD,EAAW,OAAS,EACpCE,EAAYJ,EAAcvC,EAAK,aAAa,EAElD,OACG3f,EAAA,KAAA,MAAA,CAAkB,UAAW,aAAasiB,CAAS,GAClD,SAAA,CAACtiB,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,UAAU,SAAA,CAAA,QAAM2f,EAAK,EAAA,EAAG,EACvC3f,EAAAA,KAAC,MAAI,CAAA,UAAU,aAAc,SAAA,CAAK2f,EAAA,cAAc,QAAQ,CAAC,EAAE,GAAA,CAAC,CAAA,CAAA,EAC9D,EAEA1f,EAAAA,IAAC,MAAI,CAAA,UAAU,iBACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAW,kBAAkBqiB,CAAS,GACtC,MAAO,CAAE,MAAO,GAAG3C,EAAK,aAAa,GAAI,CAAA,CAAA,EAE7C,EAECA,EAAK,eACH3f,OAAA,MAAA,CAAI,UAAU,iBACX,SAAA,EAAK2f,EAAA,cAAgB,KAAM,QAAQ,CAAC,EAAE,MAAA,EAC1C,EAGD0C,GACEpiB,EAAA,IAAA,MAAA,CAAI,UAAU,eACZ,SAAWmiB,EAAA,IACVtC,GAAA9f,EAAAA,KAAC,MAAoB,CAAA,UAAU,cAC7B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,YAAY,SAAA,CAAA,UAAQ8f,EAAO,EAAA,EAAG,EAC7CA,EAAO,cACN7f,EAAA,IAAC,QAAK,UAAU,iBAAkB,WAAO,YAAa,CAAA,CAAA,EAE1D,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAAAC,EAAA,IAAC,MAAA,CACC,UAAW,kBAAkBiiB,EAAcpC,EAAO,aAAa,CAAC,GAChE,MAAO,CAAE,MAAO,GAAGA,EAAO,aAAa,GAAI,CAAA,CAC5C,EACD9f,EAAAA,KAAC,OAAK,CAAA,UAAU,oBACb,SAAA,CAAO8f,EAAA,cAAc,QAAQ,CAAC,EAAE,GAAA,CACnC,CAAA,CAAA,CACF,CAAA,CAAA,GAfQA,EAAO,EAgBjB,CACD,CACH,CAAA,CAAA,CAAA,EAxCMH,EAAK,EA0Cf,CAAA,CAEH,CACH,CAAA,CAAA,EACF,EAEC1R,EAAM,cACJjO,OAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAA2B,8BAAA,EAC9DD,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wBACb,SAAA,CAACC,EAAA,IAAA,IAAA,CACC,gBAAC,SAAO,CAAA,SAAA,CAAA,wCAAsCgO,EAAM,iBAAiB,QAAQ,CAAC,EAAE,eAAA,CAAA,CAAa,CAC/F,CAAA,EACAhO,EAAAA,IAAC,KAAE,SAEH,+EAAA,CAAA,SACC,KACC,CAAA,SAAA,CAAAA,EAAAA,IAAC,MAAG,SAA+C,iDAAA,CAAA,EACnDA,EAAAA,IAAC,MAAG,SAA6B,+BAAA,CAAA,EACjCA,EAAAA,IAAC,MAAG,SAAmD,qDAAA,CAAA,CAAA,CACzD,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAoB,sBAAA,CAAA,EACxBD,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,uBAAuB,SAAmB,sBAAA,EACxDA,EAAA,IAAA,MAAA,CAAI,UAAU,6BAA6B,SAE5C,0FAAA,EACCA,EAAA,IAAA,SAAA,CAAO,UAAU,wBAAwB,SAAuB,yBAAA,CAAA,CAAA,EACnE,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,uBAAuB,SAA2B,8BAAA,EAChEA,EAAA,IAAA,MAAA,CAAI,UAAU,6BAA6B,SAE5C,wFAAA,EACCA,EAAA,IAAA,SAAA,CAAO,UAAU,wBAAwB,SAAc,gBAAA,CAAA,CAAA,EAC1D,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,uBAAuB,SAA2B,8BAAA,EAChEA,EAAA,IAAA,MAAA,CAAI,UAAU,6BAA6B,SAE5C,iHAAA,EACCA,EAAA,IAAA,SAAA,CAAO,UAAU,wBAAwB,SAAoB,sBAAA,CAAA,CAAA,CAChE,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGFD,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAAyB,4BAAA,QAC3D,MAAI,CAAA,UAAU,sBACZ,SAAO,OAAA,QAAQgO,EAAM,kBAAkB,EAAE,IAAI,CAAC,CAACgU,EAAYM,CAAY,IACrEviB,EAAAA,KAAA,MAAA,CAAqB,UAAU,qBAC9B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mBAAmB,SAAA,CAAA,iBAAeiiB,CAAA,EAAW,EAC5DjiB,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACZ,SAAA,CAAauiB,EAAA,OAAO,YAAUA,EAAa,SAAW,EAAI,OAAS,OAAA,CACtE,CAAA,CAAA,EACF,EAEAtiB,EAAA,IAAC,MAAI,CAAA,UAAU,gBACZ,SAAAsiB,EAAa,IACZ5C,GAAA3f,EAAA,KAAC,MAAkB,CAAA,UAAU,eAC3B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,kBAAkB,SAAA,CAAA,gBAAc2f,EAAK,EAAA,EAAG,EACxD3f,EAAAA,KAAC,QAAK,UAAW,sBAAsBkiB,EAAcvC,EAAK,aAAa,CAAC,GACrE,SAAA,CAAKA,EAAA,cAAc,QAAQ,CAAC,EAAE,GAAA,CACjC,CAAA,CAAA,EACF,EACA1f,EAAAA,IAAC,MAAI,CAAA,UAAU,mBACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAW,kBAAkBiiB,EAAcvC,EAAK,aAAa,CAAC,GAC9D,MAAO,CAAE,MAAO,GAAGA,EAAK,aAAa,GAAI,CAAA,CAAA,CAE7C,CAAA,CAZQ,CAAA,EAAAA,EAAK,EAaf,CACD,EACH,EAEA3f,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAc,iBAAA,EAC1CD,EAAAA,KAAC,MAAI,CAAA,UAAU,aACX,SAAA,EAAAuiB,EAAa,OAAO,CAACf,EAAK7B,IAAS6B,EAAM7B,EAAK,cAAe,CAAC,EAAI4C,EAAa,QAAQ,QAAQ,CAAC,EAAE,GAAA,CACtG,CAAA,CAAA,EACF,EAEAviB,EAAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAa,gBAAA,EACzCA,EAAAA,IAAC,OAAI,UAAU,aACZ,WAAa,OAAS,EACrB,KAAK,IAAIsiB,EAAa,CAAC,EAAE,cAAgBA,EAAa,CAAC,EAAE,aAAa,EAAE,QAAQ,CAAC,EAAI,SACrF,KACJ,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CA3CQ,EAAAN,CA4CV,CACD,CACH,CAAA,CAAA,EACF,EAEAjiB,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAA4B,+BAAA,EAC/DD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,4BAEb,SAAAA,EAAAA,IAAC,OAAI,UAAU,iBACZ,SAAMqhB,EAAA,IACL3B,GAAA1f,EAAA,IAAC,MAAA,CAEC,UAAW,gBAAgBiiB,EAAcvC,EAAK,aAAa,CAAC,GAC5D,MAAO,CACL,OAAQ,OACR,MAAO,GAAG,IAAM2B,EAAM,MAAM,IAC5B,QAAS,GAAO3B,EAAK,cAAgB,IAAO,EAC9C,EACA,MAAO,QAAQA,EAAK,EAAE,KAAKA,EAAK,cAAc,QAAQ,CAAC,CAAC,GAAA,EAPnDA,EAAK,EAAA,CASb,EACH,CACF,CAAA,EAEA3f,EAAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAqB,wBAAA,EACjDD,EAAAA,KAAC,OAAI,UAAW,cAAciO,EAAM,OAAS,GAAK,UAAY,MAAM,GACjE,SAAA,CAAMA,EAAA,OAAS,GAAK,YACnBA,EAAM,OAAS,GAAK,OACpBA,EAAM,OAAS,GAAK,OAAS,OAAO,QAChCA,EAAM,OAAO,QAAQ,CAAC,EAAE,GAAA,CAChC,CAAA,CAAA,EACF,EAEAjO,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAiB,oBAAA,EAC7CD,EAAAA,KAAC,MAAI,CAAA,UAAU,aACX,SAAA,EAAAshB,EAAM,OAAO,CAACE,EAAK7B,IAAA,OAAS,OAAA6B,KAAO5uB,EAAA+sB,EAAK,UAAL,YAAA/sB,EAAc,SAAU,IAAI,CAAC,EAAI0uB,EAAM,QAAQ,QAAQ,CAAC,EAAE,MAAA,CACjG,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAthB,EAAAA,KAAC,MAAI,CAAA,UAAU,sCACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAwB,0BAAA,CAAA,EAC5BD,EAAAA,KAAC,KAAG,CAAA,UAAU,gBACZ,SAAA,CAAAA,OAAC,KACC,CAAA,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAiB,mBAAA,CAAA,EAAS,mEAAA,EACpC,SACC,KACC,CAAA,SAAA,CAAAA,EAAAA,IAAC,UAAO,SAA8B,gCAAA,CAAA,EAAS,8CAAA,EACjD,SACC,KACC,CAAA,SAAA,CAAAA,EAAAA,IAAC,UAAO,SAAkB,oBAAA,CAAA,EAAS,qEAAA,EACrC,SACC,KACC,CAAA,SAAA,CAAAA,EAAAA,IAAC,UAAO,SAAkB,oBAAA,CAAA,EAAS,yEAAA,CACrC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,ECvTMuiB,GAA8C,CAAC,CACnD,YAAAC,EACA,eAAAC,EAAiB,CAAA,CAAE,IAAM,CAGnB,MAAAztB,EAAaoY,EAAAA,QAAQ,IAAM,CACzB,MAAAsV,EAAQF,EAAY,IAAMA,EAAY,IACrC,MAAA,CACL,UAAYA,EAAY,mBAAqBA,EAAY,KAAOE,EAAS,IACzE,UAAYF,EAAY,SAAWA,EAAY,KAAOE,EAAS,IAC/D,SAAWF,EAAY,QAAUA,EAAY,KAAOE,EAAS,GAC/D,CAAA,EACC,CAACF,CAAW,CAAC,EAGVG,EAAY5C,GAAoByC,EAAY,QAASA,EAAY,mBAAoBA,EAAY,QAAQ,EACzGI,EAAkBzC,GAAwBqC,EAAY,QAASA,EAAY,mBAAoBA,EAAY,QAAQ,EAGvH,OAAAziB,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAAe,kBAAA,EAElDD,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,UAAW,sBAAsB2iB,CAAS,GAC7C,YAAkBH,EAAY,QAASA,EAAY,IAAI,CAC1D,CAAA,EACCxiB,EAAA,IAAA,OAAA,CAAK,UAAU,qBAAsB,SAAgB4iB,CAAA,CAAA,CAAA,EACxD,EAEA7iB,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,0BAA0B,MAAO,CAAE,MAAO,GAAGhL,EAAW,QAAQ,GAAO,CAAA,CAAA,EACrFgL,EAAA,IAAA,MAAA,CAAI,UAAU,2BAA2B,MAAO,CAAE,MAAO,GAAGhL,EAAW,SAAWA,EAAW,QAAQ,GAAO,CAAA,CAAA,EAC5GgL,EAAAA,IAAA,MAAA,CAAI,UAAU,4BAA4B,MAAO,CAAE,MAAO,GAAG,IAAMhL,EAAW,QAAQ,GAAO,CAAA,CAAA,EAG9FgL,EAAA,IAAC,MAAA,CACC,UAAU,qBACV,MAAO,CAAE,KAAM,GAAGhL,EAAW,OAAO,GAAI,CAAA,CAAA,CACzC,EACH,EAEA+K,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,UAAU,WAAY,SAAA8f,GAAkB0C,EAAY,IAAKA,EAAY,IAAI,CAAE,CAAA,EACjFziB,EAAAA,KAAC,OAAK,CAAA,UAAU,gBACb,SAAA,CAAkB+f,GAAA0C,EAAY,mBAAoBA,EAAY,IAAI,EAClExiB,EAAA,IAAA,OAAA,CAAK,UAAU,kBAAkB,SAAQ,UAAA,CAAA,CAAA,EAC5C,EACAD,EAAAA,KAAC,OAAK,CAAA,UAAU,gBACb,SAAA,CAAkB+f,GAAA0C,EAAY,SAAUA,EAAY,IAAI,EACxDxiB,EAAA,IAAA,OAAA,CAAK,UAAU,kBAAkB,SAAQ,UAAA,CAAA,CAAA,EAC5C,EACAA,EAAAA,IAAC,QAAK,UAAU,WAAY,YAAkBwiB,EAAY,IAAKA,EAAY,IAAI,CAAE,CAAA,CAAA,CACnF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAziB,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACZ,SAAA,CAAAyiB,EAAY,SAAWA,EAAY,UACjCziB,EAAAA,KAAA,MAAA,CAAI,UAAU,6BACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAE,KAAA,EAC9BA,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAGhC,sIAAA,CAAA,CAAA,EACF,EAGDwiB,EAAY,SAAWA,EAAY,oBAAsBA,EAAY,QAAUA,EAAY,UAC1FziB,EAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAE,KAAA,EAC9BA,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAGhC,uHAAA,CAAA,CAAA,EACF,EAGDwiB,EAAY,SAAYA,EAAY,mBAAqB,IAAQA,EAAY,QAAUA,EAAY,oBAClGziB,EAAA,KAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAE,KAAA,EAC9BA,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAGhC,qIAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EAECyiB,GAAkBA,EAAe,OAAS,EACxC1iB,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAA+B,kCAAA,EAEjEA,MAAA,MAAA,CAAI,UAAU,oBACb,SAACA,EAAA,IAAAgK,GAAA,CAAoB,MAAM,OAAO,OAAQ,IACxC,SAACjK,EAAA,KAAA8iB,GAAA,CAAc,KAAMJ,EACnB,SAAA,CAAAziB,EAAA,IAACkK,GAAc,CAAA,gBAAgB,MAAM,OAAO,2BAA2B,EACvElK,EAAA,IAACmK,GAAA,CACC,QAAQ,YACR,cAAgBC,GAAS,IAAI,KAAKA,CAAI,EAAE,mBAAmB,EAC3D,OAAO,0BAAA,CACT,EACApK,EAAA,IAACqK,GAAA,CACC,QAAQ,OACR,YAAY,OACZ,OAAQ,CAACmY,EAAY,IAAKA,EAAY,GAAG,EACzC,cAAgBpsB,GAAU,GAAGA,CAAK,IAAIosB,EAAY,IAAI,GACtD,OAAO,0BAAA,CACT,EACAxiB,EAAA,IAACqK,GAAA,CACC,QAAQ,QACR,YAAY,QACZ,OAAQ,CAAC,EAAG,GAAG,EACf,cAAgBjU,GAAU,GAAGA,CAAK,IAClC,OAAO,0BAAA,CACT,EACA4J,EAAA,IAACsK,GAAA,CACC,UAAW,CAAClU,EAAOD,IACbA,IAAS,cAAsB,CAAC,GAAGC,CAAK,IAAIosB,EAAY,IAAI,GAAI,aAAa,EAC7ErsB,IAAS,gBAAwB,CAAC,GAAGC,CAAK,IAAK,WAAW,EACvD,CAACA,EAAOD,CAAI,EAErB,eAAiBoU,GAAU,IAAI,KAAKA,CAAK,EAAE,eAAe,EAC1D,aAAc,CAAE,WAAY,qBAAsB,OAAQ,OAAQ,aAAc,KAAM,EACtF,UAAW,CAAE,MAAO,OAAQ,EAC5B,WAAY,CAAE,MAAO,OAAQ,CAAA,CAC/B,QACCgE,GAAO,EAAA,EAGRvO,EAAA,IAAC8iB,GAAA,CACC,KAAK,WACL,QAAS,IAAMN,EAAY,mBAC3B,OAAO,UACP,gBAAgB,MAChB,YAAa,EACb,QAAQ,OACR,KAAK,qBACL,IAAK,GACL,kBAAmB,EAAA,CACrB,EACAxiB,EAAA,IAAC8iB,GAAA,CACC,KAAK,WACL,QAAS,IAAMN,EAAY,SAC3B,OAAO,UACP,gBAAgB,MAChB,YAAa,EACb,QAAQ,OACR,KAAK,qBACL,IAAK,GACL,kBAAmB,EAAA,CACrB,EAGAxiB,EAAA,IAAC8iB,GAAA,CACC,KAAK,WACL,QAAQ,cACR,OAAO,UACP,YAAa,EACb,QAAQ,OACR,KAAK,cACL,IAAK,CAAE,EAAG,CAAE,EACZ,UAAW,CAAE,EAAG,CAAE,EAClB,kBAAmB,EAAA,CACrB,EACA9iB,EAAA,IAACwK,GAAA,CACC,KAAK,WACL,QAAQ,gBACR,KAAK,yBACL,OAAO,UACP,QAAQ,QACR,KAAK,cACL,kBAAmB,EAAA,CAAA,CACrB,CACF,CAAA,CACF,CAAA,EACF,EAEAzK,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAQ,UAAA,CAAA,EACX+iB,GAAmCN,EAAgBD,CAAW,CAAA,CACjE,CAAA,CAAA,CACF,CAAA,EAEAziB,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAA+B,kCAAA,EACjEA,EAAA,IAAA,MAAA,CAAI,UAAU,kBAAkB,SAGjC,gHAAA,CAAA,CAAA,EACF,EAGFD,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,oBAAoB,SAAuB,0BAAA,EAC1DD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,MACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,YAAY,SAAsB,yBAAA,EAChDA,EAAA,IAAA,MAAA,CAAI,UAAU,kBAAkB,SAEjC,kGAAA,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,MACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,YAAY,SAAgB,mBAAA,EAC1CA,EAAA,IAAA,MAAA,CAAI,UAAU,kBAAkB,SAEjC,mFAAA,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,MACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,YAAY,SAAqB,wBAAA,EAC/CA,EAAA,IAAA,MAAA,CAAI,UAAU,kBAAkB,SAEjC,sFAAA,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,MACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,YAAY,SAAmB,sBAAA,EAC7CA,EAAA,IAAA,MAAA,CAAI,UAAU,kBAAkB,SAEjC,mGAAA,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EAKA,SAAS+iB,GACPN,EACAD,EACiB,CACjB,GAAI,CAACC,GAAkBA,EAAe,OAAS,EACtC,OAAAziB,EAAA,IAAC,KAAE,SAA+E,iFAAA,CAAA,EAIrF,MAAAgjB,EAAQC,GAAqBR,CAAc,EAC3CS,EAAcC,GAA8BV,CAAc,EAG1DW,EAAmBX,EAAe,UAAY1X,EAAE,aAAeyX,EAAY,kBAAkB,EAEnG,IAAIa,EAAW,CAAC,EAwCZ,GArCAH,EAAc,GACPG,EAAA,YACN,IACC,CAAA,SAAA,CAAArjB,EAAAA,IAAC,UAAO,SAA4B,8BAAA,CAAA,EAAS,yIAAA,CAAA,EADxC,WAGP,CACF,EACSkjB,EAAc,GACdG,EAAA,YACN,IACC,CAAA,SAAA,CAAArjB,EAAAA,IAAC,UAAO,SAA8B,gCAAA,CAAA,EAAS,qHAAA,CAAA,EAD1C,UAGP,CACF,EAESqjB,EAAA,YACN,IACC,CAAA,SAAA,CAAArjB,EAAAA,IAAC,UAAO,SAAyB,2BAAA,CAAA,EAAS,yJAAA,CAAA,EADrC,UAGP,CACF,EAIEgjB,EAAM,OAAS,GACRK,EAAA,YACN,IACC,CAAA,SAAA,CAAArjB,EAAAA,IAAC,UAAO,SAA4B,8BAAA,CAAA,EAAS,IAAEgjB,EAAM,OAAO,2BAC3DA,EAAM,SAAW,EAAI,SAAW,UAAU,aAC1CA,EAAM,KAAU1T,GAAAA,EAAE,MAAQkT,EAAY,kBAAkB,EACvD,4DACA,mDAAA,CAAA,EALG,OAMP,CACF,EAIEY,EAAiB,OAAS,EAAG,CAC/B,MAAME,EAAeF,EAAiB,OAASX,EAAe,OAAU,IAC/DY,EAAA,KACPtjB,EAAAA,KAAC,IAAiB,CAAA,UAAU,eAC1B,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAyB,2BAAA,CAAA,EAAS,6DAC3BsjB,EAAY,QAAQ,CAAC,EAAE,yDAAA,CAAA,EAFjC,UAGP,CACF,CAAA,CAGF,yBAAU,SAASD,CAAA,CAAA,CACrB,CAKA,SAASJ,GAAqB5rB,EAAoE,CAChG,GAAIA,EAAK,OAAS,EAAG,MAAO,CAAC,EAE7B,MAAM2rB,EAA2C,CAAC,EAC5CloB,EAAY,EAElB,QAAS,EAAI,EAAG,EAAIzD,EAAK,OAAS,EAAG,IAAK,CAClC,MAAAwS,EAAUxS,EAAK,CAAC,EAAE,YAClBksB,EAAQlsB,EAAK,EAAE,CAAC,EAAE,YAClBmsB,EAAQnsB,EAAK,EAAE,CAAC,EAAE,YAClBosB,EAAQpsB,EAAK,EAAE,CAAC,EAAE,YAClBqsB,EAAQrsB,EAAK,EAAE,CAAC,EAAE,YAEpBwS,EAAU2Z,GAAS3Z,EAAU0Z,GAAS1Z,EAAU4Z,GAAS5Z,EAAU6Z,GACnE7Z,EAAU,KAAK,IAAI0Z,EAAOC,EAAOC,EAAOC,CAAK,EAAI5oB,GACnDkoB,EAAM,KAAK,CAAE,MAAO,EAAG,KAAMnZ,EAAS,CACxC,CAGK,OAAAmZ,CACT,CAKA,SAASG,GAA8B9rB,EAAgE,CACjG,GAAAA,EAAK,OAAS,EAAU,MAAA,GAE5B,MAAMssB,EAAItsB,EAAK,OAGTusB,EAAWvsB,EAAK,OAAO,CAACkqB,EAAKxW,IAAMwW,EAAMxW,EAAE,YAAa,CAAC,EAAI4Y,EAC7DE,EAAYxsB,EAAK,OAAO,CAACkqB,EAAKxW,IAAMwW,EAAMxW,EAAE,cAAe,CAAC,EAAI4Y,EAGtE,IAAIG,EAAa,EACbC,EAAe,EACfC,EAAgB,EAEpB,UAAWjZ,KAAK1T,EAAM,CACd,MAAA4sB,EAAWlZ,EAAE,YAAc6Y,EAC3BM,EAAYnZ,EAAE,cAAgB8Y,EAEpCC,GAAcG,EAAWC,EACzBH,GAAgBE,EAAWA,EAC3BD,GAAiBE,EAAYA,CAAA,CAI/B,OAAOJ,GAAc,KAAK,KAAKC,CAAY,EAAI,KAAK,KAAKC,CAAa,EACxE,CCxWA,MAAMnb,GAAsC,CAAC,CAC3C,QAAAoE,EAAU,GACV,SAAAgC,EAAW,GACX,WAAAC,EAAa,WACb,OAAAC,CACF,IAAM,CAEJ,MAAMrG,EAAgBxI,EAAgB9L,GAAqBA,EAAM,QAAQ,OAAO,EAC1E4N,EAAY9B,EAAgB9L,GAAqBA,EAAM,QAAQ,OAAO,EAGtE,CAACwU,EAAWC,CAAY,EAAI7J,EAAAA,SAAqB8P,CAAU,EAC3D,CAAC3c,EAAOyO,CAAQ,EAAI5B,EAAAA,SAAwB,IAAI,EAGhD,CAAE,QAAA+kB,EAAS,MAAO/U,CAAU,EAAI6P,GAAenW,CAAa,EAYlE,GATAT,GAAM,UAAU,IAAM,CAElBrH,EADEoO,GAGO,IAFS,CAGpB,EACC,CAACA,CAAS,CAAC,EAGVhN,EAEA,OAAArC,EAAA,KAAC,MAAI,CAAA,UAAW,eAAekN,EAAU,UAAY,EAAE,GAAI,MAAO,CAAE,OAAAkC,CAAA,EAClE,SAAA,CAAAnP,EAAAA,IAAC,MAAG,SAAY,cAAA,CAAA,EACfA,EAAA,IAAA,MAAA,CAAI,UAAU,kBAAkB,SAAsB,wBAAA,CAAA,CAAA,EACzD,EAKA,GAAAzN,GAAS,CAAC4xB,EAEV,OAAApkB,EAAA,KAAC,MAAI,CAAA,UAAW,eAAekN,EAAU,UAAY,EAAE,GAAI,MAAO,CAAE,OAAAkC,CAAA,EAClE,SAAA,CAAAnP,EAAAA,IAAC,MAAG,SAAY,cAAA,CAAA,EAChBD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAE,KAAA,EAC7BA,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAiB,YAAS,uBAAwB,CAAA,CAAA,CACnE,CAAA,CAAA,EACF,EAKJ,MAAMqP,EAAmB,IAAM,CAC7B,OAAQrG,EAAW,CACjB,IAAK,WACH,OAAQhJ,EAAAA,IAAAogB,GAAA,CAAe,KAAM+D,EAAS,QAAAlX,CAAkB,CAAA,EAC1D,IAAK,YACH,OAAQjN,EAAAA,IAAA6gB,GAAA,CAAgB,UAAWsD,EAAQ,cAAe,QAAAlX,EAAkB,EAC9E,IAAK,QACI,OAAAjN,MAACohB,IAAY,MAAO+C,EAAQ,MAAO,cAAeA,EAAQ,eAAgB,QAAAlX,EAAkB,EACrG,IAAK,UACI,OAAAjN,MAACuiB,IAAc,YAAa4B,EAAQ,YAAa,eAAgBA,EAAQ,gBAAiB,QAAAlX,EAAkB,EACrH,QACE,OAAQjN,EAAAA,IAAAogB,GAAA,CAAe,KAAM+D,EAAS,QAAAlX,CAAkB,CAAA,CAAA,CAE9D,EAGE,OAAAlN,EAAA,KAAC,MAAI,CAAA,UAAW,eAAekN,EAAU,UAAY,EAAE,GAAI,MAAO,CAAE,OAAAkC,CAAA,EAClE,SAAA,CAAAnP,EAAAA,IAAC,MAAG,SAAY,cAAA,CAAA,EAEfiP,GACClP,EAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAC,EAAA,IAAC,MAAA,CACC,UAAW,WAAWgJ,IAAc,WAAa,SAAW,EAAE,GAC9D,QAAS,IAAMC,EAAa,UAAU,EACvC,SAAA,UAAA,CAED,EACAjJ,EAAA,IAAC,MAAA,CACC,UAAW,WAAWgJ,IAAc,YAAc,SAAW,EAAE,GAC/D,QAAS,IAAMC,EAAa,WAAW,EACxC,SAAA,WAAA,CAED,EACAjJ,EAAA,IAAC,MAAA,CACC,UAAW,WAAWgJ,IAAc,QAAU,SAAW,EAAE,GAC3D,QAAS,IAAMC,EAAa,OAAO,EACpC,SAAA,OAAA,CAED,EACAjJ,EAAA,IAAC,MAAA,CACC,UAAW,WAAWgJ,IAAc,UAAY,SAAW,EAAE,GAC7D,QAAS,IAAMC,EAAa,SAAS,EACtC,SAAA,SAAA,CAAA,CAED,EACF,EAGDjJ,EAAA,IAAA,MAAA,CAAI,UAAU,cACZ,YACH,CAAA,CAAA,EACF,CAEJ,ECrHMokB,GAA4C,CAAC,CAAE,QAAAzqB,EAAS,QAAAgB,EAAS,MAAA0pB,KAEnEtkB,EAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,aAAa,SAAE,KAAA,EAC9BA,EAAAA,IAAC,MAAG,SAAK,OAAA,CAAA,EACTA,EAAAA,IAAC,KAAG,SAAQrG,CAAA,CAAA,EACXgB,GAAWqF,EAAA,IAAC,IAAE,CAAA,UAAU,gBAAiB,SAAQrF,EAAA,EACjD0pB,GACErkB,EAAAA,IAAA,SAAA,CAAO,QAASqkB,EAAO,UAAU,eAAe,SAEjD,OAAA,CAAA,CAAA,EAEJ,ECbEC,GAAoD,CAAC,CACzD,QAAA3qB,EAAU,aACV,KAAA+M,EAAO,QACT,IAEK3G,EAAA,KAAA,MAAA,CAAI,UAAW,6BAA6B2G,CAAI,GAC/C,SAAA,CAAC1G,EAAAA,IAAA,MAAA,CAAI,UAAU,SAAU,CAAA,EACxBrG,GAAWqG,EAAA,IAAC,IAAE,CAAA,UAAU,kBAAmB,SAAQrG,CAAA,CAAA,CAAA,EACtD,ECZSyS,EAAc,CAACC,EAAeC,EAAW,IAAc,CAC5D,GAAAD,IAAU,EAAU,MAAA,UACxB,GAAI,CAACA,GAAS,MAAMA,CAAK,EAAU,MAAA,MAEnC,MAAMkY,EAAalY,EAAQ,EACnBA,EAAA,KAAK,IAAIA,CAAK,EAEtB,MAAME,EAAI,KACJE,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAI,EAEhEC,EAAI,KAAK,MAAM,KAAK,IAAIL,CAAK,EAAI,KAAK,IAAIE,CAAC,CAAC,EAE5CiY,EAAiB,YAAYnY,EAAQ,KAAK,IAAIE,EAAGG,CAAC,GAAG,QAAQJ,CAAQ,CAAC,EACrE,MAAA,GAAGiY,EAAa,IAAM,EAAE,GAAGC,CAAc,IAAI/X,EAAMC,CAAC,CAAC,EAC9D,ECJW+X,GAA0C,CAAC,CACtD,MAAAruB,EACA,IAAAsuB,EAAM,IACN,MAAAC,EAAQ,uBACR,MAAApa,EACA,eAAAqa,EAAiB,GACjB,OAAAzV,EAAS,EACT,UAAA7I,EAAY,EACd,IAAM,CACE,MAAAue,EAAa,KAAK,IAAI,KAAK,IAAI,EAAIzuB,EAAQsuB,EAAO,GAAG,EAAG,GAAG,EAEjE,OACG3kB,EAAA,KAAA,MAAA,CAAI,UAAW,0BAA0BuG,CAAS,GAC/C,SAAA,EAAAiE,GAASqa,IACT7kB,EAAA,KAAC,MAAI,CAAA,UAAU,sBACZ,SAAA,CAAAwK,GAAUvK,EAAA,IAAA,OAAA,CAAK,UAAU,qBAAsB,SAAMuK,EAAA,EACrDqa,GACC7kB,EAAA,KAAC,OAAK,CAAA,UAAU,0BACb,SAAA,CAAA,KAAK,MAAM8kB,CAAU,EAAE,GAAA,CAC1B,CAAA,CAAA,EAEJ,EAEF7kB,EAAA,IAAC,MAAA,CACC,UAAU,0BACV,MAAO,CAAE,OAAQ,GAAGmP,CAAM,IAAK,EAE/B,SAAAnP,EAAA,IAAC,MAAA,CACC,UAAU,oBACV,MAAO,CACL,MAAO,GAAG6kB,CAAU,IACpB,gBAAiBF,EACjB,OAAQ,GAAGxV,CAAM,IAAA,CACnB,CAAA,CACF,CAAA,CACF,EACF,CAEJ,ECzCa2V,GAA0C,CAAC,CACtD,QAAAC,EACA,SAAAjL,EAAW,MACX,SAAA7a,EACA,UAAAqH,EAAY,EACd,IAAM,CACJ,KAAM,CAAC0e,EAAWC,CAAY,EAAI7lB,EAAAA,SAAS,EAAK,EAEhD,OACGW,EAAA,KAAA,MAAA,CAAI,UAAW,0BAA0BuG,CAAS,GACjD,SAAA,CAAAtG,EAAA,IAAC,OAAA,CACC,UAAU,uBACV,aAAc,IAAMilB,EAAa,EAAI,EACrC,aAAc,IAAMA,EAAa,EAAK,EACtC,QAAS,IAAMA,EAAa,EAAI,EAChC,OAAQ,IAAMA,EAAa,EAAK,EAE/B,YACEjlB,MAAA,OAAA,CAAK,UAAU,oBAAoB,aAAW,mBAAmB,SAElE,GAAA,CAAA,CAAA,CAEJ,EACCglB,GACEjlB,EAAAA,KAAA,MAAA,CAAI,UAAW,gBAAgB+Z,CAAQ,GACtC,SAAA,CAAC9Z,EAAA,IAAA,MAAA,CAAI,UAAU,uBACZ,SACH+kB,EAAA,EACC/kB,EAAA,IAAA,MAAA,CAAI,UAAW,sBAAsB8Z,CAAQ,EAAI,CAAA,CAAA,CACpD,CAAA,CAAA,EAEJ,CAEJ,EC/BaoL,GAAsD,CAAC,CAAE,KAAA7tB,EAAM,QAAA4V,EAAU,MAAY,CAC1F,KAAA,CAAE,SAAAkY,GAAa9tB,EAGf+tB,EAA4B,IAAM,CAChC,MAAAhX,EAAU+W,EAAS,eAAe,YACpC,OAAA/W,EAAU,GAAW,WACrBA,EAAU,GAAW,UAClB,QACT,EAEMiX,EAAkB,IAAM,CACtB,MAAAjX,EAAU+W,EAAS,KAAK,YAC1B,OAAA/W,EAAU,GAAW,UACrBA,EAAU,GAAW,UAClB,QACT,EAEMkX,EAA2B,IAAM,CACrC,OAAQH,EAAS,cAAe,CAC9B,IAAK,OAAe,MAAA,sBACpB,IAAK,SAAiB,MAAA,uBACtB,IAAK,MAAc,MAAA,uBACnB,QAAgB,MAAA,6BAAA,CAEpB,EAGA,OAAIlY,EAEAlN,EAAA,KAAC6F,EAAK,CAAA,UAAU,2CACd,SAAA,CAAC7F,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAM,QAAA,CAAA,EACTA,EAAAA,IAAA,OAAA,CAAK,UAAU,4BAA4B,MAAO,CAAE,MAAOslB,EAAA,CAA2B,EACpF,SAASH,EAAA,cAAc,aAC1B,CAAA,CAAA,EACF,EAEAnlB,EAAA,IAACykB,GAAA,CACC,MAAOU,EAAS,eAAe,YAC/B,MAAOC,EAAgC,IAAA,WAAa,sBAAwBA,MAAgC,UAAY,uBAAyB,uBACjJ,MAAO,GAAGhZ,EAAY+Y,EAAS,eAAe,IAAI,CAAC,MAAM/Y,EAAY+Y,EAAS,eAAe,KAAK,CAAC,EAAA,CACrG,EAECA,EAAS,KAAK,MAAQ,SACpB,MAAI,CAAA,UAAU,kCACb,SAAAplB,EAAA,KAAC,QAAM,CAAA,SAAA,CAAA,SAAOolB,EAAS,KAAK,YAAY,QAAQ,CAAC,EAAE,GAAA,CAAA,CAAC,CACtD,CAAA,CAAA,EAEJ,EAMFplB,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAe,iBAAA,CAAA,EACnBD,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAgB,kBAAA,CAAA,EACtBD,OAAC,QAAK,UAAU,wBAAwB,MAAO,CAAE,MAAOulB,GACrD,EAAA,SAAA,CAAAH,EAAS,cAAc,YAAY,EACpCnlB,EAAAA,IAAC8kB,GAAY,CAAA,QAAQ,oHAAsH,CAAA,CAAA,CAC7I,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEA/kB,EAAAA,KAAC,MAAI,CAAA,UAAU,wBAEb,SAAA,CAACA,EAAAA,KAAA6F,EAAA,CAAK,UAAU,4BACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAe,iBAAA,CAAA,EACnBA,EAAA,IAACykB,GAAA,CACC,MAAOU,EAAS,eAAe,YAC/B,MAAOC,EAAgC,IAAA,WAAa,sBAAwBA,MAAgC,UAAY,uBAAyB,uBACjJ,MAAO,GAAGD,EAAS,eAAe,YAAY,QAAQ,CAAC,CAAC,GAAA,CAC1D,EAEAplB,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,oBAAoB,SAAK,QAAA,EACzCA,MAAC,QAAK,UAAU,oBAAqB,WAAYmlB,EAAS,eAAe,KAAK,CAAE,CAAA,CAAA,EAClF,EACAplB,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,oBAAoB,SAAI,OAAA,EACxCA,MAAC,QAAK,UAAU,oBAAqB,WAAYmlB,EAAS,eAAe,IAAI,CAAE,CAAA,CAAA,EACjF,EACAplB,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,oBAAoB,SAAI,OAAA,EACxCA,MAAC,QAAK,UAAU,oBAAqB,WAAYmlB,EAAS,eAAe,IAAI,CAAE,CAAA,CAAA,CACjF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGAplB,EAAAA,KAAC6F,EAAK,CAAA,UAAU,wBACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAW,aAAA,CAAA,EACdmlB,EAAS,KAAK,QAAU,EACtBnlB,EAAA,IAAA,MAAA,CAAI,UAAU,2BACb,SAACA,EAAA,IAAA,IAAA,CAAE,SAAyC,2CAAA,CAAA,CAC9C,CAAA,EAGED,EAAA,KAAAoD,WAAA,CAAA,SAAA,CAAAnD,EAAA,IAACykB,GAAA,CACC,MAAOU,EAAS,KAAK,YACrB,MAAOE,EAAsB,IAAA,UAAY,uBAAyBA,MAAsB,UAAY,sBAAwB,uBAC5H,MAAO,GAAGF,EAAS,KAAK,YAAY,QAAQ,CAAC,CAAC,GAAA,CAChD,EACAplB,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,oBAAoB,SAAK,QAAA,EACzCA,MAAC,QAAK,UAAU,oBAAqB,WAAYmlB,EAAS,KAAK,KAAK,CAAE,CAAA,CAAA,EACxE,EACAplB,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,oBAAoB,SAAI,OAAA,EACxCA,MAAC,QAAK,UAAU,oBAAqB,WAAYmlB,EAAS,KAAK,IAAI,CAAE,CAAA,CAAA,EACvE,EACAplB,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,oBAAoB,SAAI,OAAA,EACxCA,MAAC,QAAK,UAAU,oBAAqB,WAAYmlB,EAAS,KAAK,IAAI,CAAE,CAAA,CAAA,CACvE,CAAA,CAAA,EACF,EACAplB,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,oBAAoB,SAAQ,WAAA,EAC5CD,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,UAAU,SAAA,CAAA,OACnBolB,EAAS,mBAAmB,WAAW,QAAQ,CAAC,EAAE,IAAA,EACzD,EACAplB,EAAAA,KAAC,OAAK,CAAA,UAAU,WAAW,SAAA,CAAA,QACnBolB,EAAS,mBAAmB,YAAY,QAAQ,CAAC,EAAE,IAAA,CAC3D,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,EAGAplB,EAAAA,KAAC6F,EAAK,CAAA,UAAU,6BACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAqB,uBAAA,CAAA,EACzBD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAM,QAAA,CAAA,EACZA,EAAAA,IAAC8kB,GAAY,CAAA,QAAQ,oFAAsF,CAAA,CAAA,EAC7G,EACA9kB,EAAA,IAACykB,GAAA,CACC,MAAQU,EAAS,OAASA,EAAS,eAAe,MAAS,IAC3D,MAAM,uBACN,MAAO/Y,EAAY+Y,EAAS,MAAM,CAAA,CAAA,CACpC,EACF,EAEAplB,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAM,QAAA,CAAA,EACZA,EAAAA,IAAC8kB,GAAY,CAAA,QAAQ,4EAA8E,CAAA,CAAA,EACrG,EACA9kB,EAAA,IAACykB,GAAA,CACC,MAAQU,EAAS,OAASA,EAAS,eAAe,MAAS,IAC3D,MAAM,oBACN,MAAO/Y,EAAY+Y,EAAS,MAAM,CAAA,CAAA,CACpC,EACF,EAEAplB,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAO,SAAA,CAAA,EACbA,EAAAA,IAAC8kB,GAAY,CAAA,QAAQ,kEAAoE,CAAA,CAAA,EAC3F,EACA9kB,EAAA,IAACykB,GAAA,CACC,MAAQU,EAAS,QAAUA,EAAS,eAAe,MAAS,IAC5D,MAAM,sBACN,MAAO/Y,EAAY+Y,EAAS,OAAO,CAAA,CAAA,CACrC,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGAplB,EAAAA,KAAC6F,EAAK,CAAA,UAAU,4BACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAA0B,4BAAA,CAAA,EAE9BD,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,qBACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,4BAA4B,SAAA,CAAA,eAE1CC,EAAAA,IAAC8kB,GAAY,CAAA,QAAQ,8FAAgG,CAAA,CAAA,EACvH,EACA/kB,EAAAA,KAAC,OAAK,CAAA,UAAU,4BACb,SAAA,CAASolB,EAAA,mBAAmB,WAAW,QAAQ,CAAC,EAAE,IAAA,CAMrD,CAAA,CAAA,EACF,EAEAplB,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,4BAA4B,SAAA,CAAA,gBAE1CC,EAAAA,IAAC8kB,GAAY,CAAA,QAAQ,+FAAiG,CAAA,CAAA,EACxH,EACA/kB,EAAAA,KAAC,OAAK,CAAA,UAAU,4BACb,SAAA,CAASolB,EAAA,mBAAmB,YAAY,QAAQ,CAAC,EAAE,IAAA,CAMtD,CAAA,CAAA,EACF,EAEAplB,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,4BAA4B,SAAA,CAAA,kBAE1CC,EAAAA,IAAC8kB,GAAY,CAAA,QAAQ,mGAAqG,CAAA,CAAA,EAC5H,EACA/kB,EAAAA,KAAC,OAAK,CAAA,UAAU,4BACb,SAAA,CAASolB,EAAA,mBAAmB,cAAgB,EAAI,IAAM,GACtDA,EAAS,mBAAmB,cAAc,QAAQ,CAAC,EAAE,OAAA,CAMxD,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAplB,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACZ,SAAA,CAAAolB,EAAS,gBAAkB,QACzBplB,EAAA,KAAA,IAAA,CAAE,UAAU,wCACX,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAyB,2BAAA,CAAA,EAAS,oHAAA,EAE5C,EAGDmlB,EAAS,gBAAkB,UACzBplB,EAAA,KAAA,IAAA,CAAE,UAAU,uCACX,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAyB,2BAAA,CAAA,EAAS,mHAAA,EAE5C,EAGDmlB,EAAS,gBAAkB,OACzBplB,EAAA,KAAA,IAAA,CAAE,UAAU,oCACX,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAoB,sBAAA,CAAA,EAAS,+CAAA,CACvC,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EC/OaulB,GAAQ,CAAmB,CACtC,QAAAC,EACA,KAAAnuB,EACA,WAAAouB,EACA,UAAAnf,EAAY,GACZ,OAAAof,EACA,WAAAC,EAAa,oBACb,QAAA1gB,EAAU,GACV,YAAA2gB,EAAc,aACd,WAAAC,EACA,OAAAC,CACF,IAAqB,CACnB,KAAM,CAACC,EAAoBC,CAAqB,EAAI5mB,EAAAA,SAG1C,IAAI,EAER6mB,EAAa,CAACzR,EAAa0R,IAAuB,CACtD,GAAI,CAACA,EAAU,OAIT,MAAAC,IAFSN,GAAA,YAAAA,EAAY,OAAQrR,IAAOuR,GAAA,YAAAA,EAAoB,OAAQvR,MACxDqR,GAAA,YAAAA,EAAY,aAAc,QAASE,GAAA,YAAAA,EAAoB,aAAc,OACzD,OAAS,MAE/BD,EACFA,EAAOtR,EAAK2R,CAAS,EAECH,EAAA,CAAE,IAAAxR,EAAK,UAAA2R,EAAW,CAE5C,EAEMC,EAAahZ,EAAAA,QAAQ,IAAM,CAC/B,GAAI,CAACyY,GAAc,CAACE,EAA2B,OAAA1uB,EAE/C,MAAMhF,EAASwzB,GAAcE,EACzB,OAAC1zB,EAEE,CAAC,GAAGgF,CAAI,EAAE,KAAK,CAACqX,EAAGC,IAAM,CACxB,MAAA0X,EAAU3X,EAAUrc,EAAO,GAAG,EAC9Bi0B,EAAU3X,EAAUtc,EAAO,GAAG,EAEpC,OAAIg0B,EAASC,EAAej0B,EAAO,YAAc,MAAQ,GAAK,EAC1Dg0B,EAASC,EAAej0B,EAAO,YAAc,MAAQ,EAAI,GACtD,CAAA,CACR,EATmBgF,CAUnB,EAAA,CAACA,EAAMwuB,EAAYE,CAAkB,CAAC,EAEnCQ,EAAY,CAACtY,EAASrV,IACtB8sB,EACK,OAAOA,GAAW,WAAaA,EAAOzX,CAAI,EAAKA,EAAKyX,CAAM,EAE5D9sB,EAGH4tB,EAAiB,CAAChS,EAAa0R,IAAuB,CACtD,GAAA,CAACA,EAAiB,OAAA,KAEtB,MAAM7zB,EAASwzB,GAAcE,EAC7B,MAAI,CAAC1zB,GAAUA,EAAO,MAAQmiB,EAAY,IAEnCniB,EAAO,YAAc,MAAQ,IAAM,GAC5C,EAEA,OAAI4S,EAEClF,EAAA,KAAA,MAAA,CAAI,UAAW,iBAAiBuG,CAAS,GACxC,SAAA,CAACtG,EAAAA,IAAA,MAAA,CAAI,UAAU,uBAAwB,CAAA,EACtCA,EAAA,IAAA,MAAA,CAAI,UAAU,qBAAsB,SAAY4lB,CAAA,CAAA,CAAA,EACnD,EAIAvuB,EAAK,SAAW,QACV,MAAI,CAAA,UAAW,eAAeiP,CAAS,GAAK,SAAWqf,EAAA,EAI/D3lB,EAAA,IAAC,OAAI,UAAW,mBAAmBsG,CAAS,GAC1C,SAAAvG,EAAA,KAAC,QAAM,CAAA,UAAU,QACf,SAAA,CAAAC,EAAAA,IAAC,SACC,SAACA,MAAA,KAAA,CACE,SAAQwlB,EAAA,IAAKiB,GACZzmB,EAAA,IAAC,KAAA,CAEC,MAAO,CACL,MAAOymB,EAAO,MACd,UAAWA,EAAO,OAAS,OAC3B,OAAQA,EAAO,SAAW,UAAY,SACxC,EACA,QAAS,IAAMR,EAAW,OAAOQ,EAAO,GAAG,EAAGA,EAAO,QAAQ,EAE7D,SAAA1mB,EAAA,KAAC,MAAI,CAAA,UAAU,uBACZ,SAAA,CAAO0mB,EAAA,OACPA,EAAO,UACLzmB,EAAA,IAAA,OAAA,CAAK,UAAU,YACb,SAAewmB,EAAA,OAAOC,EAAO,GAAG,EAAGA,EAAO,QAAQ,CACrD,CAAA,CAAA,CAEJ,CAAA,CAAA,EAfK,OAAOA,EAAO,GAAG,CAAA,CAiBzB,EACH,CACF,CAAA,QACC,QACE,CAAA,SAAAL,EAAW,IAAI,CAACnY,EAAMrV,IACrBoH,EAAA,IAAC,KAAA,CAEC,QAAS,IAAMylB,GAAA,YAAAA,EAAaxX,GAC5B,UAAWwX,EAAa,gBAAkB,GAEzC,SAAAD,EAAQ,IAAKiB,GACZzmB,EAAA,IAAC,KAAA,CAEC,MAAO,CAAE,UAAWymB,EAAO,OAAS,MAAO,EAE1C,SAAAA,EAAO,OAASA,EAAO,OAAOxY,CAAI,EAAKA,EAAawY,EAAO,GAAG,CAAA,EAH1D,OAAOA,EAAO,GAAG,CAKzB,CAAA,CAAA,EAXIF,EAAUtY,EAAMrV,CAAK,CAAA,CAa7B,CACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EC/Ia8tB,GAA0C,CAAC,CACtD,SAAAC,EACA,YAAAC,EAAc,YACd,aAAAC,EAAe,GACf,aAAAC,EAAe,GACjB,IAAM,CACJ,KAAM,CAACC,EAAYC,CAAa,EAAI5nB,EAAAA,SAASynB,CAAY,EAEzDtnB,OAAAA,EAAAA,UAAU,IAAM,CACR,MAAA0nB,EAAU,WAAW,IAAM,CAC/BN,EAASI,CAAU,GAClBD,CAAY,EAEf,MAAO,IAAM,CACX,aAAaG,CAAO,CACtB,CACC,EAAA,CAACF,EAAYJ,EAAUG,CAAY,CAAC,EAGrC/mB,EAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,KAAK,OACL,UAAU,eACV,YAAA4mB,EACA,MAAOG,EACP,SAAW3lB,GAAM4lB,EAAc5lB,EAAE,OAAO,KAAK,CAAA,CAC/C,EACC2lB,GACC/mB,EAAA,IAAC,SAAA,CACC,UAAU,eACV,QAAS,IAAMgnB,EAAc,EAAE,EAC/B,aAAW,eACZ,SAAA,GAAA,CAAA,CAED,EAEJ,CAEJ,ECjCaE,GAAwD,CAAC,CAAE,KAAA7vB,KAAW,WAC3E,KAAA,CAAE,UAAAsW,GAActW,EAChB,CAAC0vB,EAAYC,CAAa,EAAI5nB,EAAAA,SAAS,EAAE,EACzC,CAAC+nB,EAAWC,CAAY,EAAIhoB,EAAAA,SAA8B,KAAK,EAC/D,CAACioB,EAAeC,CAAgB,EAAIloB,EAAAA,SAAyB,MAAM,EACnE,CAACmoB,EAAiBC,CAAkB,EAAIpoB,EAAAA,SAAwB,IAAI,EAGpEqoB,EAAoBra,EAAAA,QAAQ,IAAM,CACtC,IAAIsa,EAAW/Z,EAAU,aAGzB,GAAIoZ,EAAY,CACR,MAAAY,EAAOZ,EAAW,YAAY,EACpCW,EAAWA,EAAS,OAClBpY,GAAKA,EAAE,KAAK,cAAc,SAASqY,CAAI,GAClCrY,EAAE,QAAQ,cAAc,SAASqY,CAAI,GACrCrY,EAAE,IAAI,SAAS,EAAE,SAASqY,CAAI,CACrC,CAAA,CAIF,OAAAD,EAAW,CAAC,GAAGA,CAAQ,EAAE,KAAK,CAAChZ,EAAGC,IAAM,CAChC,MAAA0X,EAAS3X,EAAEyY,CAAS,EACpBb,EAAS3X,EAAEwY,CAAS,EAE1B,GAAI,OAAOd,GAAW,UAAY,OAAOC,GAAW,SAClD,OAAOe,IAAkB,MAAQhB,EAASC,EAASA,EAASD,EAIxD,MAAAuB,EAAO,OAAOvB,CAAM,EACpBwB,EAAO,OAAOvB,CAAM,EACnB,OAAAe,IAAkB,MAAQO,EAAK,cAAcC,CAAI,EAAIA,EAAK,cAAcD,CAAI,CAAA,CACpF,EAEMF,CAAA,EACN,CAAC/Z,EAAU,aAAcoZ,EAAYI,EAAWE,CAAa,CAAC,EAG3DS,EAAuB1a,EAAAA,QAAQ,IAC9Bma,EACE5Z,EAAU,aAAa,KAAcxG,GAAAA,EAAM,MAAQogB,CAAe,EAD5C,KAE5B,CAACA,EAAiB5Z,EAAU,YAAY,CAAC,EAGtCoa,EAAsB3a,EAAAA,QAAQ,IAC7Bma,EACE5Z,EAAU,eAAe,KAAaqa,GAAAA,EAAK,MAAQT,CAAe,EAD5C,KAE5B,CAACA,EAAiB5Z,EAAU,cAAc,CAAC,EAGxC6X,EAAwC,CAC5C,CACE,IAAK,MACL,OAAQ,MACR,SAAU,GACV,MAAO,KACT,EACA,CACE,IAAK,OACL,OAAQ,UACR,SAAU,GACV,MAAO,MACP,OAAS3a,GACN9K,EAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAM,WAAQ,IAAK,CAAA,EACnB2N,EAAU,eAAe,KAAKqa,GAAQA,EAAK,MAAQnd,EAAQ,GAAG,SAC5DpE,EAAM,CAAA,KAAK,SAAS,QAAQ,iCAAiC,SAAI,OAAA,EAEnEoE,EAAQ,YAAcA,EAAQ,WAAa,GAAK,CAAC8C,EAAU,eAAe,KAAKqa,GAAQA,EAAK,MAAQnd,EAAQ,GAAG,GAC9G7K,EAAA,IAACyG,GAAM,KAAK,UAAU,QAAQ,0BAA0B,SAAO,SAAA,CAAA,CAAA,CAEnE,CAAA,CAEJ,EACA,CACE,IAAK,MACL,OAAQ,SACR,SAAU,GACV,MAAO,MACP,OAASoE,GAAYuB,EAAYvB,EAAQ,GAAG,CAC9C,EACA,CACE,IAAK,gBACL,OAAQ,aACR,SAAU,GACV,MAAO,MACP,OAASA,GAAY,GAAGA,EAAQ,cAAc,QAAQ,CAAC,CAAC,GAC1D,EACA,CACE,IAAK,MACL,OAAQ,UACR,SAAU,GACV,MAAO,MACP,OAASA,GAAYuB,EAAYvB,EAAQ,GAAG,CAC9C,EACA,CACE,IAAK,SACL,OAAQ,SACR,SAAU,GACV,MAAO,MACP,OAASA,GAAYuB,EAAYvB,EAAQ,MAAM,CACjD,EACA,CACE,IAAK,aACL,OAAQ,SACR,SAAU,GACV,MAAO,MACP,OAASA,GACPA,EAAQ,aAAe,OAClB9K,EAAAA,KAAA,OAAA,CAAK,UAAW8K,EAAQ,WAAa,EAAI,UAAY,GAAK,SAAA,CAAAuB,EAAYvB,EAAQ,UAAU,EAAE,MAAA,CAAA,CAAI,EAC/F,KAAA,CAGV,EAEMod,EAAkBpd,GAA2B,CACjD2c,EAAmB3c,EAAQ,GAAG,CAChC,EAGE,OAAA9K,EAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAC,EAAA,IAAC0mB,GAAA,CACC,aAAcK,EACd,SAAUC,EACV,YAAY,qBAAA,CACd,EAEAjnB,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACZ,SAAA,CAAkB0nB,EAAA,OAAO,OAAK9Z,EAAU,aAAa,OAAO,kBAAA,CAC/D,CAAA,CAAA,EACF,EAEA3N,EAAA,IAACulB,GAAA,CACC,QAAAC,EACA,KAAMiC,EACN,OAAQ,CAACjT,EAAa2R,IAA8B,CAC1DiB,EAAa5S,CAA0B,EACvC8S,EAAiBnB,CAAS,CAC5B,EAEQ,WAAY8B,EAEZ,WAAW,mDAAA,CACb,EAGCV,GACCxnB,EAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAe,iBAAA,CAAA,EAEnBD,EAAAA,KAAC,MAAI,CAAA,UAAU,+BAEb,SAAA,CAACA,EAAAA,KAAA6F,EAAA,CAAK,UAAU,gCACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAkB,oBAAA,CAAA,EACrB8nB,EACC9nB,EAAA,IAACkoB,GAAA,CACC,KAAMJ,EAAqB,WAAW,IAAcjgB,IAAA,CAClD,EAAGA,EAAM,UACT,EAAGA,EAAM,OAAS,KAAO,KAAA,EACzB,EACF,OAAQ,GAAA,CAEV,QAEC,MAAI,CAAA,UAAU,kCACb,SAAC7H,EAAA,IAAA,IAAA,CAAE,0DAA+C,CAAA,CACpD,CAAA,CAAA,EAEJ,EAGAD,EAAAA,KAAC6F,EAAK,CAAA,UAAU,wCACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAoB,sBAAA,CAAA,EACvB+nB,EACChoB,EAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,0BAA0B,SAAiB,oBAAA,EAC3DA,EAAAA,IAAC,MAAI,CAAA,UAAU,0BACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAU,yBACV,MAAO,CACL,MAAO,GAAG+nB,EAAoB,gBAAkB,GAAG,IACnD,gBAAiBA,EAAoB,gBAAkB,GAAM,sBAAwB,sBAAA,CACvF,CAAA,EAEJ,EACAhoB,EAAAA,KAAC,OAAK,CAAA,UAAU,0BACZ,SAAA,EAAoBgoB,EAAA,gBAAkB,KAAK,QAAQ,CAAC,EAAE,GAAA,CAC1D,CAAA,CAAA,EACF,EAEAhoB,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAgB,kBAAA,CAAA,EACnBA,EAAA,IAAA,KAAA,CAAG,UAAU,sBACX,WAAoB,eAAe,IAAI,CAAC6H,EAAOsgB,IAC7CnoB,EAAA,IAAA,KAAA,CAAc,SAAN6H,CAAA,EAAAsgB,CAAY,CACtB,CACH,CAAA,CAAA,EACF,EAEApoB,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAA,OAAC,IACC,CAAA,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAe,iBAAA,CAAA,EAAS,6GAAA,EAElC,EACCA,EAAA,IAAA4Q,EAAA,CAAO,QAAQ,SAAS,SAAe,iBAAA,CAAA,CAAA,CAC1C,CAAA,CAAA,CACF,CAAA,EAEA7Q,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAAyC,2CAAA,CAAA,EAC3C8nB,GAAwBA,EAAqB,UAAU,MAAQ,GAC7D/nB,OAAA,IAAA,CAAE,UAAU,qBAAqB,SAAA,CAAA,8BACJqM,EAAY0b,EAAqB,UAAU,MAAQ,EAAE,EAAE,4DAAA,CAErF,CAAA,CAAA,CAEJ,CAAA,CAAA,EAEJ,EAGA/nB,EAAAA,KAAC6F,EAAK,CAAA,UAAU,kCACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAmB,qBAAA,CAAA,EACvBD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,yBAAyB,SAAI,OAAA,EAC5CA,EAAA,IAAA,OAAA,CAAK,UAAU,yBACb,UAAUrN,EAAAgb,EAAA,aAAa,KAAK2B,GAAKA,EAAE,MAAQiY,CAAe,IAAhD,YAAA50B,EAAmD,GAChE,CAAA,CAAA,EACF,EACAoN,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,yBAAyB,SAAK,QAAA,EAC7CA,EAAA,IAAA,OAAA,CAAK,UAAU,yBACb,UAAUzM,EAAAoa,EAAA,aAAa,KAAK2B,GAAKA,EAAE,MAAQiY,CAAe,IAAhD,YAAAh0B,EAAmD,IAChE,CAAA,CAAA,EACF,EACAwM,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,yBAAyB,SAAQ,WAAA,EAChDA,EAAA,IAAA,MAAA,CAAI,UAAU,yDACZ,UAAUjE,EAAA4R,EAAA,aAAa,KAAK2B,GAAKA,EAAE,MAAQiY,CAAe,IAAhD,YAAAxrB,EAAmD,OAChE,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAID4R,EAAU,eAAe,OAAS,GAChC5N,EAAAA,KAAA6F,EAAA,CAAK,UAAU,kCACd,SAAA,CAAA7F,OAAC,KAAG,CAAA,SAAA,CAAA,6BAED0G,EAAM,CAAA,KAAK,SAAU,SAAAkH,EAAU,eAAe,MAAO,CAAA,CAAA,EACxD,EAEA3N,EAAA,IAAC,MAAI,CAAA,UAAU,mBACZ,SAAA2N,EAAU,eAAe,IACxBqa,GAAAjoB,EAAAA,KAAC,MAAmB,CAAA,UAAU,mBAC5B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,2BACb,SAAA,CAAAA,OAAC,MAAG,QAAS,IAAMynB,EAAmBQ,EAAK,GAAG,EAC3C,SAAA,CAAKA,EAAA,KAAK,UAAQA,EAAK,IAAI,GAAA,EAC9B,EACAjoB,EAAAA,KAAC,OAAK,CAAA,UAAU,0BAA0B,SAAA,CAAA,cAC5BqM,EAAY4b,EAAK,UAAU,EAAE,SAAA,CAC3C,CAAA,CAAA,EACF,EACAjoB,EAAAA,KAAC,MAAI,CAAA,UAAU,gCACb,SAAA,CAAAA,OAAC,OAAK,CAAA,SAAA,CAAA,sBAAoBioB,EAAK,gBAAkB,KAAK,QAAQ,CAAC,EAAE,GAAA,EAAC,EAClEhoB,EAAAA,IAAC,MAAI,CAAA,UAAU,8BACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAU,oCACV,MAAO,CACL,MAAO,GAAGgoB,EAAK,gBAAkB,GAAG,IACpC,gBAAiBA,EAAK,gBAAkB,GAAM,sBAAwB,sBAAA,CACxE,CAAA,CAEJ,CAAA,CAAA,EACF,EACAhoB,EAAA,IAAC4Q,EAAA,CACC,KAAK,KACL,QAAQ,YACR,QAAS,IAAM4W,EAAmBQ,EAAK,GAAG,EAC3C,SAAA,cAAA,CAAA,CAED,GA3BQA,EAAK,GA4Bf,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,CAEJ,ECnSa9Z,GAAoC,CAAC,CAChD,KAAA7W,EACA,MAAA+wB,EAAQ,IACR,OAAAjZ,EAAS,IACT,YAAAkZ,EAAc,EACd,YAAAC,EAAc,GACd,aAAAC,EAAe,EACf,UAAAjiB,EAAY,EACd,IAAM,CAEJ,MAAMkiB,EAAS,CACb,UACA,UACA,UACA,UACA,SACF,EAGE,OAAAxoB,EAAAA,IAAC,MAAI,CAAA,UAAW,aAAasG,CAAS,GACpC,SAAAtG,EAAA,IAACgK,GAAoB,CAAA,MAAAoe,EAAc,OAAAjZ,EACjC,SAAAnP,EAAAA,IAACyoB,GACC,CAAA,SAAAzoB,EAAA,IAACmO,GAAA,CACC,KAAA9W,EACA,GAAG,MACH,GAAG,MACH,YAAAgxB,EACA,YAAAC,EACA,aAAAC,EACA,QAAQ,QAEP,SAAKlxB,EAAA,IAAI,CAACgX,EAAOzV,IAChBoH,EAAA,IAACsO,GAAA,CAEC,KAAMD,EAAM,OAASma,EAAO5vB,EAAQ4vB,EAAO,MAAM,CAAA,EAD5C,QAAQ5vB,CAAK,EAGrB,CAAA,CAAA,CAAA,CAEL,CAAA,CACF,CAAA,EACF,CAEJ,EChDa8vB,GAA0D,CAAC,CAAE,KAAArxB,KAAW,CAC7E,KAAA,CAAE,WAAAsxB,GAAetxB,EACjB,CAACuxB,EAAwBC,CAAyB,EAAIzpB,EAAAA,SAAwB,IAAI,EAGlF0pB,EAAgBruB,IACqB,CACvC,OAAU,uBACV,KAAQ,uBACR,QAAW,oBACX,OAAU,uBACV,MAAS,sBACT,MAAS,wBACX,GAEgBA,EAAK,YAAY,CAAC,GAAK,oBAInCsuB,EAAeJ,EAAW,OAAO,IAAa1a,IAAA,CAClD,KAAMA,EAAK,KACX,MAAOA,EAAK,KACZ,MAAOA,EAAK,MACZ,WAAYA,EAAK,WACjB,MAAO6a,EAAa7a,EAAK,IAAI,CAAA,EAC7B,EAGI+a,EAAgC,IAAM,CAClC,OAAAL,EAAW,cAAc,OAAQ,CACvC,IAAK,OAAe,MAAA,oBACpB,IAAK,WAAmB,MAAA,mBACxB,IAAK,OAAe,MAAA,gBACpB,QAAgB,MAAA,EAAA,CAEpB,EAGMM,EAAkBC,GAAsC,CAC5D,OAAQA,EAAQ,CACd,IAAK,OAAe,MAAA,SACpB,IAAK,SAAiB,MAAA,UACtB,IAAK,MAAc,MAAA,OACnB,QAAgB,MAAA,WAAA,CAEpB,EAEMC,EAAwB7xB,GAAe,CAEzCuxB,EADED,IAA2BtxB,EACH,KAEAA,CAFI,CAIlC,EAEA,aACG,MAAI,CAAA,UAAU,oBACb,SAACyI,EAAA,KAAA,MAAA,CAAI,UAAU,0BAEb,SAAA,CAACA,EAAAA,KAAA6F,EAAA,CAAK,UAAU,6BACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAyB,2BAAA,CAAA,EAE7BA,EAAAA,IAAC,MAAI,CAAA,UAAU,0BACb,SAAAA,EAAA,IAACkO,GAAA,CACC,KAAM6a,EACN,OAAQ,GAAA,CAAA,EAEZ,EAEA/oB,EAAA,IAAC,MAAI,CAAA,UAAU,8BACZ,SAAA2oB,EAAW,OAAO,IACjBluB,GAAAsF,EAAAA,KAAC,MAAoB,CAAA,UAAU,8BAC7B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sCACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,+BAA+B,MAAO,CAAE,gBAAiB8oB,EAAaruB,EAAK,IAAI,CAAK,CAAA,CAAA,EAClGuF,EAAA,IAAA,OAAA,CAAK,UAAU,8BAA+B,WAAK,KAAK,EACzDD,EAAAA,KAAC,OAAK,CAAA,UAAU,oCAAqC,SAAA,CAAKtF,EAAA,WAAW,QAAQ,CAAC,EAAE,GAAA,CAAC,CAAA,CAAA,EACnF,QACC,OAAK,CAAA,UAAU,+BAAgC,SAAY2R,EAAA3R,EAAK,KAAK,CAAE,CAAA,CAAA,GANhEA,EAAK,IAOf,CACD,CACH,CAAA,CAAA,EACF,SAGCmL,EAAK,CAAA,UAAW,oCAAoCojB,EAA+B,CAAA,GAClF,SAAA,CAAAjpB,OAAC,KAAG,CAAA,SAAA,CAAA,uBAEFC,EAAAA,IAAC8kB,GAAY,CAAA,QAAQ,2IAA4I,CAAA,CAAA,EACnK,EAEA/kB,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,6BAA6B,SAAoB,uBAAA,EACjEA,EAAA,IAACykB,GAAA,CACC,MAAOkE,EAAW,cAAc,MAChC,MAAOA,EAAW,cAAc,SAAW,OAAS,sBAAwBA,EAAW,cAAc,SAAW,WAAa,uBAAyB,uBACtJ,MAAO,GAAGA,EAAW,cAAc,KAAK,GAAA,CAAA,CAC1C,EACF,EAEA5oB,EAAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,8BAA8B,SAAA,CAAA,sBAE5CC,EAAAA,IAAC8kB,GAAY,CAAA,QAAQ,iEAAkE,CAAA,CAAA,EACzF,EACA9kB,MAAC,QAAK,UAAU,8BACb,WAAY2oB,EAAW,cAAc,YAAY,CACpD,CAAA,CAAA,EACF,EAEA5oB,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,8BAA8B,SAAA,CAAA,eAE5CC,EAAAA,IAAC8kB,GAAY,CAAA,QAAQ,mFAAoF,CAAA,CAAA,EAC3G,QACC,OAAK,CAAA,UAAU,8BACb,SAAA6D,EAAW,cAAc,UAC5B,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEA5oB,EAAAA,KAAC,MAAI,CAAA,UAAU,2BACZ,SAAA,CAAA4oB,EAAW,cAAc,SAAW,QAClC5oB,EAAAA,KAAA,IAAA,CAAE,UAAU,iCACX,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAmB,qBAAA,CAAA,EAAS,oHAAA,EAEtC,EAGD2oB,EAAW,cAAc,SAAW,YAClC5oB,EAAAA,KAAA,IAAA,CAAE,UAAU,qCACX,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAuB,yBAAA,CAAA,EAAS,wHAAA,EAE1C,EAGD2oB,EAAW,cAAc,SAAW,QAClC5oB,EAAAA,KAAA,IAAA,CAAE,UAAU,iCACX,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAkB,oBAAA,CAAA,EAAS,uDAAA,CACrC,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EAGAD,EAAAA,KAAC6F,EAAK,CAAA,UAAU,qCACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAmC,qCAAA,CAAA,EAEtC2oB,EAAW,4BAA4B,SAAW,EACjD3oB,EAAA,IAAC,OAAI,UAAU,+BACb,SAACA,EAAAA,IAAA,IAAA,CAAE,SAAsF,wFAAA,CAAA,CAC3F,CAAA,EAECA,EAAAA,IAAA,MAAA,CAAI,UAAU,8BACZ,SAAW2oB,EAAA,4BAA4B,IACtC9sB,GAAAkE,EAAAA,KAAC,MAAiB,CAAA,UAAU,wBAC1B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gCAAgC,QAAS,IAAMopB,EAAqBttB,EAAI,EAAE,EACvF,SAAA,CAACkE,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACC,EAAAA,IAAA,KAAA,CAAI,WAAI,KAAM,CAAA,SACdyG,EAAM,CAAA,KAAMwiB,EAAeptB,EAAI,MAAM,EACnC,SAAA,CAAAA,EAAI,OAAO,YAAY,EAAE,SAAA,CAC5B,CAAA,CAAA,EACF,EACAmE,EAAAA,IAAC,QAAK,UAAU,gCACb,aAA2BnE,EAAI,GAAK,IAAM,GAC7C,CAAA,CAAA,EACF,EAEC+sB,IAA2B/sB,EAAI,IAC7BkE,EAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAACC,EAAAA,IAAA,IAAA,CAAG,WAAI,WAAY,CAAA,EAEnBnE,EAAI,YACFmE,MAAA,MAAA,CAAI,UAAU,gCACb,SAACA,EAAAA,IAAA4Q,EAAA,CAAO,QAAQ,UACb,SAAI/U,EAAA,QAAU,uBACjB,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,GAxBMA,EAAI,EA0Bd,CACD,CACH,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EC9LautB,GAAoB,CAC/Bzb,EACA0b,IAC0B,CAEtB,GAAAA,EAAQ,OAAS,EACnB,MAAO,CAAC,EAGV,MAAMC,EAAwC,CAAC,EAG/C,OAAA3b,EAAU,QAAmB9C,GAAA,CAE3B,GAAIA,EAAQ,aAAe,QAAaA,EAAQ,YAAc,EAC5D,OAIF,MAAM0e,EAAiBC,GAAqB3e,EAAQ,IAAKwe,CAAO,EAG5D,GAAAE,EAAe,OAAS,EAC1B,OAII,KAAA,CACJ,mBAAAE,EACA,WAAAC,EACA,eAAAC,EACA,sBAAAC,EACA,eAAAC,EACA,cAAAC,CAAA,EACEC,GAA2BR,CAAc,EAGvCS,EAA2B,CAAC,EAClC,IAAIC,EAAkB,EAGlBR,IACaO,EAAA,KACb,+BAA+B5d,GAAYsd,CAAU,CAAC,gBAAgBH,EAAe,MAAM,gBAC7F,EACmBU,GAAA,IAIjBL,EAAwB,KACXI,EAAA,KACb,yBAAyBJ,EAAsB,QAAQ,CAAC,CAAC,6BAC3D,EACmBK,GAAA,IAIjBN,EAAiB,IAAOF,IACXO,EAAA,KACb,gDAAgDL,EAAe,QAAQ,CAAC,CAAC,6BAC3E,EACmBM,GAAA,KAIjBH,IACaE,EAAA,KACb,sEACF,EACmBC,GAAA,KAIjBJ,IACaG,EAAA,KACb,qGACF,EACmBC,GAAA,IAIjBD,EAAe,OAAS,GAAKC,EAAkB,KAE/BA,EAAA,KAAK,IAAIA,EAAiB,GAAI,EAEhDX,EAAe,KAAK,CAClB,IAAKze,EAAQ,IACb,KAAMA,EAAQ,KACd,WAAYA,EAAQ,WACpB,gBAAAof,EACA,eAAAD,CAAA,CACD,EACH,CACD,EAEMV,CACT,EAKME,GAAuB,CAC3B7I,EACA0I,IAEOA,EACJ,IAAaxhB,GAAA,CACZ,MAAMqiB,EAAeriB,EAAM,UAAU,KAAUyH,GAAAA,EAAE,MAAQqR,CAAG,EACxD,OAACuJ,EAEE,CACL,UAAWriB,EAAM,UACjB,MAAOqiB,EAAa,GACtB,EAL0B,IAM3B,CAAA,EACA,OAAQriB,GAAyDA,IAAU,IAAI,EAM9EkiB,GACJV,GACG,CAEH,MAAMc,EAAwB,CAAC,EAC/B,QAASzd,EAAI,EAAGA,EAAI2c,EAAQ,OAAQ3c,IAAK,CACjC,MAAA0d,GAAmBf,EAAQ3c,CAAC,EAAE,UAAY2c,EAAQ3c,EAAE,CAAC,EAAE,WAAa,IAC1E,GAAI0d,EAAkB,EAAG,CACjB,MAAAV,GAAcL,EAAQ3c,CAAC,EAAE,MAAQ2c,EAAQ3c,EAAE,CAAC,EAAE,OAAS0d,EAC7DD,EAAY,KAAKT,CAAU,CAAA,CAC7B,CAIE,GAAAS,EAAY,OAAS,EAChB,MAAA,CACL,mBAAoB,GACpB,WAAY,EACZ,eAAgB,EAChB,sBAAuB,EACvB,eAAgB,GAChB,cAAe,EACjB,EAII,MAAAE,EAAgBF,EAAY,OAAO,CAAC5I,EAAK+I,IAAS/I,EAAM+I,EAAM,CAAC,EAAIH,EAAY,OAG/ER,EAAiBY,GAA4BJ,CAAW,EAGxDP,EAAwBP,EAAQ,CAAC,EAAE,MAAQ,GAC3CA,EAAQA,EAAQ,OAAS,CAAC,EAAE,MAAQA,EAAQ,CAAC,EAAE,OAASA,EAAQ,CAAC,EAAE,MAAS,IAC9E,EAIEI,EADsBU,EAAY,OAAeG,GAAAA,EAAO,CAAC,EAAE,OAChBH,EAAY,OAAS,IAAOE,EAAgB,EAGvFR,EAAiBW,GAAkBnB,EAAQ,IAASoB,GAAAA,EAAE,KAAK,CAAC,EAG5DC,EAAWC,GAA8BtB,CAAO,EAChDS,EAAgBY,EAAS,OAAS,GACtCA,EAAS,KAAmBE,GAAA,CAE1B,GAAIA,GAAcvB,EAAQ,OAAS,EAAU,MAAA,GAE7C,MAAMwB,EAAexB,EAAQ,MAAMuB,EAAa,CAAC,EACjD,OAAOE,GAA2BD,EAAa,IAAS,GAAA,EAAE,KAAK,CAAC,CAAA,CACjE,EAEI,MAAA,CACL,mBAAApB,EACA,WAAYY,EACZ,eAAAV,EACA,sBAAAC,EACA,eAAAC,EACA,cAAAC,CACF,CACF,EAKMS,GAA+BQ,GAA6B,CAC5D,GAAAA,EAAO,QAAU,EAAU,MAAA,GAEzB,MAAAC,EAAOD,EAAO,OAAO,CAACxJ,EAAK0J,IAAQ1J,EAAM0J,EAAK,CAAC,EAAIF,EAAO,OAE1DnJ,EADemJ,EAAO,IAAIE,GAAO,KAAK,IAAIA,EAAMD,EAAM,CAAC,CAAC,EAChC,OAAO,CAACzJ,EAAKM,IAASN,EAAMM,EAAM,CAAC,EAAIkJ,EAAO,OAGrE,OAAAC,IAAS,EAAI,KAAK,IAAI,EAAGpJ,EAAW,KAAK,IAAIoJ,EAAM,CAAC,CAAC,EAAI,CAClE,EAKMR,GAAqBU,GAAsC,CAC3D,GAAAA,EAAe,OAAS,EAAU,MAAA,GAGtC,MAAMC,EAAQ,CAAC,EACf,QAASze,EAAI,EAAGA,EAAIwe,EAAe,OAAQxe,IACzCye,EAAM,KAAKD,EAAexe,CAAC,EAAIwe,EAAexe,EAAE,CAAC,CAAC,EAGpD,IAAI0e,EAAc,EAClB,QAAS1e,EAAI,EAAGA,EAAIye,EAAM,OAAQze,KAC3Bye,EAAMze,CAAC,GAAK,GAAKye,EAAMze,EAAE,CAAC,EAAI,GAAOye,EAAMze,CAAC,EAAI,GAAKye,EAAMze,EAAE,CAAC,GAAK,IACtE0e,IAMJ,OADoBA,GAAeD,EAAM,OAAS,GAC7B,EACvB,EAMMR,GACJtB,GACa,CACb,MAAMgC,EAA2B,CAAC,EAElC,QAAS3e,EAAI,EAAGA,EAAI2c,EAAQ,OAAQ3c,IAAK,CACjC,MAAA4e,EAAgBjC,EAAQ3c,CAAC,EAAE,MAC3B6e,EAAalC,EAAQ3c,EAAE,CAAC,EAAE,MAG5B6e,EAAa,IAAMA,EAAaD,GAAiBC,EAAa,KAChEF,EAAe,KAAK3e,CAAC,CACvB,CAGK,OAAA2e,CACT,EAKMP,GAA8BI,GAAsC,CACpE,GAAAA,EAAe,OAAS,EAAU,MAAA,GAEtC,IAAIM,EAAmB,EACvB,QAAS9e,EAAI,EAAGA,EAAIwe,EAAe,OAAQxe,IACrCwe,EAAexe,CAAC,EAAIwe,EAAexe,EAAE,CAAC,GACxC8e,IAIG,OAAAA,GAAoBN,EAAe,OAAS,GAAK,EAC1D,EAMM9e,GAAeC,GAA0B,CACzC,GAAA,KAAK,IAAIA,CAAK,EAAI,WAAa,GAAGA,EAAM,QAAQ,CAAC,CAAC,KAEtD,MAAMof,EAAQ,CAAC,KAAM,KAAM,KAAM,IAAI,EACjC,IAAAr1B,EAAQ,KAAK,IAAIiW,CAAK,EACtBqf,EAAY,GAEhB,KAAOt1B,GAAS,MAAQs1B,EAAYD,EAAM,OAAS,GACxCr1B,GAAA,KACTs1B,IAIK,MAAA,GADMrf,EAAQ,EAAI,IAAM,EACjB,GAAGjW,EAAM,QAAQ,CAAC,CAAC,IAAIq1B,EAAMC,CAAS,CAAC,EACvD,ECtRaC,GACX52B,GACiC,CACjC,MAAM6G,EAAgD,CAAC,EAGjDgwB,EAA8B72B,EAAQ,KAAOA,EAAQ,MAAS,IAC9D82B,EAAmB92B,EAAQ,KAAK,MAAQ,EACzCA,EAAQ,KAAK,KAAOA,EAAQ,KAAK,MAAS,IAC3C,EACE+2B,EAAuB/2B,EAAQ,gBAAkB,OACjDg3B,EAA2Bh3B,EAAQ,gBAAkB,SACrDi3B,EAAsBj3B,EAAQ,cAAc,MAAQ,GACpDk3B,EAA0Bl3B,EAAQ,cAAc,MAAQ,GAGxDm3B,EAAqB,CAAC,GAAGn3B,EAAQ,SAAS,EAC7C,KAAK,CAAC2Z,EAAGC,IAAMA,EAAE,IAAMD,EAAE,GAAG,EAC5B,MAAM,EAAG,CAAC,EAGTkd,EAA6B,IAC/BhwB,EAAgB,KAAK,CACnB,GAAI,oBACJ,MAAO,6BACP,YACE,wBAAwBgwB,EAA2B,QAAQ,CAAC,CAAC,sKAG/D,OAAQ,OACR,WAAY,GACZ,OAAQ,2BAAA,CACT,EAICC,EAAmB,IACrBjwB,EAAgB,KAAK,CACnB,GAAI,kBACJ,MAAO,uBACP,YACE,wBAAwBiwB,EAAiB,QAAQ,CAAC,CAAC,iNAGrD,OAAQ,OACR,WAAY,EAAA,CACb,EAIG,MAAAM,EAAqBp3B,EAAQ,MAAQ,GACrCq3B,EAAaF,EAAmB,OAAkBrhB,GAAAA,EAAQ,IAAMshB,CAAkB,EAEpFC,EAAW,OAAS,GAAKR,EAA6B,IACxDQ,EAAW,QAAmBvhB,GAAA,CAC5BjP,EAAgB,KAAK,CACnB,GAAI,cAAciP,EAAQ,GAAG,GAC7B,MAAO,sBAAsBA,EAAQ,IAAI,GACzC,YACE,YAAYA,EAAQ,IAAI,WAAWA,EAAQ,GAAG,cAAcA,EAAQ,cAAc,QAAQ,CAAC,CAAC,iHAE9F,OAAQ,SACR,WAAY,GACZ,OAAQ,iBAAA,CACT,CAAA,CACF,EAICmhB,EACFpwB,EAAgB,KAAK,CACnB,GAAI,qBACJ,MAAO,8BACP,YACE,4CAA4C7G,EAAQ,cAAc,KAAK,iMAGzE,OAAQ,SACR,WAAY,EAAA,CACb,EACQk3B,GAA2BH,GACpClwB,EAAgB,KAAK,CACnB,GAAI,yBACJ,MAAO,sCACP,YACE,kDAAkD7G,EAAQ,cAAc,KAAK,8JAE/E,OAAQ,SACR,WAAY,EAAA,CACb,EAK6BA,EAAQ,UAAU,OAAOua,GACvDA,EAAE,aAAe,QAAaA,EAAE,WAAa,GAAKA,EAAE,kBAAoB,QAAaA,EAAE,gBAAkB,EAC3G,EAEwB,QAAmBzE,GAAA,CACzCjP,EAAgB,KAAK,CACnB,GAAI,eAAeiP,EAAQ,GAAG,GAC9B,MAAO,0BAA0BA,EAAQ,IAAI,GAC7C,YACE,YAAYA,EAAQ,IAAI,WAAWA,EAAQ,GAAG,kMAGhD,OAAQ,OACR,WAAY,GACZ,OAAQ,oBAAA,CACT,CAAA,CACF,EAGD,MAAMwhB,EAAuBt3B,EAAQ,OAASA,EAAQ,MAAS,IAC3D,OAAAs3B,EAAsB,IAAMP,GAC9BlwB,EAAgB,KAAK,CACnB,GAAI,mBACJ,MAAO,2BACP,YACE,GAAGywB,EAAoB,QAAQ,CAAC,CAAC,6OAGnC,OAAQ,MACR,WAAY,EAAA,CACb,EAICt3B,EAAQ,QAAU,KAAOg3B,GAC3BnwB,EAAgB,KAAK,CACnB,GAAI,iBACJ,MAAO,8BACP,YACE,qDAAqD7G,EAAQ,OAAO,8IAGtE,OAAQ,SACR,WAAY,EAAA,CACb,EAGI6G,CACT,ECrJa0wB,GACXC,GACwB,CAElB,MAAApH,EAAWqH,GAAuBD,CAAO,EAGzC5e,EAAY8e,GAAsBF,CAAO,EAGzC5D,EAAa+D,GAAyBH,CAAO,EAE5C,MAAA,CACL,SAAApH,EACA,UAAAxX,EACA,WAAAgb,CACF,CACF,EAKM6D,GAA0BD,IACvB,CACL,eAAgB,CACd,MAAOA,EAAQ,MACf,KAAMA,EAAQ,KACd,KAAMA,EAAQ,KACd,YAAcA,EAAQ,KAAOA,EAAQ,MAAS,GAChD,EACA,KAAM,CACJ,MAAOA,EAAQ,KAAK,MACpB,KAAMA,EAAQ,KAAK,KACnB,KAAMA,EAAQ,KAAK,KACnB,YAAaA,EAAQ,KAAK,MAAQ,EAC7BA,EAAQ,KAAK,KAAOA,EAAQ,KAAK,MAAS,IAC3C,CACN,EACA,OAAQA,EAAQ,OAChB,OAAQA,EAAQ,OAChB,QAASA,EAAQ,QACjB,cAAeA,EAAQ,cACvB,mBAAoB,CAClB,WAAYI,GAAkBJ,EAAQ,OAAO,EAC7C,YAAaI,GAAkBJ,EAAQ,OAAO,EAC9C,cAAeK,GAAuBL,EAAQ,OAAO,CAAA,CAEzD,GAMIE,GAAyBF,GAA8B,CAE3D,MAAMM,EAAeC,GAA6BP,EAAQ,UAAWA,EAAQ,OAAO,EAG9EQ,EAAiB3D,GAAkBmD,EAAQ,UAAWA,EAAQ,OAAO,EAEpE,MAAA,CACL,aAAcS,GAAsBT,EAAQ,SAAS,EACrD,aAAAM,EACA,eAAAE,CACF,CACF,EAKML,GAA4BH,IACzB,CACL,OAAQU,GAAsBV,EAAQ,WAAW,EACjD,cAAe,CACb,MAAOA,EAAQ,cAAc,MAC7B,aAAcA,EAAQ,cAAc,aACpC,WAAYA,EAAQ,cAAc,WAClC,OAAQW,GAAkBX,EAAQ,cAAc,KAAK,CACvD,EACA,4BAA6BZ,GAAoCY,CAAO,CAC1E,GAMII,GAEJtD,GACW,CACP,GAAAA,EAAQ,OAAS,EAAU,MAAA,GAIzB,MAAA8D,EAAc,KAAK,IAAI,EACvBC,EAAgB/D,EACnB,OAAYoB,GAAA0C,EAAc1C,EAAE,UAAY,GAAK,EAC7C,KAAK,CAAC/b,EAAGC,IAAMA,EAAE,UAAYD,EAAE,SAAS,EAEvC,GAAA0e,EAAc,OAAS,EAAU,MAAA,GAG/B,MAAAC,EAAcD,EAAc,CAAC,EAC7BE,EAAeF,EAAcA,EAAc,OAAS,CAAC,EAErDG,GAAmBF,EAAY,UAAYC,EAAa,WAAa,IACvE,OAAAC,GAAmB,EAAU,EAKd,KAAK,IAAIF,EAAY,KAAOC,EAAa,IAAI,EAC1B,KAEZC,CAC5B,EAKMX,GACJvD,GACW,CACP,GAAAA,EAAQ,OAAS,EAAU,MAAA,GAGzB,MAAA8D,EAAc,KAAK,IAAI,EACvBC,EAAgB/D,EACnB,OAAYoB,GAAA0C,EAAc1C,EAAE,UAAY,GAAK,EAC7C,KAAK,CAAC/b,EAAGC,IAAMA,EAAE,UAAYD,EAAE,SAAS,EAEvC,GAAA0e,EAAc,OAAS,EAAU,MAAA,GAI/B,MAAAC,EAAcD,EAAc,CAAC,EAC7BE,EAAeF,EAAcA,EAAc,OAAS,CAAC,EAGvD,OADqBC,EAAY,UAAYC,EAAa,WAAa,KACpD,EAAU,CAQnC,EAKMN,GACJrf,GAEO,CAAC,GAAGA,CAAS,EAAE,KAAK,CAACe,EAAGC,IAAMA,EAAE,IAAMD,EAAE,GAAG,EAM9Coe,GAA+B,CACnCnf,EACA0b,IACqD,CACrD,MAAMrmB,EAA2D,CAAC,EAGlE,OAAA2K,EAAU,QAAmB9C,GAAA,CAErB,MAAA0e,EAAiBF,EACpB,IAAaxhB,GAAA,CACN,MAAAqiB,EAAeriB,EAAM,UAAU,QAAUyH,EAAE,MAAQzE,EAAQ,GAAG,EAChE,OAACqf,EAEE,CACL,UAAWriB,EAAM,UACjB,MAAOqiB,EAAa,GACtB,EAL0B,IAM3B,CAAA,EACA,OAAQriB,GAAyDA,IAAU,IAAI,EAG9E,GAAA0hB,EAAe,OAAS,EAAG,OAGzB,MAAAiE,EAAYC,GAA0BlE,CAAc,EAE1DvmB,EAAO,KAAK,CACV,IAAK6H,EAAQ,IACb,KAAMA,EAAQ,KACd,WAAY0e,EACZ,UAAAiE,CAAA,CACD,CAAA,CACF,EAEMxqB,CACT,EAKMyqB,GACJC,GACyC,CAEnC,MAAAC,EAAWD,EAAO,CAAC,EAAE,UACrBE,EAAaF,EAAO,QAAUpe,EAAE,UAAYqe,GAAY,GAAK,EAC7DE,EAAaH,EAAO,IAAIpe,GAAKA,EAAE,KAAK,EAEpC,EAAIoe,EAAO,OAGXI,EAAQF,EAAW,OAAO,CAACrM,EAAKwM,IAAMxM,EAAMwM,EAAG,CAAC,EAAI,EACpDC,EAAQH,EAAW,OAAO,CAACtM,EAAK0M,IAAM1M,EAAM0M,EAAG,CAAC,EAAI,EAG1D,IAAIC,EAAY,EACZC,EAAc,EAElB,QAASzhB,EAAI,EAAGA,EAAI,EAAGA,IACrBwhB,IAAcN,EAAWlhB,CAAC,EAAIohB,IAAUD,EAAWnhB,CAAC,EAAIshB,GACxDG,GAAe,KAAK,IAAIP,EAAWlhB,CAAC,EAAIohB,EAAO,CAAC,EAIlD,MAAMM,EAAQD,IAAgB,EAAID,EAAYC,EAAc,EACtDE,EAAYL,EAAQI,EAAQN,EAE3B,MAAA,CAAE,MAAAM,EAAO,UAAAC,CAAU,CAC5B,EAKMpB,GACJqB,GACG,CACG,MAAAC,EAAQD,EAAY,OAAO,CAAC/M,EAAKtT,IAASsT,EAAMtT,EAAK,MAAO,CAAC,EAE5D,OAAAqgB,EAAY,IAAargB,IAAA,CAC9B,KAAMA,EAAK,KACX,MAAOA,EAAK,MACZ,WAAaA,EAAK,MAAQsgB,EAAS,GAAA,EACnC,CACJ,EAKMrB,GACJt0B,GAEIA,EAAQ,GAAW,OACnBA,EAAQ,GAAW,WAChB,OC1PIoS,GAA4C,CAAC,CACxD,QAAAiC,EAAU,GACV,WAAAuhB,EAAa,UACf,IAAM,CAEJ,KAAM,CAACxlB,EAAWC,CAAY,EAAI7J,EAAAA,SAAkBovB,CAAqB,EAEnE1lB,EAAgBvI,EAAa/L,GAAqBA,EAAM,QAAQ,OAAO,EACvEyQ,EAAU1E,EAAa/L,GAAqBA,EAAM,QAAQ,OAAO,EACjEjC,EAAQgO,EAAa/L,GAAqBA,EAAM,QAAQ,KAAK,EAI7Di6B,EAAyC3lB,EAC3C,CACE,MAAOA,EAAc,aACrB,KAAMA,EAAc,aACpB,KAAMA,EAAc,YACpB,OAAQA,EAAc,aACtB,OAAQA,EAAc,eAAiB,EACvC,QAASA,EAAc,eAAiB,EACxC,KAAM,CACJ,MAAOA,EAAc,kBACrB,KAAMA,EAAc,iBACpB,KAAMA,EAAc,gBACtB,EAEA,QAAS,EACT,cAAe,MACf,YAAa,CAAC,EACd,cAAe,CACb,MAAO,EACP,aAAc,EACd,WAAY,CACd,EACA,QAAS,CAAC,EACV,UAAW,CAAA,CAAC,EAEd,KAGJ,GAAI7D,EACK,OAAAjF,EAAA,IAACskB,GAAiB,CAAA,QAAQ,4BAA6B,CAAA,EAI5D,GAAA/xB,GAAS,CAACk8B,EACL,OAAAzuB,EAAA,IAACokB,GAAA,CACN,QAAQ,gCACR,QAAS,OAAO7xB,GAAU,SAAWA,EAAQ,OAC7C,MAAO,IAAM,CAAA,CAA8B,CAC7C,EAII,MAAAm8B,EAAgBpC,GAAkBmC,CAAa,EAGrD,OAAIxhB,EAEAjN,EAAA,IAAC,MAAI,CAAA,UAAU,uCACb,SAAAA,EAAAA,IAACklB,IAAkB,KAAMwJ,EAAe,QAAS,EAAA,CAAM,CACzD,CAAA,QAMD,MAAI,CAAA,UAAW,iBAAiBzhB,EAAU,UAAY,EAAE,GACvD,SAAClN,OAAAkI,GAAA,CAAK,UAAAe,EAAsB,SAAWN,GAAkBO,EAAaP,CAAgB,EACpF,SAAA,CAAA1I,EAAAA,IAAC8H,IAAI,GAAG,WAAW,MAAM,WACvB,eAACC,GAAS,CAAA,GAAG,WAAW,OAAQiB,IAAc,WAC5C,SAAAhJ,EAAA,IAACklB,IAAkB,KAAMwJ,EAAe,EAC1C,CACF,CAAA,QACC5mB,GAAI,CAAA,GAAG,YAAY,MAAM,YACxB,eAACC,GAAS,CAAA,GAAG,YAAY,OAAQiB,IAAc,YAC7C,SAAAhJ,EAAA,IAACknB,IAAmB,KAAMwH,EAAe,EAC3C,CACF,CAAA,QACC5mB,GAAI,CAAA,GAAG,aAAa,MAAM,aACzB,eAACC,GAAS,CAAA,GAAG,aAAa,OAAQiB,IAAc,aAC9C,SAAAhJ,EAAA,IAAC0oB,IAAoB,KAAMgG,EAAe,EAC5C,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,ECjGatiB,EAAc,CAACC,EAAeC,EAAW,IAAc,CAC5D,GAAAD,IAAU,EAAU,MAAA,UACxB,GAAI,CAACA,GAAS,MAAMA,CAAK,EAAU,MAAA,MAEnC,MAAMkY,EAAalY,EAAQ,EACnBA,EAAA,KAAK,IAAIA,CAAK,EAEtB,MAAME,EAAI,KACJE,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAI,EAEhEC,EAAI,KAAK,MAAM,KAAK,IAAIL,CAAK,EAAI,KAAK,IAAIE,CAAC,CAAC,EAE5CiY,EAAiB,YAAYnY,EAAQ,KAAK,IAAIE,EAAGG,CAAC,GAAG,QAAQJ,CAAQ,CAAC,EACrE,MAAA,GAAGiY,EAAa,IAAM,EAAE,GAAGC,CAAc,IAAI/X,EAAMC,CAAC,CAAC,EAC9D,EAKaiiB,GAAgBC,GACvB,MAAMA,CAAG,EAAU,MAChBA,EAAI,eAAe,ECTxBC,GAAsD,CAAC,CAAE,KAAAx3B,EAAM,QAAA4V,EAAU,MAAY,CACzF,KAAM,CAACjE,EAAWC,CAAY,EAAI7J,EAAAA,SAAoC,YAAY,EAC5E,CAAC0vB,EAAmBC,CAAoB,EAAI3vB,EAAAA,SAAwB,IAAI,EACxE,CAAC4vB,EAAcC,CAAe,EAAI7vB,EAAAA,SAAwB,IAAI,EAE9D,CAAE,WAAA8vB,EAAY,cAAAC,CAAA,EAAkB93B,EAGhC+3B,EAAsB32B,GAA+E,CACrG,IAAAksB,EACApa,EAEJ,OAAQ9R,EAAQ,CACd,IAAK,UACL,IAAK,SACKksB,EAAA,uBACApa,EAAA,UACR,MACF,IAAK,UACKoa,EAAA,uBACApa,EAAA,UACR,MACF,IAAK,QACL,IAAK,SACKoa,EAAA,sBACApa,EAAA,WACR,MACF,QACUoa,EAAA,8BACApa,EAAA,SAAA,CAGL,OAAAvK,MAAC,QAAK,UAAU,gBAAgB,MAAO,CAAE,MAAA2kB,GAAU,SAAMpa,EAAA,CAClE,EAGM8kB,EAAuC,CAC3C,CACE,IAAK,aACL,OAAQ,cACR,SAAU,GACV,OAASC,GACNvvB,EAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAC,EAAA,IAAC,OAAK,CAAA,UAAU,yBAA0B,SAAAsvB,EAAU,WAAW,EAC9DtvB,EAAA,IAAA,OAAA,CAAK,UAAU,0BAA2B,WAAU,MAAO,CAAA,CAAA,CAC9D,CAAA,CAEJ,EACA,CACE,IAAK,SACL,OAAQ,cACR,SAAU,GACV,OAASsvB,GAAcA,EAAU,OAASA,EAAU,OAAO,cAAgB,EAC7E,EACA,CACE,IAAK,cACL,OAAQ,QACR,SAAU,GACV,OAASA,GACNvvB,EAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAC,EAAA,IAACykB,GAAA,CACC,MAAO6K,EAAU,YACjB,MAAO,GAAGA,EAAU,YAAY,QAAQ,CAAC,CAAC,GAAA,CAC5C,EACCtvB,MAAA,MAAA,CAAI,UAAU,yBACb,gBAAC,OAAM,CAAA,SAAA,CAAAoM,EAAYkjB,EAAU,IAAI,EAAE,OAAKljB,EAAYkjB,EAAU,KAAK,CAAA,CAAA,CAAE,CACvE,CAAA,CAAA,CACF,CAAA,CAEJ,EACA,CACE,IAAK,QACL,OAAQ,OACR,SAAU,GACV,OAASA,GAAcljB,EAAYkjB,EAAU,KAAK,CACpD,EACA,CACE,IAAK,aACL,OAAQ,SACR,SAAU,GACV,OAASA,GAAc,GAAGA,EAAU,UAAU,GAChD,EACA,CACE,IAAK,SACL,OAAQ,SACR,SAAU,GACV,OAASA,GAAcF,EAAmBE,EAAU,OAAO,MAAM,CACnE,EACA,CACE,IAAK,WACL,OAAQ,SACR,SAAU,GACV,OAASA,GACPtvB,EAAAA,IAACyG,EAAM,CAAA,KAAM6oB,EAAU,SAAW,UAAY,UAC3C,SAAUA,EAAA,SAAW,YAAc,YACtC,CAAA,CAAA,CAGN,EAGMC,EAAkC,CACtC,CACE,IAAK,QACL,OAAQ,QACR,SAAU,EACZ,EACA,CACE,IAAK,OACL,OAAQ,OACR,SAAU,GACV,OAASC,GAASA,EAAK,KAAK,YAAY,CAC1C,EACA,CACE,IAAK,OACL,OAAQ,OACR,SAAU,GACV,OAASA,GAASpjB,EAAYojB,EAAK,IAAI,CACzC,EACA,CACE,IAAK,cACL,OAAQ,OACR,SAAU,GACV,OAASA,GACPxvB,EAAA,IAAC,OAAI,UAAU,YACb,gBAAC,OAAK,CAAA,UAAW,oBACfwvB,EAAK,YAAc,GAAK,cACxBA,EAAK,YAAc,GAAK,eAAiB,EAC3C,GACG,SAAA,CAAKA,EAAA,YAAY,IAAA,CAAA,CACpB,CACF,CAAA,CAEJ,EACA,CACE,IAAK,SACL,OAAQ,SACR,SAAU,GACV,OAASA,GACNzvB,EAAA,KAAA,MAAA,CAAI,UAAU,cACZ,SAAA,CAAmBqvB,EAAAI,EAAK,OAAO,MAAM,EACrCA,EAAK,OAAO,OAAO,OAAS,GAC1BxvB,EAAAA,IAAAyG,EAAA,CAAM,KAAK,UAAU,UAAU,OAAQ,SAAK+oB,EAAA,OAAO,OAAO,MAAO,CAAA,CAAA,CAEtE,CAAA,CAEJ,EACA,CACE,IAAK,uBACL,OAAQ,OACR,SAAU,GACV,OAASA,GACNzvB,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAA,IAACykB,GAAA,CACC,MAAO+K,EAAK,OAASA,EAAK,OAAO,cAAgB,EACjD,MAAO,GAAGA,EAAK,OAASA,EAAK,OAAO,cAAgB,CAAC,GAAA,CACvD,EACAzvB,EAAAA,KAAC,OAAK,CAAA,UAAU,mBAAoB,SAAA,CAAKyvB,EAAA,OAASA,EAAK,OAAO,cAAgB,EAAE,GAAA,CAAC,CAAA,CAAA,CACnF,CAAA,CAEJ,EACA,CACE,IAAK,aACL,OAAQ,aACR,SAAU,GACV,OAASA,GAASA,EAAK,WAAW,MAAA,CAEtC,EAGA,OAAIviB,EAEAlN,EAAA,KAAC6F,EAAK,CAAA,UAAU,2CACd,SAAA,CAAC7F,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAU,YAAA,CAAA,EACbA,EAAA,IAAA,MAAA,CAAI,UAAU,wBACb,SAACD,EAAAA,KAAAkI,GAAA,CAAK,UAAAe,EAAsB,SAAWN,GAAkBO,EAAaP,CAAkC,EACtG,SAAA,CAAA1I,MAAC8H,IAAI,GAAG,aAAa,MAAM,aAAa,SAAU,KAAM,QACvDA,GAAI,CAAA,GAAG,WAAW,MAAM,iBAAiB,SAAU,IAAM,CAAA,CAAA,CAAA,CAC5D,CACF,CAAA,CAAA,EACF,EAEC9H,EAAA,IAAA,MAAA,CAAI,UAAU,2BACZ,aAAc,aACbA,EAAA,IAACulB,GAAA,CACC,QAAS8J,EACT,KAAMH,EAAW,MACjB,WAAaI,GAAcP,EAAqBO,EAAU,UAAU,CAAA,CAAA,EAGtEtvB,EAAA,IAACulB,GAAA,CACC,QAASgK,EACT,KAAMJ,EAAc,MACpB,WAAaK,GAASP,EAAgBO,EAAK,EAAE,CAAA,CAAA,CAGnD,CAAA,CAAA,EACF,EAMFzvB,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAU,YAAA,CAAA,EACdD,EAAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,sBAAsB,SAAiB,oBAAA,QACtD,OAAK,CAAA,UAAU,sBAAuB,SAAAkvB,EAAW,MAAM,MAAO,CAAA,CAAA,EACjE,EACAnvB,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,sBAAsB,SAAY,eAAA,QACjD,OAAK,CAAA,UAAU,sBAAuB,SAAAmvB,EAAc,MAAM,MAAO,CAAA,CAAA,CACpE,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACCnvB,EAAA,IAAA,MAAA,CAAI,UAAU,wBACb,SAACD,EAAAA,KAAAkI,GAAA,CAAK,UAAAe,EAAsB,SAAWN,GAAkBO,EAAaP,CAAkC,EACtG,SAAA,CAAA1I,MAAC8H,IAAI,GAAG,aAAa,MAAM,aAAa,SAAU,KAAM,QACvDA,GAAI,CAAA,GAAG,WAAW,MAAM,iBAAiB,SAAU,IAAM,CAAA,CAAA,CAAA,CAC5D,CACF,CAAA,CAAA,EACF,EAEA/H,EAAAA,KAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAAAA,OAACgI,GAAS,CAAA,GAAG,aAAa,OAAQiB,IAAc,aAC9C,SAAA,CAAChJ,EAAAA,IAAA,MAAA,CAAI,UAAU,mCACb,SAAAA,EAAA,IAACulB,GAAA,CACC,QAAS8J,EACT,KAAMH,EAAW,MACjB,WAAaI,GAAcP,EAAqBO,EAAU,UAAU,EACpE,OAAO,YAAA,CAAA,EAEX,EAECR,GACC/uB,EAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAA,OAAC,KAAG,CAAA,SAAA,CAAA,sBAAoB+uB,CAAA,EAAkB,EACzC9uB,EAAA,IAAA,MAAA,CAAI,UAAU,6BACX,UAAM,IAAA,CACN,MAAMsvB,EAAYJ,EAAW,MAAM,KAAU5f,GAAAA,EAAE,aAAewf,CAAiB,EAC/E,OAAKQ,EAGHvvB,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA6F,EAAA,CAAK,UAAU,kBACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAU,YAAA,CAAA,EACdD,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAC,EAAA,IAACykB,GAAA,CACC,MAAO6K,EAAU,YACjB,MAAO,GAAGA,EAAU,YAAY,QAAQ,CAAC,CAAC,GAAA,CAC5C,EACAvvB,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAK,QAAA,QAC5C,OAAK,CAAA,UAAU,wBAAyB,SAAYoM,EAAAkjB,EAAU,IAAI,CAAE,CAAA,CAAA,EACvE,EACAvvB,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAU,aAAA,QACjD,OAAK,CAAA,UAAU,wBAAyB,SAAYoM,EAAAkjB,EAAU,SAAS,CAAE,CAAA,CAAA,EAC5E,EACAvvB,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAM,SAAA,QAC7C,OAAK,CAAA,UAAU,wBAAyB,SAAYoM,EAAAkjB,EAAU,KAAK,CAAE,CAAA,CAAA,CACxE,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAvvB,EAAAA,KAAC6F,EAAK,CAAA,UAAU,uBACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAsB,wBAAA,CAAA,EAC1BD,EAAAA,KAAC,MAAI,CAAA,UAAU,gCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,0BAA0B,SAAW,cAAA,EACpDA,EAAA,IAAA,OAAA,CAAK,UAAU,0BAA2B,WAAU,MAAO,CAAA,CAAA,EAC9D,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,0BAA0B,SAAK,QAAA,EAC9CA,EAAA,IAAA,OAAA,CAAK,UAAU,0BAA2B,WAAU,MAAO,CAAA,CAAA,EAC9D,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,0BAA0B,SAAW,cAAA,EACpDA,EAAAA,IAAA,OAAA,CAAK,UAAU,0BAA2B,SAAO,OAAAsvB,EAAU,WAAc,SAAWljB,EAAYkjB,EAAU,SAAS,EAAI,EAAG,CAAA,CAAA,EAC7H,EACAvvB,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,0BAA0B,SAAO,UAAA,EAChDA,EAAA,IAAA,OAAA,CAAK,UAAU,0BACb,SAAO,OAAAsvB,EAAU,YAAe,SAAW,GAAGA,EAAU,UAAU,SAAW,EAChF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAvvB,EAAAA,KAAC6F,EAAK,CAAA,UAAU,0BACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAa,eAAA,CAAA,GACf,IAAM,CACA,MAAAyvB,EAAeN,EAAc,MAAM,QAAUpkB,EAAE,KAAOukB,EAAU,cAAc,EACpF,OAAKG,EAGH1vB,EAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gCACb,SAAA,CAACC,EAAAA,IAAA,KAAA,CAAI,WAAa,KAAM,CAAA,EACxBD,EAAAA,KAAC,MAAI,CAAA,UAAU,gCACb,SAAA,CAAAC,MAACyG,GAAM,KAAK,OAAQ,SAAagpB,EAAA,KAAK,cAAc,EACpDzvB,EAAA,IAACyG,EAAA,CACC,KACE,UAGD,SAAA2oB,EAAmBK,EAAa,OAAO,MAAM,CAAA,CAAA,CAChD,CACF,CAAA,CAAA,EACF,EAEA1vB,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,qBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,4BAA4B,SAAK,QAAA,QAChD,OAAK,CAAA,UAAU,4BAA6B,SAAYoM,EAAAqjB,EAAa,IAAI,CAAE,CAAA,CAAA,EAC9E,EACA1vB,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,4BAA4B,SAAY,eAAA,EACvDD,EAAA,KAAA,OAAA,CAAK,UAAW,6BACf0vB,EAAa,YAAc,GAAK,cAChCA,EAAa,YAAc,GAAK,eAAiB,EACnD,GACG,SAAA,CAAaA,EAAA,YAAY,IAAA,CAC5B,CAAA,CAAA,EACF,EACA1vB,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,4BAA4B,SAAe,kBAAA,EAC3DA,EAAAA,IAAC,MAAI,CAAA,UAAU,+BACb,SAAAA,EAAA,IAACykB,GAAA,CACC,MAAOgL,EAAa,OAASA,EAAa,OAAO,cAAgB,EACjE,MAAO,GAAGA,EAAa,OAASA,EAAa,OAAO,cAAgB,CAAC,GAAA,CAAA,CAEzE,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECA,EAAa,OAAO,OAAO,OAAS,GAClC1vB,OAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAc,gBAAA,CAAA,EACjBA,EAAA,IAAA,KAAA,CAAG,UAAU,6BACX,WAAa,OAAO,OAAO,IAAI,CAAC0vB,EAAO92B,IACrCmH,EAAA,KAAA,KAAA,CAAe,UAAU,sBACxB,SAAA,CAACC,EAAA,IAAAyG,EAAA,CAAM,KAAK,SAAS,SAAC,IAAA,EACtBzG,EAAAA,IAAC,QAAM,SAAM0vB,CAAA,CAAA,CAAA,CAFN,EAAA92B,CAGT,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,EAxDwBoH,EAAA,IAAC,KAAE,SAAuC,0CAAA,CA0DnE,GAAA,CAAA,CACL,CAAA,CAAA,EACF,EApHqBA,EAAA,IAAC,KAAE,SAAmB,sBAAA,CAoH3C,IAGN,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,SAEC+H,GAAS,CAAA,GAAG,WAAW,OAAQiB,IAAc,WAC5C,SAAA,CAAChJ,EAAAA,IAAA,MAAA,CAAI,UAAU,iCACb,SAAAA,EAAA,IAACulB,GAAA,CACC,QAASgK,EACT,KAAMJ,EAAc,MACpB,WAAaK,GAASP,EAAgBO,EAAK,EAAE,EAC7C,OAAO,IAAA,CAAA,EAEX,EAECR,GACCjvB,EAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAY,cAAA,CAAA,EACfA,EAAA,IAAA,MAAA,CAAI,UAAU,iCACX,UAAM,IAAA,CACN,MAAMwvB,EAAOL,EAAc,MAAM,KAAUpkB,GAAAA,EAAE,KAAOikB,CAAY,EAChE,GAAI,CAACQ,EAAa,OAAAxvB,EAAA,IAAC,KAAE,SAAc,iBAAA,EAE7B,MAAA2vB,EAAiBT,EAAW,MAAM,UAAY5f,EAAE,iBAAmBkgB,EAAK,EAAE,EAG9E,OAAAzvB,EAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA6F,EAAA,CAAK,UAAU,YACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAgB,kBAAA,CAAA,EACpBD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,mBAAmB,SAAM,SAAA,EACxCA,EAAA,IAAA,OAAA,CAAK,UAAU,mBAAoB,WAAK,KAAM,CAAA,CAAA,EACjD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,mBAAmB,SAAK,QAAA,QACvC,OAAK,CAAA,UAAU,mBAAoB,SAAKwvB,EAAA,KAAK,aAAc,CAAA,CAAA,EAC9D,EACAzvB,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,mBAAmB,SAAK,QAAA,QACvC,OAAK,CAAA,UAAU,mBAAoB,SAAYoM,EAAAojB,EAAK,IAAI,CAAE,CAAA,CAAA,EAC7D,EACAzvB,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,mBAAmB,SAAY,eAAA,EAC9CD,EAAA,KAAA,OAAA,CAAK,UAAW,oBACfyvB,EAAK,YAAc,GAAK,cACxBA,EAAK,YAAc,GAAK,eAAiB,EAC3C,GACG,SAAA,CAAKA,EAAA,YAAY,IAAA,CACpB,CAAA,CAAA,EACF,EACAzvB,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,mBAAmB,SAAO,UAAA,EAC1CD,EAAAA,KAAC,OAAK,CAAA,UAAU,mBACb,SAAA,CAAmBqvB,EAAAI,EAAK,OAAO,MAAM,EACrCA,EAAK,OAAO,OAAO,OAAS,GAC1BxvB,EAAAA,IAAAyG,EAAA,CAAM,KAAK,UAAU,UAAU,OAAQ,SAAK+oB,EAAA,OAAO,OAAO,MAAO,CAAA,CAAA,CAEtE,CAAA,CAAA,EACF,EACAzvB,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,mBAAmB,SAAe,kBAAA,EAClDD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAACykB,GAAA,CACC,MAAO+K,EAAK,OAAO,cACnB,MAAO,GAAGA,EAAK,OAAO,aAAa,GAAA,CACrC,EACAzvB,EAAAA,KAAC,OAAK,CAAA,UAAU,4BAA6B,SAAA,CAAAyvB,EAAK,OAAO,cAAc,GAAA,CAAC,CAAA,CAAA,CAC1E,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECA,EAAK,OAAO,OAAO,OAAS,GAC1BzvB,OAAA6F,EAAA,CAAK,UAAU,qBACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAa,eAAA,CAAA,EAChBA,EAAA,IAAA,KAAA,CAAG,UAAU,2BACX,WAAK,OAAO,OAAO,IAAI,CAAC0vB,EAAO92B,IAC7BmH,EAAA,KAAA,KAAA,CAAe,UAAU,oBACxB,SAAA,CAACC,EAAA,IAAAyG,EAAA,CAAM,KAAK,SAAS,SAAC,IAAA,EACtBzG,EAAAA,IAAC,QAAM,SAAM0vB,CAAA,CAAA,CAAA,CAFN,EAAA92B,CAGT,CACD,CACH,CAAA,CAAA,EACF,EAGFmH,EAAAA,KAAC6F,EAAK,CAAA,UAAU,kBACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAU,YAAA,CAAA,EACb2vB,EAAe,OAAS,EACvB3vB,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACZ,SAAA2vB,EAAe,IAAIL,GACjBvvB,EAAA,KAAA,MAAA,CAA+B,UAAU,iBACxC,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAC,EAAA,IAAC,OAAK,CAAA,UAAU,wBAAyB,SAAAsvB,EAAU,WAAW,EAC7DtvB,EAAA,IAAA,OAAA,CAAK,UAAU,yBAA0B,WAAU,MAAO,CAAA,CAAA,EAC7D,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,6BACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,gCACb,SAAA,CAAUuvB,EAAA,YAAY,QAAQ,CAAC,EAAE,GAAA,EACpC,EACAvvB,EAAAA,KAAC,OAAK,CAAA,UAAU,8BACb,SAAA,CAAAqM,EAAYkjB,EAAU,IAAI,EAAE,OAAKljB,EAAYkjB,EAAU,KAAK,CAAA,CAC/D,CAAA,CAAA,EACF,EACAtvB,EAAA,IAACykB,GAAA,CACC,MAAO6K,EAAU,WAAA,CAAA,CACnB,CACF,CAAA,CAAA,GAjBQA,EAAU,UAkBpB,CACD,CACH,CAAA,EAEAtvB,EAAAA,IAAC,KAAE,SAAgC,kCAAA,CAAA,CAAA,CAEvC,CAAA,CAAA,EACF,CAAA,IAGN,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,ECvea4vB,GAAkC,CAAC,CAC9C,KAAAv4B,EACA,MAAA+wB,EAAQ,IACR,OAAAjZ,EAAS,IACT,YAAA0gB,EACA,WAAAC,EAAa,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CACtG,IAAM,CACE,MAAAC,EAAezrB,SAAuB,IAAI,EAEhD/E,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAI,CAACwwB,EAAa,SAAW,CAAC14B,EAAM,OAMpC,MAAM24B,EAAYD,EAAa,QAC/BC,EAAU,UAAY,GACZA,EAAA,MAAM,MAAQ,GAAG5H,CAAK,KACtB4H,EAAA,MAAM,OAAS,GAAG7gB,CAAM,KAClC6gB,EAAU,MAAM,SAAW,WAG3B,MAAMC,EAAa,CAACC,EAAmBnC,EAAWE,EAAWkC,EAAW1F,EAAW2F,IAAkB,CAC7F,MAAAC,EAAM,SAAS,cAAc,KAAK,EAkCxC,GAjCAA,EAAI,MAAM,SAAW,WACjBA,EAAA,MAAM,KAAO,GAAGtC,CAAC,KACjBsC,EAAA,MAAM,IAAM,GAAGpC,CAAC,KAChBoC,EAAA,MAAM,MAAQ,GAAGF,CAAC,KAClBE,EAAA,MAAM,OAAS,GAAG5F,CAAC,KACvB4F,EAAI,MAAM,gBAAkBH,EAAK,OAASJ,EAAWM,EAAQN,EAAW,MAAM,EAC9EO,EAAI,MAAM,OAAS,kBACnBA,EAAI,MAAM,SAAW,SACrBA,EAAI,MAAM,QAAU,MACpBA,EAAI,MAAM,UAAY,aACtBA,EAAI,MAAM,SAAW,OACrBA,EAAI,MAAM,MAAQ,QAClBA,EAAI,MAAM,WAAa,8BACvBA,EAAI,MAAM,OAAS,UAGfF,EAAI,IAAM1F,EAAI,KAChB4F,EAAI,UAAY;AAAA;AAAA,cAEVH,EAAK,IAAI;AAAA;AAAA,YAEXA,EAAK,MAAQ,QAAQ9jB,GAAY8jB,EAAK,KAAK,CAAC,SAAW,EAAE;AAAA,WAK3DL,IACEQ,EAAA,QAAU,IAAMR,EAAYK,CAAI,GAGtCF,EAAU,YAAYK,CAAG,EAGrBH,EAAK,UAAYA,EAAK,SAAS,OAAS,EAAG,CAGvC,MAAAI,EAAaJ,EAAK,SAAS,OAAO,CAAC3O,EAAKjZ,IAAUiZ,EAAMjZ,EAAM,MAAO,CAAC,EAE5E,IAAIioB,EAAWxC,EACXyC,EAAWvC,EACf,MAAMwC,EAAeN,EAAI1F,EAEpByF,EAAA,SAAS,QAAiB5nB,GAAA,CACvB,MAAAooB,EAAQpoB,EAAM,MAAQgoB,EAC5B,IAAIK,EAAQC,EAERH,GACFE,EAASR,EAAIO,EACJE,EAAAnG,EACTwF,EAAW3nB,EAAOioB,EAAUC,EAAUG,EAAQC,EAAQR,EAAQ,CAAC,EACnDG,GAAAI,IAEHA,EAAAR,EACTS,EAASnG,EAAIiG,EACbT,EAAW3nB,EAAOioB,EAAUC,EAAUG,EAAQC,EAAQR,EAAQ,CAAC,EACnDI,GAAAI,EACd,CACD,CAAA,CAEL,EAGAX,EAAW54B,EAAM,EAAG,EAAG+wB,EAAOjZ,EAAQ,CAAC,CAAA,EAEtC,CAAC9X,EAAM+wB,EAAOjZ,EAAQ2gB,EAAYD,CAAW,CAAC,EAEzC7vB,EAAAA,IAAA,MAAA,CAAI,IAAK+vB,EAAc,UAAU,oBAAoB,CAC/D,EAGM3jB,GAAeC,GAA0B,CACzC,GAAAA,IAAU,EAAU,MAAA,UAExB,MAAME,EAAI,KACJE,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,IAAI,EACxC,EAAI,KAAK,MAAM,KAAK,IAAIJ,CAAK,EAAI,KAAK,IAAIE,CAAC,CAAC,EAElD,OAAO,YAAYF,EAAQ,KAAK,IAAIE,EAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAI,IAAME,EAAM,CAAC,CACxE,EClGaokB,GAAoD,CAAC,CAAE,KAAAx5B,KAAW,SAC7E,KAAM,CAAC0vB,EAAYC,CAAa,EAAI5nB,EAAAA,SAAS,EAAE,EACzC,CAAC0xB,EAAqBC,CAAsB,EAAI3xB,EAAAA,SAAS,EAAE,EAC3D,CAAC4xB,EAAcC,CAAe,EAAI7xB,EAAAA,SAAwB,IAAI,EAC9D,CAAC8xB,EAAiBC,CAAkB,EAAI/xB,EAAAA,SAAwB,IAAI,EAGpEgyB,IAAcz+B,EAAA0E,EAAK,cAAL,YAAA1E,EAAkB,UAAW,CAAC,EAIlD4M,EAAAA,UAAU,IAAM,CACR,MAAAmR,EAAQ,WAAW,IAAM,CAC7BqgB,EAAuBhK,CAAU,GAChC,GAAG,EAEC,MAAA,IAAM,aAAarW,CAAK,CAAA,EAC9B,CAACqW,CAAU,CAAC,EAGf,MAAMsK,EAAsBD,EAAY,OAAQE,GAC9CA,EAAI,KAAK,cAAc,SAASR,EAAoB,YAAa,CAAA,CACnE,EAGMS,EAAc,CAClB,KAAM,OACN,MAAOH,EAAY,OAAO,CAAC7P,EAAa+P,IAAuB/P,EAAM+P,EAAI,KAAM,CAAC,EAChF,SAAUF,EAAY,IAAKE,IAAwB,CACjD,KAAMA,EAAI,KAAK,MAAM,GAAG,EAAE,IAAA,GAASA,EAAI,KACvC,KAAMA,EAAI,KACV,MAAOA,EAAI,KACX,UAAWA,EAAI,UACf,aAAcA,EAAI,aAClB,KAAMA,EAAI,KACV,UAAWA,EAAI,SAAA,EACf,CACJ,EAGME,EAAoBR,EACtBI,EAAY,KAAME,GAAuBA,EAAI,OAASN,CAAY,EAClE,KAGES,EAAiD,CACrD,CACE,IAAK,OACL,OAAQ,OACR,SAAU,GACV,OAASxjB,GAAwB,CACzB,MAAA9X,EAAO8X,EAAK,KAAK,MAAM,GAAG,EAAE,OAASA,EAAK,KAE9C,OAAAlO,EAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,uBAAwB,SAAK7J,EAAA,EAC5CA,IAAS8X,EAAK,MACbjO,EAAAA,IAAC,QAAK,UAAU,uBAAwB,WAAK,IAAK,CAAA,CAAA,EAEtD,CAAA,CAGN,EACA,CACE,IAAK,OACL,OAAQ,OACR,SAAU,GACV,OAASiO,GAAwB7B,EAAY6B,EAAK,IAAI,CACxD,EACA,CACE,IAAK,YACL,OAAQ,QACR,SAAU,GACV,OAASA,GAAwBA,EAAK,UAAU,eAAe,CACjE,EACA,CACE,IAAK,eACL,OAAQ,gBACR,SAAU,GACV,OAASA,GAAwB,IAAI,KAAKA,EAAK,YAAY,EAAE,eAAe,CAC9E,EACA,CACE,IAAK,UACL,OAAQ,UACR,SAAU,GACV,OAASA,GACNlO,EAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAA,IAAC4Q,EAAA,CACC,KAAK,KACL,QAAQ,YACR,SAAQ,GACR,QAAS,IAAMqgB,EAAgBhjB,EAAK,IAAI,EACzC,SAAA,cAAA,CAED,EACAjO,EAAA,IAAC4Q,EAAA,CACC,KAAK,KACL,QAAQ,YACR,QAAS,IAAMugB,EAAmBljB,EAAK,IAAI,EAC5C,SAAA,UAAA,CAAA,CAED,CACF,CAAA,CAAA,CAGN,EAGE,OAAAlO,EAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAuB,yBAAA,CAAA,EAC3BA,EAAAA,IAAC,MAAI,CAAA,UAAU,yBACb,SAAAA,EAAA,IAAC0mB,GAAA,CACC,YAAY,wBACZ,aAAcK,EACd,SAAUC,CAAA,CAAA,CAEd,CAAA,CAAA,EACF,EAEAjnB,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAC,MAAC,MAAI,CAAA,UAAU,0BACb,SAAAD,EAAA,KAAC6F,EACC,CAAA,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAwB,0BAAA,CAAA,EAC5BA,EAAAA,IAAC,OAAI,UAAU,oBACb,eAAC4vB,GAAQ,CAAA,KAAM2B,CAAa,CAAA,CAC9B,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAECvxB,MAAA,MAAA,CAAI,UAAU,wBACb,gBAAC4F,EACC,CAAA,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAc,gBAAA,CAAA,EAClBA,EAAA,IAACulB,GAAA,CACC,QAASkM,EACT,KAAMJ,EACN,WAAaC,GAAQL,EAAgBK,EAAI,IAAI,EAC7C,OAAO,MAAA,CAAA,CACT,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGCE,SACE,MAAI,CAAA,UAAU,0BACb,SAACzxB,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4BACb,SAAA,CAACC,EAAAA,IAAA,KAAA,CAAI,WAAkB,KAAK,MAAM,GAAG,EAAE,IAAA,GAASwxB,EAAkB,IAAK,CAAA,EACvExxB,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,OAAM,GACN,KAAK,KACL,QAAS,IAAMqgB,EAAgB,IAAI,EACpC,SAAA,GAAA,CAAA,CAED,EACF,EAEAlxB,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAK,QAAA,EACjCA,EAAA,IAAA,OAAA,CAAK,UAAU,aAAc,WAAkB,IAAK,CAAA,CAAA,EACvD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAK,QAAA,QACjC,OAAK,CAAA,UAAU,aAAc,SAAYoM,EAAAolB,EAAkB,IAAI,CAAE,CAAA,CAAA,EACpE,EACAzxB,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAM,SAAA,QAClC,OAAK,CAAA,UAAU,aAAc,SAAkBwxB,EAAA,UAAU,gBAAiB,CAAA,CAAA,EAC7E,EACAzxB,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAc,iBAAA,EAC3CA,EAAAA,IAAC,OAAK,CAAA,UAAU,aACb,SAAA,IAAI,KAAKwxB,EAAkB,YAAY,EAAE,eAAA,CAC5C,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAzxB,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAqB,uBAAA,CAAA,SACxB,IAAE,CAAA,SAAA,CAAA,SAAOwxB,EAAkB,IAAA,EAAK,SAChC,IAAE,CAAA,SAAA,CAAA,SAAOA,EAAkB,IAAA,EAAK,SAChC,IAAE,CAAA,SAAA,CAAA,cAAYA,EAAkB,UAAY,MAAQ,IAAA,EAAK,SACzD,IAAE,CAAA,SAAA,CAAA,UAAQA,EAAkB,UAAU,eAAe,CAAA,EAAE,SACvD,IAAE,CAAA,SAAA,CAAA,SAAOplB,EAAYolB,EAAkB,IAAI,CAAA,CAAE,CAAA,CAAA,EAChD,EAEAzxB,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAAAC,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,SAAQ,GACR,KAAK,KACL,QAAS,IAAMugB,EAAmBK,EAAkB,IAAI,EACzD,SAAA,oBAAA,CAED,EACAxxB,EAAA,IAAC4Q,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS,IAAM,QAAQ,IAAI,4BAA6B4gB,EAAkB,IAAI,EAC/E,SAAA,uBAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAIDN,SACE,MAAI,CAAA,UAAU,6BACb,SAACnxB,EAAAA,KAAA,MAAA,CAAI,UAAU,sCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,qCACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAe,iBAAA,CAAA,EACnBA,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,OAAM,GACN,KAAK,KACL,QAAS,IAAMugB,EAAmB,IAAI,EACvC,SAAA,GAAA,CAAA,CAED,EACF,EACApxB,EAAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAA+E,iFAAA,CAAA,EACjFkxB,GACCnxB,EAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,OAAC,IAAE,CAAA,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAU,YAAA,CAAA,EAAS,IAAEkxB,CAAA,EAAgB,SAC/C,IAAE,CAAA,SAAA,CAAAlxB,EAAAA,IAAC,UAAO,SAAK,OAAA,CAAA,EAAS,MAAEzM,EAAA69B,EAAY,KAAMrmB,GAAqBA,EAAE,OAASmmB,CAAe,IAAjE,YAAA39B,EAAoE,OAAQ,SAAA,CAAU,CAAA,CAAA,CACnH,CAAA,CAAA,EAEJ,EACAwM,EAAAA,KAAC,MAAI,CAAA,UAAU,sCACb,SAAA,CAAAC,EAAA,IAAC4Q,EAAA,CACC,QAAQ,YACR,SAAQ,GACR,KAAK,KACL,QAAS,IAAMugB,EAAmB,IAAI,EACvC,SAAA,QAAA,CAED,EACAnxB,EAAA,IAAC4Q,EAAA,CACC,QAAQ,SACR,KAAK,KACL,QAAS,IAAM,CACL,QAAA,IAAI,wBAAyBsgB,CAAe,EACpDC,EAAmB,IAAI,CACzB,EACD,SAAA,iBAAA,CAAA,CAED,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EAEJ,CAEJ,EC3PaO,GAAwD,CAAC,CAAE,KAAAr6B,KAAW,CACjF,KAAM,CAACkwB,EAAiBC,CAAkB,EAAIpoB,EAAAA,SAAwB,IAAI,EACpE,CAACuyB,EAAWC,CAAY,EAAIxyB,EAAAA,SAAoC,QAAQ,EAExE,CAAE,YAAAyyB,GAAgBx6B,EAGlBy6B,EAA4C,CAChD,CACE,IAAK,MACL,OAAQ,MACR,MAAO,MACP,MAAO,OACT,EACA,CACE,IAAK,OACL,OAAQ,UACR,MAAO,KACT,EACA,CACE,IAAK,WACL,OAAQ,YACR,MAAO,MACP,OAASC,GAAoB3lB,EAAY2lB,EAAI,QAAQ,EAAI,IAC3D,EACA,CACE,IAAK,YACL,OAAQ,aACR,MAAO,MACP,OAASA,GAAoB3lB,EAAY2lB,EAAI,SAAS,EAAI,IAC5D,EACA,CACE,IAAK,YACL,OAAQ,aACR,MAAO,MACP,OAASA,GAAoB3lB,EAAY2lB,EAAI,SAAS,EAAI,IAAA,CAE9D,EAGMC,EAA2BC,GAC3BA,EAAU,GAAW,oBACrBA,EAAU,GAAW,mBAClB,kBAIP,OAAAlyB,EAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,2BACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAoB,sBAAA,CAAA,EACxBD,EAAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,qBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,4BAA4B,SAAK,QAAA,EACjDD,EAAAA,KAAC,OAAK,CAAA,UAAU,4BAA6B,SAAA,CAAYqM,EAAAylB,EAAY,QAAQ,SAAS,EAAE,IAAA,CAAE,CAAA,CAAA,EAC5F,EACA9xB,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,4BAA4B,SAAM,SAAA,EAClDD,EAAAA,KAAC,OAAK,CAAA,UAAU,4BAA6B,SAAA,CAAYqM,EAAAylB,EAAY,QAAQ,UAAU,EAAE,IAAA,CAAE,CAAA,CAAA,EAC7F,EACA9xB,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,4BAA4B,SAAY,eAAA,EACxDD,EAAAA,KAAC,OAAK,CAAA,UAAU,4BAA6B,SAAA,CAAY8xB,EAAA,QAAQ,YAAY,QAAQ,CAAC,EAAE,GAAA,CAAC,CAAA,CAAA,CAC3F,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEA9xB,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACA,EAAAA,KAAA6F,EAAA,CAAK,UAAU,2BACd,SAAA,CAAC7F,EAAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAuB,yBAAA,CAAA,EAC3BD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC,SAAA,CACC,UAAW,kBAAkB2xB,IAAc,SAAW,SAAW,EAAE,GACnE,QAAS,IAAMC,EAAa,QAAQ,EACrC,SAAA,QAAA,CAED,EACA5xB,EAAA,IAAC,SAAA,CACC,UAAW,kBAAkB2xB,IAAc,OAAS,SAAW,EAAE,GACjE,QAAS,IAAMC,EAAa,MAAM,EACnC,SAAA,MAAA,CAED,EACA5xB,EAAA,IAAC,SAAA,CACC,UAAW,kBAAkB2xB,IAAc,MAAQ,SAAW,EAAE,GAChE,QAAS,IAAMC,EAAa,KAAK,EAClC,SAAA,KAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EAEA7xB,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAoB,sBAAA,CAAA,EACvBA,EAAA,IAAAgK,GAAA,CAAoB,MAAM,OAAO,OAAQ,IACxC,SAAAjK,EAAA,KAACmoB,GAAA,CACC,KAAM,CACJ,CACE,KAAM,OACN,MAAO,uBACP,OAAQ2J,EAAY,WAAW,WAAW,IAAI,CAACK,EAAI/J,KAAS,CAC1D,EAAG+J,EACH,EAAGL,EAAY,WAAW,UAAU1J,CAAG,GAAK,KAAO,KAAA,EACnD,CACJ,EACA,CACE,KAAM,QACN,MAAO,yBACP,OAAQ0J,EAAY,WAAW,WAAW,IAAI,CAACK,EAAI/J,KAAS,CAC1D,EAAG+J,EACH,EAAGL,EAAY,WAAW,WAAW1J,CAAG,GAAK,KAAO,KAAA,EACpD,CAAA,CAEN,EACA,OAAQ,CACN,IAAK,EACL,MAAO,GACP,KAAM,GACN,OAAQ,CACV,EAEA,SAAA,CAACnoB,EAAAA,IAAAkK,GAAA,CAAc,gBAAgB,KAAM,CAAA,EACrClK,EAAAA,IAACmK,GAAM,CAAA,QAAQ,GAAI,CAAA,QAClBE,GAAM,CAAA,QAAQ,OAAO,YAAY,OAAO,OAAO,UAAU,QACzDA,GAAM,CAAA,QAAQ,QAAQ,YAAY,QAAQ,OAAO,UAAU,QAC3DC,GAAQ,EAAA,QACRiE,GAAO,EAAA,EACPvO,EAAAA,IAAA8iB,GAAA,CAAK,KAAK,WAAW,QAAQ,IAAI,OAAO,UAAU,UAAW,CAAE,EAAG,CAAA,CAAK,CAAA,CAAA,CAAA,CAAA,CAE5E,CAAA,CAAA,EACF,EAEA/iB,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAmB,qBAAA,CAAA,EACtBA,EAAA,IAAAgK,GAAA,CAAoB,MAAM,OAAO,OAAQ,IACxC,SAAAjK,EAAA,KAACmoB,GAAA,CACC,KAAM,CACJ,CACE,KAAM,YACN,MAAO,oBACP,OAAQ2J,EAAY,WAAW,WAAW,IAAI,CAACK,EAAI/J,KAAS,CAC1D,EAAG+J,EACH,EAAGL,EAAY,WAAW,SAAS1J,CAAG,CAAA,EACtC,CACJ,EACA,CACE,KAAM,aACN,MAAO,sBACP,OAAQ0J,EAAY,WAAW,WAAW,IAAI,CAACK,EAAI/J,KAAS,CAC1D,EAAG+J,EACH,EAAGL,EAAY,WAAW,UAAU1J,CAAG,CAAA,EACvC,CAAA,CAEN,EACA,OAAQ,CACN,IAAK,EACL,MAAO,GACP,KAAM,GACN,OAAQ,CACV,EAEA,SAAA,CAACnoB,EAAAA,IAAAkK,GAAA,CAAc,gBAAgB,KAAM,CAAA,EACrClK,EAAAA,IAACmK,GAAM,CAAA,QAAQ,GAAI,CAAA,QAClBE,GAAM,CAAA,QAAQ,OAAO,YAAY,OAAO,OAAO,UAAU,QACzDA,GAAM,CAAA,QAAQ,QAAQ,YAAY,QAAQ,OAAO,UAAU,QAC3DC,GAAQ,EAAA,QACRiE,GAAO,EAAA,EACPvO,EAAAA,IAAA8iB,GAAA,CAAK,KAAK,WAAW,QAAQ,IAAI,OAAO,UAAU,UAAW,CAAE,EAAG,CAAA,CAAK,CAAA,CAAA,CAAA,CAAA,CAE5E,CAAA,CAAA,EACF,EAEA/iB,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAgB,kBAAA,CAAA,EACnBA,EAAA,IAAAgK,GAAA,CAAoB,MAAM,OAAO,OAAQ,IACxC,SAAAjK,EAAA,KAACmoB,GAAA,CACC,KAAM,CACJ,CACE,KAAM,cACN,MAAO,uBACP,OAAQ2J,EAAY,WAAW,WAAW,IAAI,CAACK,EAAI/J,KAAS,CAC1D,EAAG+J,EACH,EAAGL,EAAY,WAAW,YAAY1J,CAAG,CAAA,EACzC,CAAA,CAEN,EACA,OAAQ,CACN,IAAK,EACL,MAAO,GACP,KAAM,GACN,OAAQ,CACV,EAEA,SAAA,CAACnoB,EAAAA,IAAAkK,GAAA,CAAc,gBAAgB,KAAM,CAAA,EACrClK,EAAAA,IAACmK,GAAM,CAAA,QAAQ,GAAI,CAAA,QAClBE,GAAM,CAAA,QAAQ,OAAO,YAAY,OAAO,OAAO,UAAU,QACzDA,GAAM,CAAA,QAAQ,QAAQ,YAAY,QAAQ,OAAO,UAAU,QAC3DC,GAAQ,EAAA,QACRiE,GAAO,EAAA,EACPvO,EAAAA,IAAA8iB,GAAA,CAAK,KAAK,WAAW,QAAQ,IAAI,OAAO,UAAU,UAAW,CAAE,EAAG,CAAA,CAAK,CAAA,CAAA,CAAA,CAAA,CAE5E,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEA/iB,EAAAA,KAAC6F,EAAK,CAAA,UAAU,4BACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAuB,yBAAA,CAAA,EAE3BD,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,6BACb,SAACD,EAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAAAA,OAAC,KAAG,CAAA,SAAA,CAAA,aAEFC,EAAAA,IAAC8kB,GAAY,CAAA,QAAQ,4DAA6D,CAAA,CAAA,EACpF,EACA/kB,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAK,QAAA,EACpCD,EAAAA,KAAC,OAAK,CAAA,UAAU,eAAgB,SAAA,CAAYqM,EAAAylB,EAAY,QAAQ,SAAS,EAAE,IAAA,CAAE,CAAA,CAAA,EAC/E,EACA9xB,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAM,SAAA,EACrCD,EAAAA,KAAC,OAAK,CAAA,UAAU,eAAgB,SAAA,CAAYqM,EAAAylB,EAAY,QAAQ,UAAU,EAAE,IAAA,CAAE,CAAA,CAAA,CAChF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QAEC,MAAI,CAAA,UAAU,6BACb,SAAC9xB,EAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAAAA,OAAC,KAAG,CAAA,SAAA,CAAA,OAEFC,EAAAA,IAAC8kB,GAAY,CAAA,QAAQ,uFAAwF,CAAA,CAAA,EAC/G,EACA/kB,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAK,QAAA,EACpCD,EAAAA,KAAC,OAAK,CAAA,UAAU,eAAgB,SAAA,CAAa4uB,GAAAkD,EAAY,QAAQ,QAAQ,EAAE,IAAA,CAAE,CAAA,CAAA,EAC/E,EACA9xB,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAM,SAAA,EACrCD,EAAAA,KAAC,OAAK,CAAA,UAAU,eAAgB,SAAA,CAAa4uB,GAAAkD,EAAY,QAAQ,SAAS,EAAE,IAAA,CAAE,CAAA,CAAA,CAChF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QAEC,MAAI,CAAA,UAAU,6BACb,SAAC9xB,EAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAAAA,OAAC,KAAG,CAAA,SAAA,CAAA,UAEFC,EAAAA,IAAC8kB,GAAY,CAAA,QAAQ,gEAAiE,CAAA,CAAA,EACxF,EACA/kB,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAK,QAAA,EACpCD,EAAAA,KAAC,OAAK,CAAA,UAAW,gBAAgBiyB,EAAwBH,EAAY,QAAQ,QAAQ,IAAI,CAAC,GACvF,SAAA,CAAAA,EAAY,QAAQ,QAAQ,KAAK,QAAQ,CAAC,EAAE,KAAA,CAC/C,CAAA,CAAA,EACF,EACA9xB,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAM,SAAA,EACrCD,EAAAA,KAAC,OAAK,CAAA,UAAW,gBAAgBiyB,EAAwBH,EAAY,QAAQ,QAAQ,KAAK,CAAC,GACxF,SAAA,CAAAA,EAAY,QAAQ,QAAQ,MAAM,QAAQ,CAAC,EAAE,KAAA,CAChD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QAEC,MAAI,CAAA,UAAU,6BACb,SAAC9xB,EAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAAAA,OAAC,KAAG,CAAA,SAAA,CAAA,cAEFC,EAAAA,IAAC8kB,GAAY,CAAA,QAAQ,8DAA+D,CAAA,CAAA,EACtF,EACA9kB,EAAAA,IAAC,MAAI,CAAA,UAAU,eACb,SAAAA,EAAA,IAACykB,GAAA,CACC,MAAOoN,EAAY,QAAQ,YAC3B,MAAO,GAAGA,EAAY,QAAQ,YAAY,QAAQ,CAAC,CAAC,GAAA,CAAA,CAExD,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEA9xB,EAAAA,KAAC6F,EAAK,CAAA,UAAU,gCACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAuB,yBAAA,CAAA,EAE1B6xB,EAAY,YAAY,SACtB9xB,EAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAA,EAAA,KAAC0G,EAAA,CACC,KACEorB,EAAY,YAAY,WAAa,OAAS,SAC9CA,EAAY,YAAY,WAAa,SAAW,UAAY,OAG7D,SAAA,CAAAA,EAAY,YAAY,SAAWA,EAAY,YAAY,SAAS,cAAgB,UAAU,aAAA,CAAA,CACjG,QACC,KACE,CAAA,SAAAA,EAAY,YAAY,OAAS,OAAS,kBAC1CA,EAAY,YAAY,OAAS,QAAU,mBAC3CA,EAAY,YAAY,OAAS,QAAU,wBAA0B,gBACxE,CAAA,CAAA,EACF,EAEA9xB,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACA,EAAAA,KAAA,IAAA,CAAE,UAAU,mBACX,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAa,eAAA,CAAA,EAAS,IAAE6xB,EAAY,YAAY,OAAS,SAAA,EACnE,EAECA,EAAY,YAAY,SACtB9xB,EAAA,KAAA,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAA,OAAC,IACC,CAAA,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAA2B,6BAAA,CAAA,EAAS,IAAE6xB,EAAY,YAAY,QAAQ,KAAK,UAAQA,EAAY,YAAY,QAAQ,IAAI,GAAA,EACjI,SACC,IAAE,CAAA,SAAA,CAAA,aACUzlB,EAAYylB,EAAY,YAAY,QAAQ,MAAM,EAAE,IAAA,CACjE,CAAA,CAAA,EACF,EAGF9xB,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAgB,kBAAA,CAAA,QACnB,KAAG,CAAA,UAAU,uBACX,SAAY6xB,EAAA,YAAY,gBAAgB,IAAI,CAACh2B,EAAKssB,UAChD,KAAa,CAAA,UAAU,sBAAuB,SAAtCtsB,CAAA,EAAAssB,CAA0C,CACpD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EAEApoB,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,sBAAsB,SAAC,IAAA,EACrCA,EAAA,IAAA,IAAA,CAAE,UAAU,yBAAyB,SAAiC,oCAAA,EACtEA,EAAA,IAAA,IAAA,CAAE,UAAU,yBAAyB,SAEtC,wFAAA,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,EAEAD,EAAAA,KAAC6F,EAAK,CAAA,UAAU,8BACd,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAiB,mBAAA,CAAA,EAErBA,EAAA,IAACulB,GAAA,CACC,QAASuM,EACT,KAAMD,EAAY,aAClB,WAAa5jB,GAASuZ,EAAmBvZ,EAAK,GAAG,CAAA,CACnD,EAECsZ,GACCvnB,EAAA,IAAC,MAAI,CAAA,UAAU,2BACX,UAAM,IAAA,OACN,MAAM6K,EAAUgnB,EAAY,aAAa,KAAUviB,GAAAA,EAAE,MAAQiY,CAAe,EACxE,OAAC1c,EAGH9K,EAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAAAA,OAAC,KAAI,CAAA,SAAA,CAAQ8K,EAAA,KAAK,UAAQA,EAAQ,IAAI,GAAA,EAAC,EACvC9K,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,UACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,iBAAiB,SAAU,aAAA,EAC3CD,EAAAA,KAAC,OAAK,CAAA,UAAU,iBAAkB,SAAA,CAAAqM,EAAYvB,EAAQ,QAAQ,EAAE,IAAA,CAAE,CAAA,CAAA,EACpE,EACA9K,EAAAA,KAAC,MAAI,CAAA,UAAU,UACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,iBAAiB,SAAW,cAAA,EAC5CD,EAAAA,KAAC,OAAK,CAAA,UAAU,iBAAkB,SAAA,CAAAqM,EAAYvB,EAAQ,SAAS,EAAE,IAAA,CAAE,CAAA,CAAA,EACrE,EACA9K,EAAAA,KAAC,MAAI,CAAA,UAAU,UACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,iBAAiB,SAAU,aAAA,EAC3CD,EAAAA,KAAC,OAAK,CAAA,UAAU,iBAAkB,SAAA,CAAAqM,EAAYvB,EAAQ,SAAS,EAAE,IAAA,CAAE,CAAA,CAAA,EACrE,EACA9K,EAAAA,KAAC,MAAI,CAAA,UAAU,UACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,iBAAiB,SAAgB,mBAAA,EACjDD,EAAAA,KAAC,OAAK,CAAA,UAAU,iBAAkB,SAAA,CAAQ8K,EAAA,WAAW,QAAQ,CAAC,EAAE,GAAA,CAAC,CAAA,CAAA,CACnE,CAAA,CAAA,EACF,IAEClY,EAAAk/B,EAAY,YAAY,UAAxB,YAAAl/B,EAAiC,OAAQkY,EAAQ,KAChD9K,EAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAACC,EAAA,IAAAyG,EAAA,CAAM,KAAK,SAAS,SAAU,aAAA,EAC/BzG,EAAAA,IAAC,KAAE,SAAwD,0DAAA,CAAA,CAAA,CAC7D,CAAA,CAAA,EAEJ,EA9BmB,IA8BnB,IAGN,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EC/ZamyB,GAAoBC,GAA8C,CAC7E,MAAMC,EAAmB,CAAC,EACpBC,EAAgE,CAAC,EAGnEF,EAAU,SAAW,SACvBC,EAAO,KAAK,sEAAsE,EACzED,EAAU,SAAW,WAC9BC,EAAO,KAAK,8EAA8E,EAIxFD,EAAU,cAAgB,GAC5BC,EAAO,KAAK,iBAAiBD,EAAU,aAAa,iDAAiD,EAC5FA,EAAU,cAAgB,IACnCC,EAAO,KAAK,YAAYD,EAAU,aAAa,sDAAsD,EAI7FA,EAAA,WAAW,QAAgBG,GAAA,CAC/BA,EAAK,SAAW,OAClBF,EAAO,KAAK,GAAGE,EAAK,IAAI,KAAKA,EAAK,EAAE,wBAAwBA,EAAK,KAAK,oBAAoBA,EAAK,SAAS,GAAG,EAC3GD,EAAmB,KAAK,CACtB,KAAMC,EAAK,KACX,MAAOA,EAAK,MACZ,UAAWA,EAAK,UAChB,SAAU,UAAA,CACX,GACQA,EAAK,SAAW,YACzBF,EAAO,KAAK,GAAGE,EAAK,IAAI,KAAKA,EAAK,EAAE,0BAA0BA,EAAK,KAAK,0BAA0BA,EAAK,SAAS,GAAG,EACnHD,EAAmB,KAAK,CACtB,KAAMC,EAAK,KACX,MAAOA,EAAK,MACZ,UAAWA,EAAK,UAChB,SAAU,SAAA,CACX,EACH,CACD,EAGK,MAAAC,EAAyB,CAACl7B,EAAYnB,IAAiB,CAC3D,MAAMo8B,EAAOH,EAAU,WAAW,KAAU1jB,GAAAA,EAAE,KAAOpX,CAAE,EACnDi7B,GAAQA,EAAK,IAAM,IACrBF,EAAO,KAAK,GAAGl8B,CAAI,cAAco8B,EAAK,GAAG,4DAA4D,EACrGD,EAAmB,KAAK,CACtB,KAAAn8B,EACA,MAAOo8B,EAAK,IACZ,UAAW,EACX,SAAU,UAAA,CACX,EAEL,EAGAC,EAAuB,EAAG,qBAAqB,EAC/CA,EAAuB,IAAK,+BAA+B,EAC3DA,EAAuB,IAAK,yBAAyB,EACrDA,EAAuB,IAAK,+BAA+B,EAGvD,IAAAC,EAAcC,GAAqBN,EAAWE,CAAkB,EAE7D,MAAA,CACL,OAAAD,EACA,mBAAAC,EACA,YAAAG,CACF,CACF,EAKMC,GAAuB,CAC3BN,EACAE,IACW,CAEX,IAAIxlB,EAAQslB,EAAU,cAGlB,OAAAA,EAAU,SAAW,SACftlB,EAAA,KAAK,IAAIA,EAAO,EAAE,EACjBslB,EAAU,SAAW,YACtBtlB,EAAA,KAAK,IAAIA,EAAO,EAAE,GAI5BwlB,EAAmB,QAAgBC,GAAA,CAC7BA,EAAK,WAAa,WACXzlB,GAAA,GACAylB,EAAK,WAAa,YAClBzlB,GAAA,GACX,CACD,EAGM,KAAK,IAAI,EAAG,KAAK,IAAI,IAAKA,CAAK,CAAC,CACzC,ECnGa6lB,GACXvB,GAC4B,CAC5B,MAAMx1B,EAA2C,CAAC,EAG5Cg3B,EAAYxB,EACf,OAAOE,GAAO,OAAA,QAAA3+B,EAAA2+B,EAAI,QAAJ,YAAA3+B,EAAW,YAAa2+B,EAAI,KAAO,UAAiB,EAClE,KAAK,CAAC5iB,EAAGC,IAAMA,EAAE,KAAOD,EAAE,IAAI,EAG3BmkB,EAAezB,EAClB,UACC,OAAA,QAAAz+B,EAAA2+B,EAAI,QAAJ,YAAA3+B,EAAW,YACX,CAAC,QAAS,MAAM,EAAE,SAAS2+B,EAAI,MAAM,IAAI,GACzCwB,GAAYxB,EAAI,MAAM,aAAc,EAAE,EAAA,EAEvC,KAAK,CAAC5iB,EAAGC,IAAMA,EAAE,KAAOD,EAAE,IAAI,EAGjC,OAAAkkB,EAAU,MAAM,EAAG,CAAC,EAAE,QAAQ,CAACtB,EAAK14B,IAAU,OAC5CgD,EAAgB,KAAK,CACnB,GAAI,mBAAmBhD,CAAK,GAC5B,KAAM04B,EAAI,KACV,KAAMA,EAAI,KACV,YAAa,UAAS3+B,EAAA2+B,EAAI,QAAJ,YAAA3+B,EAAW,IAAI,eAAeyZ,GAAYklB,EAAI,IAAI,CAAC,gCACzE,OAAQA,EAAI,KAAO,KAAO,KAAO,KAAO,OAAS,SACjD,OAAQ,iBAAA,CACT,CAAA,CACF,EAGDuB,EAAa,MAAM,EAAG,CAAC,EAAE,QAAQ,CAACvB,EAAK14B,IAAU,SAC/C,MAAMm6B,EAAkBC,KAAUrgC,EAAA2+B,EAAI,QAAJ,YAAA3+B,EAAW,eAAgB,CAAC,EAC9DiJ,EAAgB,KAAK,CACnB,GAAI,aAAahD,CAAK,GACtB,KAAM04B,EAAI,KACV,KAAMA,EAAI,KACV,YAAa,GAAGllB,GAAYklB,EAAI,IAAI,CAAC,KAAI/9B,EAAA+9B,EAAI,QAAJ,YAAA/9B,EAAW,IAAI,8BAA8Bw/B,CAAe,SACrG,OAAQzB,EAAI,KAAO,IAAM,KAAO,KAAO,SAAW,MAClD,OAAQ,iBAAA,CACT,CAAA,CACF,EAGoBF,EAClB,OAAOE,GAAA,OACN,OAAAA,EAAI,KAAK,SAAS,MAAM,GACxBA,EAAI,KAAK,SAAS,OAAO,KACxB3+B,EAAA2+B,EAAI,QAAJ,YAAA3+B,EAAW,QAAS,UAAY2+B,EAAI,KAAK,cAAc,SAAS,KAAK,EAAA,EAEvE,OAAOA,GAAOA,EAAI,KAAO,IAAM,KAAO,IAAI,EAC1C,KAAK,CAAC5iB,EAAGC,IAAMA,EAAE,KAAOD,EAAE,IAAI,EAEpB,MAAM,EAAG,CAAC,EAAE,QAAQ,CAAC4iB,EAAK14B,IAAU,CAC/CgD,EAAgB,KAAK,CACnB,GAAI,cAAchD,CAAK,GACvB,KAAM04B,EAAI,KACV,KAAMA,EAAI,KACV,YAAa,wBAAwBllB,GAAYklB,EAAI,IAAI,CAAC,yCAC1D,OAAQA,EAAI,KAAO,KAAO,KAAO,KAAO,OAAS,SACjD,OAAQ,gBAAA,CACT,CAAA,CACF,EAGwBF,EACtB,UACCE,EAAI,KAAK,SAAS,QAAQ,GAC1BA,EAAI,KAAK,SAAS,KAAK,GACvBA,EAAI,KAAK,SAAS,MAAM,GACxBA,EAAI,KAAK,SAAS,MAAM,CAAA,EAEzB,OAAOA,GAAOA,EAAI,KAAO,IAAM,KAAO,IAAI,EAC1C,KAAK,CAAC5iB,EAAGC,IAAMA,EAAE,KAAOD,EAAE,IAAI,EAEhB,MAAM,EAAG,CAAC,EAAE,QAAQ,CAAC4iB,EAAK14B,IAAU,CACnDgD,EAAgB,KAAK,CACnB,GAAI,cAAchD,CAAK,GACvB,KAAM04B,EAAI,KACV,KAAMA,EAAI,KACV,YAAa,mCAAmCllB,GAAYklB,EAAI,IAAI,CAAC,qCACrE,OAAQA,EAAI,KAAO,EAAI,KAAO,KAAO,KAAO,OAAS,SACrD,OAAQ,gBAAA,CACT,CAAA,CACF,EAEM11B,CACT,EAKMk3B,GAAc,CAACG,EAAmBC,IAA0B,CAC1D,MAAAC,EAAU,KAAK,IAAA,EAAQF,EACvBG,EAAWF,EAAO,GAAK,GAAK,GAAK,IACvC,OAAOC,EAAUC,CACnB,EAKMJ,GAAaC,GAA8B,CACzC,MAAAE,EAAU,KAAK,IAAA,EAAQF,EAC7B,OAAO,KAAK,MAAME,GAAW,GAAK,GAAK,GAAK,IAAK,CACnD,EAKM/mB,GAAeC,GAA0B,CACzC,GAAAA,IAAU,EAAU,MAAA,UAExB,MAAME,EAAI,KACJE,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,IAAI,EACxC,EAAI,KAAK,MAAM,KAAK,IAAIJ,CAAK,EAAI,KAAK,IAAIE,CAAC,CAAC,EAElD,OAAO,YAAYF,EAAQ,KAAK,IAAIE,EAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAI,IAAME,EAAM,CAAC,CACxE,EClHa4mB,GAAsB,CACjCxB,EACAxI,IAC8B,CAC9B,MAAMrmB,EAAoC,CACxC,SAAU,GACV,KAAM,KACN,SAAU,KACV,MAAO,KACP,gBAAiB,CAAA,CACnB,EAGMswB,EAAoBzB,EAAY,QAAQ,YAAc,GACtD0B,EAAwB1B,EAAY,QAAQ,YAAc,GAG1D2B,EAAmB3B,EAAY,QAAQ,WAAa,GACpD4B,EAAuB5B,EAAY,QAAQ,WAAa,EAGxD6B,EAAoB7B,EAAY,QAAQ,QAAQ,KAAO,GACvD8B,EAAqB9B,EAAY,QAAQ,QAAQ,MAAQ,GAK/D,GAAI,EAFkByB,GAAqBE,GAAoBE,GAAqBC,GAG3E,OAAA3wB,EAOL,GAHJA,EAAO,SAAW,GAGd0wB,GAAqB,CAACC,EACxB3wB,EAAO,KAAO,eACL2wB,GAAsB,CAACD,EAChC1wB,EAAO,KAAO,gBACL0wB,GAAqBC,EAC9B3wB,EAAO,KAAO,gBACLswB,GAAqBE,EAAkB,CAE1C,MAAAI,EAAW/B,EAAY,QAAQ,SAC/BgC,EAAYhC,EAAY,QAAQ,UAElC+B,EAAWC,EAAY,EACzB7wB,EAAO,KAAO,OACL6wB,EAAYD,EAAW,EAChC5wB,EAAO,KAAO,QAEdA,EAAO,KAAO,OAChB,CAIE,OAAAswB,GAAqBE,IAAqBE,GAAqBC,GACjE3wB,EAAO,SAAW,OACTswB,GAAqBE,EAC9BxwB,EAAO,SAAW,UACTuwB,GAAyBE,KAClCzwB,EAAO,SAAW,OAII8wB,GAAA9wB,EAAQ6uB,EAAaxI,CAAO,EAGpD0K,GAA0B/wB,CAAmB,EAEtCA,CACT,EAKM8wB,GAA0B,CAC9B9wB,EACA6uB,EACAxI,IACS,CAEH,MAAA2K,EAAanC,EAAY,aAAa,CAAC,EACvCoC,EAAgBpC,EAAY,aAAa,CAAC,EAEhD,GAAImC,GAAcC,GAAiBD,EAAW,UAAYC,EAAc,UAAY,EAAG,CAE9EjxB,EAAA,MAAQ,WAAWgxB,EAAW,IAAI,gCACzChxB,EAAO,QAAU,CACf,IAAKgxB,EAAW,IAChB,KAAMA,EAAW,KACjB,OAAQA,EAAW,SACrB,EACA,MAAA,CAIE,GAAA3K,EAAQ,QAAU,EAAG,CACvB,MAAM6K,EAAc7K,EAAQA,EAAQ,OAAS,CAAC,EAAE,YAC1C8K,EAAW9K,EAAQA,EAAQ,OAAS,CAAC,EAAE,YAE7C,GAAI6K,EAAcC,EAAW,GAAKD,EAAc,GAAI,CAClDlxB,EAAO,MAAQ,+BACf,MAAA,CACF,CAIE,GAAAqmB,EAAQ,QAAU,EAAG,CACjB,MAAA+K,EAAc/K,EAAQ,MAAM,EAAE,EAAE,IAAIoB,GAAKA,EAAE,WAAW,EAG5D,GAFgB2J,EAAY,OAAO,CAAC7S,EAAK0J,IAAQ1J,EAAM0J,EAAK,CAAC,EAAImJ,EAAY,OAE/D,GAAI,CAChBpxB,EAAO,MAAQ,8BACf,MAAA,CACF,CAIEA,EAAO,OAAS,QAAU6uB,EAAY,QAAQ,SAAW,IAC3D7uB,EAAO,MAAQ,uCACNA,EAAO,OAAS,SAAW6uB,EAAY,QAAQ,UAAY,IACpE7uB,EAAO,MAAQ,wCAIfA,EAAO,MAAQ,wBAEnB,EAcM+wB,GAA4B,CAChC/wB,EACAqxB,IACS,CACT,MAAMz4B,EAA4B,CAAC,EAUnC,GAPIoH,EAAO,WAAa,QACNpH,EAAA,KACd,iEACF,EAIEoH,EAAO,QAAS,CACFpH,EAAA,KACd,uBAAuBoH,EAAO,QAAQ,IAAI,UAAUA,EAAO,QAAQ,GAAG,4CACxE,EAGA,MAAMsxB,EAActxB,EAAO,QAAQ,KAAK,YAAY,EAChDsxB,EAAY,SAAS,QAAQ,GAAKA,EAAY,SAAS,MAAM,EAC/C14B,EAAA,KACd,mEACF,GACS04B,EAAY,SAAS,IAAI,GAAKA,EAAY,SAAS,KAAK,IACjD14B,EAAA,KACd,gEACF,CACF,CAIEoH,EAAO,OAAS,QACFpH,EAAA,KACd,+DACF,EACgBA,EAAA,KACd,oEACF,GACSoH,EAAO,OAAS,UACTpH,EAAA,KACd,iEACF,EACgBA,EAAA,KACd,uEACF,GAIEoH,EAAO,QAAU,gCACHpH,EAAA,KACd,6EACF,EACgBA,EAAA,KACd,sEACF,GAIFoH,EAAO,gBAAkBpH,CAC3B,ECrNa24B,GACXhI,GACsB,CAEhB,MAAA2C,EAAasF,GAAsBjI,CAAO,EAG1C4C,EAAgBsF,GAAyBlI,CAAO,EAGhD6E,EAAcsD,GAAqBnI,CAAO,EAG1CsF,EAAc8C,GAAuBpI,CAAO,EAE3C,MAAA,CACL,WAAA2C,EACA,cAAAC,EACA,YAAAiC,EACA,YAAAS,CACF,CACF,EAKM2C,GAAyBjI,GAA6D,CAC1F,MAAMqI,EAAiBrI,EAAQ,WAAW,IAAK+C,IAAoB,CACjE,UAAWA,EAAU,WAAa,EAClC,WAAYA,EAAU,WACtB,OAAQA,EAAU,OAClB,OAAQA,EAAU,OAClB,MAAOA,EAAU,MACjB,KAAMA,EAAU,KAChB,UAAWA,EAAU,UACrB,YAAaA,EAAU,YACvB,OAAQ,CACN,OAAQA,EAAU,OAAO,OACzB,OAAQA,EAAU,OAAO,MAC3B,EACA,WAAYA,EAAU,OAAO,YAC7B,SAAUA,EAAU,SACpB,eAAgBA,EAAU,cAAA,EAC1B,EAGIuF,EAAiBD,EAAe,OAAO,CAACrG,EAAYe,IAA+Bf,EAAQe,EAAU,MAAO,CAAC,EAC7GwF,EAAgBF,EAAe,OAAO,CAACrG,EAAYe,IAA8Bf,EAAQe,EAAU,KAAM,CAAC,EAG1GyF,EAAiBH,EAAe,IAAKtlB,GAAqCA,EAAE,OAAO,MAAM,EACzF0lB,EAAgBD,EAAe,SAAS,OAAO,EACjD,QACAA,EAAe,SAAS,SAAS,EAC/B,UACA,UAEC,MAAA,CACL,MAAOH,EACP,eAAAC,EACA,cAAAC,EACA,cAAAE,CACF,CACF,EAKMP,GAA4BlI,GAAgE,CAEhG,MAAM0I,EAAY1I,EAAQ,cAAc,IAAKiD,GAAc,CAEnD,MAAA0F,EAAgB/C,GAAiB3C,EAAK,KAAK,EAE1C,MAAA,CACL,GAAIA,EAAK,GACT,MAAOA,EAAK,MACZ,KAAMA,EAAK,KACX,KAAMA,EAAK,KACX,YAAaA,EAAK,YAClB,OAAQ,CACN,OAAQA,EAAK,MAAM,OACnB,cAAeA,EAAK,MAAM,cAC1B,OAAQ0F,EAAc,MACxB,EACA,WAAY1F,EAAK,UACnB,CAAA,CACD,EAGK2F,EAAiBF,EAAU,QAASzF,GACxCA,EAAK,OAAO,OAAO,IAAKE,IAAgB,CACtC,OAAQF,EAAK,GACb,MAAAE,CAAA,EACA,CACJ,EAGMqF,EAAiBE,EAAU,IAAKlqB,GAAqCA,EAAE,OAAO,MAAM,EACpFiqB,EAAgBD,EAAe,SAAS,QAAQ,EAClD,WACAA,EAAe,SAAS,SAAS,EAC/B,UACA,OAEC,MAAA,CACL,MAAOE,EACP,cAAAD,EACA,eAAAG,CACF,CACF,EAKMT,GAAwBnI,GAA8D,CAM1F,MAAM6I,EAJa,CAAC,GAAG7I,EAAQ,WAAW,EACvC,KAAK,CAAC7d,EAAGC,IAAMA,EAAE,KAAOD,EAAE,IAAI,EAGF,MAAM,EAAG,EAAE,EAAE,IAAY4iB,GAAA,SAAA,OACtD,KAAMA,EAAI,KACV,KAAMA,EAAI,KACV,UAAWA,EAAI,UACf,aAAcA,EAAI,aAClB,OAAM3+B,EAAA2+B,EAAI,QAAJ,YAAA3+B,EAAW,OAAQ,QACzB,YAAWY,EAAA+9B,EAAI,QAAJ,YAAA/9B,EAAW,YAAa,EAAA,EACnC,EAGIg+B,EAAc8D,GAAuB9I,EAAQ,WAAW,EAGxD+I,EAAyB3C,GAA+BpG,EAAQ,WAAW,EAG3EgJ,EAAoBhJ,EAAQ,YAAY,OAAO,CAACgC,EAAY+C,IAAwB/C,EAAQ+C,EAAI,KAAM,CAAC,EAEtG,MAAA,CACL,QAAS8D,EACT,YAAA7D,EACA,uBAAA+D,EACA,kBAAAC,CACF,CACF,EAKMF,GAA0BjE,GAA+C,CAE7E,MAAMoE,EAAgBpE,EAAY,KAAME,GACtC,CAACF,EAAY,KAAMqE,GAA8BnE,EAAI,KAAK,WAAWmE,EAAO,KAAO,GAAG,GAAKA,EAAO,OAASnE,EAAI,IAAI,CACrH,EAEA,OAAKkE,EAKEE,GAAiBF,EAAepE,CAAW,EAJzC,CAAE,KAAM,UAAW,KAAM,GAAI,MAAO,CAAE,CAKjD,EAKMsE,GAAmB,CACvBC,EACAC,IACG,CAEH,MAAM32B,EAAW22B,EAAe,OAAQtE,GACtCA,EAAI,KAAK,WAAWqE,EAAU,KAAO,GAAG,GACxCrE,EAAI,KAAK,MAAM,GAAG,EAAE,SAAWqE,EAAU,KAAK,MAAM,GAAG,EAAE,OAAS,CACpE,EAGMzF,EAAY,CAChB,KAAMyF,EAAU,KAAK,MAAM,GAAG,EAAE,IAAA,GAASA,EAAU,KACnD,KAAMA,EAAU,KAChB,MAAOA,EAAU,IACnB,EAGI,OAAA12B,EAAS,OAAS,IACfixB,EAAA,SAAWjxB,EAAS,IAAKqJ,GAAeotB,GAAiBptB,EAAOstB,CAAc,CAAC,GAG/E1F,CACT,EAKMyE,GAA0BpI,GAA8D,CAE5F,MAAM1iB,EAAU,CACd,UAAW0iB,EAAQ,YAAY,QAAQ,UACvC,WAAYA,EAAQ,YAAY,QAAQ,WACxC,SAAUA,EAAQ,YAAY,QAAQ,SACtC,UAAWA,EAAQ,YAAY,QAAQ,UACvC,YAAaA,EAAQ,YAAY,QAAQ,YACzC,QAAS,CACP,KAAMA,EAAQ,YAAY,QAAQ,QAAQ,KAC1C,MAAOA,EAAQ,YAAY,QAAQ,QAAQ,KAAA,CAE/C,EAGMsJ,EAAaC,GAAsBvJ,EAAQ,OAAO,EAGlDnjB,EAAemjB,EAAQ,YAAY,aAAa,IAAK1hB,IAAyF,CAClJ,IAAKA,EAAQ,IACb,KAAMA,EAAQ,KACd,SAAUA,EAAQ,SAClB,UAAWA,EAAQ,UACnB,UAAWA,EAAQ,UACnB,WAAaA,EAAQ,UACnB0hB,EAAQ,YAAY,aAAa,OAAO,CAAChL,EAAUjS,IAA2BiS,EAAMjS,EAAE,UAAW,CAAC,EAAK,GAAA,EACzG,EAGIymB,EAAc1C,GAAoB9G,EAAQ,YAAaA,EAAQ,OAAO,EAErE,MAAA,CACL,QAAA1iB,EACA,WAAAgsB,EACA,aAAAzsB,EACA,YAAA2sB,CACF,CACF,EAKMD,GAAyBzM,GAAuC,CAEpE,MAAM2M,EAAa3M,EAAQ,IAAKxhB,GAA+BA,EAAM,SAAS,EACxEouB,EAAY5M,EAAQ,IAAKxhB,GAA+BA,EAAM,SAAS,EACvEquB,EAAa7M,EAAQ,IAAKxhB,GAAgCA,EAAM,UAAU,EAC1E+rB,EAAWvK,EAAQ,IAAKxhB,GAA8BA,EAAM,QAAQ,EACpEgsB,EAAYxK,EAAQ,IAAKxhB,GAA+BA,EAAM,SAAS,EACvEsuB,EAAc9M,EAAQ,IAAKxhB,GAAiCA,EAAM,WAAW,EAE5E,MAAA,CACL,WAAAmuB,EACA,UAAAC,EACA,WAAAC,EACA,SAAAtC,EACA,UAAAC,EACA,YAAAsC,CACF,CACF,EC1PahrB,GAAwC,CAAC,CACpD,QAAA8B,EAAU,GACV,WAAAuhB,EAAa,YACf,IAAM,CAEJ,KAAM,CAACxlB,EAAWC,CAAY,EAAI7J,EAAAA,SAAkBovB,CAAqB,EAEnE4H,EAAmB1tB,GAAkB,CACzCO,EAAaP,CAAgB,CAC/B,EAEM2tB,EAAc91B,EAAa/L,GAAqB,OAAA,OAAA7B,EAAA6B,EAAM,QAAQ,UAAd,YAAA7B,EAAuB,WAAU,EACjFsS,EAAU1E,EAAa/L,GAAqBA,EAAM,QAAQ,OAAO,EACjEjC,EAAQgO,EAAa/L,GAAqBA,EAAM,QAAQ,KAAK,EAGnE,GAAIyQ,EACK,OAAAjF,EAAA,IAACskB,GAAiB,CAAA,QAAQ,0BAA2B,CAAA,EAI1D,GAAA/xB,GAAS,CAAC8jC,EACL,OAAAr2B,EAAA,IAACokB,GAAA,CACN,QAAQ,8BACR,QAAS,OAAO7xB,GAAU,SAAWA,EAAQ,yBAC7C,MAAO,IAAM,CAAA,CAGb,CACF,EAkCI,MAAAm8B,EAAgB6F,GA9BiB,OAAO8B,GAAgB,SAAW,CACvE,WAAY,CAAC,EACb,cAAe,CAAC,EAChB,YAAa,CAAC,EACd,YAAa,CACX,QAAS,CACP,UAAW,EACX,WAAY,EACZ,SAAU,EACV,UAAW,EACX,YAAa,EACb,WAAY,EACZ,QAAS,CACP,KAAM,EACN,MAAO,CAAA,CAEX,EACA,YAAa,CACX,SAAU,GACV,KAAM,KACN,SAAU,KACV,MAAO,KACP,gBAAiB,CAAA,CACnB,EACA,aAAc,CAAA,CAChB,EACA,QAAS,CAAA,CAAC,EACRA,CAGgD,EAGpD,OAAIppB,EAEAjN,EAAA,IAAC,MAAI,CAAA,UAAU,mCACb,SAAAA,EAAAA,IAAC6uB,IAAkB,KAAMH,EAAe,QAAS,EAAA,CAAM,CACzD,CAAA,EAMD1uB,EAAAA,IAAA,MAAA,CAAI,UAAW,eAAeiN,EAAU,UAAY,EAAE,GACrD,SAAClN,EAAAA,KAAAkI,GAAA,CAAK,UAAAe,EAAsB,SAAUotB,EACpC,SAAA,CAACp2B,EAAA,IAAA8H,GAAA,CAAI,GAAG,aAAa,MAAM,aACzB,eAAC+mB,GAAkB,CAAA,KAAMH,EAAe,QAAAzhB,CAAA,CAAkB,CAC5D,CAAA,EACAjN,EAAAA,IAAC8H,GAAI,CAAA,GAAG,YAAY,MAAM,kBACxB,SAAC9H,EAAAA,IAAA6wB,GAAA,CAAiB,KAAMnC,CAAA,CAAe,CACzC,CAAA,EACA1uB,EAAAA,IAAC8H,GAAI,CAAA,GAAG,cAAc,MAAM,cAC1B,SAAC9H,EAAA,IAAA0xB,GAAA,CAAmB,KAAMhD,CAAe,CAAA,CAC3C,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EC7FM4H,GAA0B,IAAM,CAEpC,KAAM,CAACttB,EAAWC,CAAY,EAAI7J,EAAAA,SAAS,KAAK,EAG1C,CAAE,iBAAAkR,CAAiB,EAAIhQ,EAAe9L,GAASA,EAAM,OAAO,EAGhE,OAAAuL,EAAA,KAAC,MAAI,CAAA,UAAU,iBAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAC,EAAA,IAAC,OAAA,CACC,UAAW,kBAAkBsQ,IAAqB,YAAc,YACpCA,IAAqB,aAAe,aACpC,cAAc,EAAA,CAC3C,EACAtQ,EAAA,IAAA,OAAA,CAAK,UAAU,kBAAmB,SAAiBsQ,CAAA,CAAA,CAAA,EACtD,QAGC,QAAO,CAAA,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA0FN,EAGFvQ,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAA,EAAA,KAAC,MAAA,CACC,UAAW,sBAAsBiJ,IAAc,MAAQ,SAAW,EAAE,GACpE,QAAS,IAAMC,EAAa,KAAK,EAEjC,SAAA,CAACjJ,EAAA,IAAA,OAAA,CAAK,UAAU,WAAW,SAAE,KAAA,EAAO,MAAA,CAAA,CACtC,EACAD,EAAA,KAAC,MAAA,CACC,UAAW,sBAAsBiJ,IAAc,SAAW,SAAW,EAAE,GACvE,QAAS,IAAMC,EAAa,QAAQ,EAEpC,SAAA,CAACjJ,EAAA,IAAA,OAAA,CAAK,UAAU,WAAW,SAAE,KAAA,EAAO,SAAA,CAAA,CACtC,EACAD,EAAA,KAAC,MAAA,CACC,UAAW,sBAAsBiJ,IAAc,OAAS,SAAW,EAAE,GACrE,QAAS,IAAMC,EAAa,MAAM,EAElC,SAAA,CAACjJ,EAAA,IAAA,OAAA,CAAK,UAAU,WAAW,SAAE,KAAA,EAAO,OAAA,CAAA,CACtC,EACAD,EAAA,KAAC,MAAA,CACC,UAAW,sBAAsBiJ,IAAc,UAAY,SAAW,EAAE,GACxE,QAAS,IAAMC,EAAa,SAAS,EAErC,SAAA,CAACjJ,EAAA,IAAA,OAAA,CAAK,UAAU,WAAW,SAAE,KAAA,EAAO,UAAA,CAAA,CAAA,CACtC,EACF,EAGAD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACZ,SAAA,CAAAiJ,IAAc,OAAShJ,EAAA,IAAC6I,GAAU,CAAA,QAAS,GAAO,EAClDG,IAAc,UAAahJ,EAAA,IAAAgL,GAAA,CAAa,QAAS,GAAO,EACxDhC,IAAc,QAAWhJ,EAAA,IAAAmL,GAAA,CAAW,QAAS,GAAO,EACpDnC,IAAc,WAAahJ,EAAAA,IAACgP,IAAc,QAAS,GAAO,SAAU,EAAO,CAAA,CAAA,CAC9E,CAAA,CAAA,EACF,CAEJ,ECrJaunB,GAA4D,CAAC,CAAE,UAAAv8B,KAAgB,CAC1F,MAAMw8B,EAA+E,CACnF,iBAAoB,CAClB,YAAa,+LACb,cAAe,iJACjB,EACA,aAAgB,CACd,YAAa,wMACb,cAAe,8IACjB,EACA,aAAgB,CACd,YAAa,+LACb,cAAe,2IACjB,EACA,gBAAmB,CACjB,YAAa,uLACb,cAAe,gKACjB,EACA,cAAiB,CACf,YAAa,oNACb,cAAe,uKACjB,EACA,eAAkB,CAChB,YAAa,8LACb,cAAe,kJACjB,EACA,gBAAmB,CACjB,YAAa,oKACb,cAAe,gJACjB,EACA,eAAkB,CAChB,YAAa,gJACb,cAAe,iJAAA,CAEnB,EAGMC,EAAqB,CACzB,YAAa,6DACb,cAAe,0HACjB,EAEM,CAAE,YAAAC,EAAa,cAAAC,CAAA,EAAkBH,EAAax8B,CAAS,GAAKy8B,EAGhE,OAAA12B,EAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAAAA,OAAC,KAAG,CAAA,SAAA,CAAA,WAAS/F,EAAU,GAAA,EAAC,EACxBgG,EAAAA,IAAC,KAAG,SAAY02B,CAAA,CAAA,EAChB12B,EAAAA,IAAC,MAAG,SAAiC,mCAAA,CAAA,EACrCA,EAAAA,IAAC,KAAG,SAAc22B,CAAA,CAAA,SACjB,IAAE,CAAA,SAAA,CAAA,OAAI32B,EAAAA,IAAC,UAAO,SAAgB,kBAAA,CAAA,EAAS,oLAAA,CAAkL,CAAA,CAAA,EAC5N,CAEJ,EAKa42B,GAA0B,IAEnC72B,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAA+B,iCAAA,CAAA,EAEnCA,EAAAA,IAAC,MAAG,SAA8B,gCAAA,CAAA,SACjC,IAAE,CAAA,SAAA,CAAA,OAAIA,EAAAA,IAAC,UAAO,SAAO,SAAA,CAAA,EAAS,yDAAsDA,EAAAA,IAAC,UAAO,SAAW,aAAA,CAAA,EAAS,mHAAA,EAAiH,EAElOA,EAAAA,IAAC,MAAG,SAAY,cAAA,CAAA,EAChBA,EAAAA,IAAC,KAAE,SAAgG,kGAAA,CAAA,SAClG,KACC,CAAA,SAAA,CAAAD,OAAC,KAAG,CAAA,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAQ,UAAA,CAAA,EAAS,qCAAA,EAAmC,SAC/D,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,UAAO,SAAQ,UAAA,CAAA,EAAS,4CAAA,EAA0C,SACtE,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,UAAO,SAAQ,UAAA,CAAA,EAAS,0CAAA,CAAwC,CAAA,CAAA,EACvE,EAEAA,EAAAA,IAAC,MAAG,SAAgB,kBAAA,CAAA,EACpBA,EAAAA,IAAC,KAAE,SAAqG,uGAAA,CAAA,SACvG,KACC,CAAA,SAAA,CAAAD,OAAC,KAAG,CAAA,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAO,SAAA,CAAA,EAAS,+CAAA,EAA6C,SACxE,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,UAAO,SAAO,SAAA,CAAA,EAAS,0CAAA,EAAwC,SACnE,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,UAAO,SAAQ,UAAA,CAAA,EAAS,yCAAA,CAAuC,CAAA,CAAA,EACtE,EAEAA,EAAAA,IAAC,MAAG,SAAc,gBAAA,CAAA,EAClBA,EAAAA,IAAC,KAAE,SAAqN,uNAAA,CAAA,CAAA,EAC1N,EC9EE62B,GAAoB,CAIxB,QAAS,MAAO9+B,EAAQ,IAAK++B,EAAiBC,IAAgD,CACxF,IAAA3/B,EAAM,sBAAsBW,CAAK,GACjC,OAAA++B,IAAe1/B,GAAA,WAAW0/B,CAAM,IAChCC,IAAc3/B,GAAA,UAAU2/B,CAAK,KAEhB,MAAMjgC,GAAU,IAAwBM,CAAG,GAC5C,IAClB,EAKA,UAAW,UACQ,MAAMN,GAAU,OAA4B,cAAc,GAC3D,IAEpB,ECLMkgC,GAAiB,CACrB,KAAM,CAAE,MAAO,OAAQ,KAAMh3B,MAACi3B,KAAS,CAAG,EAC1C,QAAS,CAAE,MAAO,UAAW,KAAMj3B,MAACk3B,KAAY,CAAG,EACnD,MAAO,CAAE,MAAO,QAAS,KAAMl3B,MAACm3B,KAAU,CAAG,EAC7C,QAAS,CAAE,MAAO,UAAW,KAAMn3B,MAACo3B,KAAgB,CAAG,EACvD,QAAS,CAAE,MAAO,UAAW,KAAMp3B,EAAA,IAACq3B,KAAa,CAAG,CACtD,EAGMC,GAA6C,CACjD,KAAQ,iBACR,MAAS,eACT,OAAU,SACV,QAAW,UACX,aAAgB,aAChB,qBAAwB,kBACxB,iBAAoB,cACpB,gBAAmB,kBACrB,EAWMC,GAAoD,CAAC,CACzD,cAAAC,EACA,aAAAC,EACA,UAAAC,EAAY,IACZ,MAAAh+B,EAAQ,cACR,YAAAi+B,EAAc,GACd,gBAAAC,EAAkB,GACpB,IAAM,CACJ,KAAM,CAACC,EAAMC,CAAO,EAAI14B,EAAAA,SAAsB,CAAA,CAAE,EAC1C,CAAC6F,EAAS8yB,CAAU,EAAI34B,EAAAA,SAAS,EAAI,EACrC,CAAC03B,EAAQkB,CAAS,EAAI54B,EAAAA,SAA6Bo4B,CAAa,EAChE,CAACT,EAAOkB,CAAQ,EAAI74B,EAAAA,SAA6Bq4B,CAAY,EAC7D,CAACS,EAASC,CAAU,EAAI/4B,EAAAA,SAAS,EAAK,EACtC,CAACmvB,EAAO6J,CAAQ,EAAIh5B,EAAAA,SAAS,CAAC,EAC9B,CAACrH,EAAOsgC,CAAQ,EAAIj5B,EAAAA,SAAS,GAAG,EAEhCk5B,EAAY,SAAY,CACxB,GAAA,CACFP,EAAW,EAAI,EACf,MAAMvlC,EAAW,MAAMqkC,GAAkB,QAAQ9+B,EAAO++B,EAAQC,CAAK,EACrEe,EAAQtlC,EAAS,IAAI,EACrB4lC,EAAS5lC,EAAS,KAAK,EACvB2lC,EAAW3lC,EAAS,QAAQ,QACrBD,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,CAAA,QAClD,CACAwlC,EAAW,EAAK,CAAA,CAEpB,EAEMQ,EAAkB,SAAY,CAC9B,GAAA,CACF,MAAM1B,GAAkB,UAAU,EACxByB,EAAA,QACH/lC,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,CAE/C,EAGAgN,EAAAA,UAAU,IAAM,CAGd,GAFU+4B,EAAA,EAENX,EAAa,CACT,MAAAa,EAAW,YAAYF,EAAWV,CAAe,EAChD,MAAA,IAAM,cAAcY,CAAQ,CAAA,CACrC,EACC,CAAC1B,EAAQC,EAAOh/B,EAAO4/B,EAAaC,CAAe,CAAC,EAGjD,MAAAa,EAAmBxF,GAAsB,CACzC,GAAA,CACF,OAAOyF,GAAO,IAAI,KAAKzF,CAAS,EAAG,sBAAsB,OAC3C,CACP,OAAAA,CAAA,CAEX,EAGM0F,EAAwB7B,GACrBQ,GAAmBR,CAAM,GAAKA,EAGvC,OACG/2B,EAAAA,KAAA64B,GAAA,CAAM,UAAW,EAAG,GAAI,CAAE,EAAG,EAAG,OAAQ,OAAQ,QAAS,OAAQ,cAAe,QAC/E,EAAA,SAAA,CAAC74B,EAAAA,KAAA84B,GAAA,CAAI,GAAI,CAAE,QAAS,OAAQ,eAAgB,gBAAiB,WAAY,SAAU,GAAI,CAAA,EACrF,SAAA,CAAA94B,EAAA,KAAC+4B,GAAW,CAAA,QAAQ,KAAK,UAAU,KAChC,SAAA,CAAAp/B,EAAM,IAAE60B,EAAQ,GAAK,IAAIA,CAAK,GAAA,EACjC,EACAxuB,OAAC84B,IAAI,GAAI,CAAE,QAAS,OAAQ,IAAK,CAC/B,EAAA,SAAA,CAAA74B,EAAA,IAACsK,GAAQ,CAAA,MAAM,eACb,SAAAtK,EAAAA,IAAC+4B,GAAW,CAAA,QAAST,EAAW,KAAK,QACnC,SAAAt4B,EAAAA,IAACg5B,GAAY,CAAA,CAAA,CACf,CAAA,EACF,EACCh5B,MAAAsK,GAAA,CAAQ,MAAM,iBACb,eAACyuB,GAAW,CAAA,QAASR,EAAiB,KAAK,QAAQ,MAAM,QACvD,SAACv4B,EAAAA,IAAAi5B,GAAA,EAAW,EACd,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAl5B,EAAAA,KAAC84B,GAAI,CAAA,GAAI,CAAE,QAAS,OAAQ,IAAK,EAAG,GAAI,CAAA,EACtC,SAAA,CAAA94B,OAACm5B,IAAY,KAAK,QAAQ,GAAI,CAAE,SAAU,GACxC,EAAA,SAAA,CAAAl5B,EAAAA,IAACm5B,IAAW,SAAM,QAAA,CAAA,EAClBp5B,EAAA,KAACq5B,GAAA,CACC,MAAOtC,GAAU,GACjB,MAAM,SACN,SAAW11B,GAAM42B,EAAU52B,EAAE,OAAO,QAAU,GAAK,OAAYA,EAAE,OAAO,KAAK,EAE7E,SAAA,CAACpB,EAAA,IAAAq5B,GAAA,CAAS,MAAM,GAAG,SAAW,cAAA,EAC7B,OAAO,QAAQ/B,EAAkB,EAAE,IAAI,CAAC,CAAC9iB,EAAKre,CAAI,UAChDkjC,GAAmB,CAAA,MAAO7kB,EAAM,SAAAre,CAAA,EAAlBqe,CAAuB,CACvC,CAAA,CAAA,CAAA,CACH,EACF,EAEAzU,OAACm5B,IAAY,KAAK,QAAQ,GAAI,CAAE,SAAU,GACxC,EAAA,SAAA,CAAAl5B,EAAAA,IAACm5B,IAAW,SAAK,OAAA,CAAA,EACjBp5B,EAAA,KAACq5B,GAAA,CACC,MAAOrC,GAAS,GAChB,MAAM,QACN,SAAW31B,GAAM62B,EAAS72B,EAAE,OAAO,QAAU,GAAK,OAAYA,EAAE,OAAO,KAAK,EAE5E,SAAA,CAACpB,EAAA,IAAAq5B,GAAA,CAAS,MAAM,GAAG,SAAU,aAAA,EAC5Br5B,EAAA,IAAAq5B,GAAA,CAAS,MAAM,OAAO,SAAI,OAAA,EAC1Br5B,EAAA,IAAAq5B,GAAA,CAAS,MAAM,UAAU,SAAO,UAAA,EAChCr5B,EAAA,IAAAq5B,GAAA,CAAS,MAAM,QAAQ,SAAK,QAAA,EAC5Br5B,EAAA,IAAAq5B,GAAA,CAAS,MAAM,UAAU,SAAO,UAAA,EAChCr5B,EAAA,IAAAq5B,GAAA,CAAS,MAAM,UAAU,SAAO,SAAA,CAAA,CAAA,CAAA,CAAA,CACnC,CACF,CAAA,CAAA,EACF,QAECC,GAAQ,CAAA,GAAI,CAAE,GAAI,GAAK,EAExBt5B,EAAAA,IAAC64B,GAAI,CAAA,GAAI,CAAE,SAAU,EAAG,SAAU,OAAQ,UAAAnB,CACvC,EAAA,SAAAzyB,GAAW4yB,EAAK,SAAW,EACzB93B,EAAAA,KAAA84B,GAAA,CAAI,GAAI,CAAE,QAAS,OAAQ,eAAgB,SAAU,WAAY,SAAU,OAAQ,MAAA,EAClF,SAAA,CAAA74B,MAACu5B,IAAiB,KAAM,GAAI,GAAI,CAAE,GAAI,GAAK,EAC1Cv5B,EAAA,IAAA84B,GAAA,CAAW,QAAQ,QAAQ,SAAe,iBAAA,CAAA,CAAA,EAC7C,EACEjB,EAAK,SAAW,EAClB73B,EAAAA,IAAC64B,IAAI,GAAI,CAAE,QAAS,OAAQ,eAAgB,SAAU,WAAY,SAAU,OAAQ,MAClF,EAAA,SAAA74B,EAAAA,IAAC84B,GAAW,CAAA,QAAQ,QAAQ,MAAM,iBAAiB,SAAa,gBAAA,CAAA,CAClE,EAEC94B,EAAAA,IAAAw5B,GAAA,CAAK,MAAK,GAAC,eAAc,GACvB,SAAA3B,EAAK,IAAI,CAAC4B,EAAK7gC,IAAU,CACxB,MAAM8gC,EAAc1C,GAAeyC,EAAI,KAAoC,GAAKzC,GAAe,KAG7F,OAAAh3B,EAAA,IAAC25B,GAAA,CAEC,QAAS/gC,EAAQi/B,EAAK,OAAS,EAC/B,GAAI,CACF,WAAY,aAAa6B,EAAY,KAAK,QAC1C,GAAI,EACJ,gBAAiB,GAAGA,EAAY,KAAK,YACrC,UAAW,CACT,gBAAiB,GAAGA,EAAY,KAAK,UAAA,CAEzC,EAEA,SAAA15B,EAAA,IAAC45B,GAAA,CACC,QACG75B,EAAAA,KAAA84B,GAAA,CAAI,GAAI,CAAE,QAAS,OAAQ,WAAY,SAAU,IAAK,CAAA,EACpD,SAAA,CAAAxwB,GAAM,aAAaqxB,EAAY,KAA4B,CAAA,CAG3D,EACA15B,EAAAA,IAAA84B,GAAA,CAAW,QAAQ,QAAQ,UAAU,OAAO,GAAI,CAAE,WAAY,QAAA,EAC5D,SAAAW,EAAI,OACP,CAAA,CAAA,EACF,EAEF,UACG15B,EAAAA,KAAA84B,GAAA,CAAI,GAAI,CAAE,QAAS,OAAQ,eAAgB,gBAAiB,GAAI,EAAA,EAC/D,SAAA,CAAA74B,EAAA,IAAC65B,GAAA,CACC,MAAOlB,EAAqBc,EAAI,MAAM,EACtC,KAAK,QACL,QAAQ,WACR,GAAI,CAAE,OAAQ,GAAI,SAAU,QAAS,CAAA,CACvC,EACAz5B,EAAAA,IAAC84B,IAAW,QAAQ,UAAU,MAAM,iBACjC,SAAAL,EAAgBgB,EAAI,SAAS,CAChC,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAEJ,EApCK7gC,CAqCP,CAAA,CAEH,EACH,CAEJ,CAAA,EAECs/B,SACEW,GAAI,CAAA,GAAI,CAAE,GAAI,EAAG,UAAW,QAC3B,EAAA,SAAA74B,EAAA,IAAC4Q,GAAA,CACC,QAAQ,WACR,KAAK,QACL,QAAS,IAAMynB,EAASh3B,GAAQA,EAAO,GAAG,EAC3C,SAAA,WAAA,CAAA,CAGH,CAAA,CAAA,EAEJ,CAEJ,ECvOM+K,GAAc,CAACC,EAAeC,EAAW,IAAM,CAC/C,GAAAD,IAAU,EAAU,MAAA,UAExB,MAAME,EAAI,KACJC,EAAKF,EAAW,EAAI,EAAIA,EACxBG,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,IAAI,EAExCC,EAAI,KAAK,MAAM,KAAK,IAAIL,CAAK,EAAI,KAAK,IAAIE,CAAC,CAAC,EAElD,OAAO,YAAYF,EAAQ,KAAK,IAAIE,EAAGG,CAAC,GAAG,QAAQF,CAAE,CAAC,EAAI,IAAMC,EAAMC,CAAC,CACzE,EAGMotB,GAAgC,IAAM,CAC1C,MAAM/kC,EAAUwL,EAAa/L,GAAqBA,EAAM,UAAU,cAAc,EAC1EiE,EAAS8H,EAAa/L,GAAqBA,EAAM,UAAU,MAAM,EACjE,CAAC+b,EAAYC,CAAa,EAAIpR,EAAAA,SAAS,EAAK,EAC5CqR,EAAiBnM,SAAOvP,CAAO,EAG/B,CAACglC,EAAWC,CAAY,EAAI56B,EAAAA,SAAiB,CAAC,EAC9C,CAAC66B,EAAeC,CAAgB,EAAI96B,EAAAA,SAAiB,CAAC,EACtD,CAAC+6B,EAAUC,CAAW,EAAIh7B,EAAAA,SAAiB,CAAC,EAC5C,CAACi7B,EAAcC,CAAe,EAAIl7B,EAAAA,SAAiB,CAAC,EACpD,CAACm7B,EAAgBC,CAAiB,EAAIp7B,EAAAA,SAAiB,KAAK,KAAK,EAiEnE,OA9DJG,EAAAA,UAAU,IAAM,OACV,GAAAxK,GAAW0b,EAAe,SAAW,KAAK,UAAU1b,CAAO,IAAM,KAAK,UAAU0b,EAAe,OAAO,EAAG,CAC3GD,EAAc,EAAI,EAClB,MAAME,EAAQ,WAAW,IAAMF,EAAc,EAAK,EAAG,GAAI,EAClD,MAAA,IAAM,aAAaE,CAAK,CAAA,CAK7B,GAHJD,EAAe,QAAU1b,GAGrBpC,EAAAoC,GAAA,YAAAA,EAAS,aAAT,MAAApC,EAAqB,gBAAiB,CAClC,MAAAgI,EAAU5F,EAAQ,WAAW,gBAI7B0lC,GADgB9/B,EAAQ,WAAa,GACJ,KAAO,KAG9C,GAAIA,EAAQ,gBAAkB,QAAaA,EAAQ,gBAAkB,OAEnEy/B,EAAYz/B,EAAQ,aAAa,EACjC2/B,EAAgB3/B,EAAQ,aAAa,UAC5B8/B,EAAiB,EAE1BL,EAAYK,EAAiB,EAAG,EAChCH,EAAgBG,EAAiB,EAAG,MAC/B,CAGC,MAAAC,GADc,KAAK,IAAI,EACGH,GAAkB,IAGlD,GAAIR,EAAY,GAAKE,EAAgB,GAAKS,EAAW,EAAG,CAChD,MAAAC,EAAWhgC,EAAQ,WAAao/B,EAChCa,EAAejgC,EAAQ,WAAas/B,EAGtCU,GAAY,GACdP,EAAYO,EAAWD,CAAQ,EAG7BE,GAAgB,GAClBN,EAAgBM,EAAeF,CAAQ,CACzC,CACF,CAIEP,IAAa,GAAKE,IAAiB,IAAM1/B,EAAQ,WAAa,GAAKA,EAAQ,WAAa,KAC1Fy/B,EAAY,IAAI,EAChBE,EAAgB,IAAI,GAItBN,EAAar/B,EAAQ,UAAU,EAC/Bu/B,EAAiBv/B,EAAQ,UAAU,EACjB6/B,EAAA,KAAK,KAAK,EAG5B,QAAQ,IAAI,sCAAsCpuB,GAAY+tB,CAAQ,CAAC,iBAAiB/tB,GAAYiuB,CAAY,CAAC,oBAAoB1/B,EAAQ,WAAaA,EAAQ,UAAU,EAAE,CAAA,CAChL,EACC,CAAC5F,CAAO,CAAC,EAER0D,IAAW,WAAa,CAAC1D,EACnBiL,EAAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAkB,qBAAA,EAG7DjL,SAKF,MAAI,CAAA,UAAW,iBAAiBwb,EAAa,gBAAkB,EAAE,GAChE,SAAA,CAAAvQ,EAAAA,IAAC,MAAG,SAAsB,wBAAA,CAAA,EAC1BD,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAS,WAAA,CAAA,EACbD,EAAAA,KAAC,MAAI,CAAA,UAAU,eAAiD,SAAA,CAAQhL,EAAA,UAAU,QAAQ,CAAC,EAAE,GAA1D,CAAA,EAAA,OAAOA,EAAQ,SAAS,EAAmC,EAC9FiL,EAAAA,IAAC,MAAI,CAAA,UAAU,eACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAU,cACV,MAAO,CAAE,MAAO,GAAGjL,EAAQ,SAAS,IAAK,gBAAiBA,EAAQ,UAAY,GAAK,UAAY,SAAU,CAAA,CAAA,EAE7G,EACAiL,EAAAA,IAAC,OAAI,UAAU,YACb,eAAC,QAAM,CAAA,MAAM,8BAA8B,SAAA,0DAAwD,CAAA,CACrG,CAAA,CAAA,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAY,cAAA,CAAA,EAChBD,EAAAA,KAAC,MAAI,CAAA,UAAU,eAAuD,SAAA,CAAQhL,EAAA,aAAa,QAAQ,CAAC,EAAE,GAAnE,CAAA,EAAA,UAAUA,EAAQ,YAAY,EAAsC,EACvGiL,EAAAA,IAAC,MAAI,CAAA,UAAU,eACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAU,cACV,MAAO,CAAE,MAAO,GAAGjL,EAAQ,YAAY,IAAK,gBAAiBA,EAAQ,aAAe,GAAK,UAAY,SAAU,CAAA,CAAA,EAEnH,EACAiL,EAAAA,IAAC,OAAI,UAAU,YACb,eAAC,QAAM,CAAA,MAAM,iCAAiC,SAAA,gEAA8D,CAAA,CAC9G,CAAA,CAAA,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAU,YAAA,CAAA,EACdD,EAAAA,KAAC,MAAI,CAAA,UAAU,eAAmD,SAAA,CAAQhL,EAAA,WAAW,QAAQ,CAAC,EAAE,GAA7D,CAAA,EAAA,QAAQA,EAAQ,UAAU,EAAoC,EACjGiL,EAAAA,IAAC,MAAI,CAAA,UAAU,eACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAU,cACV,MAAO,CAAE,MAAO,GAAGjL,EAAQ,UAAU,IAAK,gBAAiBA,EAAQ,WAAa,GAAK,UAAY,SAAU,CAAA,CAAA,EAE/G,EACAiL,EAAAA,IAAC,OAAI,UAAU,YACb,eAAC,QAAM,CAAA,MAAM,+BAA+B,SAAA,4DAA0D,CAAA,CACxG,CAAA,CAAA,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAgB,kBAAA,CAAA,EACpBD,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAO,UAAA,EACtCD,EAAAA,KAAC,MAAI,CAAA,UAAU,eAAgB,SAAA,CAAAqM,GAAY+tB,CAAQ,EAAE,IAAA,EAAE,EACvDp6B,EAAAA,KAAC,MAAI,CAAA,UAAU,gBAAgB,SAAA,CAAA,UAAQqM,GAAY2tB,CAAS,CAAA,CAAE,CAAA,CAAA,EAChE,EACAh6B,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAS,YAAA,EACxCD,EAAAA,KAAC,MAAI,CAAA,UAAU,eAAgB,SAAA,CAAAqM,GAAYiuB,CAAY,EAAE,IAAA,EAAE,EAC3Dt6B,EAAAA,KAAC,MAAI,CAAA,UAAU,gBAAgB,SAAA,CAAA,UAAQqM,GAAY6tB,CAAa,CAAA,CAAE,CAAA,CAAA,CACpE,CAAA,CAAA,CAAA,EAViD,WAAWF,CAAS,IAAIE,CAAa,EAWxF,EAEAj6B,EAAAA,IAAC,MAAI,CAAA,UAAU,eACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAU,cACV,MAAO,CACL,MAAO,GAAG,KAAK,KAAMm6B,EAAWE,IAAiB,KAAO,MAAS,GAAI,GAAG,CAAC,IACzE,gBAAkBF,EAAWE,EAAiB,EAAI,KAAO,KAAQ,UAAY,SAAA,CAC/E,CAAA,EAEJ,EACAr6B,EAAAA,IAAC,OAAI,UAAU,YACb,eAAC,QAAM,CAAA,MAAM,mCAAmC,SAAA,gEAA8D,CAAA,CAChH,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBAAmB,SAAA,CAAA,iBACjB,IAAI,KAAKhL,EAAQ,SAAS,EAAE,eAAe,CAAA,CAC5D,CAAA,CAAA,EACF,EA9EQiL,EAAAA,IAAA,MAAA,CAAI,UAAU,sBAAsB,SAAoB,uBAAA,CAgFpE,EAGM66B,GAAiC,IAAM,CAC3C,MAAMn/B,EAAW2E,GAAyB,EACpC,CAAE,gBAAAzE,EAAiB,OAAAnD,EAAQ,MAAAlG,CAAA,EAAUgO,EAAa/L,GAAqBA,EAAM,SAAS,EACtF,CAACsmC,EAAmBC,CAAoB,EAAI37B,EAAAA,SAAwB,IAAI,EAExE47B,EAA6B1+B,GAA6B,CACrDZ,EAAAW,GAAoBC,CAAgB,CAAC,CAChD,EAEM2+B,EAA8BjhC,GAAsB,CAEtD+gC,EADED,IAAsB9gC,EACH,KAEAA,CAFI,CAI7B,EAGE,OAAA+F,EAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAsB,wBAAA,CAAA,QACzB,MAAI,CAAA,UAAU,YACb,SAACA,MAAA,QAAA,CAAM,wFAA4E,CACrF,CAAA,EACCvH,IAAW,WAAcuH,EAAA,IAAA,IAAA,CAAE,SAA0B,6BAAA,EACrDzN,GAASwN,EAAA,KAAC,IAAE,CAAA,UAAU,QAAQ,SAAA,CAAA,UAAQxN,CAAA,EAAM,EAC5CqJ,EAAgB,SAAW,QACzB,IAAE,CAAA,SAAA,4CAA0C,CAAA,EAE5CoE,EAAA,IAAA,KAAA,CAAG,UAAU,uBACX,SAAApE,EAAgB,IAAI,CAAC7B,EAAgBnB,IACnCmH,EAAA,KAAA,KAAA,CAAe,UAAU,sBACxB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wBACb,SAAA,CAAAC,EAAA,IAAC,OAAA,CACC,UAAU,sBACV,QAAS,IAAMi7B,EAA2BlhC,EAAe,SAAS,EAClE,MAAM,6BAEL,SAAeA,EAAA,SAAA,CAClB,EACAgG,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAA,EAAA,KAAC,OAAK,CAAA,UAAU,eAAe,MAAM,gDAAgD,SAAA,CAAA,WAC1EhG,EAAe,aAAa,QAAQ,CAAC,CAAA,EAChD,EACCgG,EAAA,KAAA,OAAA,CAAK,UAAU,aAAa,MAAM,sDAAsD,SAAA,CAAA,gBACzEhG,EAAe,WAAa,KAAK,QAAQ,CAAC,EAAE,GAAA,CAC5D,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEC+gC,IAAsB/gC,EAAe,WACpCiG,EAAA,IAAC,MAAI,CAAA,UAAU,iBACb,SAAAA,EAAA,IAACu2B,GAAqB,CAAA,UAAWx8B,EAAe,SAAW,CAAA,EAC7D,EAGFgG,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,SACb,SAAA,CAAAA,EAAA,KAAC,OAAK,CAAA,UAAU,gBAAgB,MAAM,qCAAqC,SAAA,CAAA,YAAUhG,EAAe,aAAA,EAAc,EACjHgG,EAAA,KAAA,OAAA,CAAK,UAAU,oBAAoB,MAAM,kCAAkC,SAAA,CAAA,gBAAchG,EAAe,iBAAA,CAAkB,CAAA,CAAA,EAC7H,EACCiG,EAAA,IAAA,IAAA,CAAE,UAAU,SAAU,WAAe,OAAO,EAC7CA,EAAA,IAAC,SAAA,CACC,UAAU,eACV,QAAS,IAAMg7B,EAA0BpiC,CAAK,EAC9C,MAAM,2CACP,SAAA,OAAA,CAAA,CAED,CACF,CAAA,CAAA,CAtCO,EAAAA,CAuCT,CACD,CACH,CAAA,CAAA,EAEJ,CAEJ,EAGMsiC,GAA0B,IAAM,CACpC,MAAMx/B,EAAW2E,GAAyB,EACpC5E,EAAW8E,EAAa/L,GAAqBA,EAAM,UAAU,QAAQ,EACrEiE,EAAS8H,EAAa/L,GAAqBA,EAAM,UAAU,MAAM,EACjEjC,EAAQgO,EAAa/L,GAAqBA,EAAM,UAAU,KAAK,EAGrE+K,EAAAA,UAAU,IAAM,CACd,QAAQ,IAAI,+CAA+C,EAC3D7D,EAASO,IAAe,EAElB,MAAAoJ,EAAa,YAAY,IAAM,CACnC,QAAQ,IAAI,kDAAkD,EAC9D3J,EAASO,IAAe,GACvB,GAAK,EAED,MAAA,IAAM,cAAcoJ,CAAU,CAAA,EACpC,CAAC3J,CAAQ,CAAC,EAGb6D,EAAAA,UAAU,IAAM,CACN,QAAA,IAAI,6CAA8C9D,CAAQ,EAC1D,QAAA,IAAI,mCAAoChD,CAAM,EAC9C,QAAA,IAAI,kCAAmClG,CAAK,CACnD,EAAA,CAACkJ,EAAUhD,EAAQlG,CAAK,CAAC,EAG5B,MAAM4oC,EAAwB,IAAM,CAClC,QAAQ,IAAI,0DAA0D,EACtEz/B,EAASO,IAAe,CAC1B,EAEA,OAAIxD,IAAW,UACLuH,EAAAA,IAAA,MAAA,CAAI,UAAU,yBAAyB,SAAmB,sBAAA,EAGhE,CAACvE,GAAYA,EAAS,SAAW,EAEjCsE,EAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAAoB,sBAAA,CAAA,QACtB,SAAO,CAAA,QAASm7B,EAAuB,UAAU,iBAAiB,SAEnE,kBAAA,CAAA,CAAA,EACF,EAKFp7B,EAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAwB,0BAAA,CAAA,EAC3BA,EAAA,IAAA,MAAA,CAAI,UAAU,gBACZ,SAASvE,EAAA,IAAI,CAACjB,EAAS5B,IACtBmH,EAAAA,KAAC,MAAgB,CAAA,UAAU,eACzB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAACC,EAAAA,IAAA,KAAA,CAAI,WAAQ,IAAK,CAAA,EAClBD,EAAAA,KAAC,MAAI,CAAA,UAAU,qBAAqB,SAAA,CAAA,gBACpBvF,EAAQ,WAAa,KAAK,QAAQ,CAAC,EAAE,GAAA,CACrD,CAAA,CAAA,EACF,EACAuF,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAC,EAAA,IAAC,MAAI,CAAA,UAAU,sBAAuB,SAAAxF,EAAQ,QAAQ,QACrD,MAAI,CAAA,UAAU,eACZ,SAAO,OAAA,QAAQA,EAAQ,OAAO,EAAE,IAAI,CAAC,CAACga,EAAKpe,CAAK,IAC9C2J,EAAAA,KAAA,MAAA,CAAc,UAAU,sBACvB,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,aAAc,SAAA,CAAAyU,EAAI,GAAA,EAAC,EAAO,IAAE,KAAK,UAAUpe,CAAK,CAAA,CADxD,EAAAoe,CAEV,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CAhBQ,EAAA5b,CAiBV,CACD,CACH,CAAA,CAAA,EACF,CAEJ,EAGMwiC,GAA+B,IAAM,CACzC,MAAMC,EAAgB96B,EAAa/L,GAAqBA,EAAM,UAAU,aAAa,EAC/EiE,EAAS8H,EAAa/L,GAAqBA,EAAM,UAAU,MAAM,EACjE,CAAC8mC,EAAgBC,CAAiB,EAAIn8B,EAAAA,SAAS,CAAC,EAGhDo8B,EAAiB,IAAM,CACTD,EAAAl6B,GAAQA,EAAO,CAAC,CACpC,EAEA,GAAI5I,IAAW,UACb,OAAQuH,EAAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAyB,4BAAA,EAGzE,GAAI,CAACq7B,GAAiBA,EAAc,SAAW,EAC7C,OAAQr7B,EAAAA,IAAA,MAAA,CAAI,UAAU,sBAAsB,SAA2B,8BAAA,EAIzE,MAAMy7B,EAAmBJ,EAAc,MAAM,EAAGC,CAAc,EACxDI,EAAiBL,EAAc,OAASC,EAG5C,OAAAv7B,EAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAoB,sBAAA,CAAA,EACxBD,EAAAA,KAAC,MAAI,CAAA,UAAU,eACZ,SAAA,CAAA07B,EAAiB,IAAI,CAACz4B,EAAQpK,IAC5BmH,EAAAA,KAAA,MAAA,CAAgB,UAAW,gBAAgBiD,EAAO,QAAU,UAAY,SAAS,GAChF,SAAA,CAACjD,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAACC,EAAAA,IAAA,KAAA,CAAI,WAAO,SAAU,CAAA,QACrB,MAAI,CAAA,UAAU,iBACZ,SAAOgD,EAAA,QAAU,YAAc,UAClC,CAAA,CAAA,EACF,EACCA,EAAO,gBAAkBA,EAAO,eAC9BjD,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAM,QAAA,CAAA,EACVA,MAAC,OAAK,SAAK,KAAA,UAAUgD,EAAO,eAAgB,KAAM,CAAC,CAAE,CAAA,CAAA,EACvD,EACAjD,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAK,OAAA,CAAA,EACTA,MAAC,OAAK,SAAK,KAAA,UAAUgD,EAAO,cAAe,KAAM,CAAC,CAAE,CAAA,CAAA,CACtD,CAAA,CAAA,EACF,EAEDA,EAAO,OACLjD,OAAA,MAAA,CAAI,UAAU,gBAAgB,SAAA,CAAA,UACrBiD,EAAO,KAAA,CACjB,CAAA,CAAA,CAAA,EAtBMpK,CAwBV,CACD,EAEA8iC,GACE17B,EAAAA,IAAA,MAAA,CAAI,UAAU,sBACb,gBAAC,SAAO,CAAA,UAAU,mBAAmB,QAASw7B,EAAgB,SAAA,CAAA,cAChDH,EAAc,OAASC,EAAe,aAAA,CAAA,CACpD,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,CAEJ,EAGMK,GAA0B,IAAM,CACpC,MAAMjgC,EAAW2E,GAAyB,EACpCu7B,EAAgBr7B,EAAa/L,GAAqBA,EAAM,UAAU,aAAa,EAC/E,CAACmmB,EAAUkhB,CAAW,EAAIz8B,EAAAA,SAAgC,CAAA,CAAE,EAC5D,CAAC6F,EAAS8yB,CAAU,EAAI34B,EAAAA,SAAS,EAAK,EACtC,CAAC7M,EAAOyO,CAAQ,EAAI5B,EAAAA,SAAwB,IAAI,EAGhD08B,EAAgB,IAAM,CAC1B/D,EAAW,EAAI,EACf/2B,EAAS,IAAI,EAEP,MAAA,4BAA4B,EAC/B,KAAY+6B,GAAA,CACX,GAAI,CAACA,EAAI,GAAU,MAAA,IAAI,MAAM,0BAA0B,EACvD,OAAOA,EAAI,KAAK,CAAA,CACjB,EACA,KAAM1kC,GAAgC,CACrCwkC,EAAYxkC,CAAI,EAChB0gC,EAAW,EAAK,CAAA,CACjB,EACA,MAAav2B,GAAA,CACZR,EAASQ,EAAI,OAAO,EACpBu2B,EAAW,EAAK,CAAA,CACjB,CACL,EAEAx4B,EAAAA,UAAU,IAAM,CACAu8B,EAAA,CAChB,EAAG,EAAE,EAEC,MAAAE,EAAsB5/B,GAAsB,CAEhD,MAAM6/B,EAAiBthB,EAAS,KAAU,GAAA,EAAE,KAAOve,CAAS,EACxD6/B,IAEOvgC,EAAAe,GAAiBw/B,CAAc,CAAC,EAEhCvgC,EAAAS,GAAyBC,CAAS,CAAC,EAEhD,EAGE,OAAA2D,EAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAqB,uBAAA,CAAA,EACxBiF,GAAWjF,EAAA,IAAC,MAAI,CAAA,UAAU,kBAAkB,SAAmB,sBAAA,EAC/DzN,GAASwN,EAAA,KAAC,MAAI,CAAA,UAAU,gBAAgB,SAAA,CAAA,UAAQxN,CAAA,EAAM,QACtD,MAAI,CAAA,UAAU,gBACZ,SAASooB,EAAA,IAAKzd,GACb6C,OAAC,MAAqB,CAAA,UAAW,iBAAgB67B,GAAA,YAAAA,EAAe,MAAO1+B,EAAQ,GAAK,SAAW,EAAE,GAC/F,SAAA,CAAC6C,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAACC,EAAAA,IAAA,KAAA,CAAI,WAAQ,IAAK,CAAA,GACjB47B,GAAA,YAAAA,EAAe,MAAO1+B,EAAQ,UAC5B,MAAI,CAAA,UAAU,eAAe,SAAM,QAAA,CAAA,CAAA,EAExC,EACC8C,EAAA,IAAA,MAAA,CAAI,UAAU,sBAAuB,WAAQ,YAAY,EAC1DD,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAU,YAAA,CAAA,EACdD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAA,OAAC,MAAI,CAAA,SAAA,CAAA,QAAM7C,EAAQ,WAAW,IAAI,QAAQ,GAAA,EAAC,SAC1C,MAAI,CAAA,SAAA,CAAA,WAASA,EAAQ,WAAW,OAAO,QAAQ,GAAA,EAAC,SAChD,MAAI,CAAA,SAAA,CAAA,SAAOA,EAAQ,WAAW,KAAK,QAAQ,GAAA,EAAC,SAC5C,MAAI,CAAA,SAAA,CAAA,YAAUA,EAAQ,WAAW,QAAQ,QAAQ,GAAA,CAAC,CAAA,CAAA,CACrD,CAAA,CAAA,EACF,EACA8C,EAAAA,IAAC,MAAI,CAAA,UAAU,kBACb,SAAAA,EAAA,IAAC,SAAA,CACC,UAAU,eACV,QAAS,IAAMg8B,EAAmB9+B,EAAQ,EAAE,EAC5C,UAAU0+B,GAAA,YAAAA,EAAe,MAAO1+B,EAAQ,GAEvC,UAAe0+B,GAAA,YAAAA,EAAA,MAAO1+B,EAAQ,GAAK,UAAY,OAAA,CAAA,CAEpD,CAAA,CAAA,GAzBQA,EAAQ,EA0BlB,CACD,CACH,CAAA,CAAA,EACF,CAEJ,EAGMg/B,GAA4B,IAE9Bl8B,EAAAA,IAAC,MAAI,CAAA,UAAU,oBACb,SAAAA,EAAA,IAACu3B,GAAA,CACC,MAAM,uBACN,UAAW,IACX,YAAa,GACb,gBAAiB,GAAA,CAAA,EAErB,EAKS4E,GAAsB,IAAM,CACvC,MAAMzgC,EAAW2E,GAAyB,EACpC,CAAE,YAAAgH,CAAY,EAAI9G,EAAa/L,GAAqBA,EAAM,SAAS,EACnE,CAAC4nC,EAAUC,CAAW,EAAIj9B,EAAAA,SAAS,EAAK,EACxC,CAACmR,EAAYC,CAAa,EAAIpR,EAAAA,SAAS,EAAK,EAC5Ck9B,EAAiBh4B,SAAO+C,CAAW,EAGzC9H,OAAAA,EAAAA,UAAU,IAAM,CACV,GAAA8H,GAAei1B,EAAe,UAAYj1B,EAAa,CACzDmJ,EAAc,EAAI,EAClB,MAAME,EAAQ,WAAW,IAAMF,EAAc,EAAK,EAAG,GAAI,EAClD,MAAA,IAAM,aAAaE,CAAK,CAAA,CAEjC4rB,EAAe,QAAUj1B,CAAA,EACxB,CAACA,CAAW,CAAC,EAEhB9H,EAAAA,UAAU,IAAM,CAEd7D,EAASI,IAAqB,EAC9BJ,EAASM,IAAsB,EAC/BN,EAASO,IAAe,EACxBP,EAASQ,IAAoB,EAGvB,MAAAqgC,EAAkB,YAAY,IAAM,CACxC7gC,EAASI,IAAqB,EAC9BJ,EAASM,IAAsB,GAC9B,GAAK,EAED,MAAA,IAAM,cAAcugC,CAAe,CAAA,EACzC,CAAC7gC,CAAQ,CAAC,SAGV,MAAI,CAAA,UAAW,wBAAwB6U,EAAa,gBAAkB,EAAE,GACvE,SAAA,CAACxQ,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAiB,mBAAA,CAAA,EACrBA,EAAA,IAAC,SAAA,CACC,UAAU,cACV,QAAS,IAAMq8B,EAAY,CAACD,CAAQ,EACpC,MAAM,gCAEL,WAAW,YAAc,4BAAA,CAC5B,EACC/0B,GACCtH,EAAA,KAAC,MAAI,CAAA,UAAU,eAAe,SAAA,CAAA,iBACb,IAAI,KAAKsH,CAAW,EAAE,mBAAmB,CAAA,CAC1D,CAAA,CAAA,EAEJ,EAEC+0B,GACEp8B,EAAA,IAAA,MAAA,CAAI,UAAU,aACb,SAAAA,MAAC42B,IAAc,CAAA,EACjB,EAGF72B,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAA,IAAC85B,GAAoB,EAAA,QACpBe,GAAqB,CAAA,CAAA,CAAA,EACxB,EACA96B,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAC,EAAA,IAACk7B,GAAc,EAAA,QACdE,GAAmB,CAAA,CAAA,CAAA,EACtB,QACC,MAAI,CAAA,UAAU,YACb,SAAAp7B,MAAC27B,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,YACb,SAAA37B,EAAA,IAACk8B,KAAgB,CACnB,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EC/jBMM,GAAuB,IAAM,CACjC,MAAM77B,EAAWC,GAAY,EACvBlF,EAAW0E,GAAe,EAC1B,CAAE,gBAAAiC,EAAiB,UAAWo6B,CAAA,EAAgBn8B,EAAgB9L,GAAqBA,EAAM,IAAI,EAC7F,CAACyQ,EAAS8yB,CAAU,EAAI34B,EAAAA,SAAS,EAAK,EACtC,CAAC7M,EAAOyO,CAAQ,EAAI5B,EAAAA,SAAwB,IAAI,EAChD,CAACs9B,EAAMC,CAAO,EAAIv9B,EAAAA,SAAS,CAAC,EAC5B,CAAC6B,EAAiBC,CAAkB,EAAI9B,EAAAA,SAAS,8DAA8D,EAG/G,CAACw9B,EAAYC,CAAa,EAAIz9B,WAAqB,CACvD,iBAAkB,GAClB,WAAY,GACZ,UAAW,EACX,aAAc,CAAA,CACf,EAGDG,EAAAA,UAAU,IAAM,EACW,SAAY,CAC/B,GAAA,CAEF,MAAMu9B,EAAY,UAAU,UAC5B,IAAIC,EAAa,GACbC,EAAkB,GAElBF,EAAU,QAAQ,KAAK,IAAM,GAAiBC,EAAA,UACzCD,EAAU,QAAQ,KAAK,IAAM,GAAiBC,EAAA,QAC9CD,EAAU,QAAQ,OAAO,IAAM,GAAiBC,EAAA,QAChDD,EAAU,QAAQ,SAAS,IAAM,GAAiBC,EAAA,UAClDD,EAAU,QAAQ,UAAU,IAAM,KAAiBC,EAAA,OAGtD,MAAAE,EAAeH,EAAU,MAAM,eAAe,GAChCA,EAAU,MAAM,uBAAuB,GACvCA,EAAU,MAAM,oBAAoB,EAEpDG,IACFD,EAAkBC,EAAa,CAAC,EAAE,QAAQ,IAAK,GAAG,GAI9C,MAAAC,EAAgB,UAAU,qBAAuB,EAGvDL,EAAuBx7B,IAAA,CACrB,GAAGA,EACH,iBAAkB07B,GAAc17B,EAAK,iBACrC,WAAY27B,GAAmB37B,EAAK,WACpC,UAAW67B,GAAiB77B,EAAK,SAAA,EACjC,EAEFH,EAAmB,sFAAsF,QAClGM,EAAK,CACJ,QAAA,MAAM,oCAAqCA,CAAG,CAAA,CAG1D,GAEiB,CACnB,EAAG,EAAE,EAGLjC,EAAAA,UAAU,IAAM,CACV,CAACk9B,GAAe,CAACp6B,GACnB1B,EAAS,QAAQ,CAElB,EAAA,CAAC0B,EAAiB1B,EAAU87B,CAAW,CAAC,EAGrC,MAAAnhB,EAAqBla,GAA+D,CACxF,KAAM,CAAE,KAAAjL,EAAM,MAAAC,CAAM,EAAIgL,EAAE,OAIVy7B,EADZ1mC,IAAS,aAAeA,IAAS,eACrB,CACZ,GAAGymC,EACH,CAACzmC,CAAI,EAAG,OAAOC,CAAK,CAAA,EAGR,CACZ,GAAGwmC,EACH,CAACzmC,CAAI,EAAGC,CAAA,CAJT,CAOL,EAGMkL,EAAe,MAAOF,GAAuB,WACjDA,EAAE,eAAe,EACjB22B,EAAW,EAAI,EACf/2B,EAAS,IAAI,EAET,GAAA,CAEF,MAAMm8B,EAAiB,CACrB,mBAAoBP,EAAW,iBAC/B,aAAcA,EAAW,WACzB,YAAaA,EAAW,UACxB,IAAOA,EAAW,YACpB,EAEMQ,EAAgB,OAAO,QAAQD,CAAc,EAChD,OAAO,CAAC,CAAC,EAAG/mC,CAAK,IAAM,CAACA,CAAK,EAC7B,IAAI,CAAC,CAACinC,CAAK,IAAMA,CAAK,EAErB,GAAAD,EAAc,OAAS,EACzB,MAAM,IAAI,MAAM,iDAAiDA,EAAc,KAAK,IAAI,CAAC,EAAE,EAIzF,GAAAR,EAAW,WAAa,EACpB,MAAA,IAAI,MAAM,kCAAkC,EAEhD,GAAAA,EAAW,cAAgB,EACvB,MAAA,IAAI,MAAM,4BAA4B,EAI9C17B,EAAmB,oFAAoF,EAE/F,QAAA,IAAI,8BAA+B07B,CAAU,EAGrD,IAAIU,EAAa,EACjB,MAAMC,EAAa,EACnB,IAAIniC,EAAU,GAEP,KAAAkiC,EAAaC,GAAc,CAACniC,GAC7B,GAAA,CACF,QAAQ,IAAI,WAAWkiC,EAAa,CAAC,OAAOC,CAAU,oBAAoB,EAG1E,MAAMv6B,EAAS,MAAMtH,EAASrH,GAAcuoC,CAAU,CAAC,EAAE,OAAO,EAK5D,GAJMxhC,EAAA,GACF,QAAA,IAAI,gCAAiC4H,CAAM,EAG/CA,GAAUA,EAAO,mBAAqB,GACxC9B,EAAmB,kFAAkF,EAGrG,WAAW,IAAM,CACfP,EAAS,YAAY,GACpB,IAAI,MAED,OAAA,IAAI,MAAM,wCAAwC,EAG1D,YACO68B,EAAY,CAInB,GAHAF,IACA,QAAQ,MAAM,WAAWA,CAAU,WAAYE,CAAU,EAErDF,GAAcC,EACV,MAAAC,EAIF,MAAA,IAAI,QAAQ3mC,GAAW,WAAWA,EAAS,IAAO,KAAK,IAAI,EAAGymC,CAAU,CAAC,CAAC,CAAA,QAG7E97B,EAAU,CACT,QAAA,MAAM,2BAA4BA,CAAG,EAC7C,IAAInO,EAAe,wCAEfV,EAAA6O,EAAI,WAAJ,YAAA7O,EAAc,UAAW,IACZU,EAAA,kEACNE,EAAAiO,EAAI,WAAJ,YAAAjO,EAAc,UAAW,KACnBF,EAAA,iDACfsN,EAAS,QAAQ,KACR5E,EAAAyF,EAAI,WAAJ,YAAAzF,EAAc,UAAW,MACnB1I,EAAA,yCAGR2N,EAAAQ,EAAI,SAAWnO,CAAY,EACpC6N,EAAmB,wDAAwD,CAAA,QAC3E,CACA62B,EAAW,EAAK,CAAA,CAEpB,EAGM0F,EAAa,IAAM,CACvB,OAAQf,EAAM,CACZ,IAAK,GAED,OAAA38B,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAuB,yBAAA,CAAA,EAC3BA,EAAAA,IAAC,KAAE,SAAqE,uEAAA,CAAA,EAExED,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,mBAAmB,SAAgB,mBAAA,EAClDD,EAAA,KAAC,SAAA,CACC,GAAG,mBACH,KAAK,mBACL,MAAO68B,EAAW,iBAClB,SAAUthB,EACV,SAAQ,GAER,SAAA,CAACtb,EAAA,IAAA,SAAA,CAAO,MAAM,GAAG,SAAuB,0BAAA,EACvCA,EAAA,IAAA,SAAA,CAAO,MAAM,UAAU,SAAO,UAAA,EAC9BA,EAAA,IAAA,SAAA,CAAO,MAAM,QAAQ,SAAK,QAAA,EAC1BA,EAAA,IAAA,SAAA,CAAO,MAAM,QAAQ,SAAK,QAAA,EAC1BA,EAAA,IAAA,SAAA,CAAO,MAAM,QAAQ,SAAK,OAAA,CAAA,CAAA,CAAA,CAAA,CAC7B,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,aAAa,SAAU,aAAA,EACtCA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,aACH,KAAK,aACL,MAAO48B,EAAW,WAClB,SAAUthB,EACV,YAAY,uCACZ,SAAQ,EAAA,CAAA,CACV,EACF,EAEAvb,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,YAAY,SAAS,YAAA,EACpCA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,GAAG,YACH,KAAK,YACL,IAAI,IACJ,MAAO48B,EAAW,WAAa,GAC/B,SAAUthB,EACV,SAAQ,EAAA,CAAA,CACV,EACF,EAEAvb,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,eAAe,SAAQ,WAAA,EACtCA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,GAAG,eACH,KAAK,eACL,IAAI,IACJ,KAAK,MACL,MAAO48B,EAAW,cAAgB,GAClC,SAAUthB,EACV,SAAQ,EAAA,CAAA,CACV,EACF,EAEAtb,EAAAA,IAAC,MAAI,CAAA,UAAU,eACb,SAAAA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,cACV,QAAS,IAAM28B,EAAQ,CAAC,EACzB,SAAA,MAAA,CAAA,CAGH,CAAA,CAAA,EACF,EAGJ,IAAK,GAED,OAAA58B,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAwB,0BAAA,CAAA,EAC5BA,EAAAA,IAAC,KAAE,SAAwD,0DAAA,CAAA,EAE3DD,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAiB,oBAAA,EAC7CA,EAAA,IAAA,OAAA,CAAK,UAAU,aAAc,WAAW,gBAAiB,CAAA,CAAA,EAC5D,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAW,cAAA,EACvCA,EAAA,IAAA,OAAA,CAAK,UAAU,aAAc,WAAW,UAAW,CAAA,CAAA,EACtD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAU,aAAA,EACtCA,EAAA,IAAA,OAAA,CAAK,UAAU,aAAc,WAAW,SAAU,CAAA,CAAA,EACrD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAI,OAAA,EACjCD,EAAAA,KAAC,OAAK,CAAA,UAAU,aAAc,SAAA,CAAW68B,EAAA,aAAa,KAAA,CAAG,CAAA,CAAA,CAC3D,CAAA,CAAA,EACF,EAEA78B,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAAAC,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,cACV,QAAS,IAAM28B,EAAQ,CAAC,EACzB,SAAA,MAAA,CAED,EACA38B,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,gBACV,SAAUiF,EAET,WAAU,gBAAkB,qBAAA,CAAA,CAC/B,CACF,CAAA,CAAA,EACF,EAGJ,QACS,OAAA,IAAA,CAEb,EAEA,aACG,MAAI,CAAA,UAAU,uBACb,SAAClF,EAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAA2B,6BAAA,CAAA,EAC/BD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAW,QAAQ08B,GAAQ,EAAI,SAAW,EAAE,GAAI,SAAC,GAAA,CAAA,EACtD18B,EAAAA,IAAC,MAAI,CAAA,UAAU,WAAY,CAAA,EAC3BA,EAAAA,IAAC,OAAI,UAAW,QAAQ08B,GAAQ,EAAI,SAAW,EAAE,GAAI,SAAC,GAAA,CAAA,CAAA,CACxD,CAAA,CAAA,EACF,EAEA38B,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,kBAAkB,SAAE,KAAA,EAClCA,EAAA,IAAA,IAAA,CAAE,UAAU,mBAAoB,SAAgBiB,CAAA,CAAA,CAAA,EACnD,EAEC1O,GAASyN,EAAA,IAAC,MAAI,CAAA,UAAU,gBAAiB,SAAMzN,EAAA,EAE/CyN,EAAA,IAAA,OAAA,CAAK,SAAUsB,EACb,YACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,ECvVMo8B,GAAiB,IAAM,CACrB,KAAA,CAAE,gBAAAr7B,EAAiB,KAAAqS,CAAK,EAAInU,EAAa/L,GAAqBA,EAAM,IAAI,EAG9E,GAAI,CAAC6N,EACI,OAAArC,EAAA,IAAC29B,GAAS,CAAA,GAAG,QAAS,CAAA,EAI/B,MAAMC,GAAgBlpB,GAAA,YAAAA,EAAM,WAC1BA,EAAK,QAAQ,kBACbA,EAAK,QAAQ,YACbA,EAAK,QAAQ,WACbA,EAAK,QAAQ,cAIf,OAAIA,GAAQkpB,GACV,QAAQ,IAAI,uEAAuE,EAC5E59B,EAAA,IAAC29B,GAAS,CAAA,GAAG,YAAa,CAAA,SAG3BnB,GAAW,EAAA,CACrB,EC3BaqB,GAAc,CACzB,CACE,GAAI,aACJ,KAAM,qCACN,MAAO,6CACP,MAAO,KACP,YAAa,8PACb,MAAO,0KACP,OAAQ,CACN,+BACA,2BACA,6BACA,gCACF,EACA,OAAQ,2DACV,EACA,CACE,GAAI,YACJ,KAAM,iBACN,MAAO,+CACP,MAAO,KACP,YAAa,0SACb,MAAO,8IACP,OAAQ,CACN,qCACA,wBACA,8BACA,yBACF,EACA,OAAQ,0DACV,EACA,CACE,GAAI,WACJ,KAAM,eACN,MAAO,qCACP,MAAO,KACP,YAAa,4SACb,MAAO,qMACP,OAAQ,CACN,wBACA,qBACA,+BACA,6BACF,EACA,OAAQ,oEACV,EACA,CACE,GAAI,QACJ,KAAM,YACN,MAAO,kCACP,MAAO,KACP,YAAa,+RACb,MAAO,qIACP,OAAQ,CACN,wBACA,uBACA,0BACA,kCACF,EACA,OAAQ,kEACV,EACA,CACE,GAAI,eACJ,KAAM,wBACN,MAAO,6BACP,MAAO,KACP,YAAa,6NACb,MAAO,gNACP,OAAQ,CACN,yBACA,qBACA,gCACA,yCACF,EACA,OAAQ,4DACV,EACA,CACE,GAAI,QACJ,KAAM,SACN,MAAO,kCACP,MAAO,MACP,YAAa,sRACb,MAAO,yHACP,OAAQ,CACN,0BACA,yBACA,kBACA,cACF,EACA,OAAQ,iCAAA,CAEZ,EAGaC,GAAkB,CAC7B,CACE,GAAI,YACJ,KAAM,aACN,MAAO,oBACP,YAAa,2JACb,UAAW,oGACX,SAAU,qHACV,MAAO,4FACP,YAAa,oCACf,EACA,CACE,GAAI,sBACJ,KAAM,aACN,MAAO,0BACP,YAAa,qJACb,UAAW,iGACX,SAAU,wHACV,MAAO,wGACP,YAAa,uCACf,EACA,CACE,GAAI,oBACJ,KAAM,YACN,MAAO,8BACP,YAAa,+IACb,UAAW,qFACX,SAAU,gFACV,MAAO,4EACP,YAAa,6CACf,EACA,CACE,GAAI,kBACJ,KAAM,cACN,MAAO,sBACP,YAAa,qIACb,UAAW,8FACX,SAAU,uGACV,MAAO,0GACP,YAAa,qDACf,EACA,CACE,GAAI,wBACJ,KAAM,eACN,MAAO,kCACP,YAAa,iKACb,UAAW,6FACX,SAAU,sGACV,MAAO,sEACP,YAAa,kCACf,EACA,CACE,GAAI,gBACJ,KAAM,eACN,MAAO,gBACP,YAAa,8HACb,UAAW,wFACX,SAAU,mKACV,MAAO,mHACP,YAAa,kCAAA,CAEjB,ECpJA,QAAQ,IAAI,2BAA2B,EACvC,QAAQ,IAAI,qBAAsBD,EAAW,EAE7C,MAAME,GAAc,IAAM,CACxB,KAAM,CAACrlB,EAAiBC,CAAkB,EAAIvZ,EAAAA,SAAkB,EAAK,EAC/D,CAACoZ,EAAgBC,CAAiB,EAAIrZ,EAAAA,SAAkB,EAAK,EAC7D,CAAC6B,EAAiBC,CAAkB,EAAI9B,EAAAA,SAAiB,4DAA4D,EACrH,CAAC4+B,EAAiBC,CAAkB,EAAI7+B,EAAAA,SAAwB,IAAI,EACpE,CAAC8+B,EAAqBC,CAAsB,EAAI/+B,EAAAA,SAAwB,IAAI,EAC5E,CAACg/B,EAAmBC,CAAoB,EAAIj/B,EAAAA,SAAiB,GAAG,EAGtEG,EAAAA,UAAU,IAAM,CACR,MAAA++B,EAAqBl9B,GAAkB,SAC3C,MAAMm9B,EAASn9B,EAAE,OACb,GAAAm9B,EAAO,UAAY,OAAO5rC,EAAA4rC,EAAO,aAAa,MAAM,IAA1B,MAAA5rC,EAA6B,WAAW,MAAM,CAC1EyO,EAAE,eAAe,EACjB,MAAM9J,GAAK/D,EAAAgrC,EAAO,aAAa,MAAM,IAA1B,YAAAhrC,EAA6B,UAAU,GAC5CirC,EAAU,SAAS,eAAelnC,GAAM,EAAE,EAC5CknC,GACFA,EAAQ,eAAe,CAAE,SAAU,QAAA,CAAU,CAC/C,CAEJ,EAES,gBAAA,iBAAiB,QAASF,CAAiB,EAC7C,IAAM,SAAS,oBAAoB,QAASA,CAAiB,CACtE,EAAG,EAAE,EAGL/+B,EAAAA,UAAU,IAAM,CACR,MAAAi5B,EAAW,YAAY,IAAM,CAC7B,KAAK,OAAO,EAAI,IACG6F,EAAAh9B,GAAQA,EAAO,CAAC,GAEtC,GAAK,EAED,MAAA,IAAM,cAAcm3B,CAAQ,CACrC,EAAG,EAAE,EAGL,MAAM/Z,EAAmB,CACvB,mEACA,uEACA,sEACA,gEACA,wEACA,4DACA,kEACA,0EACF,EAEMggB,EAAiB,IAAM,CAC3B,MAAMC,EAAc,KAAK,MAAM,KAAK,OAAO,EAAIjgB,EAAiB,MAAM,EACtE,OAAOA,EAAiBigB,CAAW,CACrC,EAEMC,EAAoB,IAAM,CAC9B,QAAQ,IAAI,sBAAsB,EAClChmB,EAAmB,EAAI,EACvBF,EAAkB,EAAK,EACvBvX,EAAmB,2EAA2E,CAChG,EAEM09B,EAAmB,IAAM,CAC7B,QAAQ,IAAI,qBAAqB,EACjCnmB,EAAkB,EAAI,EACtBE,EAAmB,EAAK,EACxBzX,EAAmB,sEAAsE,CAC3F,EAEM29B,EAAoB,IAAM,CAC9BlmB,EAAmB,EAAK,EACxBF,EAAkB,EAAK,EACvBvX,EAAmB,4DAA4D,CACjF,EAEM49B,EAAwB5uB,GAAsB,CAC/B+tB,EAAAD,IAAoB9tB,EAAY,KAAOA,CAAS,CACrE,EAEM6uB,EAAuBp7B,GAAkB,CACtBw6B,EAAAD,IAAwBv6B,EAAQ,KAAOA,CAAK,CACrE,EAEA,eAAQ,IAAI,oCAAoC,EAGxC,QAAA,IAAI,gBAAiBk6B,EAAW,EAChC,QAAA,IAAI,oBAAqBC,EAAe,EAG9C/9B,EAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACA,EAAAA,KAAA,SAAA,CAAO,UAAU,iBAChB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAC,MAAC,OAAI,IAAI,YAAY,IAAI,wBAAwB,UAAU,OAAO,EAClEA,EAAAA,IAAC,MAAG,SAAgB,kBAAA,CAAA,CAAA,EACtB,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAC,EAAA,IAAC,SAAA,CACC,UAAU,eACV,QAAS4+B,EACT,aAAc,IAAM19B,EAAmB,wDAAwD,EAC/F,aAAc,IAAMA,EAAmB,4DAA4D,EACpG,SAAA,OAAA,CAED,EACAlB,EAAA,IAAC,SAAA,CACC,UAAU,gBACV,QAAS2+B,EACT,aAAc,IAAMz9B,EAAmB,oEAAoE,EAC3G,aAAc,IAAMA,EAAmB,4DAA4D,EACpG,SAAA,oBAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EAEAnB,EAAAA,KAAC,UAAQ,CAAA,UAAU,eACjB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAiD,mDAAA,CAAA,EACpDA,EAAA,IAAA,IAAA,CAAE,UAAU,mBAAoB,SAAgBiB,EAAA,EAChDjB,EAAA,IAAA,IAAA,CAAE,UAAU,mBAAmB,SAGhC,qIAAA,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAC,IAAA,EAC7BA,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAe,iBAAA,CAAA,CAAA,EAC9C,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,aAAc,SAAkBo+B,EAAA,EAC/Cp+B,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAkB,oBAAA,CAAA,CAAA,EACjD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAC,IAAA,EAC7BA,EAAA,IAAA,OAAA,CAAK,UAAU,aAAa,SAAiB,mBAAA,CAAA,CAAA,CAChD,CAAA,CAAA,EACF,EACAA,EAAA,IAAC,SAAA,CACC,UAAU,aACV,QAAS2+B,EACT,aAAc,IAAMz9B,EAAmBu9B,GAAgB,EACvD,aAAc,IAAMv9B,EAAmB,4DAA4D,EACpG,SAAA,iCAAA,CAAA,CAED,EACF,EACAlB,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAAA,IAAC,OAAI,IAAI,kBAAkB,IAAI,qBAAsB,CAAA,CACvD,CAAA,CAAA,EACF,EAGCD,EAAA,KAAA,UAAA,CAAQ,UAAU,eAAe,GAAG,OACnC,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAA2B,6BAAA,CAAA,EAC9BA,EAAA,IAAA,IAAA,CAAE,UAAU,aAAa,SAE1B,0IAAA,QAEC,MAAI,CAAA,UAAU,kBACZ,SAAY69B,GAAA,IAAK3tB,GAChBlQ,EAAA,IAAC,MAAA,CAEC,UAAW,kBAAkBg+B,IAAoB9tB,EAAU,GAAK,UAAY,EAAE,GAC9E,QAAS,IAAM4uB,EAAqB5uB,EAAU,EAAE,EAEhD,SAAAnQ,EAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAAAC,EAAA,IAAC,MAAI,CAAA,UAAU,iBAAkB,SAAAkQ,EAAU,MAAM,EACjDlQ,EAAAA,IAAC,KAAI,CAAA,SAAAkQ,EAAU,IAAK,CAAA,EACnBlQ,EAAA,IAAA,IAAA,CAAE,UAAU,kBAAmB,WAAU,KAAM,CAAA,CAAA,EAClD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAAA,IAAA,KAAA,CAAI,WAAU,IAAK,CAAA,EACnBA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAyB,WAAU,YAAY,EAC5DD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBAAkB,SAAA,CAAA,IAAEmQ,EAAU,MAAM,GAAA,EAAC,EACpDnQ,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAe,iBAAA,CAAA,EAClBA,EAAA,IAAA,KAAA,CACE,SAAUkQ,EAAA,OAAO,IAAI,CAAC8uB,EAAOpmC,IAC3BoH,EAAAA,IAAA,KAAA,CAAgB,SAARg/B,CAAA,EAAApmC,CAAc,CACxB,CACH,CAAA,CAAA,EACF,EACAmH,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAe,iBAAA,CAAA,EAAS,IAAEkQ,EAAU,MAAA,CAC9C,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EA1BKA,EAAU,EAAA,CA4BlB,CACH,CAAA,CAAA,EACF,EAGCnQ,EAAA,KAAA,UAAA,CAAQ,UAAU,kBAAkB,GAAG,UACtC,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAA8B,gCAAA,CAAA,EACjCA,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAE7B,iHAAA,QAEC,MAAI,CAAA,UAAU,WACZ,SAAgB89B,GAAA,IAAKn6B,GACpB5D,EAAA,KAAC,MAAA,CAEC,UAAW,kBAAkBm+B,IAAwBv6B,EAAM,GAAK,SAAW,EAAE,GAC7E,QAAS,IAAMo7B,EAAoBp7B,EAAM,EAAE,EAE3C,SAAA,CAAA3D,EAAA,IAAC,MAAI,CAAA,UAAU,gBAAiB,SAAA2D,EAAM,KAAK,EAC3C5D,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACC,EAAAA,IAAA,KAAA,CAAI,WAAM,KAAM,CAAA,EAChBA,EAAA,IAAA,IAAA,CAAE,UAAU,uBAAwB,WAAM,YAAY,EACtDk+B,IAAwBv6B,EAAM,IAC5B5D,EAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAW,aAAA,CAAA,EACfA,EAAAA,IAAC,IAAG,CAAA,SAAA2D,EAAM,SAAU,CAAA,CAAA,EACtB,EACA5D,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAS,WAAA,CAAA,EACbA,EAAAA,IAAC,IAAG,CAAA,SAAA2D,EAAM,QAAS,CAAA,CAAA,EACrB,EACCA,EAAM,OACJ5D,OAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAA,OAAC,IAAE,CAAA,SAAA,CAAA,IAAE4D,EAAM,MAAM,GAAA,EAAC,SACjB,OAAK,CAAA,SAAA,CAAA,KAAGA,EAAM,WAAA,CAAY,CAAA,CAAA,CAC7B,CAAA,CAAA,CAEJ,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,EA1BKA,EAAM,EA4Bd,CAAA,EACH,EAEA5D,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAGH,wLAAA,CAAA,QACC,MAAI,CAAA,UAAU,gBACb,SAACD,EAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAACC,EAAA,IAAA,IAAA,CAAE,UAAU,aAAa,SAAoC,uCAAA,EAC9DA,EAAAA,IAAC,MAAI,CAAA,UAAU,cAAe,CAAA,CAAA,CAAA,CAChC,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECD,EAAA,KAAA,UAAA,CAAQ,UAAU,mBAAmB,GAAG,WACvC,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAsB,wBAAA,CAAA,EAC1BD,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAA,EAAA,KAAC,MAAA,CACC,UAAU,eACV,aAAc,IAAMmB,EAAmB,8DAA8D,EACrG,aAAc,IAAMA,EAAmB,4DAA4D,EAEnG,SAAA,CAAClB,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAE,KAAA,EAChCA,EAAAA,IAAC,MAAG,SAAe,iBAAA,CAAA,EACnBA,EAAAA,IAAC,KAAE,SAAqH,uHAAA,CAAA,CAAA,CAAA,CAC1H,EAEAD,EAAA,KAAC,MAAA,CACC,UAAU,eACV,aAAc,IAAMmB,EAAmB,sEAAsEk9B,CAAiB,GAAG,EACjI,aAAc,IAAMl9B,EAAmB,4DAA4D,EAEnG,SAAA,CAAClB,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAE,KAAA,EAChCA,EAAAA,IAAC,MAAG,SAAwB,0BAAA,CAAA,EAC5BA,EAAAA,IAAC,KAAE,SAAsG,wGAAA,CAAA,CAAA,CAAA,CAC3G,EAEAD,EAAA,KAAC,MAAA,CACC,UAAU,eACV,aAAc,IAAMmB,EAAmB,2DAA2D,EAClG,aAAc,IAAMA,EAAmB,4DAA4D,EAEnG,SAAA,CAAClB,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAE,KAAA,EAChCA,EAAAA,IAAC,MAAG,SAAgB,kBAAA,CAAA,EACpBA,EAAAA,IAAC,KAAE,SAAiI,mIAAA,CAAA,CAAA,CAAA,CACtI,EAEAD,EAAA,KAAC,MAAA,CACC,UAAU,eACV,aAAc,IAAMmB,EAAmB,kEAAkE,EACzG,aAAc,IAAMA,EAAmB,4DAA4D,EAEnG,SAAA,CAAClB,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAE,KAAA,EAChCA,EAAAA,IAAC,MAAG,SAAqB,uBAAA,CAAA,EACzBA,EAAAA,IAAC,KAAE,SAAsH,wHAAA,CAAA,CAAA,CAAA,CAC3H,EAEAD,EAAA,KAAC,MAAA,CACC,UAAU,eACV,aAAc,IAAMmB,EAAmB,kEAAkE,EACzG,aAAc,IAAMA,EAAmB,4DAA4D,EAEnG,SAAA,CAAClB,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAE,KAAA,EAChCA,EAAAA,IAAC,MAAG,SAAoB,sBAAA,CAAA,EACxBA,EAAAA,IAAC,KAAE,SAAgJ,kJAAA,CAAA,CAAA,CAAA,CACrJ,EAEAD,EAAA,KAAC,MAAA,CACC,UAAU,eACV,aAAc,IAAMmB,EAAmB,qDAAqD,EAC5F,aAAc,IAAMA,EAAmB,4DAA4D,EAEnG,SAAA,CAAClB,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAG,MAAA,EACjCA,EAAAA,IAAC,MAAG,SAAc,gBAAA,CAAA,EAClBA,EAAAA,IAAC,KAAE,SAA2H,6HAAA,CAAA,CAAA,CAAA,CAAA,CAChI,CACF,CAAA,CAAA,EACF,EAECD,EAAA,KAAA,UAAA,CAAQ,UAAU,qBAAqB,GAAG,OACzC,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAA6B,+BAAA,CAAA,EACjCD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAO,SAAA,CAAA,EACXD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAAO,UAAA,EAClCA,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAAsB,wBAAA,CAAA,CAAA,CACpD,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAQ,UAAA,CAAA,EACZD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAAO,UAAA,EAClCA,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAAa,eAAA,CAAA,CAAA,EAC3C,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAAU,aAAA,EACrCA,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAA0C,4CAAA,CAAA,CAAA,CACxE,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAc,gBAAA,CAAA,EAClBD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAAS,YAAA,EACpCA,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAA6D,+DAAA,CAAA,CAAA,CAC3F,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAiB,mBAAA,CAAA,EACrBD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAAS,YAAA,EACpCA,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAAmC,qCAAA,CAAA,CAAA,CACjE,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAc,gBAAA,CAAA,EAClBD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAAO,UAAA,EAClCA,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAAwC,0CAAA,CAAA,CAAA,CACtE,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAO,SAAA,CAAA,EACXD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAAM,SAAA,EACjCA,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAA4B,8BAAA,CAAA,CAAA,CAC1D,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,UAAQ,CAAA,UAAU,uBACjB,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAA0B,4BAAA,CAAA,EAC9BD,EAAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAA4L,8LAAA,CAAA,EAC/LD,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAAAC,EAAA,IAAC,MAAI,CAAA,IAAI,oBAAoB,IAAI,qBAAqB,SACrD,MACC,CAAA,SAAA,CAAAA,EAAAA,IAAC,MAAG,SAAsB,wBAAA,CAAA,EAC1BA,EAAAA,IAAC,KAAE,SAA4B,8BAAA,CAAA,CAAA,CACjC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAA8L,gMAAA,CAAA,EACjMD,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAAAC,EAAA,IAAC,MAAI,CAAA,IAAI,oBAAoB,IAAI,qBAAqB,SACrD,MACC,CAAA,SAAA,CAAAA,EAAAA,IAAC,MAAG,SAAc,gBAAA,CAAA,EAClBA,EAAAA,IAAC,KAAE,SAAgB,kBAAA,CAAA,CAAA,CACrB,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAA8M,gNAAA,CAAA,EACjND,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAAAC,EAAA,IAAC,MAAI,CAAA,IAAI,oBAAoB,IAAI,qBAAqB,SACrD,MACC,CAAA,SAAA,CAAAA,EAAAA,IAAC,MAAG,SAAmB,qBAAA,CAAA,EACvBA,EAAAA,IAAC,KAAE,SAAkB,oBAAA,CAAA,CAAA,CACvB,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,SAAO,CAAA,UAAU,iBAChB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAA,IAAC,MAAI,CAAA,IAAI,kBAAkB,IAAI,mBAAmB,EAClDA,EAAAA,IAAC,KAAE,SAAgB,kBAAA,CAAA,CAAA,EACrB,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAW,aAAA,CAAA,SACd,KACC,CAAA,SAAA,CAAAA,EAAAA,IAAC,MAAG,SAACA,EAAA,IAAA,IAAA,CAAE,KAAK,QAAQ,yBAAa,CAAI,CAAA,QACpC,KAAG,CAAA,SAAAA,EAAA,IAAC,KAAE,KAAK,WAAW,2BAAe,CAAI,CAAA,QACzC,KAAG,CAAA,SAAAA,EAAA,IAAC,KAAE,KAAK,YAAY,oBAAQ,CAAI,CAAA,QACnC,KAAG,CAAA,SAAAA,MAAC,KAAE,KAAK,QAAQ,qBAAU,CAAA,CAAI,CAAA,CAAA,CACpC,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAA6B,+BAAA,CAAA,EACjCA,EAAAA,IAAC,KAAE,SAAoE,sEAAA,CAAA,EACvED,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAC,EAAA,IAAC,QAAM,CAAA,KAAK,QAAQ,YAAY,mBAAmB,EACnDA,EAAAA,IAAC,UAAO,SAAS,WAAA,CAAA,CAAA,CACnB,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAA,OAAC,IAAE,CAAA,SAAA,CAAA,KAAQ,IAAI,KAAK,EAAE,YAAY,EAAE,0DAAA,EAAwD,SAC3F,IAAE,CAAA,SAAA,CAAA,uFAAqFq+B,EAAkB,iCAAA,EAA+B,EACxIp+B,EAAA,IAAA,IAAA,CAAE,UAAU,eAAe,SAAgJ,kJAAA,CAAA,CAAA,CAC9K,CAAA,CAAA,EACF,EAGC0Y,GACC1Y,EAAA,IAAC,MAAI,CAAA,UAAU,gBAAgB,MAAO,CAAE,SAAU,QAAS,IAAK,EAAG,KAAM,EAAG,MAAO,EAAG,OAAQ,EAAG,gBAAiB,qBAAsB,OAAQ,IAAM,QAAS,OAAQ,eAAgB,SAAU,WAAY,QAAS,EACpN,eAACQ,GAAY,CAAA,QAASq+B,EAAmB,OAAQnmB,CAAiB,CAAA,EACpE,EAEDF,GACCxY,EAAA,IAAC,MAAI,CAAA,UAAU,gBAAgB,MAAO,CAAE,SAAU,QAAS,IAAK,EAAG,KAAM,EAAG,MAAO,EAAG,OAAQ,EAAG,gBAAiB,qBAAsB,OAAQ,IAAM,QAAS,OAAQ,eAAgB,SAAU,WAAY,QAAS,EACpN,eAAC0B,GAAM,CAAA,QAASm9B,EAAmB,OAAQrmB,EAAgB,CAC7D,CAAA,CAAA,EAEJ,CAEJ,ECzcMymB,GAAgD,CAAC,CACrD,SAAAhgC,EACA,WAAAigC,EAAa,QACf,IAAM,CACJ,KAAM,CAAE,gBAAA78B,EAAiB,UAAAD,GAAc9B,EAAe9L,GAASA,EAAM,IAAI,EACnEkH,EAAW0E,GAAe,EAC1BO,EAAWC,GAAY,EAqB7B,OAnBArB,EAAAA,UAAU,IAAM,CAEV,CAAC8C,GAAmB,CAACD,IACvB,QAAQ,IAAI,6DAA6D,EACzE1G,EAASvH,GAAiB,CAAA,EAAE,MAAe5B,GAAA,CACjC,QAAA,MAAM,2CAA4CA,CAAK,CAAA,CAChE,EAEF,EAAA,CAAC8P,EAAiBD,EAAW1G,CAAQ,CAAC,EAGzC6D,EAAAA,UAAU,IAAM,CACV,CAAC6C,GAAa,CAACC,IACT,QAAA,IAAI,qDAAsD68B,CAAU,EAC5Ev+B,EAASu+B,EAAY,CAAE,QAAS,EAAA,CAAM,IAEvC,CAAC78B,EAAiBD,EAAWzB,EAAUu+B,CAAU,CAAC,EAGjD98B,EAEArC,EAAA,KAAC,OAAI,MAAO,CACV,QAAS,OACT,cAAe,SACf,WAAY,SACZ,eAAgB,SAChB,QAAS,MAET,EAAA,SAAA,CAAAC,MAAC,OAAI,MAAO,CACV,MAAO,OACP,OAAQ,OACR,OAAQ,oBACR,UAAW,oBACX,aAAc,MACd,UAAW,4BACX,aAAc,MAAA,EACb,EACHA,EAAAA,IAAC,KAAE,SAA+C,iDAAA,CAAA,EAClDA,EAAAA,IAAC,SACC,SACD,yFAAA,CAAA,CAAA,EACH,EAKGqC,EAAqBrC,EAAAA,IAAAmD,EAAAA,SAAA,CAAA,SAAAlE,CAAA,CAAS,EAAM,IAC7C,EC1CakgC,GAAiC,IAAM,CAClD,KAAM,CAACn2B,EAAWC,CAAY,EAAI7J,EAAAA,SAAiB,UAAU,EACvD,CAACggC,EAAcC,CAAe,EAAIjgC,WAAkC,CACxE,QAAS,GACT,UAAW,GACX,OAAQ,GACR,MAAO,GACP,SAAU,GACV,KAAM,EAAA,CACP,EAGKkgC,EAAoB,CACxB,IAAK,CACH,MAAO,YACP,MAAO,GACP,KAAM,IACN,cAAe,GACf,iBAAkB,KAClB,OAAQ,SACR,MAAO,KACP,YAAa,YACb,cAAe,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,CAC5C,EACA,OAAQ,CACN,MAAO,SACP,MAAO,IACP,KAAM,KACN,cAAe,IACf,iBAAkB,IAClB,OAAQ,UACR,MAAO,KACP,YAAa,YACb,cAAe,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,CAC5C,EACA,KAAM,CACJ,MAAO,WACP,MAAO,KACP,KAAM,OACN,cAAe,KACf,iBAAkB,MAClB,OAAQ,YACR,MAAO,OACP,YAAa,YACb,cAAe,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,CAC5C,EACA,QAAS,CACP,MAAO,UACP,MAAO,KACP,KAAM,OACN,cAAe,KACf,iBAAkB,KAClB,OAAQ,WACR,MAAO,KACP,YAAa,YACb,cAAe,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,CAAA,CAE9C,EAGMC,EAAkC,CACtC,UAAW,YAAa,SAAU,UAAW,UAAW,SAAU,OACpE,EAGMC,EAA8B,CAClC,UAAW,UAAW,YAAa,SAAU,OAC/C,EAGMC,EAAgC,CACpC,OAAQ,UAAW,UAAW,SAAU,OAC1C,EAGMC,EAAgC,CACpC,UAAW,YAAa,SAAU,UAAW,UAAW,SAAU,QAAS,MAC7E,EAGMC,EAAkC,CACtC,UAAW,YAAa,SAAU,UAAW,UAAW,SAAU,OACpE,EAGMC,EAAgC,CACpC,UAAW,YAAa,SAAU,OACpC,EAGE,OAAA7/B,EAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACA,EAAAA,KAAA,SAAA,CAAO,UAAU,kBAChB,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAA0B,4BAAA,CAAA,EAC9BA,EAAAA,IAAC,KAAE,SAAgD,kDAAA,CAAA,CAAA,EACrD,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAAAC,EAAA,IAAC,SAAA,CACC,UAAW,qBAAqBgJ,IAAc,WAAa,SAAW,EAAE,GACxE,QAAS,IAAMC,EAAa,UAAU,EACvC,SAAA,UAAA,CAED,EACAjJ,EAAA,IAAC,SAAA,CACC,UAAW,qBAAqBgJ,IAAc,UAAY,SAAW,EAAE,GACvE,QAAS,IAAMC,EAAa,SAAS,EACtC,SAAA,SAAA,CAED,EACAjJ,EAAA,IAAC,SAAA,CACC,UAAW,qBAAqBgJ,IAAc,QAAU,SAAW,EAAE,GACrE,QAAS,IAAMC,EAAa,OAAO,EACpC,SAAA,OAAA,CAED,EACAjJ,EAAA,IAAC,SAAA,CACC,UAAW,qBAAqBgJ,IAAc,SAAW,SAAW,EAAE,GACtE,QAAS,IAAMC,EAAa,QAAQ,EACrC,SAAA,QAAA,CAED,EACAjJ,EAAA,IAAC,SAAA,CACC,UAAW,qBAAqBgJ,IAAc,SAAW,SAAW,EAAE,GACtE,QAAS,IAAMC,EAAa,QAAQ,EACrC,SAAA,QAAA,CAED,EACAjJ,EAAA,IAAC,SAAA,CACC,UAAW,qBAAqBgJ,IAAc,UAAY,SAAW,EAAE,GACvE,QAAS,IAAMC,EAAa,SAAS,EACtC,SAAA,SAAA,CAED,EACAjJ,EAAA,IAAC,SAAA,CACC,UAAW,qBAAqBgJ,IAAc,UAAY,SAAW,EAAE,GACvE,QAAS,IAAMC,EAAa,SAAS,EACtC,SAAA,SAAA,CAED,EACAjJ,EAAA,IAAC,SAAA,CACC,UAAW,qBAAqBgJ,IAAc,SAAW,SAAW,EAAE,GACtE,QAAS,IAAMC,EAAa,QAAQ,EACrC,SAAA,QAAA,CAAA,CAED,EACF,EAEAlJ,EAAAA,KAAC,OAAK,CAAA,UAAU,mBACb,SAAA,CAAAiJ,IAAc,YACbjJ,OAAC,UAAQ,CAAA,UAAU,mBACjB,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAA0B,4BAAA,CAAA,EAC9BA,EAAAA,IAAC,KAAE,SAGH,yIAAA,CAAA,EAEAA,EAAAA,IAAC,MAAG,SAAiB,mBAAA,CAAA,SACpB,KACC,CAAA,SAAA,CAAAD,OAAC,KAAG,CAAA,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAoB,sBAAA,CAAA,EAAS,kDAAA,EAAgD,SACxF,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,UAAO,SAAc,gBAAA,CAAA,EAAS,8DAAA,EAA4D,SAC9F,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,UAAO,SAAY,cAAA,CAAA,EAAS,8CAAA,EAA4C,SAC5E,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,UAAO,SAAY,cAAA,CAAA,EAAS,2DAAA,CAAyD,CAAA,CAAA,EAC5F,EAEAA,EAAAA,IAAC,MAAG,SAAe,iBAAA,CAAA,EACnBD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,qBACb,SAAA,CAACC,EAAA,IAAA4Q,EAAA,CAAO,QAAQ,UAAU,SAAM,SAAA,EAChC5Q,EAAAA,IAAC,QAAK,SAAO,SAAA,CAAA,CAAA,EACf,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACC,EAAA,IAAA4F,EAAA,CAAK,UAAU,gBAAgB,SAAc,iBAAA,EAC9C5F,EAAAA,IAAC,QAAK,SAAK,OAAA,CAAA,CAAA,EACb,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACC,EAAA,IAAAmR,GAAA,CAAM,QAAQ,OAAO,SAAe,kBAAA,EACrCnR,EAAAA,IAAC,QAAK,SAAM,QAAA,CAAA,CAAA,EACd,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACC,EAAA,IAAAyG,EAAA,CAAM,QAAQ,QAAQ,SAAK,QAAA,EAC5BzG,EAAAA,IAAC,QAAK,SAAM,QAAA,CAAA,CAAA,EACd,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,mBACb,SAAAA,EAAA,IAAC+G,GAAA,CACC,MAAM,MACN,MAAO,GACP,KAAK,IACL,OAAO,QAAA,CAAA,EAEX,EACA/G,EAAAA,IAAC,QAAK,SAAO,SAAA,CAAA,CAAA,EACf,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAAAC,EAAA,IAAC4R,GAAA,CACC,QAAS,GACT,SAAU,IAAM,CAAC,EACjB,QAAQ,OAAA,CACV,EACA5R,EAAAA,IAAC,QAAK,SAAO,SAAA,CAAA,CAAA,EACf,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,iBACb,SAAAA,EAAA,IAACiS,EAAA,CACC,YAAY,QACZ,QAAQ,OAAA,CAAA,EAEZ,EACAjS,EAAAA,IAAC,QAAK,SAAM,QAAA,CAAA,CAAA,CACd,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGDgJ,IAAc,WACZjJ,OAAA,UAAA,CAAQ,UAAU,mBACjB,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAO,SAAA,CAAA,EACXA,EAAAA,IAAC,KAAE,SAGH,oHAAA,CAAA,EAEAA,EAAAA,IAAC,MAAG,SAAe,iBAAA,CAAA,EACnBA,EAAA,IAAC,MAAI,CAAA,UAAU,iBACZ,SAAAu/B,EAAe,IACd15B,GAAA9F,EAAA,KAAC,MAAkB,CAAA,UAAU,sBAC3B,SAAA,CAACC,EAAAA,IAAA4Q,EAAA,CAAO,QAAA/K,EAAmB,SAAQA,CAAA,CAAA,QAClC,OAAM,CAAA,SAAA,oBAAoBA,CAAO,KAAKA,CAAO,WAAY,CAAA,CAAA,GAFlDA,CAGV,CACD,EACH,EAEA7F,EAAAA,IAAC,MAAG,SAAY,cAAA,CAAA,EAChBD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,MAAC4Q,EAAO,CAAA,QAAQ,UAAU,KAAK,KAAK,SAAK,QAAA,EACzC5Q,EAAAA,IAAC,QAAM,SAAqD,oDAAA,CAAA,CAAA,EAC9D,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,MAAC4Q,EAAO,CAAA,QAAQ,UAAU,KAAK,KAAK,SAAM,SAAA,EAC1C5Q,EAAAA,IAAC,QAAM,SAAsD,qDAAA,CAAA,CAAA,EAC/D,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,MAAC4Q,EAAO,CAAA,QAAQ,UAAU,KAAK,KAAK,SAAK,QAAA,EACzC5Q,EAAAA,IAAC,QAAM,SAAqD,oDAAA,CAAA,CAAA,CAC9D,CAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAG,SAAa,eAAA,CAAA,EACjBD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,MAAC4Q,EAAO,CAAA,QAAQ,UAAU,SAAQ,GAAC,SAAQ,WAAA,EAC3C5Q,EAAAA,IAAC,QAAM,SAAuD,sDAAA,CAAA,CAAA,EAChE,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,MAAC4Q,EAAO,CAAA,QAAQ,SAAS,KAAI,GAAC,SAAI,OAAA,EAClC5Q,EAAAA,IAAC,QAAM,SAA8C,6CAAA,CAAA,CAAA,EACvD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,MAAC4Q,EAAO,CAAA,QAAQ,QAAQ,OAAM,GAAC,SAAC,IAAA,EAChC5Q,EAAAA,IAAC,QAAM,SAA4C,2CAAA,CAAA,CAAA,CACrD,CAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAG,SAAa,eAAA,CAAA,EACjBD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,MAAC4Q,EAAO,CAAA,QAAQ,UAAU,SAAQ,GAAC,SAAQ,WAAA,EAC3C5Q,EAAAA,IAAC,QAAM,SAAuD,sDAAA,CAAA,CAAA,EAChE,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,MAAC4Q,EAAO,CAAA,QAAQ,UAAU,QAAO,GAAC,SAAO,UAAA,EACzC5Q,EAAAA,IAAC,QAAM,SAAqD,oDAAA,CAAA,CAAA,CAC9D,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGDgJ,IAAc,SACZjJ,OAAA,UAAA,CAAQ,UAAU,mBACjB,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAK,OAAA,CAAA,EACTA,EAAAA,IAAC,KAAE,SAGH,+GAAA,CAAA,EAEAA,EAAAA,IAAC,MAAG,SAAa,eAAA,CAAA,EACjBA,EAAA,IAAC,MAAI,CAAA,UAAU,4BACZ,SAAAw/B,EAAa,IACZ35B,GAAA9F,EAAA,KAAC,MAAkB,CAAA,UAAU,sBAC3B,SAAA,CAACA,EAAA,KAAA6F,EAAA,CAAK,QAAAC,EAAkB,UAAU,YAChC,SAAA,CAAA9F,OAAC,KAAI,CAAA,SAAA,CAAA8F,EAAQ,OAAA,EAAK,SACjB,IAAE,CAAA,SAAA,CAAA,aAAWA,EAAQ,kBAAA,CAAgB,CAAA,CAAA,EACxC,EACC7F,EAAA,IAAA,OAAA,CAAM,SAAkB,kBAAA6F,CAAO,kBAAmB,CAAA,CAAA,GAL3CA,CAMV,CACD,EACH,EAEA7F,EAAAA,IAAC,MAAG,SAAe,iBAAA,CAAA,EACnBD,EAAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAA,EAAA,KAAC6F,EAAK,CAAA,UAAU,OAAO,UAAU,YAC/B,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAc,gBAAA,CAAA,EAClBA,EAAAA,IAAC,KAAE,SAAS,WAAA,CAAA,CAAA,EACd,EACAA,EAAAA,IAAC,QAAM,SAAwC,uCAAA,CAAA,CAAA,EACjD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAA,EAAA,KAAC6F,EAAK,CAAA,UAAU,MAAM,UAAU,YAC9B,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAa,eAAA,CAAA,EACjBA,EAAAA,IAAC,KAAE,SAAa,eAAA,CAAA,CAAA,EAClB,EACAA,EAAAA,IAAC,QAAM,SAAuC,sCAAA,CAAA,CAAA,EAChD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAA,EAAA,KAAC6F,EAAK,CAAA,UAAU,SAAS,UAAU,YACjC,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAgB,kBAAA,CAAA,EACpBA,EAAAA,IAAC,KAAE,SAAa,eAAA,CAAA,CAAA,EAClB,EACAA,EAAAA,IAAC,QAAM,SAA0C,yCAAA,CAAA,CAAA,EACnD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAA,EAAA,KAAC6F,EAAK,CAAA,UAAU,OAAO,UAAU,YAC/B,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAc,gBAAA,CAAA,EAClBA,EAAAA,IAAC,KAAE,SAAgB,kBAAA,CAAA,CAAA,EACrB,EACAA,EAAAA,IAAC,QAAM,SAAwC,uCAAA,CAAA,CAAA,CACjD,CAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAG,SAAW,aAAA,CAAA,EACfD,EAAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAA,EAAA,KAAC6F,EAAK,CAAA,SAAQ,GAAC,UAAU,YACvB,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAa,eAAA,CAAA,EACjBA,EAAAA,IAAC,KAAE,SAAW,aAAA,CAAA,CAAA,EAChB,EACAA,EAAAA,IAAC,QAAM,SAAgC,+BAAA,CAAA,CAAA,EACzC,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAA,EAAA,KAAC6F,EAAK,CAAA,eAAc,GAAC,UAAU,YAC7B,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAe,iBAAA,CAAA,EACnBA,EAAAA,IAAC,KAAE,SAAoB,sBAAA,CAAA,CAAA,EACzB,EACAA,EAAAA,IAAC,QAAM,SAAsC,qCAAA,CAAA,CAAA,EAC/C,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAA,EAAA,KAAC6F,EAAK,CAAA,KAAI,GAAC,UAAU,YACnB,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAW,aAAA,CAAA,EACfA,EAAAA,IAAC,KAAE,SAAgB,kBAAA,CAAA,CAAA,EACrB,EACAA,EAAAA,IAAC,QAAM,SAA4B,2BAAA,CAAA,CAAA,EACrC,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAA,EAAA,KAAC6F,EAAK,CAAA,MAAK,GAAC,UAAU,YACpB,SAAA,CAAA5F,EAAAA,IAAC,MAAG,SAAY,cAAA,CAAA,EAChBA,EAAAA,IAAC,KAAE,SAAkB,oBAAA,CAAA,CAAA,EACvB,EACAA,EAAAA,IAAC,QAAM,SAA6B,4BAAA,CAAA,CAAA,CACtC,CAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAG,SAAkB,oBAAA,CAAA,QACrB,MAAI,CAAA,UAAU,4BACb,SAACD,EAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC4F,EAAA,CACC,UAAU,YACV,OAAS5F,EAAAA,IAAA,KAAA,CAAG,SAAW,aAAA,CAAA,EACvB,OAASA,EAAAA,IAAA,MAAA,CAAI,SAAW,aAAA,CAAA,EAExB,SAAAA,EAAAA,IAAC,KAAE,SAAiB,mBAAA,CAAA,CAAA,CACtB,EACAA,EAAAA,IAAC,QAAM,SAA2E,0EAAA,CAAA,CAAA,CAAA,CACpF,CACF,CAAA,CAAA,EACF,EAGDgJ,IAAc,UACZjJ,OAAA,UAAA,CAAQ,UAAU,mBACjB,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAM,QAAA,CAAA,EACVA,EAAAA,IAAC,KAAE,SAGH,sIAAA,CAAA,EAEAA,EAAAA,IAAC,MAAG,SAAc,gBAAA,CAAA,EAClBA,EAAA,IAAC,MAAI,CAAA,UAAU,iBACZ,SAAAy/B,EAAc,IACb55B,GAAA9F,EAAA,KAAC,MAAkB,CAAA,UAAU,sBAC3B,SAAA,CAAAA,EAAA,KAACoR,GAAA,CACC,QAAAtL,EACA,MAAO,GAAGA,EAAQ,OAAO,CAAC,EAAE,YAAgB,EAAAA,EAAQ,MAAM,CAAC,CAAC,SAC7D,SAAA,CAAA,aACYA,EAAQ,oCAAA,CAAA,CACrB,QACC,OAAM,CAAA,SAAA,mBAAmBA,CAAO,YAAYA,CAAO,yBAA0B,CAAA,CAAA,GAPtEA,CAQV,CACD,EACH,EAEA7F,EAAAA,IAAC,MAAG,SAAW,aAAA,CAAA,EACfD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,EAAAA,IAACmR,IAAM,QAAQ,OAAO,KAAK,KAAK,MAAM,cAAc,SAEpD,wBAAA,CAAA,EACAnR,EAAAA,IAAC,QAAM,SAAsE,qEAAA,CAAA,CAAA,EAC/E,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAAA,IAACmR,IAAM,QAAQ,OAAO,KAAK,KAAK,MAAM,eAAe,SAErD,yBAAA,CAAA,EACAnR,EAAAA,IAAC,QAAM,SAAuE,sEAAA,CAAA,CAAA,EAChF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAAA,IAACmR,IAAM,QAAQ,OAAO,KAAK,KAAK,MAAM,cAAc,SAEpD,wBAAA,CAAA,EACAnR,EAAAA,IAAC,QAAM,SAAsE,qEAAA,CAAA,CAAA,CAC/E,CAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAG,SAAY,cAAA,CAAA,EAChBD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,EAAAA,IAACmR,IAAM,QAAQ,UAAU,SAAQ,GAAC,MAAM,iBAAiB,SAEzD,2BAAA,CAAA,EACAnR,EAAAA,IAAC,QAAM,SAA2E,0EAAA,CAAA,CAAA,EACpF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAAA,IAACmR,IAAM,QAAQ,SAAS,KAAI,GAAC,MAAM,aAAa,SAEhD,oCAAA,CAAA,EACAnR,EAAAA,IAAC,QAAM,SAAkE,iEAAA,CAAA,CAAA,CAC3E,CAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAG,SAAkB,oBAAA,CAAA,EACtBD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,EAAA,IAACmR,GAAA,CACC,QAAQ,QACR,MAAM,mBACN,WAAU,GACV,WAAW,QACX,SAAU,IAAM,MAAM,gBAAgB,EACvC,SAAA,yCAAA,CAED,EACAnR,EAAAA,IAAC,QAAM,SAAwH,uHAAA,CAAA,CAAA,EACjI,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAACmR,GAAA,CACC,QAAQ,OACR,MAAM,oBACN,YAAW,GACX,UAAW,IAAM,MAAM,iBAAiB,EACzC,SAAA,8BAAA,CAED,EACAnR,EAAAA,IAAC,QAAM,SAAwG,uGAAA,CAAA,CAAA,CACjH,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGDgJ,IAAc,UACZjJ,OAAA,UAAA,CAAQ,UAAU,mBACjB,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAM,QAAA,CAAA,EACVA,EAAAA,IAAC,KAAE,SAGH,6GAAA,CAAA,EAEAA,EAAAA,IAAC,MAAG,SAAc,gBAAA,CAAA,EAClBA,EAAA,IAAC,MAAI,CAAA,UAAU,iBACZ,SAAA0/B,EAAc,IACb75B,GAAA9F,EAAA,KAAC,MAAkB,CAAA,UAAU,sBAC3B,SAAA,CAACC,EAAAA,IAAAyG,EAAA,CAAM,QAAAZ,EAAmB,SAAQA,CAAA,CAAA,QACjC,OAAM,CAAA,SAAA,mBAAmBA,CAAO,KAAKA,CAAO,UAAW,CAAA,CAAA,GAFhDA,CAGV,CACD,EACH,EAEA7F,EAAAA,IAAC,MAAG,SAAW,aAAA,CAAA,EACfD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,MAACyG,EAAM,CAAA,QAAQ,UAAU,KAAK,KAAK,SAAK,QAAA,EACxCzG,EAAAA,IAAC,QAAM,SAAmD,kDAAA,CAAA,CAAA,EAC5D,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,MAACyG,EAAM,CAAA,QAAQ,UAAU,KAAK,KAAK,SAAM,SAAA,EACzCzG,EAAAA,IAAC,QAAM,SAAoD,mDAAA,CAAA,CAAA,EAC7D,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,MAACyG,EAAM,CAAA,QAAQ,UAAU,KAAK,KAAK,SAAK,QAAA,EACxCzG,EAAAA,IAAC,QAAM,SAAmD,kDAAA,CAAA,CAAA,CAC5D,CAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAG,SAAY,cAAA,CAAA,EAChBD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,MAACyG,EAAM,CAAA,QAAQ,YAAY,SAAQ,GAAC,SAAQ,WAAA,EAC5CzG,EAAAA,IAAC,QAAM,SAAuD,sDAAA,CAAA,CAAA,EAChE,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,MAACyG,EAAM,CAAA,QAAQ,SAAS,QAAO,GAAC,SAAO,UAAA,EACvCzG,EAAAA,IAAC,QAAM,SAAkD,iDAAA,CAAA,CAAA,EAC3D,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,MAACyG,EAAM,CAAA,QAAQ,SAAS,KAAI,GAAC,SAAI,OAAA,EACjCzG,EAAAA,IAAC,QAAM,SAA4C,2CAAA,CAAA,CAAA,EACrD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,MAACyG,EAAM,CAAA,QAAQ,QAAQ,MAAK,GAAC,SAAK,QAAA,EAClCzG,EAAAA,IAAC,QAAM,SAA6C,4CAAA,CAAA,CAAA,CACtD,CAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAG,SAAe,iBAAA,CAAA,EACnBD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAa,eAAA,CAAA,QAClByG,EAAM,CAAA,QAAQ,SAAS,QAAO,GAAC,SAAC,GAAA,CAAA,CAAA,EACnC,EACAzG,EAAAA,IAAC,QAAM,SAA4C,2CAAA,CAAA,CAAA,EACrD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAO,SAAA,CAAA,QACZyG,EAAM,CAAA,QAAQ,UAAU,QAAO,GAAC,SAAM,QAAA,CAAA,CAAA,EACzC,EACAzG,EAAAA,IAAC,QAAM,SAAkD,iDAAA,CAAA,CAAA,EAC3D,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAQ,UAAA,CAAA,EACbA,EAAA,IAAAyG,EAAA,CAAM,QAAQ,OAAO,SAAM,QAAA,CAAA,CAAA,EAC9B,EACAzG,EAAAA,IAAC,QAAM,SAAuC,sCAAA,CAAA,CAAA,CAChD,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGDgJ,IAAc,WACZjJ,OAAA,UAAA,CAAQ,UAAU,mBACjB,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAO,SAAA,CAAA,EACXA,EAAAA,IAAC,KAAE,SAGH,oIAAA,CAAA,EAEAA,EAAAA,IAAC,MAAG,SAAe,iBAAA,CAAA,EACnBA,EAAA,IAAC,MAAI,CAAA,UAAU,iBACZ,SAAA2/B,EAAe,IACd95B,GAAA9F,EAAA,KAAC,MAAkB,CAAA,UAAU,sBAC3B,SAAA,CAAAC,EAAA,IAAC4R,GAAA,CACC,QAASwtB,EAAav5B,CAAO,GAAK,GAClC,SAAWgM,GAAYwtB,EAAyBh+B,IAAA,CAAE,GAAGA,EAAM,CAACwE,CAAO,EAAGgM,CAAA,EAAU,EAChF,QAAAhM,EACA,MAAOA,CAAA,CACT,EACA7F,EAAAA,IAAC,OAAM,CAAA,SAAA,oBAAoBo/B,EAAav5B,CAAO,GAAK,EAAK,sCAAsCA,CAAO,YAAYA,CAAO,MAAO,CAAA,CAAA,GAPxHA,CAQV,CACD,EACH,EAEA7F,EAAAA,IAAC,MAAG,SAAY,cAAA,CAAA,EAChBD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC4R,GAAA,CACC,QAASwtB,EAAa,QACtB,SAAWvtB,GAAYwtB,EAAgBh+B,IAAS,CAAE,GAAGA,EAAM,QAASwQ,CAAA,EAAU,EAC9E,QAAQ,UACR,KAAK,KACL,MAAM,OAAA,CACR,EACA7R,EAAAA,IAAC,QAAM,SAA8F,6FAAA,CAAA,CAAA,EACvG,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC4R,GAAA,CACC,QAASwtB,EAAa,QACtB,SAAWvtB,GAAYwtB,EAAgBh+B,IAAS,CAAE,GAAGA,EAAM,QAASwQ,CAAA,EAAU,EAC9E,QAAQ,UACR,KAAK,KACL,MAAM,QAAA,CACR,EACA7R,EAAAA,IAAC,QAAM,SAA+F,8FAAA,CAAA,CAAA,EACxG,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC4R,GAAA,CACC,QAASwtB,EAAa,QACtB,SAAWvtB,GAAYwtB,EAAgBh+B,IAAS,CAAE,GAAGA,EAAM,QAASwQ,CAAA,EAAU,EAC9E,QAAQ,UACR,KAAK,KACL,MAAM,OAAA,CACR,EACA7R,EAAAA,IAAC,QAAM,SAA8F,6FAAA,CAAA,CAAA,CACvG,CAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAG,SAAa,eAAA,CAAA,EACjBD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC4R,GAAA,CACC,QAASwtB,EAAa,KACtB,SAAWvtB,GAAYwtB,EAAgBh+B,IAAS,CAAE,GAAGA,EAAM,KAAMwQ,CAAA,EAAU,EAC3E,QAAQ,QACR,KAAI,GACJ,MAAM,WAAA,CACR,EACA7R,EAAAA,IAAC,QAAM,SAA2F,0FAAA,CAAA,CAAA,EACpG,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC4R,GAAA,CACC,QAASwtB,EAAa,OACtB,SAAWvtB,GAAYwtB,EAAgBh+B,IAAS,CAAE,GAAGA,EAAM,OAAQwQ,CAAA,EAAU,EAC7E,QAAQ,SACR,MAAM,cACN,WAAU,EAAA,CACZ,EACA7R,EAAAA,IAAC,QAAM,SAAoG,mGAAA,CAAA,CAAA,EAC7G,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC4R,GAAA,CACC,QAASwtB,EAAa,UACtB,SAAWvtB,GAAYwtB,EAAgBh+B,IAAS,CAAE,GAAGA,EAAM,UAAWwQ,CAAA,EAAU,EAChF,QAAQ,YACR,MAAM,aACN,WAAY,EAAA,CACd,EACA7R,EAAAA,IAAC,QAAM,SAA+G,8GAAA,CAAA,CAAA,CACxH,CAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAG,SAAa,eAAA,CAAA,QAChB,MAAI,CAAA,UAAU,iBACb,SAACD,EAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC4R,GAAA,CACC,QAASwtB,EAAa,SACtB,SAAWvtB,GAAYwtB,EAAgBh+B,IAAS,CAAE,GAAGA,EAAM,SAAUwQ,CAAA,EAAU,EAC/E,QAAQ,UACR,SAAQ,GACR,MAAM,UAAA,CACR,EACA7R,EAAAA,IAAC,QAAM,SAAiG,gGAAA,CAAA,CAAA,CAAA,CAC1G,CACF,CAAA,CAAA,EACF,EAGDgJ,IAAc,UACZjJ,OAAA,UAAA,CAAQ,UAAU,mBACjB,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAM,QAAA,CAAA,EACVA,EAAAA,IAAC,KAAE,SAGH,2GAAA,CAAA,EAEAA,EAAAA,IAAC,MAAG,SAAc,gBAAA,CAAA,EAClBA,EAAA,IAAC,MAAI,CAAA,UAAU,iBACZ,SAAA4/B,EAAc,IACb/5B,GAAA9F,EAAA,KAAC,MAAkB,CAAA,UAAU,sBAC3B,SAAA,CAAAC,EAAA,IAACiS,EAAA,CACC,YAAa,GAAGpM,CAAO,SACvB,QAAAA,CAAA,CACF,QACC,OAAM,CAAA,SAAA,uBAAuBA,CAAO,oBAAoBA,CAAO,MAAO,CAAA,CAAA,GAL/DA,CAMV,CACD,EACH,EAEA7F,EAAAA,IAAC,MAAG,SAAW,aAAA,CAAA,EACfD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,EAAA,IAACiS,EAAA,CACC,YAAY,cACZ,QAAQ,UACR,KAAK,IAAA,CACP,EACAjS,EAAAA,IAAC,QAAM,SAAkE,iEAAA,CAAA,CAAA,EAC3E,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAACiS,EAAA,CACC,YAAY,eACZ,QAAQ,UACR,KAAK,IAAA,CACP,EACAjS,EAAAA,IAAC,QAAM,SAAmE,kEAAA,CAAA,CAAA,EAC5E,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAACiS,EAAA,CACC,YAAY,cACZ,QAAQ,UACR,KAAK,IAAA,CACP,EACAjS,EAAAA,IAAC,QAAM,SAAkE,iEAAA,CAAA,CAAA,CAC3E,CAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAG,SAAY,cAAA,CAAA,EAChBD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,EAAA,IAACiS,EAAA,CACC,YAAY,aACZ,QAAQ,UACR,MAAM,aAAA,CACR,EACAjS,EAAAA,IAAC,QAAM,SAA2E,0EAAA,CAAA,CAAA,EACpF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAACiS,EAAA,CACC,YAAY,mBACZ,QAAQ,UACR,WAAW,qBAAA,CACb,EACAjS,EAAAA,IAAC,QAAM,SAA8F,6FAAA,CAAA,CAAA,EACvG,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAACiS,EAAA,CACC,YAAY,aACZ,QAAQ,UACR,MAAM,wBAAA,CACR,EACAjS,EAAAA,IAAC,QAAM,SAAsF,qFAAA,CAAA,CAAA,CAC/F,CAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAG,SAAc,gBAAA,CAAA,EAClBD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,EAAA,IAACiS,EAAA,CACC,YAAY,cACZ,QAAQ,QACR,KAAI,EAAA,CACN,EACAjS,EAAAA,IAAC,QAAM,SAA2D,0DAAA,CAAA,CAAA,EACpE,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAACiS,EAAA,CACC,YAAY,eACZ,QAAQ,SACR,MAAK,EAAA,CACP,EACAjS,EAAAA,IAAC,QAAM,SAA8D,6DAAA,CAAA,CAAA,EACvE,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAACiS,EAAA,CACC,YAAY,eACZ,QAAQ,QACR,YAAW,EAAA,CACb,EACAjS,EAAAA,IAAC,QAAM,SAAmE,kEAAA,CAAA,CAAA,CAC5E,CAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAG,SAAgB,kBAAA,CAAA,EACpBD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,EAAA,IAACiS,EAAA,CACC,YAAY,YACZ,QAAQ,UACR,UAAYjS,EAAAA,IAAA,OAAA,CAAK,SAAE,IAAA,CAAA,CAAA,CACrB,EACAA,EAAAA,IAAC,QAAM,SAAkF,iFAAA,CAAA,CAAA,EAC3F,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAACiS,EAAA,CACC,YAAY,cACZ,QAAQ,UACR,QAAUjS,EAAAA,IAAA,OAAA,CAAK,SAAE,IAAA,CAAA,CAAA,CACnB,EACAA,EAAAA,IAAC,QAAM,SAAkF,iFAAA,CAAA,CAAA,EAC3F,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAACiS,EAAA,CACC,YAAY,WACZ,KAAK,WACL,QAAQ,UACR,UAAYjS,EAAAA,IAAA,OAAA,CAAK,SAAE,IAAA,CAAA,EACnB,QAAUA,EAAAA,IAAA,OAAA,CAAK,SAAG,KAAA,CAAA,CAAA,CACpB,EACAA,EAAAA,IAAC,QAAM,SAA4H,2HAAA,CAAA,CAAA,CACrI,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGDgJ,IAAc,WACZjJ,OAAA,UAAA,CAAQ,UAAU,mBACjB,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAa,eAAA,CAAA,EACjBA,EAAAA,IAAC,KAAE,SAGH,uJAAA,CAAA,EAEAA,EAAAA,IAAC,MAAG,SAAqB,uBAAA,CAAA,EACzBD,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC+G,GAAA,CACE,GAAGu4B,EAAkB,IACtB,cAAa,EAAA,CACf,EACAt/B,EAAAA,IAAC,QAAM,SAAiG,gGAAA,CAAA,CAAA,EAC1G,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC+G,GAAA,CACE,GAAGu4B,EAAkB,OACtB,cAAa,EAAA,CACf,EACAt/B,EAAAA,IAAC,QAAM,SAAiG,gGAAA,CAAA,CAAA,EAC1G,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC+G,GAAA,CACE,GAAGu4B,EAAkB,KACtB,cAAa,EAAA,CACf,EACAt/B,EAAAA,IAAC,QAAM,SAA0G,yGAAA,CAAA,CAAA,EACnH,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC+G,GAAA,CACE,GAAGu4B,EAAkB,QACtB,cAAa,EAAA,CACf,EACAt/B,EAAAA,IAAC,QAAM,SAAsG,qGAAA,CAAA,CAAA,CAC/G,CAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAG,SAAqB,uBAAA,CAAA,EACzBD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC+G,GAAA,CACC,MAAM,eACN,MAAO,GACP,KAAK,GAAA,CACP,EACA/G,EAAAA,IAAC,QAAM,SAA2D,0DAAA,CAAA,CAAA,EACpE,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC+G,GAAA,CACC,MAAM,aACN,MAAO,GACP,KAAK,IACL,cAAe,GACf,iBAAkB,KAClB,MAAM,IAAA,CACR,EACA/G,EAAAA,IAAC,QAAM,SAA+G,8GAAA,CAAA,CAAA,EACxH,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC+G,GAAA,CACC,MAAM,iBACN,MAAO,GACP,KAAK,IACL,cAAa,GACb,cAAe,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,CAAA,CAC5C,EACA/G,EAAAA,IAAC,QAAM,SAAwH,uHAAA,CAAA,CAAA,CACjI,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,CAEJ,EC13BM6/B,GAAYztC,EAAM,OAAO,CAC7B,QAAS,4CACT,gBAAiB,EACnB,CAAC,EAGD,IAAI0tC,GAAgC,KAEvB,MAAA/pC,GAAe,MAAOgqC,EAAe,KAAkC,OAE9E,GAAAD,IAAkB,CAACC,EACrB,eAAQ,IAAI,4CAA4C,EACjDD,GAIT,MAAME,EAAoB,CACxB,uBACA,kBACA,iBACA,YACA,cACA,OACF,EAEA,UAAWppC,KAAYopC,EACjB,GAAA,CACM,QAAA,IAAI,sCAAsCppC,CAAQ,KAAK,EAC/D,MAAMpE,EAAW,MAAMqtC,GAAU,IAAIjpC,EAAU,CAC7C,QAAS,CACP,gBAAiB,WACjB,OAAU,UACZ,EACA,OAAQ,CAAE,GAAI,KAAK,IAAM,CAAA,CAAA,CAC1B,EAID,GAFA,QAAQ,IAAI,eAAeA,CAAQ,0BAA2BpE,EAAS,MAAM,EAEzEA,EAAS,MAAQA,EAAS,KAAK,WACjC,OAAAstC,GAAiBttC,EAAS,KAAK,WACvB,QAAA,IAAI,+BAA+BoE,CAAQ,EAAE,EAC9CkpC,GAKP,GAHQ,QAAA,IAAI,2CAA2ClpC,CAAQ,EAAE,EAG7DpE,EAAS,KAAM,CACjB,MAAMytC,EAAiB,CAAC,QAAS,YAAa,MAAM,EACpD,UAAW5C,KAAS4C,EACd,GAAAztC,EAAS,KAAK6qC,CAAK,EACJ,OAAAyC,GAAAttC,EAAS,KAAK6qC,CAAK,EACpC,QAAQ,IAAI,sBAAsBA,CAAK,gBAAgBzmC,CAAQ,EAAE,EAC1DkpC,EAEX,QAGGvtC,EAAY,CAEb,MAAAkG,IAAS9F,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,SAAU,UACzC,QAAQ,IAAI,cAAciE,CAAQ,wBAAwB6B,CAAM,EAAE,CAAA,CAItE,eAAQ,MAAM,qEAAqE,EAC5E,IACT,EAGArG,EAAM,aAAa,QAAQ,IAAI,MAAOC,GAAW,CAE7C,GAAIA,EAAO,KAAOA,EAAO,IAAI,SAAS,sBAAsB,EACjD,OAAAA,EAGP,GAAA,CAEM,MAAAC,EAAQ,MAAMyD,GAAa,EAC7BzD,IAEOD,EAAA,QAAQ,aAAa,EAAIC,SAE/BC,EAAO,CACJ,QAAA,KAAK,6DAA8DA,CAAK,CAAA,CAG7E,OAAAF,CACX,CAAC,EAEM,MAAMqF,GAAiB,SAA8B,CACxD,QAAQ,IAAI,sDAAsD,EAC9D,GAAA,CAEM,MAAApF,EAAQ,MAAMyD,GAAa,EAAI,EAErC,GAAI,CAACzD,EACD,eAAQ,MAAM,iDAAiD,EACxD,GAIP,GAAA,CACA,QAAQ,IAAI,yCAAyC,EACrD,MAAMF,EAAM,IAAI,6DAAoD,CAChE,gBAAiB,GACjB,QAAS,CACL,cAAeE,CACnB,EACA,QAAS,GAAA,CACZ,EACD,QAAQ,IAAI,2CAA2C,QAClD4tC,EAAa,CACV,QAAA,KAAK,+CAAgDA,CAAW,CAAA,CAI5E,eAAQ,IAAI,0DAA0D,EAC/D,SACF3tC,EAAO,CACJ,eAAA,MAAM,qDAAsDA,CAAK,EAClE,EAAA,CAEf,ECrHM4tC,GAAwD,CAAC,CAAE,SAAAlhC,KAAe,CAC9E,KAAM,CAACmhC,EAAeC,CAAgB,EAAIjhC,EAAAA,SAAS,EAAK,EAClD,CAACkhC,EAAWC,CAAY,EAAInhC,EAAAA,SAAuB,IAAI,EACvD1D,EAAW0E,GAAe,EAyDhC,OAvDAb,EAAAA,UAAU,IAAM,EACK,SAAY,CAC7B,QAAQ,IAAI,+DAA+D,EAEvE,GAAA,CAKF,GAHA,QAAQ,IAAI,oDAAoD,EAG5D,CAFoB,MAAM7H,GAAe,EAGrC,MAAA,IAAI,MAAM,sCAAsC,EAIlD,MAAApF,EAAQ,aAAa,QAAQ,OAAO,EACpCM,EAAe,aAAa,QAAQ,eAAe,EAErDN,GAASM,GACX,QAAQ,IAAI,mDAAmD,EAG/D,MAAM8I,EAASvH,IAAiB,EAAE,OAAO,EACtC,KAAaugB,GAAA,CACRA,EACF,QAAQ,IAAI,yCAAyC,GAErD,QAAQ,KAAK,yDAAyD,EAEtE,aAAa,WAAW,OAAO,EAC/B,aAAa,WAAW,eAAe,EACzC,CACD,EACA,MAAeniB,GAAA,CACN,QAAA,MAAM,8BAA+BA,CAAK,EAElD,aAAa,WAAW,OAAO,EAC/B,aAAa,WAAW,eAAe,CAAA,CACxC,GAEH,QAAQ,IAAI,iDAAiD,EAG/D8tC,EAAiB,EAAI,QACd9tC,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,EAC/CguC,EAAahuC,aAAiB,MAAQA,EAAQ,IAAI,MAAM,8BAA8B,CAAC,EAEvF8tC,EAAiB,EAAI,CAAA,CAEzB,GAEW,CAAA,EACV,CAAC3kC,CAAQ,CAAC,EAGR0kC,EAiCDE,EAECvgC,EAAA,KAAA,MAAA,CAAI,UAAU,oBAAoB,MAAO,CACxC,QAAS,OACT,cAAe,SACf,WAAY,SACZ,eAAgB,SAChB,OAAQ,QACR,gBAAiB,UACjB,MAAO,QACP,SAAU,SACV,UAAW,SACX,QAAS,MAET,EAAA,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAoB,sBAAA,CAAA,EACxBA,EAAAA,IAAC,IAAG,CAAA,SAAAsgC,EAAU,OAAQ,CAAA,EACtBtgC,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,OAAO,SAAS,OAAO,EACtC,MAAO,CACL,QAAS,YACT,gBAAiB,UACjB,MAAO,QACP,OAAQ,OACR,aAAc,MACd,OAAQ,UACR,SAAU,OACV,UAAW,MACb,EACD,SAAA,OAAA,CAAA,CAED,EACF,oBAKM,SAAAf,EAAS,EAnEdc,EAAA,KAAA,MAAA,CAAI,UAAU,sBAAsB,MAAO,CAC1C,QAAS,OACT,cAAe,SACf,WAAY,SACZ,eAAgB,SAChB,OAAQ,QACR,gBAAiB,UACjB,MAAO,QACP,SAAU,SACV,UAAW,SACX,QAAS,MAET,EAAA,SAAA,CAAAC,MAAC,OAAI,MAAO,CACV,MAAO,OACP,OAAQ,OACR,OAAQ,oBACR,UAAW,oBACX,aAAc,MACd,UAAW,0BACX,aAAc,MAAA,EACb,EACHA,EAAAA,IAAC,MAAG,SAAgC,kCAAA,CAAA,EACpCA,EAAAA,IAAC,KAAE,SAA4D,8DAAA,CAAA,EAC/DA,EAAAA,IAAC,SACC,SACD,yFAAA,CAAA,CAAA,EACH,CA0CN,EC9GA,MAAMwgC,WAAsBn4B,GAAM,SAA2D,CAA7F,kCACEhF,GAAA,aAA4B,CAC1B,SAAU,GACV,MAAO,IACT,GAEA,OAAO,yBAAyB9Q,EAAkC,CACzD,MAAA,CAAE,SAAU,GAAM,MAAAA,CAAM,CAAA,CAGjC,kBAAkBA,EAAckuC,EAAkC,CACxD,QAAA,MAAM,yBAA0BluC,EAAOkuC,CAAS,CAAA,CAG1D,QAAS,OACH,OAAA,KAAK,MAAM,SAEX1gC,EAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAoB,sBAAA,CAAA,QACvB,IAAG,CAAA,WAAArN,EAAA,KAAK,MAAM,QAAX,YAAAA,EAAkB,UAAW,4BAA4B,EAC7DqN,MAAC,UAAO,QAAS,IAAM,OAAO,SAAS,OAAA,EAAU,SAAkB,oBAAA,CAAA,CAAA,EACrE,EAGG,KAAK,MAAM,QAAA,CAEtB,CAEA,MAAM0gC,GAAgB,IAAM,CAE1B,MAAMC,EAAyB,CAC7B,OAAQ,GACR,QAAS,IAAM,QAAQ,IAAI,cAAc,CAC3C,EAGA,OACG3gC,MAAA4gC,GAAA,CAAc,MAAA1pC,GACb,SAAA8I,EAAAA,IAAChB,IACC,SAACgB,EAAAA,IAAAwgC,GAAA,CACC,SAACxgC,EAAAA,IAAAmgC,GAAA,CACC,SAACngC,EAAAA,IAAA6gC,GAAA,CACC,SAAC7gC,EAAAA,IAAAsZ,GAAA,CACC,gBAACwnB,GACC,CAAA,SAAA,CAAA9gC,MAAC+gC,IAAM,KAAK,IAAI,QAAS/gC,MAAC+9B,IAAY,CAAA,EAAI,EAC1C/9B,EAAAA,IAAC+gC,IAAM,KAAK,SAAS,QAAU/gC,EAAA,IAAA0B,GAAA,CAAO,GAAGi/B,CAAA,CAAY,CAAI,CAAA,EAEzD5gC,EAAAA,KAACghC,IAAM,QACL/gC,EAAAA,IAACi/B,IACC,SAACj/B,EAAAA,IAAAghC,GAAA,CAAA,CAAO,CACV,CAAA,EAEA,SAAA,CAAAhhC,MAAC+gC,IAAM,KAAK,aAAa,QAAS/gC,MAACyU,IAAU,CAAA,EAAI,QAChDssB,GAAM,CAAA,KAAK,gBAAgB,QAAS/gC,MAAC0a,IAAqB,CAAA,EAAI,QAC9DqmB,GAAM,CAAA,KAAK,UAAU,QAAS/gC,MAACic,IAAa,CAAA,EAAI,QAChD8kB,GAAM,CAAA,KAAK,iBAAiB,QAAS/gC,MAACqe,IAAoB,CAAA,EAAI,QAC9D0iB,GAAM,CAAA,KAAK,WAAW,QAAS/gC,MAACs2B,IAAc,CAAA,EAAI,QAClDyK,GAAM,CAAA,KAAK,cAAc,QAAS/gC,MAACihC,IAAmB,CAAA,EAAI,QAC1DF,GAAM,CAAA,KAAK,cAAc,QAAS/gC,MAAC09B,IAAe,CAAA,EAAI,QACtDqD,GAAM,CAAA,KAAK,iBAAiB,QAAS/gC,EAAA,IAACm/B,KAAqB,CAAI,CAAA,CAAA,EAClE,EAEAn/B,EAAAA,IAAC+gC,GAAM,CAAA,KAAK,IAAI,QAAU/gC,EAAAA,IAAA29B,GAAA,CAAS,GAAG,IAAI,QAAO,EAAC,CAAA,CAAI,CAAA,CAAA,CACxD,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,EACF,CAEJ,EC9FMuD,GAAOC,GAAAA,WAAW,SAAS,eAAe,MAAM,CAAE,EAExDD,GAAK,OACHlhC,EAAAA,IAACqI,GAAM,WAAN,CACC,SAAArI,EAAA,IAACohC,IAAS,MAAAlqC,GACR,SAAA8I,EAAA,IAAC0gC,GAAI,CAAA,CAAA,CACP,CAAA,CACF,CAAA,CACF"}